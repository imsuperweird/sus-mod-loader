requirejs(['socketio',
'peer.min',
'physics/box2dweb/Box2DModule'], function (a2i, c8j, D8i) {
  var N1X = U3ndn;
  var V6D = [
    arguments
  ];
  V6D[7] = 207559601;
  V6D[6] = - 406872052;
  V6D[1] = - 1814836543;
  U3ndn.Y$U();
  V6D[9] = 129884530;
  if (U3ndn.A4F(0, false, 227540) === V6D[7] || U3ndn.A4F(0, false, 531621) === V6D[6] || U3ndn.s7c(0, false, 893917) === V6D[1] || U3ndn.A4F(0, false, 684224) === V6D[9] || !!U3ndn.G6q()) {
    V6D[3] = r8no$;
    V6D[8] = V6D[0][1]['peerjs']['Peer'];
    Q['world'] = null;
    Q['ftu'] = 90;
    Q['fte'] = 90;
    Q['footHW'] = 0.5;
    Q['footHH'] = 0.2;
    Q['footOffsetX'] = - 1;
    Q['footOffsetY'] = 0;
    Q['swingF'] = 2;
    Q['swingD'] = 0;
    V6D[2] = V6D[0][2]['Common']['Math']['b2Vec2'];
    V6D[4] = V6D[0][2]['Dynamics']['b2BodyDef'];
    V6D[5] = V6D[0][2]['Dynamics']['b2Body'];
    V6D[27] = V6D[0][2]['Dynamics']['b2FixtureDef'];
    V6D[22] = V6D[0][2]['Dynamics']['b2Fixture'];
    V6D[10] = V6D[0][2]['Dynamics']['b2World'];
    V6D[35] = V6D[0][2]['Collision']['Shapes']['b2MassData'];
    V6D[62] = V6D[0][2]['Collision']['Shapes']['b2PolygonShape'];
    V6D[19] = V6D[0][2]['Collision']['Shapes']['b2CircleShape'];
    V6D[36] = V6D[0][2]['Dynamics']['b2DebugDraw'];
    V6D[32] = V6D[0][2]['Common']['Math']['b2Math'];
    V6D[54] = V6D[0][2]['Dynamics']['Joints']['b2RevoluteJointDef'];
    V6D[74] = V6D[0][2]['Dynamics']['Joints']['b2RevoluteJoint'];
    V6D[55] = V6D[0][2]['Dynamics']['Joints']['b2PrismaticJointDef'];
    V6D[58] = V6D[0][2]['Dynamics']['Joints']['b2PrismaticJoint'];
    V6D[92] = V6D[0][2]['Dynamics']['Joints']['b2DistanceJoint'];
    V6D[15] = V6D[0][2]['Dynamics']['Joints']['b2DistanceJointDef'];
    V6D[29] = V6D[0][2]['Dynamics']['Joints']['b2GearJointDef'];
    V6D[88] = V6D[0][2]['Collision']['b2AABB'];
    Q['createNewState'] = function (e7z, P_O, I4c, q7g, W_d, S2X, t5N) {
      var T8_ = [
        arguments
      ];
      T8_[6] = - 251466042;
      T8_[8] = - 1028918374;
      T8_[1] = 1527649498;
      U3ndn.w30();
      T8_[9] = - 527949955;
      if (U3ndn.s7c(0, false, 892811) === T8_[6] || U3ndn.s7c(0, false, 177120) === T8_[8] || U3ndn.A4F(0, false, 678096) === T8_[1] || U3ndn.A4F(0, false, 865636) === T8_[9] || !!U3ndn.G6q()) {
        T8_[3] = r8no$;
        T8_[4] = {
        };
        T8_[4]['discs'] = [
        ];
        T8_[4]['discDeaths'] = [
        ];
        T8_[4]['physics'] = JSON['parse'](JSON['stringify'](T8_[0][1]['physics']));
        if (!(T8_[4]['physics']['ppm'] >= 2) || !(T8_[4]['physics']['ppm'] <= 300)) {
          T8_[4]['physics']['ppm'] = 15;
        }
        T8_[7] = T8_[4]['physics']['ppm'];
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['bodies']['length']; T8_[26]++) {
          if (T8_[4]['physics']['bodies'][T8_[26]]) {
            U3ndn.S2t(0);
            T8_[4]['physics']['bodies'][T8_[26]]['p'][0] += U3ndn.E_K(730, 2);
            T8_[4]['physics']['bodies'][T8_[26]]['p'][0] /= T8_[7];
            U3ndn.S2t(0);
            T8_[4]['physics']['bodies'][T8_[26]]['p'][1] += U3ndn.I8r(500, 2);
            T8_[4]['physics']['bodies'][T8_[26]]['p'][1] /= T8_[7];
            if (T8_[4]['physics']['bodies'][T8_[26]]['cf']) {
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['x'] /= 30;
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['y'] /= 30;
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['ct'] /= 30;
            }
            if (T8_[4]['physics']['bodies'][T8_[26]]['type'] == 's') {
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['x'] = 0;
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['y'] = 0;
              T8_[4]['physics']['bodies'][T8_[26]]['cf']['ct'] = 0;
              T8_[4]['physics']['bodies'][T8_[26]]['lv'][0] = 0;
              T8_[4]['physics']['bodies'][T8_[26]]['lv'][1] = 0;
              T8_[4]['physics']['bodies'][T8_[26]]['av'] = 0;
            }
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['fixtures']['length']; T8_[26]++) {
          if (T8_[4]['physics']['fixtures'][T8_[26]]) {
            if (T8_[4]['physics']['fixtures'][T8_[26]]['fp'] == true) {
              delete T8_[4]['physics']['fixtures'][T8_[26]]['fp'];
            }
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['shapes']['length']; T8_[26]++) {
          if (T8_[4]['physics']['shapes'][T8_[26]]) {
            T8_[4]['physics']['shapes'][T8_[26]]['c'][0] /= T8_[7];
            T8_[4]['physics']['shapes'][T8_[26]]['c'][1] /= T8_[7];
            if (T8_[4]['physics']['shapes'][T8_[26]]['type'] == 'bx') {
              T8_[4]['physics']['shapes'][T8_[26]]['w'] /= T8_[7];
              T8_[4]['physics']['shapes'][T8_[26]]['h'] /= T8_[7];
            }
            if (T8_[4]['physics']['shapes'][T8_[26]]['type'] == 'ci') {
              T8_[4]['physics']['shapes'][T8_[26]]['r'] /= T8_[7];
            }
            if (T8_[4]['physics']['shapes'][T8_[26]]['type'] == 'ch' || T8_[4]['physics']['shapes'][T8_[26]]['type'] == 'po') {
              for (T8_[54] = 0; T8_[54] < T8_[4]['physics']['shapes'][T8_[26]]['v']['length']; T8_[54]++) {
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][0] /= T8_[7];
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][1] /= T8_[7];
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][0] *= T8_[4]['physics']['shapes'][T8_[26]]['s'];
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][1] *= T8_[4]['physics']['shapes'][T8_[26]]['s'];
                T8_[5] = P7({
                  x: 0,
                  y: 0
                }, {
                  x: T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][0],
                  y: T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][1]
                }, T8_[4]['physics']['shapes'][T8_[26]]['a']);
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]] = [
                  T8_[5]['x'],
                  T8_[5]['y']
                ];
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][0] += T8_[4]['physics']['shapes'][T8_[26]]['c'][0];
                T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[54]][1] += T8_[4]['physics']['shapes'][T8_[26]]['c'][1];
              }
              for (T8_[56] = 1; T8_[56] < T8_[4]['physics']['shapes'][T8_[26]]['v']['length']; T8_[56]++) {
                T8_[2] = T8_[4]['physics']['shapes'][T8_[26]]['v'][T8_[56]];
                U3ndn.S2t(1);
                T8_[50] = T8_[4]['physics']['shapes'][T8_[26]]['v'][U3ndn.I8r(T8_[56], 1)];
                if (T8_[2][0] == T8_[50][0] && T8_[2][1] == T8_[50][1]) {
                  T8_[4]['physics']['shapes'][T8_[26]]['v']['splice'](T8_[56], 1);
                  T8_[56]--;
                }
              }
            }
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['fixtures']['length']; T8_[26]++) {
          if (T8_[4]['physics']['fixtures'][T8_[26]] && T8_[4]['physics']['fixtures'][T8_[26]]['re'] < 0) {
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['joints']['length']; T8_[26]++) {
          if (T8_[4]['physics']['joints'][T8_[26]]) {
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'rv') {
              T8_[4]['physics']['joints'][T8_[26]]['aa'][0] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['aa'][1] /= T8_[7];
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'p') {
              T8_[4]['physics']['joints'][T8_[26]]['aa'][0] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['aa'][1] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['ab'][0] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['ab'][1] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['d']['ut'] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['d']['lt'] /= T8_[7];
              U3ndn.S2t(2);
              T8_[4]['physics']['joints'][T8_[26]]['d']['mmf'] /= U3ndn.E_K(T8_[7], T8_[7], T8_[7]);
              U3ndn.z_y(3);
              T8_[4]['physics']['joints'][T8_[26]]['d']['mmf'] *= U3ndn.I8r(12, 12, 12, 10);
              T8_[4]['physics']['joints'][T8_[26]]['d']['ms'] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['d']['ms'] *= 12;
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'd') {
              T8_[4]['physics']['joints'][T8_[26]]['aa'][0] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['aa'][1] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['ab'][0] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['ab'][1] /= T8_[7];
            }
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[4]['physics']['joints']['length']; T8_[26]++) {
          if (T8_[4]['physics']['joints'][T8_[26]]) {
            T8_[16] = T8_[4]['physics']['joints'][T8_[26]];
            if (T8_[16]['d']['bf'] > 0) {
              U3ndn.z_y(4);
              T8_[16]['d']['bf'] /= U3ndn.I8r(T8_[7], T8_[7]);
            }
            if (T8_[16]['ba'] == - 2) {
              T8_[16]['ba'] = - 1;
            }
            if (T8_[16]['bb'] == - 2) {
              T8_[16]['bb'] = - 1;
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'lpj') {
              T8_[4]['physics']['joints'][T8_[26]]['pax'] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][0];
              T8_[4]['physics']['joints'][T8_[26]]['pay'] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][1];
              T8_[4]['physics']['joints'][T8_[26]]['plen'] /= T8_[7];
              T8_[4]['physics']['joints'][T8_[26]]['pms'] /= T8_[7];
              U3ndn.z_y(4);
              T8_[4]['physics']['joints'][T8_[26]]['pf'] /= U3ndn.E_K(T8_[7], T8_[7]);
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'lsj') {
              T8_[4]['physics']['joints'][T8_[26]]['sax'] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][0];
              T8_[4]['physics']['joints'][T8_[26]]['say'] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][1];
              T8_[4]['physics']['joints'][T8_[26]]['slen'] /= T8_[7];
              U3ndn.z_y(4);
              T8_[4]['physics']['joints'][T8_[26]]['sf'] /= U3ndn.I8r(T8_[7], T8_[7]);
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'rv') {
              T8_[24] = {
              };
              if (T8_[16]['ba'] == - 1) {
                T8_[24] = {
                  x: T8_[16]['aa'][0],
                  y: T8_[16]['aa'][1]
                };
              } else {
                T8_[24] = {
                  x: T8_[16]['aa'][0],
                  y: T8_[16]['aa'][1]
                };
                T8_[24]['x'] += T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][0];
                T8_[24]['y'] += T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][1];
                T8_[92] = P7({
                  x: 0,
                  y: 0
                }, {
                  x: T8_[16]['aa'][0],
                  y: T8_[16]['aa'][1]
                }, - T8_[4]['physics']['bodies'][T8_[16]['ba']]['a']);
                T8_[16]['aa'][0] = T8_[92]['x'];
                T8_[16]['aa'][1] = T8_[92]['y'];
              }
              if (T8_[16]['bb'] == - 1) {
                T8_[16]['ab'] = [
                  T8_[24]['x'],
                  T8_[24]['y']
                ];
              } else {
                U3ndn.z_y(1);
                T8_[77] = U3ndn.E_K(41, 2);
                U3ndn.S2t(1);
                T8_[48] = U3ndn.E_K(48, 5);
                U3ndn.z_y(5);
                T8_[49] = U3ndn.E_K(68, 3, 12, 13, 31);
                U3ndn.S2t(1);
                T8_[42] = U3ndn.I8r(80, 3);
                U3ndn.z_y(6);
                T8_[13] = U3ndn.I8r(30, 19);
                U3ndn.S2t(7);
                T8_[10] = U3ndn.E_K(47, 500, 20, 20);
                U3ndn.S2t(8);
                T8_[32] = U3ndn.E_K(1, 22, 4, 3, 9);
                U3ndn.S2t(9);
                T8_[67] = U3ndn.I8r(46, 366, 9);
                U3ndn.S2t(10);
                T8_[66] = U3ndn.I8r(896, 5, 2, 10, 97);
                U3ndn.S2t(1);
                T8_[46] = U3ndn.I8r(637, 588);
                U3ndn.z_y(11);
                T8_[78] = U3ndn.I8r(9, 0, 21, 12, 1);
                T8_[16]['ab'] = [
                  T8_[24][r8no$[T8_[77]]] - T8_[4][r8no$[T8_[48]]][r8no$[T8_[49]]][T8_[16][r8no$[T8_[42]]]][r8no$[T8_[13]]][0],
                  T8_[24][r8no$[T8_[10]]] - T8_[4][r8no$[T8_[32]]][r8no$[T8_[67]]][T8_[16][r8no$[T8_[66]]]][r8no$[T8_[46]]][T8_[78]]
                ];
                T8_[59] = P7({
                  x: 0,
                  y: 0
                }, {
                  x: T8_[16]['ab'][0],
                  y: T8_[16]['ab'][1]
                }, - T8_[4]['physics']['bodies'][T8_[16]['bb']]['a']);
                T8_[16]['ab'] = [
                  T8_[59]['x'],
                  T8_[59]['y']
                ];
              }
              if (T8_[16]['ba'] == - 1) {
                T8_[41] = 0;
              } else {
                T8_[41] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['a'];
              }
              if (T8_[16]['bb'] == - 1) {
                T8_[34] = 0;
              } else {
                T8_[34] = T8_[4]['physics']['bodies'][T8_[16]['bb']]['a'];
              }
              U3ndn.S2t(1);
              T8_[16]['ra'] = U3ndn.E_K(T8_[34], T8_[41]);
              T8_[16]['d']['la'] = - T8_[16]['d']['la'];
              T8_[16]['d']['ua'] = - T8_[16]['d']['ua'];
              T8_[16]['d']['ms'] = - T8_[16]['d']['ms'];
              if (T8_[16]['d']['la'] > T8_[16]['d']['ua']) {
                T8_[33] = T8_[16]['d']['la'];
                T8_[16]['d']['la'] = T8_[16]['d']['ua'];
                T8_[16]['d']['ua'] = T8_[33];
              }
            }
            if (T8_[4]['physics']['joints'][T8_[26]]['type'] == 'p') {
              if (T8_[16]['ba'] != - 1) {
                T8_[96] = SafeTrig['safeATan2'](T8_[16]['axa'][1], T8_[16]['axa'][0]);
                T8_[96] -= T8_[4]['physics']['bodies'][T8_[16]['ba']]['a'];
                T8_[99] = SafeTrig['safeTan'](T8_[96]);
                T8_[16]['axa'][0] = 1;
                T8_[16]['axa'][1] = T8_[99];
              }
              if (T8_[16]['ba'] == - 1) {
                T8_[41] = 0;
              } else {
                T8_[41] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['a'];
              }
              if (T8_[16]['bb'] == - 1) {
                T8_[34] = 0;
              } else {
                T8_[34] = T8_[4]['physics']['bodies'][T8_[16]['bb']]['a'];
              }
              U3ndn.z_y(1);
              T8_[16]['ra'] = U3ndn.I8r(T8_[34], T8_[41]);
              T8_[16]['cs'] = 0;
            }
            if (T8_[16]['type'] == 'd') {
              if (T8_[16]['bb'] == - 1) {
                U3ndn.S2t(0);
                T8_[16]['ab'][0] += U3ndn.I8r(365, T8_[7]);
                U3ndn.z_y(0);
                T8_[16]['ab'][1] += U3ndn.E_K(250, T8_[7]);
              }
              T8_[15] = {
              };
              T8_[79] = {
              };
              T8_[62] = 0;
              T8_[39] = 0;
              if (T8_[16]['ba'] == - 1) {
                T8_[15] = {
                  x: 0,
                  y: 0
                };
              } else {
                T8_[15] = {
                  x: T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][0],
                  y: T8_[4]['physics']['bodies'][T8_[16]['ba']]['p'][1]
                };
                T8_[62] = T8_[4]['physics']['bodies'][T8_[16]['ba']]['a'];
              }
              if (T8_[16]['bb'] == - 1) {
                T8_[79] = {
                  x: 0,
                  y: 0
                };
              } else {
                T8_[79] = {
                  x: T8_[4]['physics']['bodies'][T8_[16]['bb']]['p'][0],
                  y: T8_[4]['physics']['bodies'][T8_[16]['bb']]['p'][1]
                };
                T8_[39] = T8_[4]['physics']['bodies'][T8_[16]['bb']]['a'];
              }
              T8_[11] = {
                x: T8_[16]['aa'][0],
                y: T8_[16]['aa'][1]
              };
              T8_[11] = P7({
                x: 0,
                y: 0
              }, T8_[11], T8_[62]);
              T8_[97] = {
                x: T8_[16]['ab'][0],
                y: T8_[16]['ab'][1]
              };
              T8_[97] = P7({
                x: 0,
                y: 0
              }, T8_[97], T8_[39]);
              U3ndn.z_y(10);
              T8_[63] = U3ndn.E_K(1315, 6, 17, 7, 195);
              U3ndn.z_y(12);
              T8_[20] = U3ndn.E_K(141, 1, 9, 20);
              U3ndn.z_y(7);
              T8_[14] = U3ndn.E_K(800, 3080, 20, 4);
              U3ndn.z_y(6);
              T8_[68] = U3ndn.I8r(2, 38);
              T8_[65] = new V6D[2](T8_[15][r8no$[T8_[63]]] + T8_[11][r8no$[T8_[20]]], T8_[15][r8no$[T8_[14]]] + T8_[11][r8no$[T8_[68]]]);
              U3ndn.z_y(13);
              T8_[60] = U3ndn.I8r(4, 49, 14);
              U3ndn.z_y(1);
              T8_[25] = U3ndn.E_K(43, 4);
              U3ndn.z_y(6);
              T8_[29] = U3ndn.I8r(2, 38);
              U3ndn.S2t(14);
              T8_[76] = U3ndn.E_K(3, 21, 33);
              T8_[98] = new V6D[2](T8_[79][r8no$[T8_[60]]] + T8_[97][r8no$[T8_[25]]], T8_[79][r8no$[T8_[29]]] + T8_[97][r8no$[T8_[76]]]);
              T8_[65]['Subtract'](T8_[98]);
              T8_[93] = T8_[65]['Length']();
              if (T8_[93] == 0) {
                T8_[93] = 0.01;
              }
              T8_[16]['len'] = T8_[93];
              if (T8_[16]['d']['fh'] == 0) {
                T8_[16]['d']['fh'] = 0.0001;
              }
              if (T8_[16]['d']['fh'] != 0) {
                U3ndn.S2t(15);
                T8_[43] = U3ndn.I8r(12, 0, 11);
                U3ndn.z_y(16);
                T8_[84] = U3ndn.E_K(12, 15, 11, 62, 17);
                U3ndn.z_y(6);
                T8_[23] = U3ndn.I8r(9, 88);
                T8_[16]['d']['fh'] = T8_[43] / T8_[16][r8no$[T8_[84]]][r8no$[T8_[23]]];
              }
            }
            if (T8_[16]['ba'] == - 2 || T8_[16]['bb'] == - 2) {
              T8_[4]['physics']['joints'][T8_[26]] = null;
            }
          }
        }
        T8_[70] = [
        ];
        T8_[4]['capZones'] = [
        ];
        if (T8_[0][1]['capZones']) {
          for (T8_[26] = 0; T8_[26] < T8_[0][1]['capZones']['length']; T8_[26]++) {
            if (T8_[70]['indexOf'](T8_[0][1]['capZones'][T8_[26]]['i']) > - 1) {
            } else if (!T8_[4]['physics']['fixtures'][T8_[0][1]['capZones'][T8_[26]]['i']]) {
            } else {
              T8_[4]['capZones']['push']({
                ty: T8_[0][1]['capZones'][T8_[26]]['ty'],
                p: 0,
                l: T8_[0][1]['capZones'][T8_[26]]['l'] * 30,
                i: T8_[0][1]['capZones'][T8_[26]]['i'],
                o: - 1,
                ot: - 1,
                f: - 1
              });
              T8_[70]['push'](T8_[0][1]['capZones'][T8_[26]]['i']);
            }
          }
        }
        T8_[53] = JSON['parse'](JSON['stringify'](T8_[0][1]['spawns']));
        T8_[31] = false;
        T8_[69] = false;
        for (T8_[73] = 0; T8_[73] < T8_[53]['length']; T8_[73]++) {
          if (T8_[53][T8_[73]]) {
            if (T8_[53][T8_[73]]['gr']) {
              T8_[31] = true;
            }
            if (T8_[53][T8_[73]]['ye']) {
              T8_[69] = true;
            }
          }
        }
        function P7(E0V, g5h, k0Y) {
          var u88 = [
            arguments
          ];
          u88[1] = 1625116224;
          u88[4] = - 1267993721;
          U3ndn.w30();
          u88[3] = 848386423;
          u88[7] = 858509877;
          if (U3ndn.A4F(0, false, 534115) === u88[1] || U3ndn.s7c(0, false, 898327) === u88[4] || U3ndn.s7c(0, false, 945498) === u88[3] || U3ndn.s7c(0, false, 500620) === u88[7] || U3ndn.G6q()) {
            u88[6] = r8no$;
            u88[9] = u88[0][2];
            u88[8] = SafeTrig['safeCos'](u88[9]);
            u88[2] = SafeTrig['safeSin'](u88[9]);
            U3ndn.z_y(17);
            u88[27] = U3ndn.E_K(24, 4, 11);
            U3ndn.S2t(18);
            u88[36] = U3ndn.E_K(16, 3, 4, 30);
            u88[5] = u88[0][1][r8no$[u88[27]]] - u88[0][0][r8no$[u88[36]]];
            U3ndn.z_y(19);
            u88[16] = U3ndn.E_K(14, 2, 12, 16, 28);
            U3ndn.S2t(9);
            u88[22] = U3ndn.E_K(3, 2, 14);
            u88[81] = u88[0][1][r8no$[u88[16]]] - u88[0][0][r8no$[u88[22]]];
            return {
              x: u88[8] * u88[5] - u88[2] * u88[81] + u88[0][0]['x'],
              y: u88[2] * u88[5] + u88[8] * u88[81] + u88[0][0]['y']
            };
          }
        }
        for (T8_[30] = 0; T8_[30] < T8_[53]['length']; T8_[30]++) {
          if (T8_[53][T8_[30]]) {
            if (!T8_[31]) {
              T8_[53][T8_[30]]['gr'] = T8_[53][T8_[30]]['r'];
            }
            if (!T8_[69]) {
              T8_[53][T8_[30]]['ye'] = T8_[53][T8_[30]]['b'];
            }
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[53]['length']; T8_[26]++) {
          if (T8_[53][T8_[26]]) {
            U3ndn.S2t(6);
            T8_[45] = U3ndn.E_K(33, 6);
            U3ndn.S2t(6);
            T8_[18] = U3ndn.I8r(712, 18);
            U3ndn.z_y(20);
            T8_[86] = U3ndn.E_K(8, 6, 10, 1, 10);
            T8_[53][T8_[26]]['x'] = (T8_[53][T8_[26]][r8no$[T8_[45]]] + T8_[18] / T8_[86]) / T8_[7];
            U3ndn.z_y(9);
            T8_[74] = U3ndn.E_K(36, 356, 11);
            U3ndn.z_y(6);
            T8_[58] = U3ndn.I8r(167, 333);
            U3ndn.S2t(21);
            T8_[44] = U3ndn.E_K(13, 24, 15, 1, 13);
            T8_[53][T8_[26]]['y'] = (T8_[53][T8_[26]][r8no$[T8_[74]]] + T8_[58] / T8_[44]) / T8_[7];
            T8_[53][T8_[26]]['xv'] /= T8_[7];
            T8_[53][T8_[26]]['yv'] /= T8_[7];
          }
        }
        for (T8_[26] = 0; T8_[26] < T8_[53]['length']; T8_[26]++) {
          U3ndn.S2t(22);
          T8_[0][2] = U3ndn.I8r(101, 7, T8_[0][2]);
          U3ndn.z_y(23);
          T8_[72] = U3ndn.E_K(T8_[0][2], 10);
          U3ndn.S2t(0);
          T8_[72] = U3ndn.E_K(T8_[72], 10);
          T8_[53][T8_[26]]['priority'] += T8_[72];
        }
        T8_[53]['sort'](function (Z16, J4p) {
          var I4P = [
            arguments
          ];
          I4P[6] = - 215408288;
          U3ndn.Y$U();
          I4P[8] = - 1076467401;
          I4P[1] = - 208324906;
          I4P[3] = 628503362;
          if (U3ndn.s7c(0, false, 235490) === I4P[6] || U3ndn.A4F(0, false, 904142) === I4P[8] || U3ndn.A4F(0, false, 219847) === I4P[1] || U3ndn.s7c(0, false, 480412) === I4P[3] || !!U3ndn.g2$()) {
            I4P[4] = r8no$;
            if (I4P[0][0]['priority'] > I4P[0][1]['priority']) {
              return - 1;
            } else if (I4P[0][1]['priority'] > I4P[0][0]['priority']) {
              return 1;
            } else {
              return 0;
            }
          }
        });
        T8_[12] = T8_[0][0]['slice'](0);
        for (T8_[90] = 0; T8_[90] < T8_[12]['length']; T8_[90]++) {
          if (!T8_[12][T8_[90]]) {
            T8_[12]['splice'](T8_[90], 1);
            T8_[90]--;
          }
        }
        if (T8_[0][4]) {
          for (T8_[36] = 0; T8_[36] < T8_[12]['length']; T8_[36]++) {
            if (T8_[0][4]['indexOf'](T8_[12][T8_[36]]['id']) == - 1) {
              T8_[12]['splice'](T8_[36], 1);
              T8_[36]--;
            }
          }
        }
        if (T8_[0][5]['tea']) {
          for (T8_[40] = 0; T8_[40] < T8_[12]['length']; T8_[40]++) {
            if (!(T8_[12][T8_[40]]['team'] >= 2) || !(T8_[12][T8_[40]]['team'] <= 5)) {
              T8_[12]['splice'](T8_[40], 1);
              T8_[40]--;
            }
          }
        }
        for (T8_[71] = 0; T8_[71] < T8_[12]['length']; T8_[71]++) {
          T8_[75] = T8_[12][T8_[71]]['team'];
          T8_[87] = false;
          for (T8_[89] = 0; T8_[89] < T8_[53]['length']; T8_[89]++) {
            if (T8_[75] == 1 && T8_[53][T8_[89]]['f'] || T8_[75] == 2 && T8_[53][T8_[89]]['r'] || T8_[75] == 3 && T8_[53][T8_[89]]['b'] || T8_[75] == 4 && T8_[53][T8_[89]]['gr'] || T8_[75] == 5 && T8_[53][T8_[89]]['ye']) {
              T8_[87] = true;
              break;
            }
          }
          if (!T8_[87]) {
            T8_[12]['splice'](T8_[71], 1);
            T8_[71]--;
          }
        }
        a: while (T8_[12]['length'] > 0 && T8_[53]['length'] > 0) {
          for (T8_[26] = 0; T8_[26] < T8_[53]['length']; T8_[26]++) {
            T8_[81] = [
            ];
            for (T8_[80] = 0; T8_[80] < T8_[12]['length']; T8_[80]++) {
              T8_[88] = T8_[12][T8_[80]]['team'];
              if (T8_[88] == 1 && T8_[53][T8_[26]]['f'] || T8_[88] == 2 && T8_[53][T8_[26]]['r'] || T8_[88] == 3 && T8_[53][T8_[26]]['b'] || T8_[88] == 4 && T8_[53][T8_[26]]['gr'] || T8_[88] == 5 && T8_[53][T8_[26]]['ye']) {
                T8_[81]['push'](T8_[80]);
              }
            }
            if (T8_[81]['length'] == 0) {
              continue;
            }
            do {
              U3ndn.z_y(22);
              T8_[0][2] = U3ndn.E_K(101, 7, T8_[0][2]);
              U3ndn.z_y(23);
              T8_[37] = U3ndn.I8r(T8_[0][2], 10);
              U3ndn.S2t(0);
              T8_[37] = U3ndn.E_K(T8_[37], 9);
              T8_[91] = T8_[81][Math['floor'](T8_[37] * T8_[81]['length'])];
            } while (T8_[12][T8_[91]] == null);
            T8_[4]['discs'][T8_[12][T8_[91]]['id']] = {
              x: T8_[53][T8_[26]]['x'],
              y: T8_[53][T8_[26]]['y'],
              xv: T8_[53][T8_[26]]['xv'],
              yv: T8_[53][T8_[26]]['yv'],
              sx: T8_[53][T8_[26]]['x'],
              sy: T8_[53][T8_[26]]['y'],
              sxv: T8_[53][T8_[26]]['xv'],
              syv: T8_[53][T8_[26]]['yv'],
              a: 0,
              av: 0,
              a1a: 1000,
              team: T8_[12][T8_[91]]['team'],
              a1: false,
              lhid: - 1,
              lht: 0,
              ds: 0,
              da: 270
            };
            if (T8_[0][5]['mo'] == 'ar') {
              T8_[4]['discs'][T8_[12][T8_[91]]['id']]['a1a'] = 750;
            }
            if (T8_[0][5]['mo'] == 'ard') {
              T8_[4]['discs'][T8_[12][T8_[91]]['id']]['a1a'] = 500;
            }
            T8_[12]['splice'](T8_[91], 1);
            if (T8_[12]['length'] == 0) {
              break a;
            }
          }
        }
        T8_[4]['seed'] = T8_[0][2];
        T8_[4]['fte'] = - 1;
        T8_[4]['ftu'] = Q['ftu'];
        if (T8_[0][6]) {
          T8_[4]['ftu'] = 60;
        }
        if (T8_[0][3]) {
          T8_[4]['ftu'] = 5;
        }
        T8_[4]['players'] = T8_[0][0];
        if (T8_[0][5]['tea']) {
          T8_[4]['scores'] = [
          ];
          for (T8_[35] = 0; T8_[35] < T8_[0][0]['length']; T8_[35]++) {
            if (T8_[0][0][T8_[35]]) {
              T8_[4]['scores'][T8_[0][0][T8_[35]]['team']] = 0;
            }
          }
        } else {
          T8_[4]['scores'] = [
          ];
          for (T8_[82] = 0; T8_[82] < T8_[0][0]['length']; T8_[82]++) {
            if (T8_[0][0][T8_[82]]) {
              T8_[4]['scores'][T8_[82]] = 0;
            }
          }
        }
        T8_[4]['lscr'] = - 1;
        T8_[4]['ms'] = T8_[0][1]['s'];
        T8_[4]['mm'] = T8_[0][1]['m'];
        T8_[4]['rl'] = 0;
        T8_[4]['projectiles'] = [
        ];
        return T8_[4];
      }
    };
    Q['prototype']['step'] = function (h4w, d5Z, y9B, l4e, l1V, N69, j0P, H9G) {
      var N4X = [
        arguments
      ];
      N4X[9] = 1243290244;
      U3ndn.Y$U();
      N4X[7] = - 1735574155;
      N4X[1] = 1856491831;
      N4X[6] = - 1245769293;
      if (U3ndn.s7c(0, false, 617591) === N4X[9] || U3ndn.A4F(0, false, 988750) === N4X[7] || U3ndn.A4F(0, false, 577538) === N4X[1] || U3ndn.A4F(0, false, 298092) === N4X[6] || !!U3ndn.G6q()) {
        N4X[8] = r8no$;
        N4X[2] = Date['now']();
        N4X[4] = [
        ];
        N4X[3] = [
        ];
        N4X[5] = [
        ];
        N4X[38] = [
        ];
        N4X[37] = [
        ];
        N4X[17] = [
        ];
        N4X[22] = {
          x: 0,
          y: 0
        };
        N4X[12] = [
        ];
        N4X[76] = [
        ];
        N4X[65] = [
        ];
        N4X[68] = [
        ];
        N4X[32] = 0;
        N4X[56] = 5;
        N4X[73] = 15;
        function x6(S48) {
          U3ndn.Y$U();
          var d9V = [
            arguments
          ];
          N4X[5][d9V[0][0]] = true;
        }
        N4X[59] = 1;
        N4X[25] = 150;
        N4X[97] = 1;
        N4X[18] = 0.5;
        N4X[46] = 2.5;
        N4X[30] = 0.5;
        N4X[82] = 1;
        N4X[42] = 1;
        N4X[67] = 500;
        function J_() {
          var T8q = [
            arguments
          ];
          T8q[7] = 378314125;
          U3ndn.Y$U();
          T8q[5] = 1003086965;
          T8q[6] = 1047726203;
          T8q[3] = 1705375244;
          if (U3ndn.A4F(0, false, 334430) === T8q[7] || U3ndn.s7c(0, false, 989426) === T8q[5] || U3ndn.A4F(0, false, 239649) === T8q[6] || U3ndn.A4F(0, false, 736649) === T8q[3] || U3ndn.G6q()) {
            T8q[1] = r8no$;
            T8q[9] = {
            };
            T8q[9]['m_hit'] = false;
            T8q[9]['m_point'] = null;
            T8q[9]['m_normal'] = null;
            T8q[9]['m_fixture'] = null;
            T8q[9]['ReportFixture'] = function (q28, k1B, j1G, x_U) {
              var t7L = [
                arguments
              ];
              t7L[2] = - 455473730;
              t7L[5] = - 1228931878;
              U3ndn.Y$U();
              t7L[4] = 2;
              for (t7L[28] = 1; U3ndn.P5V(t7L[28].toString(), t7L[28].toString().length, 62457) !== t7L[2]; t7L[28]++) {
                t7L[6] = false;
                t7L[8] = false;
                t7L[9] = 1994317261;
                t7L[1] = false;
                t7L[4] += 2;
              }
              if (U3ndn.P5V(t7L[4].toString(), t7L[4].toString().length, 64435) !== t7L[5]) {
                t7L[6] = - 163594138;
                t7L[8] = - 1543845543;
                t7L[9] = 1928665528;
                t7L[1] = - 1897772049;
              }
              if (U3ndn.A4F(0, false, 690171) === t7L[6] || U3ndn.s7c(0, false, 116132) === t7L[8] || U3ndn.s7c(0, false, 360478) === t7L[9] || U3ndn.A4F(0, false, 857706) === t7L[1] || !!U3ndn.g2$()) {
                t7L[3] = r8no$;
                t7L[7] = t7L[0][0]['GetBody']();
                t7L[23] = t7L[7]['GetUserData']();
                if (t7L[23]['type'] == 'disc') {
                  return - 1;
                }
                if (t7L[0][0]['GetUserData']() && t7L[0][0]['GetUserData']() ['type'] == 'laserFix') {
                  return - 1;
                }
                T8q[9]['m_hit'] = true;
                T8q[9]['m_point'] = t7L[0][1];
                T8q[9]['m_normal'] = t7L[0][2];
                T8q[9]['m_fixture'] = t7L[0][0];
                return t7L[0][3];
              }
            }
            [
              'bind'
            ](this);
            return T8q[9];
          }
        }
        N4X[89] = 4;
        N4X[63] = 3;
        Q['globalStepVars'] = {
          discs: N4X[4],
          shakeVectorThisStep: N4X[22],
          soundsThisStep: N4X[12],
          capEvent: l5,
          teamGoalEvent: x6,
          inputState: N4X[0][0],
          gameSettings: N4X[0][4],
          swingCollideDestroyEvents: N4X[17]
        };
        if (!Q['world']) {
          Q['world'] = new V6D[10](new V6D[2](0, 20));
          Q['world']['SetWarmStarting'](false);
          Q['contactListener'] = {
          };
          Q['contactListener']['BeginContact'] = function (x4b) {
            var L5A = [
              arguments
            ];
            L5A[7] = - 1852441946;
            L5A[6] = - 574968207;
            L5A[2] = - 1671557530;
            L5A[4] = 313907245;
            if (U3ndn.A4F(0, false, 652213) === L5A[7] || U3ndn.s7c(0, false, 221271) === L5A[6] || U3ndn.s7c(0, false, 303694) === L5A[2] || U3ndn.A4F(0, false, 338817) === L5A[4] || U3ndn.g2$()) {
              L5A[9] = r8no$;
              L5A[1] = L5A[0][0]['GetFixtureA']();
              L5A[3] = L5A[0][0]['GetFixtureB']();
              L5A[5] = L5A[1]['GetBody']();
              L5A[8] = L5A[3]['GetBody']();
              L5A[63] = L5A[5];
              L5A[62] = L5A[8];
              L5A[92] = L5A[1];
              L5A[20] = L5A[3];
              for (L5A[75] = 0; L5A[75] < 2; L5A[75]++) {
                if (L5A[63]['GetUserData']() ['type'] == 'disc' && L5A[62]['GetUserData']() ['type'] == 'phys' && L5A[20]['GetUserData']() ['death'] == true) {
                  Q['globalStepVars']['discs'][L5A[63]['GetUserData']() ['arrayID']]['diedThisStep'] = 1;
                }
                if (L5A[63]['GetUserData']() ['type'] == 'disc' && (!L5A[92]['GetUserData']() || L5A[92]['GetUserData']() ['type'] != 'vtolwing') && L5A[62]['GetUserData']() ['type'] == 'phys' && L5A[20]['GetUserData']() ['capzone'] == true && L5A[20]['GetUserData']() ['capType'] == 1) {
                  Q['globalStepVars']['capEvent'](L5A[63], L5A[20]);
                  L5A[0][0]['SetEnabled'](false);
                }
                if (L5A[63]['GetUserData']() ['type'] == 'arrow' && L5A[62]['GetUserData']() ['type'] == 'phys' && L5A[20]['GetUserData']() ['capzone'] == true) {
                  L5A[0][0]['SetEnabled'](false);
                }
                if (L5A[63]['GetUserData']() ['type'] == 'disc' && L5A[92]['GetUserData']() && L5A[92]['GetUserData']() ['type'] == 'vtolwing' && L5A[62]['GetUserData']() ['type'] == 'phys' && L5A[20]['GetUserData']() ['capzone'] == true) {
                  L5A[0][0]['SetEnabled'](false);
                }
                if (L5A[63]['GetUserData']() ['type'] == 'phys' && L5A[62]['GetUserData']() ['type'] == 'phys' && L5A[20]['GetUserData']() ['capzone'] == true && L5A[20]['GetUserData']() ['capType'] != 1) {
                  Q['globalStepVars']['teamGoalEvent'](L5A[20]['GetUserData']() ['capType']);
                  L5A[0][0]['SetEnabled'](false);
                }
                if (L5A[63]['GetUserData']() ['type'] == 'disc' && L5A[62]['GetUserData']() ['type'] == 'disc') {
                  if (Q['globalStepVars']['inputState']['ms']['nc']) {
                    L5A[0][0]['SetEnabled'](false);
                  } else if (Q['globalStepVars']['gameSettings']['tea'] == true && L5A[63]['GetUserData']() ['team'] == L5A[62]['GetUserData']() ['team']) {
                    L5A[0][0]['SetEnabled'](false);
                  } else {
                    if (Q['globalStepVars']['discs'][L5A[63]['GetUserData']() ['arrayID']]['swing']) {
                      Q['globalStepVars']['swingCollideDestroyEvents']['push'](L5A[63]['GetUserData']() ['arrayID']);
                    }
                    Q['globalStepVars']['discs'][L5A[63]['GetUserData']() ['arrayID']]['lhid'] = L5A[62]['GetUserData']() ['arrayID'];
                    Q['globalStepVars']['discs'][L5A[62]['GetUserData']() ['arrayID']]['lhid'] = L5A[63]['GetUserData']() ['arrayID'];
                    Q['globalStepVars']['discs'][L5A[63]['GetUserData']() ['arrayID']]['lht'] = 120;
                    Q['globalStepVars']['discs'][L5A[62]['GetUserData']() ['arrayID']]['lht'] = 120;
                  }
                }
                if (L5A[63]['GetUserData']() ['type'] == 'arrow') {
                  L5A[22] = L5A[62]['GetUserData']();
                  L5A[27] = L5A[63]['GetUserData']();
                  if (Q['globalStepVars']['gameSettings']['tea'] == false && L5A[62]['GetUserData']() ['type'] == 'disc' && L5A[62]['GetUserData']() ['arrayID'] == L5A[63]['GetUserData']() ['discID'] || Q['globalStepVars']['gameSettings']['tea'] == true && L5A[62]['GetUserData']() ['type'] == 'disc' && L5A[63]['GetUserData']() ['team'] == L5A[62]['GetUserData']() ['team']) {
                    L5A[0][0]['SetEnabled'](false);
                  } else if (L5A[62]['GetUserData']() ['type'] == 'disc') {
                    L5A[63]['GetUserData']() ['hitDiscsThisStep']['push'](L5A[62]['GetUserData']() ['arrayID']);
                    if (Q['globalStepVars']['gameSettings']['mo'] == 'ard') {
                      Q['globalStepVars']['discs'][L5A[62]['GetUserData']() ['arrayID']]['diedThisStep'] = 1;
                    }
                  } else {
                    L5A[63]['GetUserData']() ['hitWorldThisStep'] = true;
                  }
                }
                L5A[63] = L5A[8];
                L5A[62] = L5A[5];
                L5A[92] = L5A[3];
                L5A[20] = L5A[1];
              }
            }
          };
          Q['contactListener']['EndContact'] = function () {
          };
          Q['contactListener']['PreSolve'] = function (U4V) {
            [
              arguments
            ];
          };
          Q['contactListener']['PostSolve'] = function (g3M, I_R) {
            var Q0B = [
              arguments
            ];
            Q0B[4] = 164275442;
            Q0B[9] = 309286420;
            Q0B[2] = - 2004875763;
            Q0B[8] = - 209677913;
            if (U3ndn.s7c(0, false, 856199) === Q0B[4] || U3ndn.A4F(0, false, 371292) === Q0B[9] || U3ndn.s7c(0, false, 870608) === Q0B[2] || U3ndn.s7c(0, false, 670372) === Q0B[8] || !!U3ndn.G6q()) {
              Q0B[6] = r8no$;
              Q0B[1] = Q0B[0][0]['GetFixtureA']();
              Q0B[7] = Q0B[0][0]['GetFixtureB']();
              Q0B[3] = Q0B[1]['GetBody']();
              Q0B[5] = Q0B[7]['GetBody']();
              if (Q0B[3]['GetUserData']() ['type'] == 'disc' && Q0B[5]['GetUserData']() ['type'] == 'disc') {
                U3ndn.z_y(24);
                Q0B[49] = U3ndn.I8r(53, 13, 7, 87);
                Q0B[83] = Q0B[0][1][r8no$[Q0B[49]]][0] * 1.3;
                if (Q0B[83] > 3.5) {
                  Q['globalStepVars']['soundsThisStep']['push'](['discDisc',
                  Q0B[83],
                  Q0B[3]['GetUserData']() ['arrayID'],
                  Q0B[5]['GetUserData']() ['arrayID']]);
                }
              }
              if (Q0B[3]['GetUserData']() ['type'] == 'disc' && Q0B[5]['GetUserData']() ['type'] == 'phys' || Q0B[3]['GetUserData']() ['type'] == 'phys' && Q0B[5]['GetUserData']() ['type'] == 'disc') {
                U3ndn.S2t(15);
                Q0B[31] = U3ndn.I8r(11, 149, 0);
                Q0B[30] = Q0B[0][1][r8no$[Q0B[31]]][0] * 1.2;
                Q0B[90] = 0;
                Q0B[35] = 0;
                if (Q0B[3]['GetUserData']() ['type'] == 'disc') {
                  Q0B[90] = Q0B[3]['GetUserData']() ['arrayID'];
                  Q0B[3]['GetUserData']() ['impulsesThisStep'] += Q0B[0][1]['normalImpulses'][0];
                  Q0B[35] = Q0B[7]['GetUserData']() ['arrayID'];
                } else {
                  Q0B[90] = Q0B[5]['GetUserData']() ['arrayID'];
                  Q0B[5]['GetUserData']() ['impulsesThisStep'] += Q0B[0][1]['normalImpulses'][0];
                  Q0B[35] = Q0B[1]['GetUserData']() ['arrayID'];
                }
                Q0B[99] = new V6D[0][2]['Collision']['b2WorldManifold'];
                Q0B[0][0]['GetWorldManifold'](Q0B[99]);
                Q0B[26] = SafeTrig['safeATan2'](Q0B[99]['m_normal']['y'], Q0B[99]['m_normal']['x']);
                Q0B[63] = Q0B[99]['m_points'][0]['x'];
                Q0B[75] = Q0B[99]['m_points'][0]['y'];
                if (Q0B[30] > 4.5) {
                  Q['globalStepVars']['soundsThisStep']['push'](['platBounce',
                  Q0B[30],
                  Q0B[90],
                  Q0B[35],
                  Q0B[26],
                  Q0B[63],
                  Q0B[75]]);
                }
              }
              if (Q0B[3]['GetUserData']() ['type'] == 'disc' || Q0B[5]['GetUserData']() ['type'] == 'disc') {
                Q0B[52] = 1;
                Q0B[85] = false;
                if (Q0B[3]['GetUserData']() ['type'] == 'disc' && Q0B[5]['GetUserData']() ['type'] == 'disc') {
                  Q0B[52] = 3;
                } else if (Q0B[3]['GetUserData']() ['type'] == 'arrow' || Q0B[5]['GetUserData']() ['type'] == 'arrow') {
                  Q0B[52] = 6;
                } else {
                  if (Q0B[3]['GetUserData']() ['type'] == 'phys' && Q0B[1]['GetShape']() ['GetType']() == 0) {
                    Q0B[85] = true;
                  }
                  if (Q0B[5]['GetUserData']() ['type'] == 'phys' && Q0B[7]['GetShape']() ['GetType']() == 0) {
                    Q0B[85] = true;
                  }
                }
                Q0B[37] = new V6D[0][2]['Collision']['b2WorldManifold'];
                Q0B[0][0]['GetWorldManifold'](Q0B[37]);
                U3ndn.S2t(25);
                Q0B[76] = U3ndn.I8r(1, 84, 146, 3, 2);
                U3ndn.S2t(26);
                Q0B[65] = U3ndn.E_K(15, 171, 947, 6);
                Q0B[74] = Q0B[0][1][r8no$[Q0B[76]]][0] * A[r8no$[Q0B[65]]] * Q0B[52];
                Q0B[13] = Q0B[37]['m_points'][0]['Copy']();
                Q0B[98] = Q0B[37]['m_normal']['Copy']();
                Q0B[98]['Multiply'](Q0B[74]);
                Q0B[13]['Subtract'](Q0B[98]);
                Q0B[86] = Q0B[37]['m_points'][0]['Copy']();
                Q0B[87] = Q0B[37]['m_normal']['Copy']();
                Q0B[87]['Multiply'](Q0B[74]);
                Q0B[86]['Add'](Q0B[87]);
                Q0B[68] = Q0B[13]['Copy']();
                Q0B[68]['Subtract'](Q0B[86]);
                Q0B[38] = 40;
                if (Math['abs'](Q0B[68]['x']) > Q0B[38]) {
                  if (Q0B[68]['x'] < 0) {
                    Q0B[68]['x'] = - Q0B[38];
                  } else {
                    Q0B[68]['x'] = Q0B[38];
                  }
                }
                if (Math['abs'](Q0B[68]['y']) > Q0B[38]) {
                  if (Q0B[68]['y'] < 0) {
                    Q0B[68]['y'] = - Q0B[38];
                  } else {
                    Q0B[68]['y'] = Q0B[38];
                  }
                }
                if (Q0B[85]) {
                  Q0B[68]['x'] = - Q0B[68]['x'];
                  Q0B[68]['y'] = - Q0B[68]['y'];
                }
                Q['globalStepVars']['shakeVectorThisStep']['x'] += Q0B[68]['x'];
                Q['globalStepVars']['shakeVectorThisStep']['y'] += Q0B[68]['y'];
              }
            }
          };
          Q['world']['SetContactListener'](Q['contactListener']);
        }
        N4X[78] = Q['world'];
        N4X[78]['novakReset']();
        N4X[78]['SetContactListener'](Q['contactListener']);
        if (N4X[78]['GetGravity']() ['y'] != 20) {
          N4X[78]['SetGravity'](new V6D[2](0, 20));
        }
        U3ndn.S2t(9);
        N4X[189] = U3ndn.I8r(164, 1458, 10);
        U3ndn.S2t(18);
        N4X[275] = U3ndn.I8r(16, 9, 6, 0);
        U3ndn.z_y(27);
        N4X[732] = U3ndn.I8r(18, 18, 15, 16);
        N4X[61] = 1 / (Math[r8no$[N4X[189]]] * N4X[275] * N4X[732]);
        N4X[40] = 10;
        N4X[87] = 5;
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['discs']['length']; N4X[266]++) {
          if (N4X[0][0]['discs'][N4X[266]] && i7(N4X[266]) == false) {
            N4X[4][N4X[266]] = {
              a1a: N4X[0][0]['discs'][N4X[266]]['a1a'],
              team: N4X[0][0]['discs'][N4X[266]]['team'],
              extraVelX: 0,
              extraVelY: 0,
              tcd: N4X[0][0]['discs'][N4X[266]]['tcd'],
              ni: false
            };
            N4X[4][N4X[266]]['a1'] = N4X[0][1][N4X[266]] && N4X[0][1][N4X[266]]['action'];
            N4X[4][N4X[266]]['a2'] = N4X[0][1][N4X[266]] && N4X[0][1][N4X[266]]['action2'];
            N4X[4][N4X[266]]['radius'] = 1;
            N4X[4][N4X[266]]['ds'] = N4X[0][0]['discs'][N4X[266]]['ds'];
            N4X[4][N4X[266]]['da'] = N4X[0][0]['discs'][N4X[266]]['da'];
            N4X[4][N4X[266]]['lhid'] = N4X[0][0]['discs'][N4X[266]]['lhid'];
            N4X[4][N4X[266]]['lht'] = N4X[0][0]['discs'][N4X[266]]['lht'];
            if (N4X[4][N4X[266]]['lht'] != 0) {
              N4X[4][N4X[266]]['lht']--;
            }
            if (N4X[4][N4X[266]]['lht'] == 0) {
              N4X[4][N4X[266]]['lhid'] = - 1;
            }
            if (N4X[0][4]['bal'][N4X[266]]) {
              U3ndn.S2t(28);
              N4X[504] = U3ndn.I8r(190, 3, 7, 10);
              U3ndn.S2t(15);
              N4X[632] = U3ndn.E_K(16, 98, 14);
              N4X[35] = N4X[0][4][r8no$[N4X[504]]][N4X[266]] / N4X[632];
              N4X[35] = Math['max'](Math['min'](N4X[35], 1), - 0.95);
              N4X[4][N4X[266]]['radius'] += N4X[35];
            }
            if (N4X[0][0]['discs'][N4X[266]]['swing'] && N4X[0][1][N4X[266]] && (N4X[0][1][N4X[266]]['action2'] || N4X[0][1][N4X[266]]['ml'])) {
              N4X[4][N4X[266]]['swing'] = true;
            }
            if (N4X[0][4]['mo'] == 'b' || N4X[0][4]['mo'] == 'v') {
              if (N4X[4][N4X[266]]['a1']) {
                N4X[4][N4X[266]]['a1a'] -= N4X[40];
                if (N4X[4][N4X[266]]['a1a'] < 0) {
                  N4X[4][N4X[266]]['a1a'] = 0;
                }
              }
              if (N4X[4][N4X[266]] && N4X[0][1][N4X[266]] && N4X[0][1][N4X[266]]['action'] == false) {
                N4X[4][N4X[266]]['a1a'] += N4X[87];
                if (N4X[4][N4X[266]]['a1a'] > 1000) {
                  N4X[4][N4X[266]]['a1a'] = 1000;
                }
              }
            }
            if (N4X[0][4]['mo'] == 'sp') {
              if (N4X[4][N4X[266]]['swing']) {
                N4X[4][N4X[266]]['a1a'] -= N4X[89];
                if (N4X[4][N4X[266]]['a1a'] < 0) {
                  N4X[4][N4X[266]]['a1a'] = 0;
                }
                if (N4X[4][N4X[266]]['a1a'] < N4X[67]) {
                  N4X[4][N4X[266]]['a1a'] = 0;
                  N4X[4][N4X[266]]['swing'] = false;
                }
              } else {
                N4X[4][N4X[266]]['a1a'] += N4X[63];
                if (N4X[4][N4X[266]]['a1a'] > 1000) {
                  N4X[4][N4X[266]]['a1a'] = 1000;
                }
              }
            }
            if (N4X[0][0]['ftu'] == - 1 && (N4X[0][4]['mo'] == 'ar' || N4X[0][4]['mo'] == 'ard')) {
              N4X[4][N4X[266]]['a1a'] += 8;
              if (N4X[4][N4X[266]]['a1a'] > 1000) {
                N4X[4][N4X[266]]['a1a'] = 1000;
              }
            }
            N4X[80] = N4X[61];
            if (N4X[4][N4X[266]]['a1'] && N4X[0][4]['mo'] != 'bs' && !(N4X[4][N4X[266]]['ds'] > 0)) {
              U3ndn.S2t(29);
              N4X[177] = U3ndn.E_K(83, 6, 6);
              U3ndn.z_y(1);
              N4X[721] = U3ndn.E_K(15000, 14000);
              N4X[83] = N4X[4][N4X[266]][r8no$[N4X[177]]] / N4X[721];
              N4X[43] = N4X[61];
              U3ndn.z_y(2);
              N4X[62] = U3ndn.I8r(3.7, N4X[83], N4X[43]);
              U3ndn.S2t(6);
              N4X[75] = U3ndn.E_K(N4X[43], N4X[62]);
              N4X[80] = N4X[75];
            }
            N4X[11] = new V6D[4];
            N4X[11]['type'] = V6D[5]['b2_dynamicBody'];
            N4X[11]['position']['Set'](N4X[0][0]['discs'][N4X[266]]['x'], N4X[0][0]['discs'][N4X[266]]['y']);
            N4X[11]['fixedRotation'] = true;
            if (N4X[0][4]['mo'] == 'v') {
              N4X[11]['fixedRotation'] = false;
            }
            N4X[11]['linearDamping'] = 0.01;
            N4X[11]['linearVelocity']['Set'](N4X[0][0]['discs'][N4X[266]]['xv'], N4X[0][0]['discs'][N4X[266]]['yv']);
            N4X[11]['angularVelocity'] = N4X[0][0]['discs'][N4X[266]]['av'];
            N4X[11]['angle'] = N4X[0][0]['discs'][N4X[266]]['a'];
            N4X[11]['angularDamping'] = 3.4;
            N4X[11]['userData'] = {
              type: 'disc',
              arrayID: N4X[266],
              team: N4X[0][0]['discs'][N4X[266]]['team'],
              impulsesThisStep: 0
            };
            N4X[11]['bullet'] = true;
            N4X[54] = N4X[78]['CreateBody'](N4X[11]);
            N4X[88] = new V6D[19](N4X[4][N4X[266]]['radius']);
            N4X[29] = new V6D[27];
            N4X[29]['shape'] = N4X[88];
            N4X[29]['density'] = N4X[80];
            N4X[29]['friction'] = 0.001337;
            N4X[29]['restitution'] = 0.95;
            N4X[29]['filter']['categoryBits'] = 1;
            N4X[29]['userData'] = {
              type: 'discbody'
            };
            N4X[54]['CreateFixture'](N4X[29]);
            if (N4X[0][4]['mo'] == 'v') {
              N4X[33] = new V6D[62];
              N4X[33]['SetAsOrientedBox'](Q['footHW'] * N4X[4][N4X[266]]['radius'], Q['footHH'] * N4X[4][N4X[266]]['radius'], new V6D[2](Q['footOffsetX'] * N4X[4][N4X[266]]['radius'], Q['footOffsetY'] * N4X[4][N4X[266]]['radius']), 0);
              N4X[69] = new V6D[27];
              N4X[69]['shape'] = N4X[33];
              N4X[69]['density'] = 0.2;
              N4X[69]['friction'] = 0.2;
              N4X[69]['restitution'] = 0.7;
              N4X[69]['filter']['categoryBits'] = 1;
              N4X[69]['userData'] = {
                type: 'vtolwing'
              };
              N4X[54]['CreateFixture'](N4X[69]);
              N4X[96] = new V6D[62];
              N4X[96]['SetAsOrientedBox'](Q['footHW'] * N4X[4][N4X[266]]['radius'], Q['footHH'] * N4X[4][N4X[266]]['radius'], new V6D[2]( - Q['footOffsetX'] * N4X[4][N4X[266]]['radius'], Q['footOffsetY'] * N4X[4][N4X[266]]['radius']), 0);
              N4X[69]['shape'] = N4X[96];
              N4X[54]['CreateFixture'](N4X[69]);
            }
            N4X[4][N4X[266]]['body'] = N4X[54];
            N4X[4][N4X[266]]['body']['SetLinearVelocity'](new V6D[2](N4X[0][0]['discs'][N4X[266]]['xv'], N4X[0][0]['discs'][N4X[266]]['yv']));
          }
        }
        function i7(e0y) {
          var t95 = [
            arguments
          ];
          t95[9] = 1997043870;
          t95[4] = - 1960059139;
          t95[3] = 2108934958;
          t95[8] = 1893677506;
          if (U3ndn.A4F(0, false, 721651) === t95[9] || U3ndn.A4F(0, false, 928117) === t95[4] || U3ndn.s7c(0, false, 262461) === t95[3] || U3ndn.s7c(0, false, 262102) === t95[8] || !!U3ndn.G6q()) {
            t95[1] = r8no$;
            if (N4X[0][2] && N4X[0][2]['playersLeft'] && N4X[0][2]['playersLeft']['length'] > 0) {
              for (t95[7] = 0; t95[7] < N4X[0][2]['playersLeft']['length']; t95[7]++) {
                if (N4X[0][2]['playersLeft'][t95[7]] == t95[0][0]) {
                  return true;
                }
              }
            }
            return false;
          }
        }
        N4X[98] = N4X[78]['GetGroundBody']();
        N4X[98]['SetUserData']({
          arrayID: - 1
        });
        N4X[71] = [
        ];
        N4X[36] = [
        ];
        N4X[79] = [
        ];
        N4X[66] = [
        ];
        N4X[55] = [
        ];
        N4X[91] = [
        ];
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['physics']['shapes']['length']; N4X[266]++) {
          if (N4X[0][0]['physics']['shapes'][N4X[266]]) {
            N4X[39] = N4X[0][0]['physics']['shapes'][N4X[266]];
            if (N4X[0][0]['physics']['shapes'][N4X[266]]['type'] == 'bx') {
              N4X[71][N4X[266]] = new V6D[62];
              N4X[99] = N4X[39]['c'][0];
              N4X[81] = N4X[39]['c'][1];
              U3ndn.z_y(16);
              N4X[770] = U3ndn.I8r(13, 9, 2, 8, 57);
              U3ndn.S2t(28);
              N4X[727] = U3ndn.E_K(3, 13, 3, 10);
              N4X[53] = N4X[39][r8no$[N4X[770]]] / N4X[727];
              U3ndn.S2t(1);
              N4X[996] = U3ndn.E_K(69, 9);
              U3ndn.S2t(1);
              N4X[878] = U3ndn.E_K(13, 11);
              N4X[77] = N4X[39][r8no$[N4X[996]]] / N4X[878];
              N4X[92] = SafeTrig['safeCos'](N4X[39]['a']);
              N4X[10] = SafeTrig['safeSin'](N4X[39]['a']);
              U3ndn.S2t(30);
              N4X[52] = new V6D[2](U3ndn.E_K(N4X[77], N4X[92], N4X[10], N4X[53]), U3ndn.E_K(N4X[77], N4X[53], N4X[10], N4X[92], U3ndn.S2t(31)));
              U3ndn.S2t(32);
              N4X[24] = new V6D[2](U3ndn.I8r(N4X[77], N4X[92], N4X[53], N4X[10]), U3ndn.E_K(N4X[53], N4X[77], N4X[10], N4X[92], U3ndn.z_y(33)));
              U3ndn.S2t(34);
              N4X[44] = new V6D[2](U3ndn.E_K(N4X[77], N4X[53], N4X[10], N4X[92]), U3ndn.E_K(N4X[77], N4X[10], N4X[92], N4X[53], U3ndn.z_y(35)));
              U3ndn.S2t(36);
              N4X[84] = new V6D[2](U3ndn.E_K(N4X[77], N4X[10], N4X[92], N4X[53]), U3ndn.E_K(N4X[92], N4X[77], N4X[53], N4X[10], U3ndn.z_y(37)));
              N4X[52]['x'] += N4X[99];
              N4X[52]['y'] += N4X[81];
              N4X[24]['x'] += N4X[99];
              N4X[24]['y'] += N4X[81];
              N4X[44]['x'] += N4X[99];
              N4X[44]['y'] += N4X[81];
              N4X[84]['x'] += N4X[99];
              N4X[84]['y'] += N4X[81];
              N4X[71][N4X[266]]['SetAsArray']([N4X[52],
              N4X[24],
              N4X[44],
              N4X[84]]);
            } else if (N4X[0][0]['physics']['shapes'][N4X[266]]['type'] == 'ci') {
              N4X[71][N4X[266]] = new V6D[19];
              N4X[71][N4X[266]]['SetRadius'](N4X[39]['r']);
              N4X[71][N4X[266]]['SetLocalPosition'](new V6D[2](N4X[39]['c'][0], N4X[39]['c'][1]));
            } else if (N4X[0][0]['physics']['shapes'][N4X[266]]['type'] == 'po') {
              N4X[21] = [
              ];
              for (N4X[406] = 0; N4X[406] < N4X[39]['v']['length']; N4X[406]++) {
                N4X[21][N4X[406]] = new V6D[2](N4X[39]['v'][N4X[406]][0], N4X[39]['v'][N4X[406]][1]);
              }
              if (N4X[21]['length'] >= 3) {
                N4X[71][N4X[266]] = new V6D[62];
                N4X[71][N4X[266]]['SetAsArray'](N4X[21]);
              } else {
                N4X[71][N4X[266]] = new V6D[19];
                N4X[71][N4X[266]]['SetRadius'](2);
              }
            } else if (N4X[0][0]['physics']['shapes'][N4X[266]]['type'] == 'ch') {
            }
            N4X[71][N4X[266]]['arrayID'] = N4X[266];
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['physics']['bodies']['length']; N4X[266]++) {
          if (N4X[0][0]['physics']['bodies'][N4X[266]]) {
            N4X[20] = N4X[0][0]['physics']['bodies'][N4X[266]];
            N4X[27] = false;
            for (N4X[319] = 0; N4X[319] < N4X[20]['fx']['length']; N4X[319]++) {
              if (N4X[0][0]['physics']['fixtures'][N4X[20]['fx'][N4X[319]]]['np'] == false) {
                N4X[27] = true;
                break;
              }
            }
            N4X[11] = new V6D[4];
            if (N4X[20]['type'] == 's' || N4X[27] == false) {
              N4X[11]['type'] = V6D[5]['b2_staticBody'];
            } else if (N4X[20]['type'] == 'd') {
              N4X[11]['type'] = V6D[5]['b2_dynamicBody'];
            } else if (N4X[20]['type'] == 'k') {
              N4X[11]['type'] = V6D[5]['b2_kinematicBody'];
            }
            N4X[11]['position']['Set'](N4X[20]['p'][0], N4X[20]['p'][1]);
            N4X[11]['angle'] = N4X[20]['a'];
            N4X[11]['linearVelocity']['Set'](N4X[20]['lv'][0], N4X[20]['lv'][1]);
            N4X[11]['angularVelocity'] = N4X[20]['av'];
            N4X[11]['linearDamping'] = N4X[20]['ld'];
            N4X[11]['angularDamping'] = N4X[20]['ad'];
            N4X[86] = N4X[20]['fr'];
            if (N4X[86]) {
              for (N4X[292] = 0; N4X[292] < N4X[0][0]['physics']['joints']['length']; N4X[292]++) {
                if (N4X[0][0]['physics']['joints'][N4X[292]]) {
                  if (N4X[0][0]['physics']['joints'][N4X[292]]['ba'] == N4X[266] || N4X[0][0]['physics']['joints'][N4X[292]]['bb'] == N4X[266]) {
                    N4X[86] = false;
                  }
                }
              }
            }
            N4X[11]['fixedRotation'] = N4X[86];
            N4X[11]['bullet'] = N4X[20]['bu'];
            N4X[11]['userData'] = {
              type: 'phys',
              arrayID: N4X[266]
            };
            N4X[36][N4X[266]] = N4X[78]['CreateBody'](N4X[11]);
            for (N4X[406] = 0; N4X[406] < N4X[20]['fx']['length']; N4X[406]++) {
              N4X[15] = N4X[0][0]['physics']['fixtures'][N4X[20]['fx'][N4X[406]]];
              if (N4X[15]['np']) {
                continue;
              }
              N4X[29] = new V6D[27];
              N4X[29]['friction'] = N4X[15]['fr'] != null ? N4X[15]['fr'] : N4X[20]['fric'];
              N4X[26] = N4X[15]['fp'] != null ? N4X[15]['fp'] : N4X[20]['fricp'];
              if (N4X[26]) {
                N4X[29]['friction'] = - N4X[29]['friction'];
              }
              N4X[29]['restitution'] = N4X[15]['re'] != null ? N4X[15]['re'] : N4X[20]['re'];
              N4X[29]['density'] = N4X[15]['de'] != null ? N4X[15]['de'] : N4X[20]['de'];
              if (N4X[29]['density'] <= 0) {
                N4X[29]['density'] = 0.0001;
              }
              N4X[29]['isSensor'] = false;
              U3ndn.S2t(1);
              N4X[525] = U3ndn.I8r(14, 12);
              U3ndn.S2t(38);
              N4X[880] = U3ndn.E_K(17, 4230, 11, 240, 11985);
              U3ndn.z_y(1);
              N4X[617] = U3ndn.E_K(24, 22);
              N4X[29]['filter']['categoryBits'] = Math['pow'](N4X[525], N4X[20][r8no$[N4X[880]]]) * N4X[617];
              N4X[29]['filter']['maskBits'] = 65535;
              if (N4X[20]['f_p'] == false) {
                N4X[29]['filter']['maskBits'] -= 1;
              }
              if (N4X[20]['f_1'] == false) {
                N4X[29]['filter']['maskBits'] -= 4;
              }
              if (N4X[20]['f_2'] == false) {
                N4X[29]['filter']['maskBits'] -= 8;
              }
              if (N4X[20]['f_3'] == false) {
                N4X[29]['filter']['maskBits'] -= 16;
              }
              if (N4X[20]['f_4'] == false) {
                N4X[29]['filter']['maskBits'] -= 32;
              }
              N4X[29]['userData'] = {
                arrayID: N4X[20]['fx'][N4X[406]],
                color: N4X[15]['f'],
                death: N4X[15]['d'],
                noPhysics: N4X[15]['np'],
                noGrapple: N4X[15]['ng'],
                innerGrapple: N4X[15]['ig']
              };
              N4X[29]['shape'] = N4X[71][N4X[15]['sh']];
              N4X[79][N4X[20]['fx'][N4X[406]]] = N4X[36][N4X[266]]['CreateFixture'](N4X[29]);
            }
            N4X[36][N4X[266]]['SetLinearVelocity'](new V6D[2](N4X[20]['lv'][0], N4X[20]['lv'][1]));
            if (N4X[20]['cf'] && N4X[0][0]['ftu'] == - 1) {
              if (N4X[20]['cf']['x'] != 0 || N4X[20]['cf']['y'] != 0) {
                N4X[16] = new V6D[2](N4X[20]['cf']['x'], N4X[20]['cf']['y']);
                if (N4X[20]['cf']['w'] == false) {
                  N4X[16] = N4X[36][N4X[266]]['GetWorldVector'](N4X[16], N4X[16]);
                }
                N4X[36][N4X[266]]['GetLinearVelocity']() ['x'] += N4X[16]['x'];
                N4X[36][N4X[266]]['GetLinearVelocity']() ['y'] += N4X[16]['y'];
              }
              if (N4X[20]['cf']['ct'] != 0) {
                N4X[50] = N4X[36][N4X[266]]['GetAngularVelocity']();
                N4X[50] += N4X[20]['cf']['ct'];
                N4X[36][N4X[266]]['SetAngularVelocity'](N4X[50]);
              }
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['physics']['joints']['length']; N4X[266]++) {
          if (N4X[0][0]['physics']['joints'][N4X[266]]) {
            N4X[41] = N4X[0][0]['physics']['joints'][N4X[266]];
            N4X[90] = N4X[41]['ba'] == - 1 ? N4X[98] : N4X[36][N4X[41]['ba']];
            N4X[19] = N4X[41]['bb'] == - 1 ? N4X[98] : N4X[36][N4X[41]['bb']];
            if (N4X[41]['type'] == 'lpj') {
              U3ndn.z_y(15);
              N4X[428] = U3ndn.E_K(9, 3486, 3246);
              N4X[58] = N4X[41][r8no$[N4X[428]]] - N4X[90]['GetAngle']();
              N4X[48] = SafeTrig['safeCos'](N4X[58]);
              N4X[93] = SafeTrig['safeSin'](N4X[58]);
              N4X[34] = new V6D[55];
              N4X[34]['bodyA'] = N4X[90];
              N4X[34]['localAnchorA'] = new V6D[2];
              N4X[34]['bodyB'] = N4X[19];
              N4X[34]['localAnchorB'] = new V6D[2](N4X[41]['pax'], N4X[41]['pay']);
              N4X[34]['referenceAngle'] = - N4X[90]['GetAngle']();
              N4X[34]['upperTranslation'] = N4X[41]['plen'];
              N4X[34]['lowerTranslation'] = - N4X[41]['plen'];
              N4X[34]['enableLimit'] = true;
              N4X[34]['localAxisA'] = new V6D[2](N4X[48], N4X[93]);
              N4X[34]['enableMotor'] = true;
              N4X[34]['maxMotorForce'] = N4X[41]['pf'];
              N4X[34]['motorSpeed'] = N4X[41]['pms'];
              N4X[13] = N4X[41]['pa'];
              U3ndn.S2t(39);
              N4X[115] = U3ndn.E_K(11, 8579, 71, 11, 6);
              U3ndn.z_y(40);
              N4X[717] = U3ndn.I8r(2, 642, 19, 76);
              N4X[47] = N4X[41][r8no$[N4X[115]]] + SafeTrig['safeCos'](N4X[13]) * - N4X[41][r8no$[N4X[717]]];
              U3ndn.z_y(41);
              N4X[992] = U3ndn.I8r(17, 7, 780, 869);
              U3ndn.z_y(15);
              N4X[148] = U3ndn.E_K(14, 560, 494);
              N4X[72] = N4X[41][r8no$[N4X[992]]] + SafeTrig['safeSin'](N4X[13]) * - N4X[41][r8no$[N4X[148]]];
              N4X[85] = N4X[90]['GetPosition']() ['Copy']();
              N4X[85]['Subtract'](new V6D[2](N4X[47], N4X[72]));
              N4X[94] = N4X[85]['Length']();
              U3ndn.z_y(42);
              N4X[286] = U3ndn.I8r(424, 8, 61, 16);
              U3ndn.S2t(43);
              N4X[883] = U3ndn.E_K(8, 12, 364, 14, 17);
              N4X[60] = N4X[94] / (N4X[41][r8no$[N4X[286]]] * N4X[883]);
              N4X[60] -= 0.5;
              N4X[60] *= 2;
              if (N4X[41]['pms'] < 0 && N4X[60] > 0.99 || N4X[41]['pms'] > 0 && N4X[60] < - 0.99) {
                N4X[34]['motorSpeed'] = - N4X[34]['motorSpeed'];
                N4X[90]['SetLinearVelocity'](new V6D[2](0, 0));
              }
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[34]);
            }
            if (N4X[41]['type'] == 'lsj') {
              U3ndn.z_y(44);
              N4X[794] = U3ndn.E_K(20, 1, 2892, 3094);
              U3ndn.S2t(15);
              N4X[902] = U3ndn.E_K(10, 0, 8);
              N4X[14] = Math[r8no$[N4X[794]]] / N4X[902];
              N4X[23] = SafeTrig['safeCos'](N4X[14]);
              N4X[31] = SafeTrig['safeSin'](N4X[14]);
              N4X[64] = new V6D[55];
              N4X[64]['bodyA'] = N4X[90];
              N4X[64]['localAnchorA'] = new V6D[2];
              N4X[64]['bodyB'] = N4X[19];
              N4X[64]['localAnchorB'] = new V6D[2](N4X[41]['sax'], N4X[41]['say']);
              N4X[64]['referenceAngle'] = - N4X[90]['GetAngle']();
              N4X[64]['upperTranslation'] = N4X[41]['slen'];
              N4X[64]['lowerTranslation'] = - N4X[41]['slen'];
              N4X[64]['enableLimit'] = false;
              N4X[64]['localAxisA'] = new V6D[2](0, 1);
              N4X[64]['enableMotor'] = true;
              N4X[64]['maxMotorForce'] = N4X[41]['sf'];
              N4X[64]['motorSpeed'] = 300;
              N4X[45] = N4X[90]['GetAngle']() - N4X[14];
              U3ndn.S2t(6);
              N4X[104] = U3ndn.E_K(78, 5);
              U3ndn.z_y(42);
              N4X[119] = U3ndn.E_K(25434, 15, 1700, 19);
              N4X[49] = N4X[41][r8no$[N4X[104]]] + SafeTrig['safeCos'](N4X[45]) * - N4X[41][r8no$[N4X[119]]];
              U3ndn.z_y(45);
              N4X[303] = U3ndn.I8r(16, 3, 204, 6);
              U3ndn.S2t(46);
              N4X[273] = U3ndn.E_K(83, 12, 27, 2, 11);
              N4X[28] = N4X[41][r8no$[N4X[303]]] + SafeTrig['safeSin'](N4X[45]) * - N4X[41][r8no$[N4X[273]]];
              N4X[70] = N4X[90]['GetPosition']() ['Copy']();
              N4X[70]['Subtract'](new V6D[2](N4X[49], N4X[28]));
              N4X[95] = N4X[70]['Length']();
              U3ndn.S2t(47);
              N4X[350] = U3ndn.I8r(20, 14, 7, 2, 55);
              U3ndn.S2t(48);
              N4X[618] = U3ndn.E_K(34, 23, 1, 7, 6);
              N4X[74] = SafeTrig['safeATan2'](N4X[70][r8no$[N4X[350]]], N4X[70][r8no$[N4X[618]]]) - N4X[90]['GetAngle']();
              U3ndn.S2t(49);
              N4X[791] = U3ndn.E_K(10, 2, 11, 6, 12);
              U3ndn.z_y(50);
              N4X[780] = U3ndn.I8r(11, 11, 14, 17819, 1274);
              N4X[74] = N4X[74] % (N4X[791] * Math[r8no$[N4X[780]]]);
              if (N4X[74] < 0 && N4X[74] >= - Math['PI'] || N4X[74] > Math['PI']) {
                N4X[95] = N4X[95];
              } else {
                N4X[95] = - N4X[95];
              }
              U3ndn.z_y(6);
              N4X[774] = U3ndn.I8r(69, 16);
              U3ndn.z_y(51);
              N4X[529] = U3ndn.E_K(23, 16, 8, 3);
              N4X[57] = N4X[95] / (N4X[41][r8no$[N4X[774]]] * N4X[529]);
              N4X[57] -= 0.5;
              N4X[57] *= 2;
              U3ndn.z_y(6);
              N4X[363] = U3ndn.E_K(7, 79);
              N4X[64]['maxMotorForce'] = N4X[41][r8no$[N4X[363]]] * Math['abs'](N4X[57]);
              if (N4X[57] > 0) {
                N4X[64]['motorSpeed'] = - 300;
              }
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[64]);
            }
            if (N4X[41]['type'] == 'rv') {
              N4X[51] = new V6D[54];
              N4X[51]['bodyA'] = N4X[90];
              N4X[51]['bodyB'] = N4X[19];
              N4X[51]['localAnchorA']['Set'](N4X[41]['aa'][0], N4X[41]['aa'][1]);
              N4X[51]['localAnchorB']['Set'](N4X[41]['ab'][0], N4X[41]['ab'][1]);
              N4X[51]['enableLimit'] = N4X[41]['d']['el'];
              N4X[51]['lowerAngle'] = N4X[41]['d']['la'];
              N4X[51]['upperAngle'] = N4X[41]['d']['ua'];
              N4X[51]['enableMotor'] = N4X[41]['d']['em'];
              N4X[51]['motorSpeed'] = N4X[41]['d']['ms'];
              N4X[51]['maxMotorTorque'] = N4X[41]['d']['mmt'];
              U3ndn.S2t(6);
              N4X[361] = U3ndn.E_K(18, 53);
              U3ndn.z_y(1);
              N4X[192] = U3ndn.E_K(280, 8);
              N4X[51]['collideConnected'] = N4X[41][r8no$[N4X[361]]][r8no$[N4X[192]]] === true;
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[51]);
            }
            if (N4X[41]['type'] == 'p') {
              N4X[51] = new V6D[55];
              N4X[51]['bodyA'] = N4X[90];
              N4X[51]['bodyB'] = N4X[19];
              N4X[51]['localAnchorA']['Set'](N4X[41]['aa'][0], N4X[41]['aa'][1]);
              N4X[51]['localAnchorB']['Set'](N4X[41]['ab'][0], N4X[41]['ab'][1]);
              N4X[51]['localAxisA']['Set'](N4X[41]['axa'][0], N4X[41]['axa'][1]);
              N4X[51]['enableLimit'] = N4X[41]['d']['el'];
              N4X[51]['lowerTranslation'] = N4X[41]['d']['lt'];
              N4X[51]['upperTranslation'] = N4X[41]['d']['ut'];
              N4X[51]['enableMotor'] = N4X[41]['d']['em'];
              N4X[51]['motorSpeed'] = N4X[41]['d']['ms'];
              N4X[51]['maxMotorForce'] = N4X[41]['d']['mmf'];
              U3ndn.z_y(52);
              N4X[735] = U3ndn.I8r(14, 76, 14, 6, 16001);
              U3ndn.z_y(53);
              N4X[771] = U3ndn.I8r(253, 1904, 10, 5, 211);
              N4X[51]['collideConnected'] = N4X[41][r8no$[N4X[735]]][r8no$[N4X[771]]] === true;
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[51]);
              N4X[462] = N4X[66][N4X[266]]['GetJointTranslation']();
              N4X[480] = {
                changeSide: N4X[41]['cs']
              };
              if (N4X[41]['d']['cd'] && N4X[41]['d']['el']) {
                if ((N4X[41]['cs'] == 0 || N4X[41]['cs'] == 1) && N4X[462] > 0 && N4X[462] / N4X[41]['d']['ut'] > 0.99) {
                  N4X[66][N4X[266]]['SetMotorSpeed']( - N4X[66][N4X[266]]['GetMotorSpeed']());
                  N4X[480]['changeSide'] = 2;
                } else if ((N4X[41]['cs'] == 0 || N4X[41]['cs'] == 2) && N4X[462] < 0 && N4X[462] / N4X[41]['d']['lt'] > 0.99) {
                  N4X[66][N4X[266]]['SetMotorSpeed']( - N4X[66][N4X[266]]['GetMotorSpeed']());
                  N4X[480]['changeSide'] = 1;
                }
              }
              N4X[66][N4X[266]]['SetUserData'](N4X[480]);
            }
            if (N4X[41]['type'] == 'd') {
              N4X[51] = new V6D[15];
              N4X[51]['bodyA'] = N4X[90];
              N4X[51]['bodyB'] = N4X[19];
              N4X[51]['localAnchorA']['Set'](N4X[41]['aa'][0], N4X[41]['aa'][1]);
              N4X[51]['localAnchorB']['Set'](N4X[41]['ab'][0], N4X[41]['ab'][1]);
              N4X[51]['length'] = N4X[41]['len'];
              N4X[51]['frequencyHz'] = N4X[41]['d']['fh'];
              N4X[51]['dampingRatio'] = N4X[41]['d']['dr'];
              U3ndn.z_y(13);
              N4X[114] = U3ndn.I8r(14, 69, 12);
              U3ndn.S2t(1);
              N4X[458] = U3ndn.I8r(276, 4);
              N4X[51]['collideConnected'] = N4X[41][r8no$[N4X[114]]][r8no$[N4X[458]]] === true;
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[51]);
            }
          }
        }
        function l5(r6S, b6M) {
          var d6_ = [
            arguments
          ];
          d6_[9] = r8no$;
          d6_[8] = d6_[0][1]['GetUserData']() ['capID'];
          d6_[2] = d6_[0][0]['GetUserData']() ['team'];
          if (!N4X[3][d6_[8]]) {
            N4X[3][d6_[8]] = [
            ];
          }
          if (!N4X[3][d6_[8]][d6_[2]]) {
            N4X[3][d6_[8]][d6_[2]] = {
              count: 1,
              players: [
                d6_[0][0]['GetUserData']() ['arrayID']
              ]
            };
          } else {
            N4X[3][d6_[8]][d6_[2]]['count']++;
            N4X[3][d6_[8]][d6_[2]]['players']['push'](d6_[0][0]['GetUserData']() ['arrayID']);
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['physics']['joints']['length']; N4X[266]++) {
          if (N4X[0][0]['physics']['joints'][N4X[266]]) {
            N4X[41] = N4X[0][0]['physics']['joints'][N4X[266]];
            N4X[90] = N4X[41]['ba'] == - 1 ? N4X[98] : N4X[36][N4X[41]['ba']];
            N4X[19] = N4X[41]['bb'] == - 1 ? N4X[98] : N4X[36][N4X[41]['bb']];
            if (N4X[41]['type'] == 'g') {
              N4X[51] = new V6D[29];
              N4X[51]['bodyA'] = N4X[90];
              N4X[51]['bodyB'] = N4X[19];
              N4X[51]['joint1'] = N4X[66][N4X[41]['ja']];
              N4X[51]['joint2'] = N4X[66][N4X[41]['jb']];
              N4X[51]['ratio'] = N4X[41]['d']['r'];
              U3ndn.S2t(9);
              N4X[657] = U3ndn.E_K(52, 917, 19);
              U3ndn.z_y(5);
              N4X[263] = U3ndn.E_K(874, 4, 8, 2, 279);
              N4X[51]['collideConnected'] = N4X[41][r8no$[N4X[657]]][r8no$[N4X[263]]] === true;
              N4X[66][N4X[266]] = N4X[78]['CreateJoint'](N4X[51]);
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['capZones']['length']; N4X[266]++) {
          if (N4X[0][0]['capZones'][N4X[266]]) {
            N4X[704] = N4X[0][0]['capZones'][N4X[266]]['i'];
            if (N4X[79][N4X[704]]) {
              N4X[480] = N4X[79][N4X[704]]['GetUserData']();
              N4X[480]['capzone'] = true;
              N4X[480]['capID'] = N4X[266];
              N4X[480]['capType'] = N4X[0][0]['capZones'][N4X[266]]['ty'];
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[4]['length']; N4X[266]++) {
          if (N4X[4][N4X[266]] && N4X[4][N4X[266]]['swing']) {
            N4X[39] = N4X[0][0]['discs'][N4X[266]]['swing'];
            N4X[130] = new V6D[2](N4X[39]['p'][0], N4X[39]['p'][1]);
            N4X[933] = new V6D[2];
            N4X[933] = N4X[36][N4X[39]['b']]['GetWorldPoint'](N4X[130]);
            N4X[814] = V6D[32]['Distance'](N4X[4][N4X[266]]['body']['GetPosition'](), N4X[933]);
            N4X[51] = new V6D[15];
            N4X[51]['bodyA'] = N4X[4][N4X[266]]['body'];
            N4X[51]['bodyB'] = N4X[36][N4X[39]['b']];
            N4X[51]['localAnchorA']['Set'](0, 0);
            N4X[51]['localAnchorB']['Set'](N4X[39]['p'][0], N4X[39]['p'][1]);
            N4X[51]['length'] = N4X[39]['l'];
            if (N4X[814] < N4X[39]['l']) {
              N4X[51]['frequencyHz'] = 0.01;
            } else {
              N4X[51]['frequencyHz'] = Q['swingF'];
            }
            N4X[51]['dampingRatio'] = Q['swingD'];
            N4X[51]['collideConnected'] = true;
            N4X[4][N4X[266]]['swingJoint'] = N4X[78]['CreateJoint'](N4X[51]);
          }
        }
        for (N4X[651] = 0; N4X[651] < N4X[0][0]['projectiles']['length']; N4X[651]++) {
          if (N4X[0][0]['projectiles'][N4X[651]]) {
            N4X[233] = N4X[0][0]['projectiles'][N4X[651]];
            N4X[402] = new V6D[4];
            N4X[402]['type'] = V6D[5]['b2_dynamicBody'];
            N4X[402]['position']['Set'](N4X[233]['x'], N4X[233]['y']);
            N4X[402]['userData'] = {
              type: N4X[233]['type'],
              arrayID: N4X[651],
              discID: N4X[233]['did'],
              fte: N4X[233]['fte'],
              hitDiscsThisStep: [
              ],
              hitWorldThisStep: false,
              destroyThisStep: false,
              team: N4X[233]['team']
            };
            N4X[931] = new V6D[2](N4X[233]['xv'], N4X[233]['yv']);
            if (N4X[931]['Length']() > 4) {
              N4X[402]['angle'] = SafeTrig['safeATan2'](N4X[233]['yv'], N4X[233]['xv']);
              N4X[402]['angularVelocity'] = 0;
            } else {
              N4X[402]['angle'] = N4X[233]['a'];
              N4X[402]['angularVelocity'] = N4X[233]['av'];
            }
            N4X[402]['angularDamping'] = 0;
            N4X[402]['bullet'] = true;
            N4X[348] = N4X[78]['CreateBody'](N4X[402]);
            N4X[389] = new V6D[62];
            U3ndn.z_y(0);
            N4X[389]['SetAsBox'](U3ndn.I8r(N4X[97], 2), U3ndn.E_K(N4X[18], 2), new V6D[2](0, 0), 0);
            N4X[956] = new V6D[27];
            N4X[956]['shape'] = N4X[389];
            N4X[956]['density'] = N4X[46];
            N4X[956]['friction'] = N4X[30];
            N4X[956]['restitution'] = N4X[82];
            N4X[956]['isSensor'] = false;
            N4X[956]['userData'] = {
              type: N4X[233]['type'],
              arrayID: N4X[651]
            };
            N4X[348]['CreateFixture'](N4X[956]);
            N4X[68][N4X[651]] = N4X[348];
            N4X[348]['SetLinearVelocity'](N4X[931]);
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[4]['length']; N4X[266]++) {
          if (N4X[4][N4X[266]] && N4X[0][1][N4X[266]] && N4X[0][0]['ftu'] == - 1) {
            U3ndn.z_y(14);
            N4X[159] = U3ndn.I8r(9, 9, 181);
            U3ndn.z_y(15);
            N4X[169] = U3ndn.E_K(10, 3760, 3582);
            U3ndn.z_y(54);
            N4X[367] = U3ndn.I8r(3, 9, 15, 2068, 10155);
            U3ndn.S2t(55);
            N4X[194] = U3ndn.I8r(9, 7, 27, 13, 198);
            U3ndn.S2t(56);
            N4X[919] = U3ndn.I8r(15, 8, 13, 8);
            U3ndn.S2t(57);
            N4X[967] = U3ndn.E_K(17, 18);
            N4X[550] = Math[r8no$[N4X[159]]] * N4X[4][N4X[266]][r8no$[N4X[169]]] * N4X[4][N4X[266]][r8no$[N4X[367]]] / (Math[r8no$[N4X[194]]] * N4X[919] * N4X[967]);
            if (N4X[0][4]['mo'] == 'b' || N4X[0][4]['mo'] == 'bs' || N4X[0][4]['mo'] == 'sp' || N4X[0][4]['mo'] == 'ar' && N4X[4][N4X[266]]['ds'] == 0 || N4X[0][4]['mo'] == 'ard' && N4X[4][N4X[266]]['ds'] == 0) {
              N4X[908] = new V6D[2](0, 0);
              N4X[737] = 12;
              if (N4X[0][0]['ms']['fl']) {
                N4X[737] = 20;
              }
              N4X[737] *= N4X[550];
              if (N4X[0][1][N4X[266]]['up']) {
                N4X[908]['y'] = - N4X[737];
              } else if (N4X[0][1][N4X[266]]['down']) {
                N4X[908]['y'] = N4X[737];
              }
              if (N4X[0][1][N4X[266]]['left']) {
                N4X[908]['x'] = - N4X[737];
              } else if (N4X[0][1][N4X[266]]['right']) {
                N4X[908]['x'] = N4X[737];
              }
              if (N4X[0][1][N4X[266]]['action']) {
                N4X[908]['Multiply'](0.7);
              }
              N4X[4][N4X[266]]['body']['ApplyForce'](N4X[908], N4X[4][N4X[266]]['body']['GetWorldCenter']());
            }
            function O2(p99, E6B, L19) {
              var a6m = [
                arguments
              ];
              a6m[4] = r8no$;
              a6m[1] = new V6D[2](N4X[0][0]['discs'][a6m[0][0]]['x'], N4X[0][0]['discs'][a6m[0][0]]['y']);
              U3ndn.z_y(58);
              a6m[9] = U3ndn.I8r(a6m[0][1], N4X[73], N4X[59]);
              a6m[7] = 1;
              a6m[5] = SafeTrig['safeCos'](a6m[0][2]) * a6m[7];
              a6m[8] = SafeTrig['safeSin'](a6m[0][2]) * a6m[7];
              U3ndn.w30();
              a6m[3] = N4X[4][a6m[0][0]]['team'];
              a6m[6] = {
                x: a6m[1]['x'] + a6m[5],
                y: a6m[1]['y'] + a6m[8],
                a: a6m[0][2],
                av: 0,
                did: a6m[0][0],
                xv: SafeTrig['safeCos'](a6m[0][2]) * a6m[9],
                yv: SafeTrig['safeSin'](a6m[0][2]) * a6m[9],
                fte: N4X[25],
                type: 'arrow',
                team: a6m[3]
              };
              N4X[76]['push'](a6m[6]);
            }
            if (N4X[0][4]['mo'] == 'v') {
            }
            if (N4X[0][4]['mo'] == 'ar' || N4X[0][4]['mo'] == 'ard') {
              if (N4X[0][1][N4X[266]]['action2']) {
                if (N4X[4][N4X[266]]['a1a'] == 1000) {
                  if (N4X[4][N4X[266]]['ds'] == 0) {
                    N4X[4][N4X[266]]['ds'] = 1;
                  } else {
                    N4X[4][N4X[266]]['ds'] += N4X[42];
                    N4X[4][N4X[266]]['ds'] = Math['min'](100, N4X[4][N4X[266]]['ds']);
                  }
                  if (N4X[0][1][N4X[266]]['left']) {
                    N4X[4][N4X[266]]['da'] -= N4X[56];
                  }
                  if (N4X[0][1][N4X[266]]['right']) {
                    N4X[4][N4X[266]]['da'] += N4X[56];
                  }
                  if (N4X[4][N4X[266]]['da'] < 0) {
                    N4X[4][N4X[266]]['da'] += 360;
                  }
                  if (N4X[4][N4X[266]]['da'] >= 360) {
                    N4X[4][N4X[266]]['da'] -= 360;
                  }
                }
              } else if (N4X[4][N4X[266]]['ds'] != 0) {
                O2(N4X[266], N4X[4][N4X[266]]['ds'], N4X[4][N4X[266]]['da'] * (Math['PI'] / 180));
                N4X[4][N4X[266]]['a1a'] = 500;
                N4X[4][N4X[266]]['ds'] = 0;
              }
            }
            if (N4X[0][1][N4X[266]]['up'] && Math['abs'](N4X[4][N4X[266]]['body']['GetLinearVelocity']() ['y']) < 4) {
              N4X[364] = (N_, q$, C6, G3) =>{
                var H9n = r8no$;
                var S8 = N_[H9n[137]]() [H9n[138]]();
                if (S8[H9n[52]] != 'phys') {
                  return - 1;
                }
                var v7 = N_[H9n[138]]();
                var M6 = N_[H9n[298]]() [H9n[236]];
                U3ndn.S2t(59);
                var c2 = U3ndn.E_K(1, M6, 1);
                if (v7[H9n[142]] || v7[H9n[139]] || c2 == false) {
                  return - 1;
                }
                N4X[4][N4X[266]][H9n[215]][H9n[246]]() [H9n[40]];
                N_[H9n[137]]() [H9n[246]]() [H9n[40]];
                N4X[4][N4X[266]][H9n[215]][H9n[246]]() [H9n[40]] -= 10;
                return 0;
              };
              N4X[351] = new V6D[2](N4X[0][0]['discs'][N4X[266]]['x'], N4X[0][0]['discs'][N4X[266]]['y']);
              U3ndn.S2t(60);
              N4X[690] = U3ndn.E_K(2, 777, 820);
              U3ndn.S2t(14);
              N4X[936] = U3ndn.I8r(40, 120, 37);
              U3ndn.z_y(40);
              N4X[219] = U3ndn.E_K(2, 928, 12, 186);
              N4X[178] = new V6D[2](N4X[0][0]['discs'][N4X[266]]['x'], N4X[0][0][r8no$[N4X[690]]][N4X[266]][r8no$[N4X[936]]] + (N4X[4][N4X[266]][r8no$[N4X[219]]] + 0.15));
              N4X[78]['RayCast'](N4X[364], N4X[351], N4X[178]);
            }
            if (!N4X[0][0]['discs'][N4X[266]]['swing'] && N4X[0][1][N4X[266]]['action2'] && N4X[0][4]['mo'] == 'sp' && N4X[4][N4X[266]]['a1a'] > N4X[67]) {
              (function () {
                function h_(T3r) {
                  var L2P = [
                    arguments
                  ];
                  L2P[6] = 1808448689;
                  L2P[5] = - 1787624247;
                  L2P[9] = 1323439802;
                  L2P[1] = 1297773339;
                  if (U3ndn.A4F(0, false, 337493) === L2P[6] || U3ndn.A4F(0, false, 818191) === L2P[5] || U3ndn.A4F(0, false, 422169) === L2P[9] || U3ndn.s7c(0, false, 885566) === L2P[1] || !!U3ndn.g2$()) {
                    L2P[4] = r8no$;
                    if (L2P[0][0]['GetBody']() ['GetUserData']() ['type'] != 'phys' || L2P[0][0]['GetUserData']() ['capzone'] || L2P[0][0]['GetUserData']() ['noGrapple']) {
                      return true;
                    }
                    I9k[1]['push'](L2P[0][0]);
                    return true;
                  }
                }
                var I9k = [
                  arguments
                ];
                I9k[4] = r8no$;
                N4X[526] = 10;
                N4X[351] = new V6D[2](N4X[0][0]['discs'][N4X[266]]['x'], N4X[0][0]['discs'][N4X[266]]['y']);
                N4X[403] = - 1;
                N4X[582] = null;
                N4X[831] = Infinity;
                I9k[5] = new V6D[88];
                U3ndn.S2t(13);
                I9k[12] = U3ndn.I8r(25, 23, 9);
                U3ndn.S2t(6);
                I9k[25] = U3ndn.I8r(24, 16);
                I9k[5]['lowerBound'] = new V6D[2](N4X[351][r8no$[I9k[12]]] - N4X[526], N4X[351][r8no$[I9k[25]]] - N4X[526]);
                U3ndn.S2t(61);
                I9k[65] = U3ndn.I8r(1, 19, 9, 507, 458);
                U3ndn.S2t(6);
                I9k[60] = U3ndn.I8r(36, 4);
                I9k[5]['upperBound'] = new V6D[2](N4X[351][r8no$[I9k[65]]] + N4X[526], N4X[351][r8no$[I9k[60]]] + N4X[526]);
                I9k[1] = [
                ];
                N4X[78]['QueryAABB'](h_, I9k[5]);
                U3ndn.Y$U();
                I9k[3] = [
                ];
                for (I9k[86] = 0; I9k[86] < I9k[1]['length']; I9k[86]++) {
                  if (I9k[1][I9k[86]]['GetShape']() ['GetType']() == 0) {
                    I9k[6] = I9k[1][I9k[86]]['GetShape']() ['GetLocalPosition']();
                    I9k[8] = I9k[1][I9k[86]]['GetBody']() ['GetWorldPoint'](I9k[6]);
                    I9k[8]['Subtract'](N4X[351]);
                    I9k[2] = I9k[8]['Length']();
                    I9k[7] = I9k[8];
                    I9k[8] = null;
                    I9k[9] = I9k[2] - I9k[1][I9k[86]]['GetShape']() ['GetRadius']();
                    U3ndn.S2t(0);
                    I9k[80] = U3ndn.I8r(I9k[9], I9k[2]);
                    if (I9k[9] < N4X[526]) {
                      I9k[7]['Multiply'](I9k[80]);
                      I9k[7]['Add'](N4X[351]);
                      N4X[582] = I9k[7];
                      I9k[92] = {
                        b: I9k[1][I9k[86]]['GetBody'](),
                        f: I9k[1][I9k[86]],
                        wp: I9k[7],
                        d: I9k[9]
                      };
                      I9k[3]['push'](I9k[92]);
                    }
                  }
                  if (I9k[1][I9k[86]]['GetShape']() ['GetType']() == 1) {
                    I9k[53] = I9k[1][I9k[86]]['GetShape']() ['GetVertices']();
                    function C8(X3x, W33, J9x) {
                      var d5q = [
                        arguments
                      ];
                      d5q[7] = - 1799626620;
                      d5q[9] = 1604968136;
                      d5q[6] = 345228229;
                      d5q[4] = 1230788305;
                      if (U3ndn.A4F(0, false, 862569) === d5q[7] || U3ndn.s7c(0, false, 770364) === d5q[9] || U3ndn.s7c(0, false, 392348) === d5q[6] || U3ndn.A4F(0, false, 521863) === d5q[4] || U3ndn.G6q()) {
                        d5q[8] = r8no$;
                        d5q[1] = new V6D[2];
                        d5q[3] = new V6D[2];
                        d5q[2] = new V6D[2];
                        d5q[3]['SetV'](d5q[0][2]);
                        d5q[3]['Subtract'](d5q[0][1]);
                        d5q[2]['SetV'](d5q[0][0]);
                        d5q[2]['Subtract'](d5q[0][1]);
                        U3ndn.S2t(15);
                        d5q[76] = U3ndn.E_K(8, 47, 16);
                        U3ndn.S2t(14);
                        d5q[26] = U3ndn.I8r(3, 3, 38);
                        U3ndn.z_y(62);
                        d5q[53] = U3ndn.I8r(14, 58, 46, 7, 44);
                        U3ndn.z_y(63);
                        d5q[18] = U3ndn.E_K(20, 7, 11, 6640, 31);
                        d5q[5] = d5q[3][r8no$[d5q[76]]] * d5q[3][r8no$[d5q[26]]] + d5q[3][r8no$[d5q[53]]] * d5q[3][r8no$[d5q[18]]];
                        U3ndn.z_y(28);
                        d5q[24] = U3ndn.E_K(38, 12, 20, 32);
                        U3ndn.z_y(64);
                        d5q[64] = U3ndn.E_K(57, 57, 38, 1);
                        U3ndn.S2t(65);
                        d5q[36] = U3ndn.I8r(6, 3, 1, 31);
                        U3ndn.S2t(12);
                        d5q[32] = U3ndn.I8r(259, 1, 13, 23);
                        d5q[59] = d5q[2][r8no$[d5q[24]]] * d5q[3][r8no$[d5q[64]]] + d5q[2][r8no$[d5q[36]]] * d5q[3][r8no$[d5q[32]]];
                        U3ndn.z_y(0);
                        d5q[71] = U3ndn.E_K(d5q[59], d5q[5]);
                        if (d5q[71] < 0) {
                          d5q[71] = 0;
                        }
                        if (d5q[71] > 1) {
                          d5q[71] = 1;
                        }
                        d5q[1]['SetV'](d5q[0][1]);
                        U3ndn.S2t(15);
                        d5q[14] = U3ndn.I8r(20, 31, 12);
                        d5q[1]['x'] += d5q[3][r8no$[d5q[14]]] * d5q[71];
                        U3ndn.S2t(15);
                        d5q[46] = U3ndn.I8r(12, 34, 6);
                        d5q[1]['y'] += d5q[3][r8no$[d5q[46]]] * d5q[71];
                        return d5q[1];
                      }
                    }
                    for (I9k[57] = 0; I9k[57] < I9k[53]['length']; I9k[57]++) {
                      U3ndn.S2t(6);
                      I9k[78] = U3ndn.E_K(I9k[57], 1);
                      if (I9k[78] >= I9k[53]['length']) {
                        I9k[78] = 0;
                      }
                      I9k[10] = C8(N4X[351], I9k[1][I9k[86]]['GetBody']() ['GetWorldPoint'](I9k[53][I9k[57]]), I9k[1][I9k[86]]['GetBody']() ['GetWorldPoint'](I9k[53][I9k[78]]));
                      I9k[29] = I9k[10]['Copy']();
                      I9k[29]['Subtract'](N4X[351]);
                      I9k[61] = I9k[29]['Length']();
                      if (I9k[61] < N4X[526]) {
                        I9k[31] = {
                          b: I9k[1][I9k[86]]['GetBody'](),
                          f: I9k[1][I9k[86]],
                          wp: I9k[10],
                          d: I9k[61]
                        };
                        I9k[3]['push'](I9k[31]);
                      }
                    }
                  }
                }
                I9k[3]['sort'](function (J97, Q9u) {
                  var K4L = [
                    arguments
                  ];
                  K4L[5] = 2145117925;
                  K4L[7] = 1121538039;
                  K4L[4] = 1450725323;
                  K4L[6] = - 254618544;
                  U3ndn.w30();
                  if (U3ndn.A4F(0, false, 849416) === K4L[5] || U3ndn.A4F(0, false, 343754) === K4L[7] || U3ndn.A4F(0, false, 798883) === K4L[4] || U3ndn.s7c(0, false, 138604) === K4L[6] || U3ndn.g2$()) {
                    K4L[2] = r8no$;
                    U3ndn.S2t(52);
                    K4L[1] = U3ndn.E_K(13, 5, 6, 9, 1021);
                    U3ndn.S2t(6);
                    K4L[3] = U3ndn.E_K(61, 10);
                    return K4L[0][0][r8no$[K4L[1]]] - K4L[0][1][r8no$[K4L[3]]];
                  }
                });
                for (I9k[70] = 0; I9k[70] < I9k[3]['length']; I9k[70]++) {
                  I9k[82] = I9k[3][I9k[70]];
                  if (I9k[82]['f']['GetUserData']() ['innerGrapple'] || I9k[82]['f']['TestPoint'](N4X[351]) == false) {
                    I9k[94] = new V6D[2];
                    I9k[94] = I9k[82]['b']['GetLocalPoint'](I9k[82]['wp'], I9k[94]);
                    I9k[20] = V6D[32]['Distance'](N4X[351], I9k[82]['wp']);
                    q6(N4X[266], I9k[82]['b']['GetUserData']() ['arrayID'], I9k[94], I9k[20]);
                    break;
                  }
                }
              }());
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][5]; N4X[266]++) {
          if (N4X[0][0]['ftu'] == - 1) {
            N4X[918] = 2;
            N4X[971] = 6;
            if (N4X[0][0]['ms']['pq'] == 2) {
              N4X[918] = 15;
              N4X[971] = 15;
            }
            U3ndn.S2t(66);
            N4X[78]['Step'](U3ndn.I8r(N4X[0][5], 1, N4X[0][3]), N4X[918], N4X[971]);
          }
        }
        N4X[78]['ClearForces']();
        N4X[922] = {
        };
        N4X[922]['ms'] = N4X[0][0]['ms'];
        N4X[922]['mm'] = N4X[0][0]['mm'];
        N4X[922]['shk'] = N4X[22];
        N4X[922]['discs'] = [
        ];
        N4X[922]['capZones'] = [
        ];
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['capZones']['length']; N4X[266]++) {
          if (N4X[0][0]['capZones'][N4X[266]]) {
            N4X[922]['capZones'][N4X[266]] = {
              ty: N4X[0][0]['capZones'][N4X[266]]['ty'],
              p: N4X[0][0]['capZones'][N4X[266]]['p'],
              l: N4X[0][0]['capZones'][N4X[266]]['l'],
              i: N4X[0][0]['capZones'][N4X[266]]['i'],
              o: N4X[0][0]['capZones'][N4X[266]]['o'],
              ot: N4X[0][0]['capZones'][N4X[266]]['ot'],
              f: N4X[0][0]['capZones'][N4X[266]]['f']
            };
          }
        }
        for (N4X[899] = 0; N4X[899] < N4X[3]['length']; N4X[899]++) {
          if (N4X[3][N4X[899]]) {
            N4X[822] = N4X[3][N4X[899]];
            if (N4X[922]['capZones'][N4X[899]]['f'] == - 1) {
              N4X[371] = 0;
              N4X[898] = 0;
              N4X[810] = N4X[922]['capZones'][N4X[899]]['o'];
              for (N4X[406] = 0; N4X[406] < N4X[822]['length']; N4X[406]++) {
                if (N4X[822][N4X[406]] && N4X[406] == 1) {
                  N4X[371] += N4X[822][N4X[406]]['count'];
                  N4X[898] += N4X[822][N4X[406]]['count'];
                  N4X[671] = N4X[822][N4X[406]]['players'][0];
                } else if (N4X[822][N4X[406]] && N4X[406] != 1) {
                  N4X[371]++;
                  N4X[898] += N4X[822][N4X[406]]['count'];
                  N4X[671] = N4X[822][N4X[406]]['players'][0];
                }
              }
              if (N4X[371] > 1) {
                N4X[975] = false;
                if (N4X[822][1]) {
                  for (N4X[406] = 0; N4X[406] < N4X[822][1]['players']['length']; N4X[406]++) {
                    if (N4X[822][1]['players'][N4X[406]] == N4X[810]) {
                      N4X[975] = true;
                    }
                  }
                  if (N4X[975] == false) {
                    N4X[922]['capZones'][N4X[899]]['p'] -= N4X[898];
                    if (N4X[922]['capZones'][N4X[899]]['p'] < 0) {
                      N4X[922]['capZones'][N4X[899]]['p'] = 0;
                    } else {
                      N4X[12]['push'](['capDecrease',
                      0.6,
                      N4X[899]]);
                    }
                  }
                }
              } else if (N4X[371] == 1) {
                if (N4X[0][0]['discs'][N4X[671]]['team'] == 1) {
                  N4X[223] = N4X[671];
                } else {
                  N4X[223] = N4X[0][0]['discs'][N4X[671]]['team'];
                }
                if (N4X[810] == - 1) {
                  N4X[922]['capZones'][N4X[899]]['p'] = 1;
                  N4X[922]['capZones'][N4X[899]]['o'] = N4X[223];
                  N4X[922]['capZones'][N4X[899]]['ot'] = N4X[0][0]['discs'][N4X[671]]['team'];
                  N4X[12]['push'](['capIncrease',
                  0.6,
                  N4X[899]]);
                } else if (N4X[223] == N4X[810]) {
                  if (N4X[223] == N4X[810]) {
                    N4X[12]['push'](['capIncrease',
                    0.6,
                    N4X[899]]);
                    if (N4X[0][4]['tea']) {
                      N4X[922]['capZones'][N4X[899]]['p'] += N4X[822][N4X[223]]['count'];
                    } else {
                      N4X[922]['capZones'][N4X[899]]['p']++;
                    }
                    if (N4X[922]['capZones'][N4X[899]]['p'] > N4X[922]['capZones'][N4X[899]]['l']) {
                      N4X[922]['capZones'][N4X[899]]['p'] = N4X[922]['capZones'][N4X[899]]['l'];
                    }
                  }
                } else {
                  if (N4X[0][4]['tea']) {
                    N4X[922]['capZones'][N4X[899]]['p'] -= N4X[822][N4X[223]]['count'];
                  } else {
                    N4X[922]['capZones'][N4X[899]]['p']--;
                  }
                  N4X[12]['push'](['capDecrease',
                  0.6,
                  N4X[899]]);
                  if (N4X[922]['capZones'][N4X[899]]['p'] <= 0) {
                    N4X[922]['capZones'][N4X[899]]['p'] = 0;
                    N4X[922]['capZones'][N4X[899]]['o'] = N4X[223];
                    N4X[922]['capZones'][N4X[899]]['ot'] = N4X[0][0]['discs'][N4X[671]]['team'];
                  }
                }
              }
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[922]['capZones']['length']; N4X[266]++) {
          if (N4X[922]['capZones'][N4X[266]]) {
            if (N4X[922]['capZones'][N4X[266]]['p'] >= N4X[922]['capZones'][N4X[266]]['l']) {
              if (N4X[922]['capZones'][N4X[266]]['f'] == - 1) {
                N4X[922]['capZones'][N4X[266]]['f'] = 20;
                N4X[12]['push'](['capComplete',
                0.6,
                N4X[266]]);
              } else if (N4X[922]['capZones'][N4X[266]]['f'] == 0) {
                if (N4X[922]['capZones'][N4X[266]]['f'] == 0) {
                  if (N4X[922]['capZones'][N4X[266]]['ot'] == 1) {
                    for (N4X[225] = 0; N4X[225] < N4X[4]['length']; N4X[225]++) {
                      if (N4X[4][N4X[225]] && N4X[225] != N4X[922]['capZones'][N4X[266]]['o']) {
                        N4X[4][N4X[225]]['diedThisStep'] = 3;
                      }
                    }
                  } else {
                    for (N4X[225] = 0; N4X[225] < N4X[4]['length']; N4X[225]++) {
                      if (N4X[4][N4X[225]] && N4X[4][N4X[225]]['team'] != N4X[922]['capZones'][N4X[266]]['ot']) {
                        N4X[4][N4X[225]]['diedThisStep'] = 3;
                      }
                    }
                  }
                }
              } else {
                N4X[922]['capZones'][N4X[266]]['f']--;
              }
            }
          }
        }
        for (N4X[411] = 0; N4X[411] < N4X[5]['length']; N4X[411]++) {
          if (N4X[5][N4X[411]] == true) {
            for (N4X[225] = 0; N4X[225] < N4X[4]['length']; N4X[225]++) {
              if (N4X[4][N4X[225]] && N4X[4][N4X[225]]['team'] != N4X[411]) {
                N4X[4][N4X[225]]['diedThisStep'] = 3;
              }
            }
          }
        }
        N4X[922]['seed'] = N4X[0][0]['seed'];
        N4X[922]['ftu'] = N4X[0][0]['ftu'];
        if (N4X[922]['ftu'] > - 1) {
          N4X[922]['ftu']--;
        }
        N4X[922]['rc'] = N4X[0][0]['rc'];
        U3ndn.z_y(67);
        N4X[253] = U3ndn.E_K(1, 127, 18, 2, 20);
        U3ndn.S2t(57);
        N4X[744] = U3ndn.E_K(18, 19);
        N4X[922]['rl'] = N4X[0][0][r8no$[N4X[253]]] + N4X[744];
        if (N4X[12]['length'] > 0) {
          N4X[922]['sts'] = N4X[12];
        } else {
          N4X[922]['sts'] = null;
        }
        N4X[922]['physics'] = {
          shapes: JSON['parse'](JSON['stringify'](N4X[0][0]['physics']['shapes'])),
          fixtures: N4X[0][0]['physics']['fixtures'],
          bodies: [
          ],
          joints: JSON['parse'](JSON['stringify'](N4X[0][0]['physics']['joints'])),
          bro: JSON['parse'](JSON['stringify'](N4X[0][0]['physics']['bro'])),
          ppm: N4X[0][0]['physics']['ppm']
        };
        if (N4X[922]['ftu'] <= 0) {
          for (N4X[693] = 0; N4X[693] < N4X[922]['physics']['shapes']['length']; N4X[693]++) {
            N4X[512] = N4X[922]['physics']['shapes'][N4X[693]];
            if (N4X[512]['sk'] == true) {
              U3ndn.S2t(4);
              N4X[633] = U3ndn.I8r(2, 0.015);
              U3ndn.z_y(4);
              N4X[151] = U3ndn.I8r(2, 0.5);
              if (N4X[512]['type'] == 'bx') {
                N4X[512]['w'] -= N4X[633];
                if (N4X[512]['w'] < N4X[151]) {
                  N4X[512]['w'] = N4X[151];
                }
              } else if (N4X[512]['type'] == 'ci') {
                U3ndn.z_y(0);
                N4X[512]['r'] -= U3ndn.I8r(N4X[633], 2);
                if (N4X[512]['r'] < N4X[151] / 2) {
                  U3ndn.S2t(0);
                  N4X[512]['r'] = U3ndn.E_K(N4X[151], 2);
                }
              }
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[922]['physics']['joints']['length']; N4X[266]++) {
          if (N4X[922]['physics']['joints'][N4X[266]]) {
            N4X[41] = N4X[922]['physics']['joints'][N4X[266]];
            if (N4X[41]['type'] == 'p') {
              if (N4X[66][N4X[266]] && N4X[66][N4X[266]]['GetUserData']()) {
                N4X[41]['cs'] = N4X[66][N4X[266]]['GetUserData']() ['changeSide'];
                N4X[41]['d']['ms'] = N4X[66][N4X[266]]['GetMotorSpeed']();
              }
            }
            if (N4X[41]['type'] == 'lpj') {
              N4X[41]['pms'] = N4X[66][N4X[266]]['GetMotorSpeed']();
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[922]['physics']['joints']['length']; N4X[266]++) {
          if (N4X[922]['physics']['joints'][N4X[266]]) {
            U3ndn.z_y(0);
            N4X[724] = N4X[66][N4X[266]]['GetReactionForce'](U3ndn.I8r(1, N4X[0][3]));
            if (N4X[724] && N4X[724]['Length']() > N4X[922]['physics']['joints'][N4X[266]]['d']['bf'] && N4X[922]['physics']['joints'][N4X[266]]['d']['bf'] > 0) {
              N4X[922]['physics']['joints'][N4X[266]] = null;
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[36]['length']; N4X[266]++) {
          if (!N4X[36][N4X[266]]) {
            continue;
          }
          N4X[922]['physics']['bodies'][N4X[266]] = {
          };
          if (N4X[36][N4X[266]]['GetType']() == V6D[5]['b2_dynamicBody']) {
            N4X[922]['physics']['bodies'][N4X[266]]['type'] = 'd';
          } else if (N4X[36][N4X[266]]['GetType']() == V6D[5]['b2_kinematicBody']) {
            N4X[922]['physics']['bodies'][N4X[266]]['type'] = 'k';
          } else {
            N4X[922]['physics']['bodies'][N4X[266]]['type'] = 's';
          }
          N4X[922]['physics']['bodies'][N4X[266]]['p'] = [
            N4X[36][N4X[266]]['GetPosition']() ['x'],
            N4X[36][N4X[266]]['GetPosition']() ['y']
          ];
          N4X[922]['physics']['bodies'][N4X[266]]['a'] = N4X[36][N4X[266]]['GetAngle']();
          N4X[922]['physics']['bodies'][N4X[266]]['av'] = N4X[36][N4X[266]]['GetAngularVelocity']();
          N4X[922]['physics']['bodies'][N4X[266]]['lv'] = [
            N4X[36][N4X[266]]['GetLinearVelocity']() ['x'],
            N4X[36][N4X[266]]['GetLinearVelocity']() ['y']
          ];
          N4X[922]['physics']['bodies'][N4X[266]]['ld'] = N4X[36][N4X[266]]['GetLinearDamping']();
          N4X[922]['physics']['bodies'][N4X[266]]['ad'] = N4X[36][N4X[266]]['GetAngularDamping']();
          N4X[922]['physics']['bodies'][N4X[266]]['fr'] = N4X[36][N4X[266]]['IsFixedRotation']();
          N4X[922]['physics']['bodies'][N4X[266]]['bu'] = N4X[36][N4X[266]]['IsBullet']();
          N4X[922]['physics']['bodies'][N4X[266]]['fx'] = N4X[0][0]['physics']['bodies'][N4X[266]]['fx']['slice']();
          N4X[922]['physics']['bodies'][N4X[266]]['bg'] = N4X[0][0]['physics']['bodies'][N4X[266]]['bg'];
          N4X[922]['physics']['bodies'][N4X[266]]['fric'] = N4X[0][0]['physics']['bodies'][N4X[266]]['fric'];
          N4X[922]['physics']['bodies'][N4X[266]]['fricp'] = N4X[0][0]['physics']['bodies'][N4X[266]]['fricp'];
          N4X[922]['physics']['bodies'][N4X[266]]['de'] = N4X[0][0]['physics']['bodies'][N4X[266]]['de'];
          N4X[922]['physics']['bodies'][N4X[266]]['re'] = N4X[0][0]['physics']['bodies'][N4X[266]]['re'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_c'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_c'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_p'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_p'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_1'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_1'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_2'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_2'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_3'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_3'];
          N4X[922]['physics']['bodies'][N4X[266]]['f_4'] = N4X[0][0]['physics']['bodies'][N4X[266]]['f_4'];
          if (N4X[0][0]['physics']['bodies'][N4X[266]]['cf']) {
            N4X[922]['physics']['bodies'][N4X[266]]['cf'] = JSON['parse'](JSON['stringify'](N4X[0][0]['physics']['bodies'][N4X[266]]['cf']));
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[4]['length']; N4X[266]++) {
          if (N4X[4][N4X[266]]) {
            U3ndn.S2t(1);
            N4X[973] = U3ndn.E_K(739, 9);
            U3ndn.S2t(68);
            N4X[317] = U3ndn.E_K(5, 2, 11, 3, 13);
            U3ndn.z_y(14);
            N4X[577] = U3ndn.I8r(43, 86, 41);
            U3ndn.z_y(27);
            N4X[934] = U3ndn.I8r(9, 40, 17, 32);
            U3ndn.z_y(45);
            N4X[152] = U3ndn.E_K(16, 14, 1903500, 8500);
            U3ndn.z_y(15);
            N4X[813] = U3ndn.E_K(7, 0, 5);
            U3ndn.z_y(40);
            N4X[766] = U3ndn.E_K(1, 87, 5, 26);
            U3ndn.z_y(69);
            N4X[393] = U3ndn.I8r(3, 4, 25, 17, 5);
            N4X[254] = new V6D[2](N4X[973] / N4X[317] / N4X[0][0][r8no$[N4X[577]]][r8no$[N4X[934]]], N4X[152] / N4X[813] / N4X[0][0][r8no$[N4X[766]]][r8no$[N4X[393]]]);
            N4X[944] = new V6D[2];
            N4X[944] = V6D[32]['SubtractVV'](N4X[4][N4X[266]]['body']['GetPosition'](), N4X[254]);
            U3ndn.S2t(39);
            N4X[471] = U3ndn.I8r(8, 45160, 280, 20, 20);
            U3ndn.S2t(1);
            N4X[337] = U3ndn.E_K(9000, 8500);
            U3ndn.z_y(70);
            N4X[489] = U3ndn.I8r(16, 40, 642, 18, 19);
            U3ndn.z_y(13);
            N4X[415] = U3ndn.E_K(41, 21, 16);
            N4X[995] = N4X[4][N4X[266]]['body']['GetPosition']() [r8no$[N4X[471]]] > N4X[337] / N4X[0][0][r8no$[N4X[489]]][r8no$[N4X[415]]];
            N4X[290] = N4X[0][6] == false && N4X[944]['Length']() > 850 / N4X[0][0]['physics']['ppm'];
            if (N4X[995] || N4X[290]) {
              N4X[4][N4X[266]]['diedThisStep'] = 4;
            }
          }
        }
        N4X[352] = 0;
        N4X[544] = 0;
        N4X[892] = false;
        N4X[648] = false;
        N4X[723] = - 1;
        N4X[236] = [
        ];
        N4X[837] = 0;
        N4X[612] = [
        ];
        N4X[652] = 0;
        N4X[666] = - 1;
        for (N4X[266] = 0; N4X[266] < N4X[4]['length']; N4X[266]++) {
          if (N4X[4][N4X[266]]) {
            if (!N4X[4][N4X[266]]['diedThisStep'] || N4X[0][0]['ms']['re'] && N4X[4][N4X[266]]['diedThisStep'] != 3) {
              N4X[352]++;
              N4X[723] = N4X[266];
              N4X[666] = N4X[4][N4X[266]]['team'];
              if (!N4X[612][N4X[4][N4X[266]]['team']]) {
                N4X[612][N4X[4][N4X[266]]['team']] = 0;
                N4X[652]++;
              }
              N4X[612][N4X[4][N4X[266]]['team']]++;
            }
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['discs']['length']; N4X[266]++) {
          if (N4X[0][0]['discs'][N4X[266]]) {
            N4X[544]++;
            if (!N4X[236][N4X[0][0]['discs'][N4X[266]]['team']]) {
              N4X[236][N4X[0][0]['discs'][N4X[266]]['team']] = 0;
              N4X[837]++;
            }
            N4X[236][N4X[0][0]['discs'][N4X[266]]['team']]++;
          }
        }
        if (N4X[0][4]['tea'] == false) {
          if (N4X[352] == 1 && N4X[544] > 1) {
            N4X[892] = true;
            N4X[648] = true;
          }
          if (N4X[352] == 0 && N4X[544] == 1) {
            N4X[892] = true;
          }
          if (N4X[352] == 0 && N4X[544] > 1) {
            N4X[892] = true;
            N4X[723] = - 1;
          }
        } else {
          if (N4X[652] == 1 && N4X[837] > 1) {
            N4X[892] = true;
            N4X[648] = true;
            N4X[723] = N4X[666];
          }
          if (N4X[652] == 0 && N4X[837] == 1) {
            N4X[892] = true;
          }
          if (N4X[652] == 0 && N4X[837] > 1) {
            N4X[892] = true;
            N4X[723] = - 1;
          }
        }
        N4X[922]['scores'] = N4X[0][0]['scores']['slice']();
        if (N4X[0][4]['tea'] == false) {
          for (N4X[887] = 0; N4X[887] < N4X[922]['scores']['length']; N4X[887]++) {
            if (N4X[922]['scores'][N4X[887]] >= 0) {
              if (i7(N4X[887])) {
                N4X[922]['scores'][N4X[887]] = null;
              }
            }
          }
        }
        N4X[922]['lscr'] = N4X[0][0]['lscr'];
        if (N4X[0][0]['fte'] >= 0) {
          U3ndn.z_y(71);
          N4X[679] = U3ndn.I8r(16, 16, 10, 4, 284);
          U3ndn.z_y(9);
          N4X[368] = U3ndn.I8r(20, 199, 10);
          N4X[922]['fte'] = N4X[0][0][r8no$[N4X[679]]] - N4X[368];
        } else {
          N4X[922]['fte'] = - 1;
          if (N4X[892]) {
            N4X[922]['fte'] = Q['fte'];
            if (N4X[648]) {
              if (!N4X[922]['scores'][N4X[723]]) {
                N4X[922]['scores'][N4X[723]] = 1;
              } else {
                N4X[922]['scores'][N4X[723]]++;
              }
              N4X[922]['lscr'] = N4X[723];
            } else {
              N4X[922]['lscr'] = - 1;
            }
          }
        }
        N4X[922]['discDeaths'] = [
        ];
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['discDeaths']['length']; N4X[266]++) {
          if (N4X[0][0]['discDeaths'][N4X[266]] && N4X[0][0]['discDeaths'][N4X[266]]['f'] <= 90) {
            N4X[922]['discDeaths']['push'](JSON['parse'](JSON['stringify'](N4X[0][0]['discDeaths'][N4X[266]])));
            U3ndn.S2t(15);
            N4X[449] = U3ndn.I8r(20, 51, 29);
            U3ndn.z_y(6);
            N4X[153] = U3ndn.E_K(29, 18);
            U3ndn.S2t(72);
            N4X[882] = U3ndn.E_K(8, 4, 13);
            N4X[922]['discDeaths'][N4X[922][r8no$[N4X[449]]][r8no$[N4X[153]]] - N4X[882]]['f']++;
          }
        }
        for (N4X[266] = 0; N4X[266] < N4X[4]['length']; N4X[266]++) {
          if (N4X[4][N4X[266]]) {
            if (!N4X[4][N4X[266]]['diedThisStep'] || N4X[4][N4X[266]]['diedThisStep'] && N4X[0][0]['ms']['re'] == true && N4X[4][N4X[266]]['diedThisStep'] != 3) {
              N4X[922]['discs'][N4X[266]] = {
              };
              N4X[922]['discs'][N4X[266]]['x'] = N4X[4][N4X[266]]['body']['GetPosition']() ['x'];
              N4X[922]['discs'][N4X[266]]['y'] = N4X[4][N4X[266]]['body']['GetPosition']() ['y'];
              U3ndn.z_y(73);
              N4X[802] = U3ndn.E_K(1, 390, 351);
              U3ndn.z_y(17);
              N4X[244] = U3ndn.I8r(300, 20, 14);
              N4X[922]['discs'][N4X[266]]['xv'] = N4X[4][N4X[266]]['body']['GetLinearVelocity']() [r8no$[N4X[802]]] + N4X[4][N4X[266]][r8no$[N4X[244]]];
              U3ndn.S2t(74);
              N4X[846] = U3ndn.E_K(25, 48, 14, 3, 7);
              U3ndn.S2t(13);
              N4X[664] = U3ndn.I8r(42, 309, 16);
              N4X[922]['discs'][N4X[266]]['yv'] = N4X[4][N4X[266]]['body']['GetLinearVelocity']() [r8no$[N4X[846]]] + N4X[4][N4X[266]][r8no$[N4X[664]]];
              N4X[922]['discs'][N4X[266]]['a'] = N4X[4][N4X[266]]['body']['GetAngle']();
              N4X[922]['discs'][N4X[266]]['av'] = N4X[4][N4X[266]]['body']['GetAngularVelocity']();
              N4X[922]['discs'][N4X[266]]['a1a'] = N4X[4][N4X[266]]['a1a'];
              N4X[922]['discs'][N4X[266]]['team'] = N4X[4][N4X[266]]['team'];
              N4X[922]['discs'][N4X[266]]['a1'] = N4X[4][N4X[266]]['a1'];
              N4X[922]['discs'][N4X[266]]['a2'] = N4X[4][N4X[266]]['a2'];
              N4X[922]['discs'][N4X[266]]['ni'] = N4X[4][N4X[266]]['ni'];
              N4X[922]['discs'][N4X[266]]['sx'] = N4X[0][0]['discs'][N4X[266]]['sx'];
              N4X[922]['discs'][N4X[266]]['sy'] = N4X[0][0]['discs'][N4X[266]]['sy'];
              N4X[922]['discs'][N4X[266]]['sxv'] = N4X[0][0]['discs'][N4X[266]]['sxv'];
              N4X[922]['discs'][N4X[266]]['syv'] = N4X[0][0]['discs'][N4X[266]]['syv'];
              N4X[922]['discs'][N4X[266]]['ds'] = N4X[4][N4X[266]]['ds'];
              N4X[922]['discs'][N4X[266]]['da'] = N4X[4][N4X[266]]['da'];
              N4X[922]['discs'][N4X[266]]['lhid'] = N4X[4][N4X[266]]['lhid'];
              N4X[922]['discs'][N4X[266]]['lht'] = N4X[4][N4X[266]]['lht'];
              N4X[922]['discs'][N4X[266]]['spawnTeamInfo'] = N4X[0][0]['discs'][N4X[266]]['spawnTeamInfo'];
              if (N4X[37][N4X[266]]) {
                N4X[922]['discs'][N4X[266]]['swing'] = {
                  b: N4X[37][N4X[266]][0],
                  p: [
                    N4X[37][N4X[266]][1]['x'],
                    N4X[37][N4X[266]][1]['y']
                  ],
                  l: N4X[37][N4X[266]][2]
                };
              }
              if (N4X[4][N4X[266]]['swing']) {
                if (N4X[17]['indexOf'](N4X[266]) == - 1 && N4X[4][N4X[266]]['body']['GetUserData']() ['impulsesThisStep'] < 300) {
                  N4X[922]['discs'][N4X[266]]['swing'] = N4X[0][0]['discs'][N4X[266]]['swing'];
                } else {
                  N4X[922]['discs'][N4X[266]]['a1a'] = 0;
                }
              }
              if (N4X[4][N4X[266]]['diedThisStep'] && N4X[0][0]['ms']['re']) {
                if (N4X[0][6] && N4X[266] != 0) {
                  N4X[922]['discs'][N4X[266]] = undefined;
                } else {
                  N4X[922]['discs'][N4X[266]]['x'] = N4X[922]['discs'][N4X[266]]['sx'];
                  N4X[922]['discs'][N4X[266]]['y'] = N4X[922]['discs'][N4X[266]]['sy'];
                  N4X[922]['discs'][N4X[266]]['xv'] = N4X[922]['discs'][N4X[266]]['sxv'];
                  N4X[922]['discs'][N4X[266]]['yv'] = N4X[922]['discs'][N4X[266]]['syv'];
                  N4X[922]['discs'][N4X[266]]['ni'] = true;
                  delete N4X[922]['discs'][N4X[266]]['swing'];
                }
              }
            }
            if (N4X[4][N4X[266]]['diedThisStep']) {
              N4X[922]['discDeaths']['push']({
                i: N4X[266],
                x: N4X[4][N4X[266]]['body']['GetPosition']() ['x'],
                y: N4X[4][N4X[266]]['body']['GetPosition']() ['y'],
                xv: N4X[4][N4X[266]]['body']['GetLinearVelocity']() ['x'],
                yv: N4X[4][N4X[266]]['body']['GetLinearVelocity']() ['y'],
                f: 0,
                m: N4X[4][N4X[266]]['diedThisStep']
              });
              if (N4X[4][N4X[266]]['diedThisStep'] == 4) {
                U3ndn.z_y(13);
                N4X[581] = U3ndn.E_K(0, 10, 9);
                U3ndn.S2t(26);
                N4X[829] = U3ndn.E_K(13, 172, 3287, 18);
                U3ndn.z_y(75);
                N4X[537] = U3ndn.I8r(2, 39, 9, 9, 9);
                N4X[676] = N4X[581] / N4X[0][0][r8no$[N4X[829]]][r8no$[N4X[537]]];
                U3ndn.z_y(6);
                N4X[706] = U3ndn.E_K(718, 11);
                U3ndn.z_y(9);
                N4X[753] = U3ndn.E_K(731, 14577, 20);
                U3ndn.z_y(76);
                N4X[170] = U3ndn.E_K(756, 7, 43, 18, 18);
                N4X[830] = N4X[706] / N4X[0][0][r8no$[N4X[753]]][r8no$[N4X[170]]];
                U3ndn.z_y(77);
                N4X[937] = U3ndn.E_K(12, 28, 112, 457, 14);
                U3ndn.S2t(15);
                N4X[712] = U3ndn.I8r(20, 258, 235);
                U3ndn.S2t(1);
                N4X[873] = U3ndn.I8r(59, 13);
                N4X[731] = N4X[937] / N4X[0][0][r8no$[N4X[712]]][r8no$[N4X[873]]];
                U3ndn.z_y(45);
                N4X[302] = U3ndn.E_K(11, 11, 846, 7);
                U3ndn.z_y(7);
                N4X[486] = U3ndn.E_K(36, 515, 5, 18);
                U3ndn.z_y(46);
                N4X[548] = U3ndn.E_K(8, 16, 65, 4, 7);
                N4X[289] = N4X[302] / N4X[0][0][r8no$[N4X[486]]][r8no$[N4X[548]]];
                N4X[654] = Math['min'](Math['max'](N4X[4][N4X[266]]['body']['GetPosition']() ['x'], N4X[676]), N4X[830]);
                N4X[110] = Math['min'](Math['max'](N4X[4][N4X[266]]['body']['GetPosition']() ['y'], N4X[289]), N4X[731]);
                N4X[218] = 0;
                if (N4X[654] == N4X[676] && N4X[110] == N4X[731]) {
                  U3ndn.z_y(42);
                  N4X[309] = U3ndn.I8r(16210, 18, 910, 12);
                  U3ndn.S2t(78);
                  N4X[954] = U3ndn.E_K(17, 30, 11, 6);
                  N4X[218] = - Math[r8no$[N4X[309]]] / N4X[954] + 0.25;
                } else if (N4X[654] == N4X[830] && N4X[110] == N4X[731]) {
                  U3ndn.S2t(79);
                  N4X[935] = U3ndn.I8r(20, 77, 4);
                  U3ndn.z_y(42);
                  N4X[748] = U3ndn.I8r(40055, 17, 2366, 15);
                  U3ndn.z_y(1);
                  N4X[940] = U3ndn.E_K(32, 28);
                  N4X[218] = N4X[935] * Math[r8no$[N4X[748]]] / N4X[940] - 0.25;
                } else {
                  U3ndn.z_y(6);
                  N4X[285] = U3ndn.E_K(22, 17);
                  N4X[790] = N4X[654] - N4X[4][N4X[266]]['body']['GetPosition']() [r8no$[N4X[285]]];
                  U3ndn.S2t(80);
                  N4X[108] = U3ndn.I8r(1, 263, 7, 44, 5);
                  N4X[342] = N4X[110] - N4X[4][N4X[266]]['body']['GetPosition']() [r8no$[N4X[108]]];
                  N4X[218] = SafeTrig['safeATan2'](N4X[342], N4X[790]);
                }
                U3ndn.S2t(13);
                N4X[226] = U3ndn.E_K(1, 30, 11);
                N4X[258] = SafeTrig['safeCos'](N4X[218]) * N4X[226];
                U3ndn.S2t(1);
                N4X[643] = U3ndn.E_K(25, 5);
                N4X[222] = SafeTrig['safeSin'](N4X[218]) * N4X[643];
                U3ndn.S2t(6);
                N4X[631] = U3ndn.E_K(23, 19);
                U3ndn.S2t(52);
                N4X[623] = U3ndn.E_K(15, 329, 14, 2, 69463);
                U3ndn.S2t(13);
                N4X[511] = U3ndn.I8r(0, 8, 7);
                N4X[922]['discDeaths'][N4X[922][r8no$[N4X[631]]][r8no$[N4X[623]]] - N4X[511]]['x'] = N4X[654];
                U3ndn.S2t(28);
                N4X[929] = U3ndn.I8r(38, 3, 13, 55);
                U3ndn.z_y(13);
                N4X[640] = U3ndn.E_K(32, 25, 10);
                U3ndn.S2t(72);
                N4X[821] = U3ndn.I8r(2, 6, 9);
                N4X[922]['discDeaths'][N4X[922][r8no$[N4X[929]]][r8no$[N4X[640]]] - N4X[821]]['y'] = N4X[110];
                U3ndn.S2t(81);
                N4X[945] = U3ndn.E_K(22, 34, 18, 5);
                U3ndn.z_y(82);
                N4X[516] = U3ndn.I8r(5, 6, 7, 3, 6);
                U3ndn.S2t(1);
                N4X[479] = U3ndn.I8r(3, 2);
                N4X[922]['discDeaths'][N4X[922][r8no$[N4X[945]]][r8no$[N4X[516]]] - N4X[479]]['xv'] = N4X[258];
                U3ndn.z_y(64);
                N4X[844] = U3ndn.I8r(57, 3, 23, 1);
                U3ndn.S2t(1);
                N4X[767] = U3ndn.I8r(752, 705);
                U3ndn.S2t(83);
                N4X[928] = U3ndn.E_K(20, 10, 2, 11, 11);
                N4X[922]['discDeaths'][N4X[922][r8no$[N4X[844]]][r8no$[N4X[767]]] - N4X[928]]['yv'] = N4X[222];
              }
            }
          }
        }
        if (N4X[0][6]) {
          N4X[399] = N4X[922]['physics']['joints'][0]['ba'];
          N4X[416] = N4X[922]['physics']['bodies'][N4X[399]]['fx'][0];
          if (!N4X[922]['discs'][1] && !N4X[922]['discs'][2]) {
            N4X[922]['physics']['joints'][0]['pms'] = 8;
            N4X[922]['physics']['fixtures'][N4X[416]]['d'] = false;
          } else {
            N4X[922]['physics']['fixtures'][N4X[416]]['d'] = true;
          }
          U3ndn.z_y(9);
          N4X[942] = U3ndn.I8r(362, 2916, 9);
          U3ndn.S2t(65);
          N4X[300] = U3ndn.I8r(14, 936, 104, 81);
          U3ndn.S2t(1);
          N4X[886] = U3ndn.I8r(10, 8);
          U3ndn.S2t(84);
          N4X[800] = U3ndn.E_K(9, 41, 8, 32, 32);
          U3ndn.S2t(14);
          N4X[692] = U3ndn.I8r(716, 716, 729);
          U3ndn.z_y(60);
          N4X[574] = U3ndn.I8r(3, 25, 30);
          U3ndn.S2t(64);
          N4X[862] = U3ndn.I8r(32, 32, 42, 1);
          U3ndn.z_y(6);
          N4X[823] = U3ndn.I8r(43, 3);
          N4X[268] = (N4X[0][4][r8no$[N4X[942]]][r8no$[N4X[300]]][N4X[886]][r8no$[N4X[800]]] + N4X[692] / N4X[574]) / N4X[0][0][r8no$[N4X[862]]][r8no$[N4X[823]]];
          U3ndn.z_y(27);
          N4X[475] = U3ndn.E_K(16, 348, 16, 26);
          U3ndn.S2t(85);
          N4X[827] = U3ndn.E_K(12, 97, 1, 19);
          U3ndn.S2t(57);
          N4X[877] = U3ndn.I8r(14, 16);
          U3ndn.z_y(15);
          N4X[950] = U3ndn.E_K(13, 32, 5);
          U3ndn.z_y(42);
          N4X[133] = U3ndn.I8r(52, 12, 45, 12);
          U3ndn.z_y(13);
          N4X[281] = U3ndn.I8r(0, 18, 16);
          U3ndn.z_y(1);
          N4X[469] = U3ndn.E_K(59, 16);
          U3ndn.z_y(6);
          N4X[307] = U3ndn.E_K(5, 41);
          N4X[326] = (N4X[0][4][r8no$[N4X[475]]][r8no$[N4X[827]]][N4X[877]][r8no$[N4X[950]]] + N4X[133] / N4X[281]) / N4X[0][0][r8no$[N4X[469]]][r8no$[N4X[307]]];
          U3ndn.z_y(86);
          N4X[440] = U3ndn.E_K(8, 19, 2, 114, 322);
          U3ndn.z_y(9);
          N4X[907] = U3ndn.E_K(117, 715, 7);
          U3ndn.z_y(28);
          N4X[237] = U3ndn.I8r(15, 20, 1, 8);
          U3ndn.z_y(60);
          N4X[217] = U3ndn.E_K(20, 487, 546);
          U3ndn.S2t(87);
          N4X[518] = U3ndn.I8r(3, 13, 720, 4, 7897);
          U3ndn.S2t(88);
          N4X[238] = U3ndn.E_K(5, 982, 14, 0, 14);
          U3ndn.z_y(89);
          N4X[112] = U3ndn.I8r(51, 8, 11, 7, 11);
          U3ndn.z_y(40);
          N4X[383] = U3ndn.I8r(1, 724, 14, 55);
          N4X[665] = (N4X[0][4][r8no$[N4X[440]]][r8no$[N4X[907]]][N4X[237]][r8no$[N4X[217]]] + N4X[518] / N4X[238]) / N4X[0][0][r8no$[N4X[112]]][r8no$[N4X[383]]];
          U3ndn.z_y(6);
          N4X[923] = U3ndn.I8r(43, 299);
          U3ndn.S2t(14);
          N4X[382] = U3ndn.I8r(1, 97, 7);
          U3ndn.z_y(90);
          N4X[494] = U3ndn.E_K(15, 13, 17, 48);
          U3ndn.z_y(91);
          N4X[598] = U3ndn.E_K(37, 1, 3, 4, 3);
          U3ndn.S2t(6);
          N4X[714] = U3ndn.E_K(481, 19);
          U3ndn.S2t(57);
          N4X[546] = U3ndn.I8r(11, 13);
          U3ndn.S2t(60);
          N4X[426] = U3ndn.I8r(5, 10, 58);
          U3ndn.S2t(45);
          N4X[445] = U3ndn.E_K(8, 2, 978, 64);
          N4X[840] = (N4X[0][4][r8no$[N4X[923]]][r8no$[N4X[382]]][N4X[494]][r8no$[N4X[598]]] + N4X[714] / N4X[546]) / N4X[0][0][r8no$[N4X[426]]][r8no$[N4X[445]]];
          if (N4X[4][0] && N4X[4][0]['body']['GetPosition']() ['x'] > N4X[268]) {
            N4X[922]['discs'][0]['sx'] = N4X[268];
            N4X[922]['discs'][0]['sy'] = N4X[326];
          }
          if (N4X[4][0] && N4X[4][0]['body']['GetPosition']() ['x'] > N4X[665]) {
            N4X[922]['discs'][0]['sx'] = N4X[665];
            N4X[922]['discs'][0]['sy'] = N4X[840];
          }
        }
        N4X[922]['players'] = [
        ];
        for (N4X[266] = 0; N4X[266] < N4X[0][0]['players']['length']; N4X[266]++) {
          if (N4X[0][0]['players'][N4X[266]]) {
            if (i7(N4X[0][0]['players'][N4X[266]]['id']) == false) {
              N4X[922]['players'][N4X[266]] = N4X[0][0]['players'][N4X[266]];
            }
          }
        }
        if (N4X[0][2] && N4X[0][2]['playersJoined'] && N4X[0][2]['playersJoined']['length'] > 0) {
          for (N4X[167] = 0; N4X[167] < N4X[0][2]['playersJoined']['length']; N4X[167]++) {
            N4X[784] = N4X[0][2]['playersJoined'][N4X[167]]['id'];
            N4X[808] = N4X[0][2]['playersJoined'][N4X[167]]['t'];
            N4X[922]['players'][N4X[784]] = {
              id: N4X[784],
              team: N4X[808]
            };
            N4X[922]['scores'][N4X[784]] = 0;
          }
        }
        N4X[922]['projectiles'] = [
        ];
        for (N4X[838] = 0; N4X[838] < N4X[68]['length']; N4X[838]++) {
          if (N4X[68][N4X[838]]) {
            if (N4X[68][N4X[838]]['GetUserData']() ['destroyThisStep'] == false && N4X[68][N4X[838]]['GetUserData']() ['fte'] > 0) {
              N4X[922]['projectiles'][N4X[838]] = {
                x: N4X[68][N4X[838]]['GetPosition']() ['x'],
                y: N4X[68][N4X[838]]['GetPosition']() ['y'],
                a: N4X[68][N4X[838]]['GetAngle'](),
                av: N4X[68][N4X[838]]['GetAngularVelocity'](),
                xv: N4X[68][N4X[838]]['GetLinearVelocity']() ['x'],
                yv: N4X[68][N4X[838]]['GetLinearVelocity']() ['y'],
                fte: N4X[68][N4X[838]]['GetUserData']() ['fte'] - 1,
                did: N4X[68][N4X[838]]['GetUserData']() ['discID'],
                type: N4X[68][N4X[838]]['GetUserData']() ['type'],
                team: N4X[68][N4X[838]]['GetUserData']() ['team']
              };
            }
          }
        }
        for (N4X[551] = 0; N4X[551] < N4X[76]['length']; N4X[551]++) {
          N4X[922]['projectiles']['push'](N4X[76][N4X[551]]);
        }
        if (N4X[0][0]['fte'] == 0 || N4X[0][2] && N4X[0][2]['pc'] == 2) {
          N4X[725] = null;
          if (N4X[0][4]['gt'] == 1) {
            if (N4X[0][4]['maps']['length'] - 1 <= N4X[0][0]['rc']) {
              N4X[228] = 0;
              N4X[111] = [
              ];
              for (N4X[825] = 0; N4X[825] < N4X[0][0]['scores']['length']; N4X[825]++) {
                if (N4X[0][0]['scores'][N4X[825]] != undefined) {
                  if (N4X[0][0]['scores'][N4X[825]] > N4X[228]) {
                    N4X[228] = N4X[0][0]['scores'][N4X[825]];
                    N4X[111] = [
                      N4X[825]
                    ];
                  }
                  if (N4X[0][0]['scores'][N4X[825]] == N4X[228]) {
                    N4X[111]['push'](N4X[825]);
                  }
                }
              }
              N4X[725] = N4X[111];
            }
          }
          N4X[782] = N4X[922]['players'];
          N4X[805] = null;
          if (N4X[0][4]['q']) {
            if (N4X[0][4]['q'] == 'bonkquick') {
              N4X[805] = N4X[0][7]['getMap'](N4X[0][0]['rc'] + 1);
            } else {
              N4X[805] = V6D[66]['getOrderedRandomMap'](N4X[0][0]['rc'] + 1, N4X[0][4]['q']);
            }
            N4X[0][4]['map'] = N4X[805];
          } else {
            N4X[805] = N4X[0][4]['map'];
          }
          N4X[922] = Q['createNewState'](N4X[782], N4X[805], N4X[0][0]['seed'], false, N4X[725], N4X[0][4], false);
          N4X[922]['dontInterpolate'] = true;
          N4X[922]['scores'] = N4X[0][0]['scores']['slice']();
          for (N4X[755] = 0; N4X[755] < N4X[922]['scores']['length']; N4X[755]++) {
            if (N4X[922]['scores'][N4X[755]] >= 0) {
              if (i7(N4X[755])) {
                N4X[922]['scores'][N4X[755]] = null;
              }
            }
          }
          N4X[922]['lscr'] = N4X[0][0]['lscr'];
          U3ndn.S2t(26);
          N4X[381] = U3ndn.I8r(18, 36, 163, 9);
          U3ndn.z_y(40);
          N4X[305] = U3ndn.I8r(7, 2, 3, 7);
          N4X[922]['rc'] = N4X[0][0][r8no$[N4X[381]]] + N4X[305];
        }
        for (N4X[988] = N4X[78]['GetBodyList'](); N4X[988]; ) {
          N4X[127] = N4X[988]['GetNext']();
          N4X[78]['DestroyBody'](N4X[988]);
          N4X[988] = N4X[127];
        }
        for (N4X[431] = N4X[78]['GetJointList'](); N4X[431]; ) {
          N4X[127] = N4X[431]['GetNext']();
          N4X[78]['DestroyJoint'](N4X[431]);
          N4X[431] = N4X[127];
        }
        Q['globalStepVars'] = undefined;
        N4X[990] = Date['now']() - N4X[2];
        function q6(C1z, Z_W, M7n, l_Y) {
          var O6r = [
            arguments
          ];
          N4X[37][O6r[0][0]] = [
            O6r[0][1],
            O6r[0][2],
            O6r[0][3]
          ];
        }
        if (N4X[990] > 10) {
        }
        return N4X[922];
      }
    };
    A['panAmount'] = 0.8;
    A['masterVolume'] = 0.9;
    G0['npma'] = 0.4;
    G0['nmpcw'] = 0.8;
    G0['np'] = false;
    function Z7() {
      U3ndn.Y$U();
      var w7p = [
        arguments
      ];
      w7p[3] = r8no$;
      w7p[9] = document['createElement']('div');
      U3ndn.z_y(1);
      w7p[6] = U3ndn.I8r(8760, 8030);
      U3ndn.S2t(92);
      w7p[2] = U3ndn.I8r(1438, 1442, 719, 17, 2);
      U3ndn.z_y(93);
      w7p[4] = U3ndn.E_K(1281, 2, 640, 17, 6);
      w7p[9]['style']['width'] = w7p[6] * Z7[r8no$[w7p[2]]] + U3ndn.j31(w7p[4]);
      U3ndn.z_y(6);
      w7p[8] = U3ndn.I8r(485, 15);
      U3ndn.S2t(14);
      w7p[5] = U3ndn.E_K(1, 158, 1267);
      U3ndn.z_y(9);
      w7p[1] = U3ndn.I8r(254, 3303, 18);
      w7p[9]['style']['height'] = w7p[8] * Z7[r8no$[w7p[5]]] + U3ndn.j31(w7p[1]);
      Z7['previewGraphics'] = new A(w7p[9], 'thumb');
      Z7['previewGraphics']['forceRendererSize'](730 * Z7['thumbScale'] * window['devicePixelRatio'], 500 * Z7['thumbScale'] * window['devicePixelRatio']);
    }
    V6D[76] = class t_V {
      static registerClassAlias(N8N, f$V) {
        var J2h = [
          arguments
        ];
        J2h[8] = r8no$;
        t_V['aliases'][J2h[0][0]] = J2h[0][1];
        return J2h[0][0];
      }
      constructor() {
        var d0d = [
          arguments
        ];
        d0d[5] = r8no$;
        this['index'] = 0;
        U3ndn.S2t(4);
        this['buffer'] = new ArrayBuffer(U3ndn.I8r(100, 1024));
        U3ndn.Y$U();
        this['view'] = new DataView(this['buffer']);
        this['implicitClassAliasArray'] = [
        ];
        this['implicitStringArray'] = [
        ];
        this['bodgeCaptureZoneDataIdentifierArray'] = [
        ];
      }
      reset() {
        var L0l = [
          arguments
        ];
        L0l[3] = r8no$;
        this['index'] = 0;
      }
      readByte() {
        var W$M = [
          arguments
        ];
        W$M[3] = r8no$;
        U3ndn.Y$U();
        W$M[5] = this['view']['getUint8'](this['index']);
        this['index'] += 1;
        return W$M[5];
      }
      writeByte(d85) {
        var Y0z = [
          arguments
        ];
        Y0z[7] = r8no$;
        U3ndn.w30();
        this['view']['setUint8'](this['index'], Y0z[0][0]);
        this['index'] += 1;
      }
      readInt() {
        var f89 = [
          arguments
        ];
        f89[5] = r8no$;
        f89[7] = this['view']['getInt32'](this['index']);
        U3ndn.Y$U();
        this['index'] += 4;
        return f89[7];
      }
      writeInt(j0k) {
        var M_F = [
          arguments
        ];
        M_F[3] = r8no$;
        this['view']['setInt32'](this['index'], M_F[0][0]);
        this['index'] += 4;
      }
      readShort() {
        var v3a = [
          arguments
        ];
        v3a[2] = r8no$;
        v3a[5] = this['view']['getInt16'](this['index']);
        this['index'] += 2;
        return v3a[5];
      }
      writeShort(O3q) {
        var L0u = [
          arguments
        ];
        L0u[7] = r8no$;
        U3ndn.Y$U();
        this['view']['setInt16'](this['index'], L0u[0][0]);
        this['index'] += 2;
      }
      readUShort() {
        var W3A = [
          arguments
        ];
        W3A[8] = r8no$;
        W3A[6] = this['view']['getUint16'](this['index']);
        this['index'] += 2;
        return W3A[6];
      }
      writeUShort(w02) {
        var o14 = [
          arguments
        ];
        o14[2] = r8no$;
        this['view']['setUint16'](this['index'], o14[0][0]);
        this['index'] += 2;
      }
      readUint() {
        var r9t = [
          arguments
        ];
        r9t[4] = r8no$;
        U3ndn.Y$U();
        r9t[7] = this['view']['getUint32'](this['index']);
        this['index'] += 4;
        return r9t[7];
      }
      writeUint(s6L) {
        var K9c = [
          arguments
        ];
        K9c[2] = r8no$;
        this['view']['setUint32'](this['index'], K9c[0][0]);
        this['index'] += 4;
      }
      rewind() {
        var T3c = [
          arguments
        ];
        T3c[3] = r8no$;
        this['index'] = 0;
      }
      readInt29() {
        var r8b = [
          arguments
        ];
        r8b[5] = r8no$;
        r8b[9] = 1;
        r8b[4] = this['readByte']();
        r8b[3] = 0;
        r8b[2] = 0;
        r8b[7] = 0;
        if (r8b[4] & 128) {
          r8b[3] = this['readByte']();
          r8b[9] = 2;
          if (r8b[3] & 128) {
            r8b[2] = this['readByte']();
            r8b[9] = 3;
            if (r8b[2] & 128) {
              r8b[7] = this['readByte']();
              r8b[9] = 4;
            }
          }
        }
        r8b[8] = 0;
        if (r8b[9] == 1) {
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 1, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 2, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 4, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 8, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[4], 16, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[4], 32, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 64, 0);
        }
        if (r8b[9] == 2) {
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 1, 7);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[4], 2, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 4, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 8, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 16, 7);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[4], 32, 7);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 64, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 1, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[3], 2, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[3], 4, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[3], 8, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[3], 16, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 32, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 64, 0);
        }
        if (r8b[9] == 3) {
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 1, 14);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 2, 14);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 4, 14);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 8, 14);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 16, 14);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 32, 14);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 64, 14);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[3], 1, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 2, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 4, 7);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[3], 8, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 16, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 32, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 64, 7);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[2], 1, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[2], 2, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[2], 4, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[2], 8, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[2], 16, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[2], 32, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[2], 64, 0);
        }
        if (r8b[9] == 4) {
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[4], 1, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 2, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 4, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[4], 8, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 16, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[4], 32, 22);
          U3ndn.z_y(94);
          r8b[8] -= U3ndn.E_K(r8b[4], 64, 22);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 1, 15);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[3], 2, 15);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 4, 15);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[3], 8, 15);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[3], 16, 15);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[3], 32, 15);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[3], 64, 15);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[2], 1, 8);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[2], 2, 8);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[2], 4, 8);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[2], 8, 8);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[2], 16, 8);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[2], 32, 8);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[2], 64, 8);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.E_K(r8b[7], 1, 0);
          U3ndn.z_y(94);
          r8b[8] += U3ndn.I8r(r8b[7], 2, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[7], 4, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[7], 8, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[7], 16, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.I8r(r8b[7], 32, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[7], 64, 0);
          U3ndn.S2t(94);
          r8b[8] += U3ndn.E_K(r8b[7], 128, 0);
        }
        return r8b[8];
      }
      readBoolean() {
        var Z3r = [
          arguments
        ];
        U3ndn.w30();
        Z3r[4] = r8no$;
        Z3r[6] = this['readByte']();
        U3ndn.z_y(95);
        return U3ndn.I8r(1, Z3r[6]);
      }
      writeBoolean(F5N) {
        var o4H = [
          arguments
        ];
        o4H[5] = r8no$;
        if (o4H[0][0]) {
          this['writeByte'](1);
        } else {
          this['writeByte'](0);
        }
      }
      readDouble() {
        var U$J = [
          arguments
        ];
        U$J[9] = r8no$;
        U$J[2] = this['view']['getFloat64'](this['index']);
        this['index'] += 8;
        U3ndn.Y$U();
        return U$J[2];
      }
      writeDouble(i19) {
        var f9V = [
          arguments
        ];
        f9V[1] = r8no$;
        U3ndn.Y$U();
        this['view']['setFloat64'](this['index'], f9V[0][0]);
        this['index'] += 8;
      }
      readFloat() {
        var d84 = [
          arguments
        ];
        d84[4] = r8no$;
        U3ndn.Y$U();
        d84[2] = this['view']['getFloat32'](this['index']);
        this['index'] += 4;
        return d84[2];
      }
      writeFloat(p8V) {
        var B6I = [
          arguments
        ];
        U3ndn.Y$U();
        B6I[2] = r8no$;
        this['view']['setFloat32'](this['index'], B6I[0][0]);
        this['index'] += 4;
      }
      readUTF() {
        var Q9D = [
          arguments
        ];
        Q9D[5] = r8no$;
        Q9D[7] = this['readByte']();
        Q9D[6] = this['readByte']();
        U3ndn.z_y(29);
        Q9D[4] = U3ndn.E_K(Q9D[6], 256, Q9D[7]);
        Q9D[2] = new Uint8Array(Q9D[4]);
        for (Q9D[9] = 0; Q9D[9] < Q9D[4]; Q9D[9]++) {
          Q9D[2][Q9D[9]] = this['readByte']();
        }
        return t_V['textDec']['decode'](Q9D[2]);
      }
      writeUTF(E9n) {
        function I5i(C8c, R9z, A3L) {
          U3ndn.w30();
          var Y7Z = [
            arguments
          ];
          Y7Z[3] = r8no$;
          h21[4]['writeByte'](Y7Z[0][0]);
        }
        var h21 = [
          arguments
        ];
        h21[3] = r8no$;
        h21[7] = t_V['textEnc']['encode'](h21[0][0]);
        h21[5] = h21[7]['length'];
        U3ndn.z_y(0);
        h21[2] = Math['floor'](U3ndn.I8r(h21[5], 256));
        U3ndn.z_y(23);
        h21[1] = U3ndn.E_K(h21[5], 256);
        this['writeByte'](h21[2]);
        this['writeByte'](h21[1]);
        h21[4] = this;
        h21[7]['forEach'](I5i);
      }
      readObject() {
        var w_C = [
          arguments
        ];
        w_C[7] = r8no$;
        w_C[8] = () =>{
          var j2L;
          var L_P;
          var n3i;
          var s9N;
          var B64;
          var f6n;
          var D$u;
          var K9D;
          var o_8 = r8no$;
          var M6E = this[o_8[884]]();
          if (M6E == 7) {
            j2L = this[o_8[884]]();
            U3ndn.S2t(96);
            L_P = U3ndn.I8r(j2L, 2, 1);
            n3i = new Uint8Array(L_P);
            for (var l5t = 0; l5t < L_P; l5t++) {
              n3i[l5t] = this[o_8[884]]();
            }
            s9N = t_V[o_8[890]][o_8[716]](n3i);
            if (!t_V[o_8[868]][s9N]) {
              throw new Error('trying to decode object with alias we don\'t recognise');
            }
            this[o_8[871]][o_8[101]](s9N);
            B64 = new t_V[o_8[868]][s9N];
            B64[o_8[892]](this);
            return B64;
          } else {
            U3ndn.S2t(96);
            f6n = U3ndn.I8r(M6E, 4, 1);
            D$u = this[o_8[871]][f6n];
            if (!t_V[o_8[868]][D$u]) {
              throw new Error('trying to decode object with alias we don\'t recognise');
            }
            K9D = new t_V[o_8[868]][D$u];
            K9D[o_8[892]](this);
            return K9D;
          }
        };
        w_C[3] = () =>{
          var E3t;
          var K0a;
          var v5u;
          var v90;
          var x9X;
          var L1H;
          var H5K;
          var l0U;
          var M7h;
          var c21;
          var F4Y;
          var x8Q;
          var M47;
          var W4i;
          var z50;
          var h3I;
          var q$W;
          var G6O;
          var G4D;
          var e8C;
          var G53 = r8no$;
          var U20 = 0;
          E3t = 0;
          var P2j = [
          ];
          do {
            U3ndn.S2t(97);
            var B9m = U3ndn.E_K(3, 18, 0, 16);
            U3ndn.S2t(7);
            var V$r = U3ndn.I8r(38, 414, 6, 13);
            E3t = (this[G53[884]]() - B9m) / V$r;
            U20 += E3t;
          } while (E3t == 64);
          this[G53[884]]();
          for (var f3D = 0; f3D < U20; f3D++) {
            K0a = this[G53[884]]();
            if (K0a === t_V[G53[893]]) {
              P2j[G53[101]](undefined);
            }
            if (K0a === t_V[G53[894]]) {
              P2j[G53[101]](null);
            }
            if (K0a === t_V[G53[895]]) {
              P2j[G53[101]](true);
            }
            if (K0a === t_V[G53[896]]) {
              P2j[G53[101]](false);
            }
            if (K0a === t_V[G53[897]]) {
              v5u = this[G53[884]]();
              v90 = '';
              if (v5u == 7) {
                x9X = this[G53[884]]();
                U3ndn.S2t(96);
                L1H = U3ndn.I8r(x9X, 2, 1);
                H5K = new Uint8Array(L1H);
                for (var w1Y = 0; w1Y < L1H; w1Y++) {
                  H5K[w1Y] = this[G53[884]]();
                }
                v90 = t_V[G53[890]][G53[716]](H5K);
                this[G53[871]][G53[101]](v90);
                if (!t_V[G53[868]][v90]) {
                  throw new Error('trying to decode object with alias we don\'t recognise');
                }
                l0U = new t_V[G53[868]][v90];
                l0U[G53[892]](this);
                P2j[G53[101]](l0U);
              } else if (v5u > 128) {
                this[G53[884]]();
                M7h = this[G53[884]]();
                U3ndn.S2t(96);
                c21 = U3ndn.I8r(M7h, 2, 1);
                F4Y = new Uint8Array(c21);
                for (var g0F = 0; g0F < c21; g0F++) {
                  F4Y[g0F] = this[G53[884]]();
                }
                v90 = t_V[G53[890]][G53[716]](F4Y);
                this[G53[871]][G53[101]](v90);
                if (!t_V[G53[868]][v90]) {
                  throw new Error('trying to decode object with alias we don\'t recognise');
                }
                x8Q = new t_V[G53[868]][v90];
                x8Q[G53[898]](this);
                P2j[G53[101]](x8Q);
              } else {
                U3ndn.S2t(96);
                M47 = U3ndn.I8r(v5u, 4, 1);
                v90 = this[G53[871]][M47];
                if (!t_V[G53[868]][v90]) {
                  throw new Error('trying to decode object with alias we don\'t recognise');
                }
                W4i = new t_V[G53[868]][v90];
                W4i[G53[892]](this);
                P2j[G53[101]](W4i);
              }
            }
            if (K0a === t_V[G53[899]]) {
            }
            if (K0a === t_V[G53[900]]) {
              z50 = this[G53[884]]();
              if (z50 % 2 == 0) {
                U3ndn.S2t(0);
                h3I = U3ndn.I8r(z50, 2);
                P2j[G53[101]](this[G53[872]][h3I]);
              } else {
                q$W = 0;
                U3ndn.S2t(96);
                G6O = U3ndn.I8r(z50, 2, 1);
                q$W += G6O;
                while (G6O == 64) {
                  U3ndn.z_y(98);
                  var i02 = U3ndn.E_K(7, 16, 12, 6, 127);
                  U3ndn.S2t(1);
                  var v_g = U3ndn.I8r(12, 10);
                  G6O = (this[G53[884]]() - i02) / v_g;
                  q$W += G6O;
                }
                G4D = new Uint8Array(q$W);
                for (var F6s = 0; F6s < q$W; F6s++) {
                  G4D[F6s] = this[G53[884]]();
                }
                e8C = t_V[G53[890]][G53[716]](G4D);
                P2j[G53[101]](e8C);
                this[G53[872]][G53[101]](e8C);
              }
            }
          }
          return P2j;
        };
        w_C[6] = this['readByte']();
        if (w_C[6] == t_V['T_NULL']) {
          return null;
        }
        if (w_C[6] == t_V['T_UNDEFINED']) {
          return undefined;
        }
        if (w_C[6] == t_V['T_OBJ']) {
          return w_C[8]();
        } else if (w_C[6] == t_V['T_ARRAY']) {
          return w_C[3]();
        } else {
          throw new Error('Trying to readObject on something that\'s not an object or array');
        }
      }
      toBase64() {
        var i5k = [
          arguments
        ];
        i5k[1] = r8no$;
        i5k[3] = '';
        i5k[2] = new Uint8Array(this['buffer']);
        i5k[7] = this['index'];
        U3ndn.Y$U();
        for (i5k[4] = 0; i5k[4] < i5k[7]; i5k[4]++) {
          i5k[3] += String['fromCharCode'](i5k[2][i5k[4]]);
        }
        return window['btoa'](i5k[3]);
      }
      fromBase64(m_M, p1o) {
        var i9z = [
          arguments
        ];
        i9z[4] = r8no$;
        i9z[9] = window['pako'];
        i9z[2] = window['atob'](i9z[0][0]);
        i9z[1] = i9z[2]['length'];
        i9z[3] = new Uint8Array(i9z[1]);
        for (i9z[7] = 0; i9z[7] < i9z[1]; i9z[7]++) {
          i9z[3][i9z[7]] = i9z[2]['charCodeAt'](i9z[7]);
        }
        if (i9z[0][1] === true) {
          i9z[6] = i9z[9]['inflate'](i9z[3]);
          i9z[3] = i9z[6];
        }
        this['buffer'] = i9z[3]['buffer']['slice'](i9z[3]['byteOffset'], i9z[3]['byteLength'] + i9z[3]['byteOffset']);
        this['view'] = new DataView(this['buffer']);
        this['index'] = 0;
      }
    };
    V6D[76]['aliases'] = {
    };
    V6D[76]['textEnc'] = new TextEncoder;
    V6D[76]['textDec'] = new TextDecoder;
    V6D[76]['T_UNDEFINED'] = 0;
    V6D[76]['T_NULL'] = 1;
    V6D[76]['T_FALSE'] = 2;
    V6D[76]['T_TRUE'] = 3;
    V6D[76]['T_INT'] = 4;
    V6D[76]['T_DOUBLE'] = 5;
    V6D[76]['T_STRING'] = 6;
    V6D[76]['T_ARRAY'] = 9;
    V6D[76]['T_OBJ'] = 10;
    V6D[30] = class t5Q {
      constructor() {
        var d60 = [
          arguments
        ];
        d60[8] = r8no$;
        this['layers'] = [
        ];
        this['bc'] = 4492031;
      }
      randomBC(q_h) {
        var a$o = [
          arguments
        ];
        a$o[9] = r8no$;
        a$o[7] = Math['floor'](Math['random']() * a$o[0][0]['colors']['length']);
        this['bc'] = a$o[0][0]['colors'][a$o[7]];
      }
      makeSafe() {
        var Y68 = [
          arguments
        ];
        Y68[4] = r8no$;
        if (!(this['bc'] >= 0) || !(this['bc'] <= 16777215)) {
          this['bc'] = 4492031;
        }
        for (Y68[5] = 0; Y68[5] < this['layers']['length']; Y68[5]++) {
          Y68[9] = this['layers'][Y68[5]];
          if (Y68[9]) {
            if (!(Y68[9]['id'] >= 1) || !(Y68[9]['id'] <= 115)) {
              Y68[9]['id'] = 1;
            }
            if (!(Y68[9]['x'] >= - 99999) || !(Y68[9]['x'] <= 99999)) {
              Y68[9]['x'] = 0;
            }
            if (!(Y68[9]['y'] >= - 99999) || !(Y68[9]['y'] <= 99999)) {
              Y68[9]['y'] = 0;
            }
            if (!(Y68[9]['scale'] >= - 10) || !(Y68[9]['scale'] <= 10)) {
              Y68[9]['scale'] = 0.25;
            }
            if (!(Y68[9]['angle'] >= - 9999) || !(Y68[9]['angle'] <= 9999)) {
              Y68[9]['angle'] = 0;
            }
            if (typeof Y68[9]['flipX'] != 'boolean') {
              Y68[9]['flipX'] = false;
            }
            if (typeof Y68[9]['flipY'] != 'boolean') {
              Y68[9]['flipY'] = false;
            }
            if (!(Y68[9]['color'] >= 0) || !(Y68[9]['color'] <= 16777215)) {
              Y68[9]['color'] = 0;
            }
          }
        }
        for (Y68[8] = 0; Y68[8] < this['layers']['length']; Y68[8]++) {
          if (this['layers'][Y68[8]] == null) {
            this['layers']['splice'](Y68[8], 1);
            Y68[8]--;
          }
        }
      }
      fromObject(Y6Q) {
        var Q6_ = [
          arguments
        ];
        Q6_[2] = r8no$;
        if (Q6_[0][0]) {
          if (Q6_[0][0]['layers'] && typeof Q6_[0][0]['layers'] == 'object' && Q6_[0][0]['layers']['length'] >= 0 && Q6_[0][0]['layers']['length'] <= 16) {
            this['layers'] = Q6_[0][0]['layers'];
          }
          this['bc'] = Q6_[0][0]['bc'];
        }
        U3ndn.w30();
        this['makeSafe']();
      }
      toString() {
        U3ndn.w30();
        var i9H = [
          arguments
        ];
        i9H[1] = r8no$;
        i9H[6] = new V6D[76];
        i9H[6]['writeByte'](10);
        i9H[6]['writeByte'](7);
        i9H[6]['writeByte'](3);
        i9H[6]['writeByte'](97);
        i9H[6]['writeShort'](2);
        i9H[6]['writeByte'](9);
        i9H[6]['writeByte'](this['layers']['length'] * 2 + 1);
        i9H[6]['writeByte'](1);
        for (i9H[7] = 0; i9H[7] < this['layers']['length']; i9H[7]++) {
          i9H[2] = this['layers'][i9H[7]];
          i9H[6]['writeByte'](10);
          if (i9H[7] == 0) {
            i9H[6]['writeByte'](7);
            i9H[6]['writeByte'](5);
            i9H[6]['writeByte'](97);
            i9H[6]['writeByte'](108);
          } else {
            i9H[6]['writeByte'](5);
          }
          i9H[6]['writeShort'](1);
          i9H[6]['writeShort'](i9H[2]['id']);
          i9H[6]['writeFloat'](i9H[2]['scale']);
          i9H[6]['writeFloat'](i9H[2]['angle']);
          i9H[6]['writeFloat'](i9H[2]['x']);
          i9H[6]['writeFloat'](i9H[2]['y']);
          i9H[6]['writeBoolean'](i9H[2]['flipX']);
          i9H[6]['writeBoolean'](i9H[2]['flipY']);
          i9H[6]['writeInt'](i9H[2]['color']);
        }
        i9H[6]['writeInt'](this['bc']);
        i9H[4] = i9H[6]['toBase64']();
        i9H[8] = encodeURIComponent(i9H[4]);
        return i9H[8];
      }
      fromString(C21) {
        var U78 = [
          arguments
        ];
        U78[7] = r8no$;
        if (U78[0][0] == '') {
          return;
        }
        try {
          U78[4] = decodeURIComponent(U78[0][0]);
          function r5G(U$v) {
            var U5A = [
              arguments
            ];
            U5A[7] = r8no$;
            U5A[1] = U5A[0][0]['readByte']();
            U5A[8] = {
            };
            U5A[5] = U5A[1]['toString'](16);
            if (U5A[5] == 'a') {
              U5A[3] = U5A[0][0]['readByte']();
              if (U5A[3] == 7) {
                U5A[0][0]['readByte']();
                U5A[0][0]['readByte']();
                U5A[0][0]['readByte']();
              }
              U5A[9] = U5A[0][0]['readShort']();
              U5A[8]['id'] = U5A[0][0]['readShort']();
              U5A[8]['scale'] = U5A[0][0]['readFloat']();
              U5A[8]['angle'] = U5A[0][0]['readFloat']();
              U5A[8]['x'] = U5A[0][0]['readFloat']();
              U5A[8]['y'] = U5A[0][0]['readFloat']();
              U5A[8]['flipX'] = U5A[0][0]['readBoolean']();
              U5A[8]['flipY'] = U5A[0][0]['readBoolean']();
              U5A[8]['color'] = U5A[0][0]['readInt']();
            } else {
              U5A[8] = null;
            }
            return U5A[8];
          }
          U78[8] = new V6D[76];
          U78[8]['fromBase64'](U78[4]);
          U78[6] = {
          };
          U78[5] = [
          ];
          U78[1] = U78[8]['readByte']();
          U78[9] = U78[8]['readByte']();
          U78[3] = U78[8]['readByte']();
          U78[2] = U78[8]['readByte']();
          U78[15] = U78[8]['readShort']();
          U78[74] = U78[8]['readByte']();
          U78[10] = U78[8]['readByte']();
          U3ndn.z_y(96);
          U78[38] = U3ndn.E_K(U78[10], 2, 1);
          U78[61] = U78[8]['readByte']();
          while (U78[61] != 1) {
            U78[60] = 0;
            if (U78[61] == 3) {
              U78[67] = U78[8]['readByte']();
              U3ndn.z_y(1);
              U78[60] = U3ndn.I8r(U78[67], 48);
            } else if (U78[61] == 5) {
              U78[53] = U78[8]['readByte']();
              U78[57] = U78[8]['readByte']();
              U3ndn.z_y(99);
              U78[60] = U3ndn.E_K(10, U78[57], 48, U78[53], 48);
            }
            this['layers'][U78[60]] = r5G(U78[8]);
            U78[61] = U78[8]['readByte']();
          }
          for (U78[21] = 0; U78[21] < U78[38]; U78[21]++) {
            this['layers'][U78[21]] = r5G(U78[8]);
          }
          if (U78[15] >= 2) {
            this['bc'] = U78[8]['readInt']();
          }
          this['makeSafe']();
        } catch (K1n) {
          this['layers'] = [
          ];
          this['bc'] = 4492031;
        }
      }
    };
    V6D[85] = class g5Z {
      constructor() {
        var u1k = [
          arguments
        ];
        u1k[9] = r8no$;
        this['version'] = 6;
        this['up1'] = 38;
        this['up2'] = 87;
        this['down1'] = 40;
        this['down2'] = 83;
        this['left1'] = 37;
        this['left2'] = 65;
        this['right1'] = 39;
        this['right2'] = 68;
        this['heavy1'] = 88;
        this['heavy2'] = 16;
        this['swing1'] = 90;
        this['swing2'] = 89;
        this['up3'] = 999;
        this['down3'] = 999;
        this['left3'] = 999;
        this['right3'] = 999;
        this['heavy3'] = 32;
        this['swing3'] = 999;
        this['filter'] = true;
        this['stats'] = false;
        this['help'] = true;
        this['quality'] = 3;
        if (/(CrOS)/['test'](navigator['userAgent'])) {
          this['quality'] = 2;
        }
      }
      clone() {
        var A4J = [
          arguments
        ];
        A4J[3] = r8no$;
        A4J[4] = new g5Z;
        A4J[4]['up1'] = this['up1'];
        A4J[4]['up2'] = this['up2'];
        A4J[4]['down1'] = this['down1'];
        A4J[4]['down2'] = this['down2'];
        A4J[4]['left1'] = this['left1'];
        A4J[4]['left2'] = this['left2'];
        A4J[4]['right1'] = this['right1'];
        A4J[4]['right2'] = this['right2'];
        A4J[4]['heavy1'] = this['heavy1'];
        A4J[4]['heavy2'] = this['heavy2'];
        A4J[4]['swing1'] = this['swing1'];
        A4J[4]['swing2'] = this['swing2'];
        A4J[4]['up3'] = this['up3'];
        A4J[4]['down3'] = this['down3'];
        A4J[4]['left3'] = this['left3'];
        A4J[4]['right3'] = this['right3'];
        A4J[4]['heavy3'] = this['heavy3'];
        U3ndn.w30();
        A4J[4]['swing3'] = this['swing3'];
        A4J[4]['filter'] = this['filter'];
        A4J[4]['stats'] = this['stats'];
        A4J[4]['help'] = this['help'];
        A4J[4]['quality'] = this['quality'];
        return A4J[4];
      }
      serialize() {
        var s3S = [
          arguments
        ];
        s3S[5] = r8no$;
        s3S[7] = new V6D[76];
        s3S[7]['writeUShort'](this['version']);
        s3S[7]['writeUShort'](this['up1']);
        s3S[7]['writeUShort'](this['up2']);
        s3S[7]['writeUShort'](this['down1']);
        s3S[7]['writeUShort'](this['down2']);
        s3S[7]['writeUShort'](this['left1']);
        s3S[7]['writeUShort'](this['left2']);
        s3S[7]['writeUShort'](this['right1']);
        s3S[7]['writeUShort'](this['right2']);
        U3ndn.w30();
        s3S[7]['writeUShort'](this['heavy1']);
        s3S[7]['writeUShort'](this['heavy2']);
        s3S[7]['writeUShort'](this['swing1']);
        s3S[7]['writeUShort'](this['swing2']);
        s3S[7]['writeBoolean'](this['filter']);
        s3S[7]['writeBoolean'](this['stats']);
        s3S[7]['writeBoolean'](this['help']);
        s3S[7]['writeUShort'](this['up3']);
        s3S[7]['writeUShort'](this['down3']);
        s3S[7]['writeUShort'](this['left3']);
        s3S[7]['writeUShort'](this['right3']);
        s3S[7]['writeUShort'](this['heavy3']);
        s3S[7]['writeUShort'](this['swing3']);
        s3S[7]['writeUShort'](this['quality']);
        return s3S[7]['toBase64']();
      }
      unserialize(G9Q) {
        var D8R = [
          arguments
        ];
        D8R[7] = r8no$;
        try {
          D8R[9] = new V6D[76];
          D8R[9]['fromBase64'](D8R[0][0], false);
          D8R[5] = D8R[9]['readUShort']();
          if (D8R[5] >= 1) {
            this['up1'] = D8R[9]['readUShort']();
            this['up2'] = D8R[9]['readUShort']();
            this['down1'] = D8R[9]['readUShort']();
            this['down2'] = D8R[9]['readUShort']();
            this['left1'] = D8R[9]['readUShort']();
            this['left2'] = D8R[9]['readUShort']();
            this['right1'] = D8R[9]['readUShort']();
            this['right2'] = D8R[9]['readUShort']();
            this['heavy1'] = D8R[9]['readUShort']();
            this['heavy2'] = D8R[9]['readUShort']();
            this['swing1'] = D8R[9]['readUShort']();
            this['swing2'] = D8R[9]['readUShort']();
          }
          if (D8R[5] >= 2) {
            this['filter'] = D8R[9]['readBoolean']();
          }
          if (D8R[5] >= 3) {
            this['stats'] = D8R[9]['readBoolean']();
          }
          if (D8R[5] >= 3 && D8R[5] <= 5) {
            D8R[3] = D8R[9]['readBoolean']();
            if (D8R[3]) {
              this['quality'] = 3;
            } else {
              this['quality'] = 2;
            }
          }
          if (D8R[5] >= 4) {
            this['help'] = D8R[9]['readBoolean']();
          }
          if (D8R[5] >= 5) {
            this['up3'] = D8R[9]['readUShort']();
            this['down3'] = D8R[9]['readUShort']();
            this['left3'] = D8R[9]['readUShort']();
            this['right3'] = D8R[9]['readUShort']();
            this['heavy3'] = D8R[9]['readUShort']();
            this['swing3'] = D8R[9]['readUShort']();
          }
          if (D8R[5] >= 6) {
            this['quality'] = D8R[9]['readUShort']();
          }
        } catch (D5x) {
        }
      }
    };
    V6D[98] = class f4R {
      constructor(P$l) {
        var w08 = [
          arguments
        ];
        w08[5] = r8no$;
        this['peerID'] = w08[0][0];
        this['receivedMessages'] = [
        ];
        this['metrics'] = {
          nc: 0,
          pc: 0,
          pt: 0
        };
        this['p2pReverts'] = 0;
        this['p2pBanUntil'] = 0;
        this['p2pBanLevel'] = 0;
      }
    };
    V6D[12] = class T6A {
      contructor() {
        var d$e = [
          arguments
        ];
        d$e[7] = r8no$;
        this['startingState'] = {
        };
        this['playerArray'] = [
        ];
        this['inputs'] = [
        ];
        this['adminInputs'] = [
        ];
        this['gameSettings'] = new V6D[61];
        this['id'] = 0;
        this['mn'] = '';
        this['ma'] = '';
        this['rxn'] = 'Cool Map';
        this['rxa'] = 'Cool Man';
        this['es'] = 0;
        this['mid'] = - 1;
      }
      halfSerialize() {
        var a1T = [
          arguments
        ];
        a1T[1] = r8no$;
        a1T[6] = 0;
        for (a1T[7] = 0; a1T[7] < this['inputs']['length']; a1T[7]++) {
          if (this['inputs'][a1T[7]]) {
            for (a1T[3] = 0; a1T[3] < this['inputs'][a1T[7]]['length']; a1T[3]++) {
              if (this['inputs'][a1T[7]][a1T[3]]) {
                a1T[6]++;
              }
            }
          }
        }
        a1T[8] = new V6D[76];
        a1T[8]['writeUShort'](a1T[6]);
        for (a1T[9] = 0; a1T[9] < this['inputs']['length']; a1T[9]++) {
          if (this['inputs'][a1T[9]]) {
            for (a1T[5] = 0; a1T[5] < this['inputs'][a1T[9]]['length']; a1T[5]++) {
              if (this['inputs'][a1T[9]][a1T[5]]) {
                a1T[4] = this['inputs'][a1T[9]][a1T[5]];
                a1T[8]['writeUShort'](a1T[9]);
                a1T[8]['writeUint'](a1T[5]);
                a1T[2] = 0;
                if (a1T[4]['left']) {
                  a1T[2] += 1;
                }
                if (a1T[4]['right']) {
                  a1T[2] += 2;
                }
                if (a1T[4]['up']) {
                  a1T[2] += 4;
                }
                if (a1T[4]['down']) {
                  a1T[2] += 8;
                }
                if (a1T[4]['action']) {
                  a1T[2] += 16;
                }
                if (a1T[4]['action2']) {
                  a1T[2] += 32;
                }
                a1T[8]['writeByte'](a1T[2]);
              }
            }
          }
        }
        this['inputs'] = a1T[8]['toBase64']();
      }
      halfUnserialize() {
        var U7U = [
          arguments
        ];
        U7U[9] = r8no$;
        U7U[1] = new V6D[76];
        U7U[1]['fromBase64'](this['inputs']);
        U3ndn.Y$U();
        this['inputs'] = [
        ];
        U7U[6] = U7U[1]['readUShort']();
        for (U7U[79] = 0; U7U[79] < U7U[6]; U7U[79]++) {
          U7U[4] = U7U[1]['readUShort']();
          U7U[8] = U7U[1]['readUint']();
          U7U[7] = U7U[1]['readByte']();
          U3ndn.z_y(59);
          U7U[2] = U3ndn.E_K(U7U[7], 1, 1);
          U3ndn.z_y(59);
          U7U[3] = U3ndn.I8r(U7U[7], 2, 2);
          U3ndn.S2t(59);
          U7U[5] = U3ndn.E_K(U7U[7], 4, 4);
          U3ndn.S2t(59);
          U7U[72] = U3ndn.E_K(U7U[7], 8, 8);
          U3ndn.S2t(59);
          U7U[62] = U3ndn.I8r(U7U[7], 16, 16);
          U3ndn.z_y(59);
          U7U[68] = U3ndn.I8r(U7U[7], 32, 32);
          if (!this['inputs'][U7U[4]]) {
            this['inputs'][U7U[4]] = [
            ];
          }
          this['inputs'][U7U[4]][U7U[8]] = {
            left: U7U[2],
            right: U7U[3],
            up: U7U[5],
            down: U7U[72],
            action: U7U[62],
            action2: U7U[68]
          };
        }
      }
      fromJSONObject(g4O) {
        var i68 = [
          arguments
        ];
        i68[6] = r8no$;
        this['startingState'] = i68[0][0]['startingState'];
        this['playerArray'] = i68[0][0]['playerArray'];
        this['inputs'] = i68[0][0]['inputs'];
        this['adminInputs'] = i68[0][0]['adminInputs'];
        this['gameSettings'] = i68[0][0]['gameSettings'];
        if (typeof i68[0][0]['mn'] == 'string' && i68[0][0]['mn']['length'] < 30) {
          this['mn'] = i68[0][0]['mn'];
        } else {
          this['mn'] = 'Unknown';
        }
        if (typeof i68[0][0]['ma'] == 'string' && i68[0][0]['ma']['length'] < 30) {
          this['ma'] = i68[0][0]['ma'];
        } else {
          this['ma'] = 'Unknown';
        }
        if (typeof i68[0][0]['rxa'] == 'string' && i68[0][0]['rxa']['length'] < 30) {
          this['rxa'] = i68[0][0]['rxa'];
        } else {
          this['rxa'] = '';
        }
        if (typeof i68[0][0]['rxn'] == 'string' && i68[0][0]['rxn']['length'] < 30) {
          this['rxn'] = i68[0][0]['rxn'];
        } else {
          this['rxn'] = '';
        }
        this['es'] = i68[0][0]['es'];
        if (typeof i68[0][0]['mid'] == 'number') {
          this['mid'] = i68[0][0]['mid'];
        }
      }
      toDatabase() {
        var t4v = [
          arguments
        ];
        t4v[9] = r8no$;
        this['halfSerialize']();
        t4v[1] = T6A['pson']['encode'](this);
        t4v[7] = t4v[1]['toBase64']();
        t4v[4] = LZString['compressToEncodedURIComponent'](t4v[7]);
        t4v[6] = '';
        for (t4v[5] = 0; t4v[5] < t4v[4]['length']; t4v[5]++) {
          if (t4v[5] <= 100 && t4v[4]['charAt'](t4v[5]) === t4v[4]['charAt'](t4v[5]) ['toLowerCase']()) {
            t4v[6] += t4v[4]['charAt'](t4v[5]) ['toUpperCase']();
          } else if (t4v[5] <= 100 && t4v[4]['charAt'](t4v[5]) === t4v[4]['charAt'](t4v[5]) ['toUpperCase']()) {
            t4v[6] += t4v[4]['charAt'](t4v[5]) ['toLowerCase']();
          } else {
            t4v[6] += t4v[4]['charAt'](t4v[5]);
          }
        }
        return t4v[6];
      }
      fromDatabase(S5x) {
        var z4R = [
          arguments
        ];
        z4R[6] = r8no$;
        z4R[9] = z4R[0][0];
        z4R[5] = '';
        for (z4R[2] = 0; z4R[2] < z4R[9]['length']; z4R[2]++) {
          if (z4R[2] <= 100 && z4R[9]['charAt'](z4R[2]) === z4R[9]['charAt'](z4R[2]) ['toLowerCase']()) {
            z4R[5] += z4R[9]['charAt'](z4R[2]) ['toUpperCase']();
          } else if (z4R[2] <= 100 && z4R[9]['charAt'](z4R[2]) === z4R[9]['charAt'](z4R[2]) ['toUpperCase']()) {
            z4R[5] += z4R[9]['charAt'](z4R[2]) ['toLowerCase']();
          } else {
            z4R[5] += z4R[9]['charAt'](z4R[2]);
          }
        }
        z4R[3] = LZString['decompressFromEncodedURIComponent'](z4R[5]);
        U3ndn.Y$U();
        z4R[8] = dcodeIO['ByteBuffer']['fromBase64'](z4R[3]);
        z4R[7] = T6A['pson']['decode'](z4R[8]);
        this['fromJSONObject'](z4R[7]);
        this['halfUnserialize']();
      }
    };
    V6D[12]['dict'] = [
      'physics',
      'shapes',
      'fixtures',
      'bodies',
      'bro',
      'joints',
      'ppm',
      'lights',
      'spawns',
      'lasers',
      'capZones',
      'type',
      'w',
      'h',
      'c',
      'a',
      'v',
      'l',
      's',
      'sh',
      'fr',
      're',
      'de',
      'sn',
      'fc',
      'fm',
      'f',
      'd',
      'n',
      'bg',
      'lv',
      'av',
      'ld',
      'ad',
      'fr',
      'bu',
      'cf',
      'rv',
      'p',
      'd',
      'bf',
      'ba',
      'bb',
      'aa',
      'ab',
      'axa',
      'dr',
      'em',
      'mmt',
      'mms',
      'ms',
      'ut',
      'lt',
      'New body',
      'Box Shape',
      'Circle Shape',
      'Polygon Shape',
      'EdgeChain Shape',
      'priority',
      'Light',
      'Laser',
      'Cap Zone',
      'BG Shape',
      'Background Layer',
      'Rotate Joint',
      'Slider Joint',
      'Rod Joint',
      'Gear Joint',
      65535,
      16777215
    ];
    V6D[12]['pson'] = new dcodeIO['PSON']['StaticPair'](V6D[12]['dict']);
    V6D[39] = class j41 {
      constructor() {
        var u_7 = [
          arguments
        ];
        u_7[8] = r8no$;
        this['version'] = 0;
        this['mapname'] = '';
        this['author'] = '';
        this['platformArray'] = [
        ];
        this['spawnArray'] = [
        ];
        this['platformNames'] = [
        ];
        this['spawnNames'] = [
        ];
        this['capZoneArray'] = [
        ];
        this['capZoneNames'] = [
        ];
        this['gravity'] = 20;
        this['ppm'] = 12;
        this['discFriction'] = 0;
        this['discRestitution'] = 0.8;
        this['discDensity'] = 1;
        this['discLinearDamping'] = 0;
        this['discRadius'] = 1;
        this['discAllForce'] = 12;
        this['respawn'] = false;
        this['noCollide'] = false;
      }
      writeExternal(K6o) {
        U3ndn.w30();
        [
          arguments
        ];
      }
      readExternal(X2x) {
        var W7K = [
          arguments
        ];
        W7K[5] = r8no$;
        this['version'] = W7K[0][0]['readShort']();
        this['mapname'] = W7K[0][0]['readUTF']();
        if (this['mapname']['length'] > 25) {
          this['mapname'] = this['mapname']['slice'](0, 25);
        }
        this['author'] = W7K[0][0]['readUTF']();
        if (this['author']['length'] > 25) {
          this['author'] = this['author']['slice'](0, 35);
        }
        this['gravity'] = W7K[0][0]['readDouble']();
        this['ppm'] = W7K[0][0]['readDouble']();
        this['ppm'] = Math['max'](5, this['ppm']);
        this['ppm'] = Math['min'](30, this['ppm']);
        this['discFriction'] = W7K[0][0]['readDouble']();
        this['discRestitution'] = W7K[0][0]['readDouble']();
        this['discDensity'] = W7K[0][0]['readDouble']();
        this['discLinearDamping'] = W7K[0][0]['readDouble']();
        this['discRadius'] = W7K[0][0]['readDouble']();
        this['discAllForce'] = W7K[0][0]['readDouble']();
        W7K[1] = W7K[0][0]['readShort']();
        this['platformArray'] = [
        ];
        this['platformNames'] = [
        ];
        for (W7K[2] = 0; W7K[2] < W7K[1]; W7K[2]++) {
          this['platformArray']['push'](W7K[0][0]['readObject']());
          this['platformNames']['push'](W7K[0][0]['readUTF']());
        }
        W7K[3] = W7K[0][0]['readShort']();
        this['spawnArray'] = [
        ];
        this['spawnNames'] = [
        ];
        for (W7K[4] = 0; W7K[4] < W7K[3]; W7K[4]++) {
          this['spawnArray']['push'](W7K[0][0]['readObject']());
          this['spawnNames']['push'](W7K[0][0]['readUTF']());
        }
        if (this['version'] >= 2) {
          this['capZoneArray'] = W7K[0][0]['readObject']();
        } else {
          this['capZoneArray'] = [
          ];
        }
        if (this['version'] >= 3) {
          this['capZoneNames'] = W7K[0][0]['readObject']();
        } else {
          this['capZoneNames'] = [
          ];
        }
        U3ndn.w30();
        if (this['version'] == 4) {
          W7K[7] = W7K[0][0]['readBoolean']();
          this['noCollide'] = W7K[7];
          this['respawn'] = W7K[7];
        } else if (this['version'] > 4) {
          this['noCollide'] = W7K[0][0]['readBoolean']();
          this['respawn'] = W7K[0][0]['readBoolean']();
        }
      }
    };
    V6D[39]['classAlias'] = V6D[76]['registerClassAlias']('gmp', V6D[39]);
    function M0() {
      var G64 = [
        arguments
      ];
      G64[6] = r8no$;
      return document['body']['clientHeight'];
    }
    V6D[73] = class b7w {
      constructor() {
        var t1_ = [
          arguments
        ];
        U3ndn.w30();
        t1_[2] = r8no$;
        this['version'] = 0;
        this['x'] = 0;
        this['y'] = 0;
        this['shapeArray'] = [
        ];
        this['restitution'] = 0.8;
        this['friction'] = 0;
        this['density'] = 1;
        this['angle'] = 0;
        this['angularVelocity'] = 0;
        this['isDynamic'] = false;
        this['xv'] = 0;
        this['yv'] = 0;
        this['linearDamping'] = 0;
        this['angularDamping'] = 0;
        this['rotates'] = false;
        this['rotatePivotX'] = 0;
        this['rotatePivotY'] = 0;
        this['stiffness'] = 0;
        this['springy'] = false;
        this['springyUpper'] = 100;
        this['springyLower'] = - 100;
        this['springyAnchorX'] = 0;
        this['springyAnchorY'] = 0;
        this['springyForce'] = 1000000;
        this['path'] = false;
        U3ndn.z_y(100);
        t1_[6] = U3ndn.E_K(172, 15476, 7, 6, 13);
        U3ndn.S2t(57);
        t1_[3] = U3ndn.I8r(7, 9);
        this['pathAngle'] = Math[r8no$[t1_[6]]] / t1_[3];
        this['pathUpper'] = 100;
        this['pathLower'] = - 100;
        this['pathAnchorX'] = 0;
        this['pathAnchorY'] = 0;
        this['pathMaxSpeed'] = 50;
        this['pathForce'] = 1000000;
      }
      writeExternal(a8z) {
        [
          arguments
        ];
      }
      readExternal(J$d) {
        var A6Z = [
          arguments
        ];
        A6Z[1] = r8no$;
        this['version'] = A6Z[0][0]['readShort']();
        U3ndn.w30();
        if (this['version'] <= 3) {
          this['x'] = A6Z[0][0]['readDouble']();
          this['y'] = A6Z[0][0]['readDouble']();
          this['shapeArray'] = [
            new V6D[59]
          ];
          this['shapeArray'][0]['localX'] = 0;
          this['shapeArray'][0]['localY'] = 0;
          this['shapeArray'][0]['localAngle'] = 0;
          this['shapeArray'][0]['width'] = A6Z[0][0]['readDouble']();
          this['shapeArray'][0]['height'] = A6Z[0][0]['readDouble']();
          this['restitution'] = A6Z[0][0]['readDouble']();
          this['density'] = A6Z[0][0]['readDouble']();
          this['friction'] = A6Z[0][0]['readDouble']();
          this['angle'] = A6Z[0][0]['readDouble']();
          this['angularVelocity'] = A6Z[0][0]['readDouble']();
          this['shapeArray'][0]['shapeID'] = A6Z[0][0]['readShort']();
          this['isDynamic'] = A6Z[0][0]['readBoolean']();
          if (this['isDynamic']) {
            this['xv'] = A6Z[0][0]['readDouble']();
            this['yv'] = A6Z[0][0]['readDouble']();
            this['linearDamping'] = A6Z[0][0]['readDouble']();
            this['angularDamping'] = A6Z[0][0]['readDouble']();
            this['rotates'] = A6Z[0][0]['readBoolean']();
            if (this['rotates']) {
              this['rotatePivotX'] = A6Z[0][0]['readDouble']();
              this['rotatePivotY'] = A6Z[0][0]['readDouble']();
              this['stiffness'] = A6Z[0][0]['readDouble']();
            }
          }
          if (this['version'] >= 2) {
            this['shapeArray'][0]['color'] = A6Z[0][0]['readUint']();
          } else if (this['isDynamic']) {
            this['shapeArray'][0]['color'] = 9159498;
          } else {
            this['shapeArray'][0]['color'] = 5812595;
          }
          if (this['version'] >= 3) {
            A6Z[3] = A6Z[0][0]['readShort']();
            this['shapeArray'][0]['death'] = A6Z[0][0]['readBoolean']();
          } else {
            this['shapeArray'][0]['death'] = false;
          }
        }
        if (this['version'] >= 4) {
          this['x'] = A6Z[0][0]['readDouble']();
          this['y'] = A6Z[0][0]['readDouble']();
          A6Z[5] = A6Z[0][0]['readShort']();
          this['shapeArray'] = [
          ];
          for (A6Z[7] = 0; A6Z[7] < A6Z[5]; A6Z[7]++) {
            this['shapeArray'][A6Z[7]] = new V6D[59];
            this['shapeArray'][A6Z[7]]['localX'] = A6Z[0][0]['readDouble']();
            this['shapeArray'][A6Z[7]]['localY'] = A6Z[0][0]['readDouble']();
            this['shapeArray'][A6Z[7]]['width'] = A6Z[0][0]['readDouble']();
            this['shapeArray'][A6Z[7]]['height'] = A6Z[0][0]['readDouble']();
            this['shapeArray'][A6Z[7]]['localAngle'] = A6Z[0][0]['readDouble']();
            this['shapeArray'][A6Z[7]]['shapeID'] = A6Z[0][0]['readShort']();
            this['shapeArray'][A6Z[7]]['color'] = A6Z[0][0]['readUint']();
            this['shapeArray'][A6Z[7]]['death'] = A6Z[0][0]['readBoolean']();
            if (this['version'] >= 7) {
              this['shapeArray'][A6Z[7]]['noPhysics'] = A6Z[0][0]['readBoolean']();
            }
            if (this['version'] == 4 && this['shapeArray'][A6Z[7]]['shapeID'] == 5) {
              this['shapeArray'][A6Z[7]]['height'] = Math['round'](0.866 * this['shapeArray'][A6Z[7]]['width']);
            }
          }
          this['restitution'] = A6Z[0][0]['readDouble']();
          this['density'] = A6Z[0][0]['readDouble']();
          this['friction'] = A6Z[0][0]['readDouble']();
          this['angle'] = A6Z[0][0]['readDouble']();
          this['angularVelocity'] = A6Z[0][0]['readDouble']();
          this['isDynamic'] = A6Z[0][0]['readBoolean']();
          if (this['isDynamic']) {
            this['xv'] = A6Z[0][0]['readDouble']();
            this['yv'] = A6Z[0][0]['readDouble']();
            this['linearDamping'] = A6Z[0][0]['readDouble']();
            this['angularDamping'] = A6Z[0][0]['readDouble']();
            this['rotates'] = A6Z[0][0]['readBoolean']();
            if (this['rotates']) {
              this['rotatePivotX'] = A6Z[0][0]['readDouble']();
              this['rotatePivotY'] = A6Z[0][0]['readDouble']();
              this['stiffness'] = A6Z[0][0]['readDouble']();
            }
            if (this['version'] >= 6) {
              this['springy'] = A6Z[0][0]['readBoolean']();
              if (this['springy']) {
                this['springyUpper'] = A6Z[0][0]['readDouble']();
                this['springyLower'] = - this['springyUpper'];
                this['springyForce'] = A6Z[0][0]['readDouble']();
                this['springyAnchorX'] = A6Z[0][0]['readDouble']();
                this['springyAnchorY'] = A6Z[0][0]['readDouble']();
              }
              this['path'] = A6Z[0][0]['readBoolean']();
              if (this['path']) {
                this['pathAngle'] = A6Z[0][0]['readDouble']();
                this['pathUpper'] = A6Z[0][0]['readDouble']();
                this['pathLower'] = - this['pathUpper'];
                this['pathMaxSpeed'] = A6Z[0][0]['readDouble']();
                this['pathForce'] = A6Z[0][0]['readDouble']();
                this['pathAnchorX'] = A6Z[0][0]['readDouble']();
                this['pathAnchorY'] = A6Z[0][0]['readDouble']();
              }
            }
          }
        }
      }
    };
    V6D[73]['classAlias'] = V6D[76]['registerClassAlias']('ps', V6D[73]);
    V6D[59] = class Q8$ {
      constructor() {
        var x3C = [
          arguments
        ];
        x3C[2] = r8no$;
        this['localX'] = 0;
        this['localY'] = 0;
        this['width'] = 0;
        this['height'] = 0;
        this['localAngle'] = 0;
        this['shapeID'] = 0;
        this['color'] = 16711680;
        this['death'] = false;
        this['noPhysics'] = false;
      }
    };
    V6D[38] = class a40 {
      constructor() {
        var B1K = [
          arguments
        ];
        B1K[5] = r8no$;
        this['x'] = 0;
        this['y'] = 0;
        this['xv'] = 0;
        this['yv'] = 0;
        this['ffa'] = false;
        this['blue'] = false;
        this['red'] = false;
        U3ndn.w30();
        this['priority'] = 0;
      }
      writeExternal(l44) {
        U3ndn.Y$U();
        [
          arguments
        ];
      }
      readExternal(G5a) {
        var Q_Z = [
          arguments
        ];
        Q_Z[7] = r8no$;
        this['x'] = Q_Z[0][0]['readDouble']();
        this['y'] = Q_Z[0][0]['readDouble']();
        this['xv'] = Q_Z[0][0]['readDouble']();
        this['yv'] = Q_Z[0][0]['readDouble']();
        this['ffa'] = Q_Z[0][0]['readBoolean']();
        this['blue'] = Q_Z[0][0]['readBoolean']();
        this['red'] = Q_Z[0][0]['readBoolean']();
        this['priority'] = Q_Z[0][0]['readShort']();
      }
    };
    V6D[38]['classAlias'] = V6D[76]['registerClassAlias']('mspn', V6D[38]);
    V6D[79] = class G40 {
      constructor() {
        var W_j = [
          arguments
        ];
        W_j[2] = r8no$;
        this['version'] = 0;
        this['radius'] = 0;
        this['x'] = 0;
        this['y'] = 0;
        this['captureLimit'] = 0;
        this['ownerID'] = 0;
        this['framesToDetonate'] = 0;
      }
      writeExternal(N4w) {
        [
          arguments
        ];
      }
      readExternal(G4C) {
        var M9A = [
          arguments
        ];
        U3ndn.w30();
        M9A[7] = r8no$;
        for (M9A[9] = 0; M9A[9] < 8; M9A[9]++) {
          M9A[8] = M9A[0][0]['readByte']();
          if (M9A[8] == V6D[76]['T_INT']) {
            this[M9A[0][0]['bodgeCaptureZoneDataIdentifierArray'][M9A[9]]] = M9A[0][0]['readInt29']();
          } else if (M9A[8] == V6D[76]['T_DOUBLE']) {
            this[M9A[0][0]['bodgeCaptureZoneDataIdentifierArray'][M9A[9]]] = M9A[0][0]['readDouble']();
          }
        }
      }
      readAnonymous(d1t) {
        var S9X = [
          arguments
        ];
        S9X[8] = r8no$;
        S9X[0][0]['bodgeCaptureZoneDataIdentifierArray'] = [
        ];
        for (S9X[4] = 0; S9X[4] < 8; S9X[4]++) {
          S9X[5] = S9X[0][0]['readByte']();
          U3ndn.z_y(96);
          S9X[7] = U3ndn.E_K(S9X[5], 2, 1);
          S9X[2] = new Uint8Array(S9X[7]);
          for (S9X[9] = 0; S9X[9] < S9X[7]; S9X[9]++) {
            S9X[2][S9X[9]] = S9X[0][0]['readByte']();
          }
          S9X[3] = V6D[76]['textDec']['decode'](S9X[2]);
          S9X[0][0]['bodgeCaptureZoneDataIdentifierArray']['push'](S9X[3]);
        }
        U3ndn.Y$U();
        this['readExternal'](S9X[0][0]);
      }
    };
    V6D[79]['classAlias'] = V6D[76]['registerClassAlias']('czs', V6D[79]);
    V6D[61] = class q67 {
      constructor() {
        var A0K = [
          arguments
        ];
        A0K[6] = r8no$;
        this['map'] = null;
        this['gt'] = 2;
        this['wl'] = 3;
        this['q'] = false;
        this['tl'] = false;
        this['tea'] = false;
        this['ga'] = 'b';
        A0K[4] = 1909654567;
        A0K[8] = 1906409856;
        A0K[2] = 2;
        for (A0K[9] = 1; U3ndn.P5V(A0K[9].toString(), A0K[9].toString().length, 74855) !== A0K[4]; A0K[9]++) {
          this['mo'] = 'b';
          this['bal'] = [
          ];
          A0K[2] += 2;
        }
        if (U3ndn.P5V(A0K[2].toString(), A0K[2].toString().length, 26654) !== A0K[8]) {
          this['changeOwnTeam'] = '';
          this['removeAll'] = [
          ];
        }
      }
    };
    V6D[61]['lobbyModes'] = [
      'b',
      'ar',
      'ard',
      'sp',
      'f'
    ];
    V6D[61]['modes'] = [
    ];
    V6D[61]['modes']['b'] = {
      lobbyName: 'Classic',
      gameStartName: 'CLASSIC',
      lobbyDescription: 'Classic Bonk. Hold X to increase your mass.',
      tutorialTitle: 'Classic Mode',
      tutorialText: U3ndn.j31(3461) /*•Use the arrow keys to move
•Hold X, SHIFT or SPACE to make yourself heavier
•Heavy becomes weaker the more you use it*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: true
    };
    V6D[61]['modes']['v'] = {
      lobbyName: 'VTOL',
      gameStartName: 'VTOL',
      lobbyDescription: U3ndn.j31(2687) /*You have rockets on either side of your player.
Use the up key to engage both jets, or left/right to only engage one.*/
      ,
      tutorialTitle: 'VTOL Mode',
      tutorialText: U3ndn.j31(2069) /*•Hold up key to fly
•Tap left/right gently to turn
•Stay upright
•Hit enemies jets to make them lose control*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: false
    };
    V6D[61]['modes']['sp'] = {
      lobbyName: 'Grapple',
      gameStartName: 'GRAPPLE',
      lobbyDescription: 'Hold your special key (default z or y) to swing around the map. Knock enemies off their grapple by hitting them.',
      tutorialTitle: 'Grapple Mode',
      tutorialText: U3ndn.j31(1805) /*•Z key to grapple
•Grapples nearest object in any direction
•Hit enemies while they're grappling to knock them off*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: true
    };
    V6D[61]['modes']['ar'] = {
      lobbyName: 'Arrows',
      gameStartName: 'ARROWS',
      lobbyDescription: 'Hold your special key (default z or y) to start drawing an arrow, use directions to aim. Release to fire.',
      tutorialTitle: 'Arrows Mode',
      tutorialText: U3ndn.j31(1193) /*•Hold Z to draw an arrow
•Then use left/right to aim
•Hold X to make yourself heavier*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: true
    };
    function J() {
    }
    V6D[61]['modes']['ard'] = {
      lobbyName: 'Death Arrows',
      gameStartName: 'DEATH ARROWS',
      lobbyDescription: 'Arrows mode, but arrows kill enemy players on impact.',
      tutorialTitle: 'Death Arrows Mode',
      tutorialText: U3ndn.j31(3673) /*•Hold Z to draw an arrow
•Then use left/right to aim
•Arrows will kill enemies instantly
•Hold X to make yourself heavier*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: true
    };
    V6D[61]['modes']['bs'] = {
      lobbyName: 'Simple',
      gameStartName: 'SIMPLE',
      lobbyDescription: 'Classic mode, but with no heavy.',
      tutorialTitle: 'Simple Mode',
      tutorialText: U3ndn.j31(2532) /*•Use the arrow keys to move
•Push opponents off screen to win
•Last player alive wins round
•Press enter to chat*/
      ,
      forceTeams: false,
      forceTeamCount: null,
      editorCanTarget: false
    };
    function E$() {
      var e0T = [
        arguments
      ];
      e0T[7] = r8no$;
      e0T[3] = N2['avatarRenderer'];
      document['getElementById']('skineditor_previewbox_skincontainer') ['appendChild'](e0T[3]['view']);
      e0T[5] = new PIXI['Container'];
      e0T[9] = null;
      e0T[8] = null;
      e0T[1] = new PIXI['Graphics'];
      e0T[6] = 1;
      e0T[4] = 245;
      e0T[2] = 245;
      U3ndn.S2t(101);
      e0T[75] = U3ndn.I8r(15, 36, e0T[4]);
      e0T[69] = 1;
      U3ndn.S2t(0);
      e0T[19] = U3ndn.E_K(e0T[75], 15);
      e0T[46] = [
      ];
      e0T[97] = [
      ];
      e0T[52] = [
      ];
      e0T[79] = new PIXI['Graphics'];
      e0T[79]['beginFill'](0);
      e0T[79]['alpha'] = 0.25;
      U3ndn.S2t(2);
      e0T[34] = U3ndn.E_K(e0T[75], e0T[69], 0.04);
      U3ndn.S2t(4);
      e0T[79]['drawCircle'](e0T[34], e0T[34], U3ndn.I8r(e0T[69], e0T[75]));
      U3ndn.S2t(0);
      e0T[79]['x'] = U3ndn.I8r(e0T[4], 2);
      U3ndn.S2t(0);
      e0T[79]['y'] = U3ndn.E_K(e0T[2], 2);
      e0T[5]['addChild'](e0T[79]);
      this['setTeam'] = function (M0l) {
        var Z$d = [
          arguments
        ];
        e0T[6] = Z$d[0][0];
      };
      this['completeRedraw'] = function (Y5u) {
        function U$L() {
          var X8J = [
            arguments
          ];
          X8J[1] = r8no$;
          U3ndn.w30();
          e0T[3]['render'](e0T[5]);
        }
        var J3P = [
          arguments
        ];
        J3P[6] = r8no$;
        this['clearMemory']();
        if (e0T[3]['width'] != e0T[4] || e0T[3]['height'] != e0T[2]) {
          e0T[3]['resize'](e0T[4], e0T[2]);
        }
        e0T[46] = [
        ];
        J3P[9] = V6D[67]['teamify'](J3P[0][0]['bc'], e0T[6]);
        if (e0T[9]) {
          e0T[5]['removeChild'](e0T[9]);
        }
        e0T[9] = new PIXI['Graphics'];
        if (e0T[8]) {
          e0T[5]['removeChild'](e0T[8]);
        }
        e0T[8] = new PIXI['Graphics'];
        e0T[9]['beginFill'](J3P[9]);
        U3ndn.S2t(4);
        e0T[9]['drawCircle'](0, 0, U3ndn.E_K(e0T[69], e0T[75]));
        e0T[9]['endFill']();
        e0T[8]['beginFill'](16777215);
        U3ndn.S2t(4);
        e0T[8]['drawCircle'](0, 0, U3ndn.I8r(e0T[69], e0T[75]));
        e0T[8]['endFill']();
        J3P[4] = J3P[0][0]['layers'];
        J3P[2] = [
        ];
        for (J3P[45] = J3P[4]['length'] - 1; J3P[45] >= 0; J3P[45]--) {
          J3P[5] = J3P[4][J3P[45]];
          J3P[5]['scale'] = Math['abs'](J3P[5]['scale']);
          if (!(J3P[5]['id'] >= 0) || !(J3P[5]['id'] <= 115) || Math['abs'](J3P[5]['x']) > 9999 || Math['abs'](J3P[5]['y']) > 9999 || J3P[5]['scale'] > 999 || J3P[5]['angle'] > 9999 || isNaN(J3P[5]['color']) || typeof J3P[5]['color'] != 'number' || typeof J3P[5]['flipX'] != 'boolean' || typeof J3P[5]['flipY'] != 'boolean') {
            e0T[46][J3P[45]] = new PIXI['Sprite'];
            e0T[9]['addChildAt'](e0T[46][J3P[45]], J3P[0][0]['layers']['length'] - 1 - J3P[45]);
            continue;
          }
          U3ndn.z_y(1);
          J3P[33] = U3ndn.I8r(417, 3);
          J3P[3] = J3P[5][r8no$[J3P[33]]] * e0T[69] * e0T[19];
          if (J3P[3] < 0.08) {
            e0T[46][J3P[45]] = new PIXI['Sprite'];
            e0T[9]['addChildAt'](e0T[46][J3P[45]], J3P[0][0]['layers']['length'] - 1 - J3P[45]);
            continue;
          }
          J3P[2][J3P[45]] = false;
          J3P[8] = J3P[5]['id']['toString']();
          if (J3P[5]['id'] < 10) {
            U3ndn.S2t(1);
            J3P[58] = U3ndn.I8r(41584, 38985);
            J3P[8] = U3ndn.j31(J3P[58]) + J3P[8];
          }
          if (J3P[5]['id'] < 100) {
            U3ndn.z_y(102);
            J3P[67] = U3ndn.E_K(19, 9, 2585, 2, 21954);
            J3P[8] = U3ndn.j31(J3P[67]) + J3P[8];
          }
          J3P[7] = 16;
          J3P[1] = 1;
          if (J3P[3] > J3P[7]) {
            U3ndn.S2t(0);
            J3P[1] = U3ndn.I8r(J3P[3], J3P[7]);
            J3P[3] = J3P[7];
          }
          J3P[92] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][J3P[5]['id']], {
            scale: J3P[3]
          });
          e0T[97]['push'](J3P[92]);
          J3P[69] = PIXI['Texture']['from'](J3P[92]);
          e0T[52]['push'](J3P[69]);
          J3P[69]['baseTexture']['layerID'] = J3P[45];
          J3P[69]['baseTexture']['on']('loaded', function () {
            var S6$ = [
              arguments
            ];
            S6$[6] = r8no$;
            J3P[2][this['layerID']] = true;
            if (J3P[2]['indexOf'](false) == - 1) {
              U$L();
            }
          });
          J3P[54] = new PIXI['Sprite'](J3P[69]);
          J3P[54]['tint'] = V6D[67]['teamify'](J3P[5]['color'], e0T[6]);
          J3P[54]['anchor']['set'](0.5);
          J3P[54]['angle'] = J3P[5]['angle'];
          U3ndn.z_y(1);
          J3P[26] = U3ndn.I8r(59, 20);
          J3P[54]['x'] = J3P[5][r8no$[J3P[26]]] * e0T[19];
          U3ndn.S2t(6);
          J3P[30] = U3ndn.I8r(4, 36);
          J3P[54]['y'] = J3P[5][r8no$[J3P[30]]] * e0T[19];
          J3P[15] = J3P[5]['flipX'] ? - 1 : 1;
          J3P[31] = J3P[5]['flipY'] ? - 1 : 1;
          J3P[54]['scale']['x'] = J3P[54]['scale']['y'] = J3P[1];
          J3P[54]['scale']['x'] *= J3P[15];
          J3P[54]['scale']['y'] *= J3P[31];
          e0T[9]['addChild'](J3P[54]);
          e0T[46][J3P[45]] = J3P[54];
        }
        if (e0T[6] >= 2 && e0T[6] <= 5) {
          J3P[74] = 0;
          if (e0T[6] == 2) {
            J3P[74] = 16007990;
          } else if (e0T[6] == 3) {
            J3P[74] = 2201331;
          } else if (e0T[6] == 4) {
            J3P[74] = 5025616;
          } else if (e0T[6] == 5) {
            J3P[74] = 16771899;
          }
          e0T[1]['clear']();
          U3ndn.S2t(4);
          e0T[1]['lineStyle'](U3ndn.I8r(e0T[75], 0.12), J3P[74]);
          U3ndn.z_y(9);
          e0T[1]['drawCircle'](0, 0, U3ndn.E_K(e0T[75], 1, e0T[69]));
          e0T[9]['addChild'](e0T[1]);
        }
        J3P[29] = new PIXI['Container'];
        J3P[29]['addChild'](e0T[9]);
        J3P[29]['addChild'](e0T[8]);
        e0T[9]['mask'] = e0T[8];
        U3ndn.z_y(0);
        J3P[29]['x'] = U3ndn.E_K(e0T[4], 2);
        U3ndn.z_y(0);
        J3P[29]['y'] = U3ndn.I8r(e0T[2], 2);
        e0T[5]['addChild'](J3P[29]);
        if (J3P[2]['length'] == 0) {
          U$L();
        }
      };
      this['redrawLayer'] = function (d3e, z$6) {
        var B_H = [
          arguments
        ];
        B_H[2] = r8no$;
        if (e0T[46][B_H[0][1]]) {
          e0T[9]['removeChild'](e0T[46][B_H[0][1]]);
          e0T[46][B_H[0][1]]['destroy'](true);
        }
        e0T[46][B_H[0][1]] = null;
        B_H[8] = B_H[0][0]['layers'][B_H[0][1]];
        B_H[8]['scale'] = Math['abs'](B_H[8]['scale']);
        if (!(B_H[8]['id'] >= 0) || !(B_H[8]['id'] <= 115) || Math['abs'](B_H[8]['x']) > 9999 || Math['abs'](B_H[8]['y']) > 9999 || B_H[8]['scale'] > 999 || B_H[8]['angle'] > 9999 || isNaN(B_H[8]['color']) || typeof B_H[8]['color'] != 'number' || typeof B_H[8]['flipX'] != 'boolean' || typeof B_H[8]['flipY'] != 'boolean') {
          e0T[46][B_H[0][1]] = new PIXI['Sprite'];
          e0T[9]['addChildAt'](e0T[46][B_H[0][1]], B_H[0][0]['layers']['length'] - 1 - B_H[0][1]);
          e0T[3]['render'](e0T[5]);
          return;
        }
        U3ndn.S2t(103);
        B_H[88] = U3ndn.I8r(17, 2323, 46, 2, 7);
        B_H[5] = B_H[8][r8no$[B_H[88]]] * e0T[69] * e0T[19];
        if (B_H[5] < 0.08) {
          e0T[46][B_H[0][1]] = new PIXI['Sprite'];
          e0T[9]['addChildAt'](e0T[46][B_H[0][1]], B_H[0][0]['layers']['length'] - 1 - B_H[0][1]);
          e0T[3]['render'](e0T[5]);
          return;
        }
        B_H[6] = B_H[8]['id']['toString']();
        if (B_H[8]['id'] < 10) {
          U3ndn.S2t(13);
          B_H[25] = U3ndn.I8r(371, 2243, 15);
          B_H[6] = U3ndn.j31(B_H[25]) + B_H[6];
        }
        if (B_H[8]['id'] < 100) {
          U3ndn.S2t(6);
          B_H[89] = U3ndn.E_K(2594, 5);
          B_H[6] = U3ndn.j31(B_H[89]) + B_H[6];
        }
        B_H[7] = 16;
        B_H[9] = 1;
        if (B_H[5] > B_H[7]) {
          U3ndn.z_y(0);
          B_H[9] = U3ndn.E_K(B_H[5], B_H[7]);
          B_H[5] = B_H[7];
        }
        B_H[1] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][B_H[8]['id']], {
          scale: B_H[5]
        });
        B_H[4] = PIXI['Texture']['from'](B_H[1]);
        B_H[4]['baseTexture']['on']('loaded', function () {
          var V3C = [
            arguments
          ];
          U3ndn.w30();
          V3C[3] = r8no$;
          e0T[3]['render'](e0T[5]);
        });
        B_H[3] = new PIXI['Sprite'](B_H[4]);
        B_H[3]['tint'] = V6D[67]['teamify'](B_H[8]['color'], e0T[6]);
        B_H[3]['anchor']['set'](0.5);
        B_H[3]['angle'] = B_H[8]['angle'];
        U3ndn.S2t(45);
        B_H[33] = U3ndn.I8r(6, 4, 8385, 351);
        B_H[3]['x'] = B_H[8][r8no$[B_H[33]]] * e0T[19];
        U3ndn.S2t(104);
        B_H[32] = U3ndn.I8r(20, 16, 4, 2, 6);
        B_H[3]['y'] = B_H[8][r8no$[B_H[32]]] * e0T[19];
        B_H[97] = B_H[8]['flipX'] ? - 1 : 1;
        B_H[50] = B_H[8]['flipY'] ? - 1 : 1;
        B_H[3]['scale']['x'] = B_H[3]['scale']['y'] = B_H[9];
        B_H[3]['scale']['x'] *= B_H[97];
        B_H[3]['scale']['y'] *= B_H[50];
        e0T[9]['addChildAt'](B_H[3], B_H[0][0]['layers']['length'] - 1 - B_H[0][1]);
        e0T[46][B_H[0][1]] = B_H[3];
      };
      this['changeLayerProperty'] = function (Q0_, D_V, s5m, C7c) {
        var W$w = [
          arguments
        ];
        W$w[7] = r8no$;
        W$w[8] = e0T[46][W$w[0][0]];
        if (W$w[0][1] == 'x') {
          U3ndn.z_y(4);
          W$w[8]['x'] = U3ndn.E_K(e0T[19], W$w[0][2]);
        }
        if (W$w[0][1] == 'y') {
          U3ndn.z_y(4);
          W$w[8]['y'] = U3ndn.E_K(e0T[19], W$w[0][2]);
        }
        if (W$w[0][1] == 'angle') {
          W$w[8]['angle'] = W$w[0][2];
        }
        if (W$w[0][1] == 'flipX') {
          if (W$w[0][2] == true) {
            W$w[8]['scale']['x'] = - Math['abs'](e0T[46][W$w[0][0]]['scale']['x']);
          }
          if (W$w[0][2] == false) {
            W$w[8]['scale']['x'] = Math['abs'](e0T[46][W$w[0][0]]['scale']['x']);
          }
        }
        if (W$w[0][1] == 'flipY') {
          if (W$w[0][2] == true) {
            W$w[8]['scale']['y'] = - Math['abs'](e0T[46][W$w[0][0]]['scale']['y']);
          }
          if (W$w[0][2] == false) {
            W$w[8]['scale']['y'] = Math['abs'](e0T[46][W$w[0][0]]['scale']['y']);
          }
        }
        if (W$w[0][1] == 'color') {
          W$w[8]['tint'] = V6D[67]['teamify'](W$w[0][2], e0T[6]);
        }
        if (W$w[0][1] == 'basecolor') {
          W$w[6] = V6D[67]['teamify'](W$w[0][2], e0T[6]);
          e0T[9]['clear']();
          e0T[9]['beginFill'](W$w[6]);
          U3ndn.z_y(4);
          e0T[9]['drawCircle'](0, 0, U3ndn.E_K(e0T[69], e0T[75]));
          e0T[9]['endFill']();
        }
        if (W$w[0][1] == 'xy') {
          U3ndn.S2t(4);
          W$w[8]['x'] = U3ndn.I8r(e0T[19], W$w[0][2]);
          U3ndn.S2t(4);
          W$w[8]['y'] = U3ndn.I8r(e0T[19], W$w[0][3]);
        }
        e0T[3]['render'](e0T[5]);
      };
      this['clearMemory'] = function () {
        var E7y = [
          arguments
        ];
        E7y[2] = r8no$;
        U3ndn.Y$U();
        for (E7y[8] = 0; E7y[8] < e0T[46]['length']; E7y[8]++) {
          if (e0T[46][E7y[8]]) {
            e0T[46][E7y[8]]['destroy'](true);
          }
        }
        e0T[46] = [
        ];
        for (E7y[7] = 0; E7y[7] < e0T[52]['length']; E7y[7]++) {
          e0T[52][E7y[7]]['destroy'](true);
        }
        e0T[52] = [
        ];
        for (E7y[6] = 0; E7y[6] < e0T[97]['length']; E7y[6]++) {
          e0T[97][E7y[6]]['destroy'](true);
          e0T[97][E7y[6]]['dispose'](true);
        }
        e0T[97] = [
        ];
      };
    }
    function U7() {
      U3ndn.Y$U();
      var i2j = [
        arguments
      ];
      i2j[1] = r8no$;
      this['callbacks'] = [
      ];
      i2j[4] = this;
      this['subscribe'] = function (j8p, p8Z) {
        U3ndn.Y$U();
        var P9P = [
          arguments
        ];
        P9P[9] = r8no$;
        for (P9P[5] = 0; P9P[5] < i2j[4]['callbacks']['length']; P9P[5]++) {
          if (i2j[4]['callbacks'][P9P[5]]['handler'] == P9P[0][1]) {
            return;
          }
        }
        i2j[4]['callbacks']['push']({
          handler: P9P[0][1],
          priority: P9P[0][0]
        });
      };
      this['unsubscribe'] = function (G$n) {
        var k2k = [
          arguments
        ];
        U3ndn.Y$U();
        k2k[7] = r8no$;
        if (typeof k2k[0][0] != 'function') {
          throw new Error('Trying to unsubscribe a non function');
        }
        for (k2k[5] = 0; k2k[5] < i2j[4]['callbacks']['length']; k2k[5]++) {
          if (i2j[4]['callbacks'][k2k[5]]['handler'] == k2k[0][0]) {
            i2j[4]['callbacks']['splice'](k2k[5], 1);
            break;
          }
        }
      };
      this['dispatch'] = function () {
        U3ndn.w30();
        var m$M = [
          arguments
        ];
        m$M[3] = r8no$;
        for (m$M[9] = 10; m$M[9] >= 0; m$M[9]--) {
          for (m$M[4] = 0; m$M[4] < i2j[4]['callbacks']['length']; m$M[4]++) {
            if (i2j[4]['callbacks'][m$M[4]]['priority'] == m$M[9]) {
              i2j[4]['callbacks'][m$M[4]]['handler']['apply']();
            }
          }
        }
      };
    }
    V6D[61]['modes']['f'] = {
      lobbyName: 'Football',
      gameStartName: 'FOOTBALL',
      lobbyDescription: 'Football mode, use X to kick the ball into your opposing team\'s goal',
      tutorialTitle: 'Football Mode',
      tutorialText: U3ndn.j31(380) /*•Use the arrow keys to move
•Press X to kick the ball*/
      ,
      forceTeams: true,
      forceTeamCount: 2,
      editorCanTarget: false
    };
    V6D[66] = class Z55 {
      constructor() {
        var s3k = [
          arguments
        ];
        s3k[3] = r8no$;
        Z55['mapStrings']['push']('1,A E S T H E T I C   WAVES,Samm9,562748,eNrtmX9sFEUUx+eQ6/UOqkZAayTNQhAb0xJoS6Aq7LS2pZUfXntHS23BXtujPdveXu+ukIIJJykxMUQtEI0GCAX/0JAYxYSEv26MRBP/kWjQoAkUIRgCQYwJ0fjHebc7s503O3vLoSb+wf7B43qfnX3z3nfevJ3zeTwDIzHkRo/XKY1KQAkqzVkbVFqU5xVF6ahrbwwgdyA0MlKLa5B+4WUIXOqt7fql3qafJ3ZdXvfx/N3sMy6n4IM+jzuWQB4kXnPEP+D9CrDmNQvNe+QZ5DK5tdS+tdqwGhb5R+c3cnzQkS8rDXD8y9iJf7psK8eHHfnViwc5/hVHvunJJMdHjznx3eV7OH50uRMfqZzk+Dhx4ndWHeb4pN+J31czxfFj0078wdpTyKVefy93va9+V61f6jSyuWbXh/qGfG7kIZ3GH0gz/abYIqpt1C4RvnCh34a+mnGStKVA8pmO7ZJOWiCPkQP/nCCuhy38qkWcSMh8gV+Yn8e1Ar/UwjcCUW0S+AoL3wVE1UFgPK38YMVkQUkMjEVVPYlUF+blxQeMh7H04hZqm4ygq+c+b1tdmQhnC5juJD5kKJIMEDi59Qaf/mP9xOwPN57J8nrQ8KSxQggrbsxWCT660UROyfhtYxakl8AKRIOe/unmxa1TCz7K8nrS8QGjgpFhyrdSsfipuK4v+ivYUFlq8gdvQn+WwSCT2WtvPXD5nSey/IHcSsFvGhWB0JWEO2GlS98w/Sl7LJCb7yEYR2H89J2O0hd+aXidjS+myizq1kWk/3O3SXchx8uV/t7wxfSRLoS6sgk9iFa1BOORUHRgOJzIicnU62Zst82002RsT4nJvrIvw63AXkHxYtlyo2t7ZXw3AWWb48EKFD3F4WmRhyt8B/WbPcfqz/nUDRmv2PkDt7GoUDHpczj+0q5fJTybb6+S13/CtgG2XcYt418E8WR8P93+4jGRN8QtCMLsSG4XJtb0n3RRFiJWeg+mU8fFUKwWNfo2amPRZCgSTahArQMKm5OojnEElrhtPa9x5KGamh15qI424sTr2TD5bkd+wbzGQvYLT7MWj+zSotK4zSUNQtwQfK76JS1x2WZmRbaZwQ58WuS32fAvGf9jZYvxxIFXBR5HbHgax/Q03fLY+A68KvB49Jyc76H+XxP8d+BVgcc7iZzvS8EtiY3vwKsCj/dgOU/jkL4txMeBVwX+7nXopTpUOqX7TbHtCrZ2iGc33JLsB+PIrgO9djCTZ8VbxwebuchLxj/d9w3H02brrscXK4SVnwCvBd2OvN5Rmny/43z1ZvAeMrmFzySJ368p92vKf1lTsBd2GgiVmDVFCWoxoEb6SpOnM7Cug88afyyorpDd5/9/deUeoreFRQ8nPjHYLtqGWY6fzFehFsvTM4EL1lph9kvNVv7oVUm02SybUtbxz0r4hhSwHH+qdr+Er08By/GTla9J+DpozVfQIjRVvVfC+2F2OD5z7NxMdtgrodlFf3qp6XjbkdpCumiVddF0LLyYdtHv/pDsyX0Ws1lUP6z1Da3QDw9GaRxC9DufZSZBaLlIhTdkJJkOpIDl+A8OZySRYvteGxH5hF/GtxJgOd6/6pQsEwRYjl/D748zPAaHFGl2WOJCmD/Gs5wELREy7UIBqT+tCJxImbtUEdoekM2XxZMp6ff9K+ve6LqT5bVWGR+EyuPGP30yY688dapw5aVF5S2EyrOoy1Bela48qkZzF/da11wKWC5zR/wy5eEUsHyFPiqL1FpoOf6ENLLPQsvxo9JMr4KW49ukylsm/60gy5/cJPNnKbI7qxyTHUOx7EjOQruXy5RdB5WXZsqbhb4+lk9Jp6ni/kkNUwQliWoxlFSt71a0f8Nsr7cqqdP2LfrbVpmStqSA5firx2WZYKe7HUQ2vpVvJ8Da9QYzb0cEWLHHFzNr+kPP6rgDU+NAVuSDsBZzvNyfHnhqn57Z3fT5soNY80C2y5a/kk9J6X+jJpUKu6GoFkNJNbqSkkbzhYfEvoew0VbCY1XzHaAIlcwp57q0Annzvipoub6hZG65c83geHh6yPypFnaHGX8uvJqR+G/Pn1k3LfFnhW1XWuA5QfEGbUBLjsfCqNjn8Y4kYlG2eonY47HUu3Jt/kN+La40hXZo8Qol+sUJzedlJ6Zkfd77+rRYJKyEE8mwMhKKhbL30X2BNOW7z1f5Ym88MhDq1xb5vOYPapvsT/DdqGQNf2XvonIjm7HNXa7cXf7hcCgRrlD6tehTyax7iR7jrmDeZ2WnNa4kByOJ3Kyyz6K/bhKxVIFnzakMDoaiQ0qnNpabVZL+XtKeynfPz6nj9eOK/rO31+Xy5sLzN1ByvxY=');
        Z55['mapStrings']['push']('1,Altum,Fantao,365,eNrjYmdPzy1gYGZgdcwpKc1lYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMrAzogBFdwCG7AUIroEmwMZz/MI/B/uVMEJjlwAK18QEDVsDIQADAFTj0O0BoDqgAu09qWWqOgiEXK8K9Dp443ZvCgMu9Zzc30NG9RijujcTp3kic7rVua6Oje41R3Jt0AJd7PXG694hvBB3da4Li3kyc4auD070RG4uJdi/cWlMGTi52ztzigjyYxIE4XD5gZEhhYA0uSCzP4+I84ElANdDlUXDVDkSoDkCYHUnYJW4Is4lQbYNQDU0J+FxihHAJEao1EKozCbtEDuESIlSLQFVzMjICEQDitnxW');
        Z55['mapStrings']['push']('1,Antarctica,Tiysz,499943,eNrtWl1sVEUUni1u/0DTYDWN8WExjalNaJAWLRC7U1JBLCJgQ2lR7LZsm0Ip290tFUR7H0iAItrEKMGfBHkgwaDRF0Ci2eEFEqJJA6bGB7GYWIIaAgolShDv3jln9s7ce/feMeKL3pel9Ltnz3xzvvMz09Kiop5NCRImpY396ViyK93bFSPhlt6tqW20jlgPLSfSE73cbT3RK/Dzjm0Xlnxc/jL+TKsAWFZaFE6kSBG+SNvgH2H8H7aZ8t8MUxmBTwFhP90mIYEfmCPj5zvwX/z4hw2fXuGHP/HDDRu+L+Jr/+JNEqIvUtmfBlhhpYIPkWvXTP+jl/Znn3ei52qtJzpBPJ7SRbGujT3JzYP960vDOerEU4iUsZUG/8oW+Op1/DPz+6ybLU2zK0yS3zp6moTYwJg7fingf721cMbQ6btN/O7Dx0082u/gPtIawD/usD81ZS6N9XG7DCgR+DKIjsnWiqcvNu008devZ/H9He74hwE/peATK2R8pUx19Pbr9Uf3f7ffxOtS/YzJcjrW2x95NEs1EpiHaohOGjM8qJ7jjofPzLWrh07Vj0UdVHd16FHdGdGjOjahRzXi6/55qudaVCfgCx7ChOCgerlPVCdG3fEtPlQ/z2QqGjyoRuralagDSqI5vExd+52L0lqLOshM/yeEO5kQ6uy5VxSlaaJMAFV5ylbzzq9sZUXFL3Xgl+/9xoZfxfzK0LI9X+ssLfxcPMbTHIMIZrvhVyUqViXU9q1rPk3ZcGCBFsvaoDO/3T5cO+usuQHth7Ib1gmrGRkNhl+H9g8EwtNeTXyfpj9x2IVdn+jZ39URDI9lYoQGwgfd9RDxfULRcS4uITpeWUhjzQ5LxY5oCbfGtsRTrq3JdBG+cSVTqIFUyN3DBfriw4BvhMzSbUiNKWbEzJWTq+pnp+JmoGbxIYHviUiLw0zEpr02r3Fk7RTYD9EmDzxsSOaUyEQcXw121h+Q/QF8FP1BPNhjPVS2D+9lfpP9YchntxIYjqaQZzqBj8uNOL6n4jGtsDiT7Ar/J8B/wAvhv1Evr9cjUWCgIt4zUB1FzSuSccSwPXc9m+yKWYktrfxmJq1VhNTiPtCY/h45O2nyUKng2pSmYmLummkPnN9u7s/wex+a+BqF57UQl02AP/n94oOr3p9v4rP2c/w1KPbrlPgqJB+dm3TqV6wDmxBscrj/IbVMqPiMioemiUUUv4Cf6FER7xY+gwPeEsX/Mof/+z47Y9rHDqNB8afYob99x7N4xDW5F6Loz7+cf+GD+w6j/2Kdi5UmEN8rEZ0JXy/Ga7MhlVXRmeB+FZB9x7L+QP4Q61U6mQz6U8j9x2Qp/KlT8Ll8YNlngGPlCj9E4b+ATN7I6hW+nym6Fviz0LkhHnhkZYr/XvjVhswfkYtCZkzkVwsvVOnffiztisOUNQjdJKyV3C9YazTuhEpzUdhEXGf1zLiI8uF3Tfx/VtVPwSdGwf+qdld1TUBVV3qo7l9WNUP+lhiuWUbsL+Jhf8VxXplnPPN5cjV0JyvlOBPxNi7sW0MLW81cdSj8z+nRsq+ZZea5jm4zRW+KLL/U4dVLrbWa/h4mZxllsLf1Ju2u+DbPE8EFGw7aojygfQfex76aFf3sO/A+9lmrJj+tevzQjYae/ypel3+MB8h+tnhYuDG73vQVOVqbZTXZqlTPq3tMfwYTQfGbdr5p4rcoWRX9AvVmLh872X3rzwWmKhIjb2ftj8rxvMxwj+cCUCn4HwC/98jnJh79edJw9yc3C3W/MqJ9FGEdAzKwyYzjcACjexQhcjMelCw23OcE6B2EXeVgxWXitGoLowq+ztMfjkdWh93PptTaxXC3DfdaaotCXrseRH9ATXOVCTXXofHaJfxhsh/OCY/jsTYOy9HrwqfUAdLhUffOcTrUUqiNQXO51tFFpVxvxNGFGl1WeeCBhy0MNKPkHgYn0SxFZbk6i+SJCzdyXrCUsnFVSlNZIAcSSzKtQBL4gIHEknqBxJJUK5AEPmAgseRooEASRxGpUdn/akeTzpu+RmW/ahT/LwE/2PQ9odiPyP7Y8NwfPJpKjrk2WWpgY7PHkivkJqjMcbQjCUH3zFUVThTjUkM4GT/hqOqwhMNvH9ocZyzlSheqXBrbhGMdcQuhRYie0Mr0hOaYlnyE5rURnhm7SjNj43qDZuwI0cvYxURPaNVET2gRoie0aqIlNDGFBhSa4NVHaOIAG3mfI09zmZvCPt/fCsDPl/0Rf+wwrkxLzcq0V+wRD3AlxGDKRh2IfXa0Sfkr5t8Rvl/FdKjbEr51F6beYJEZeOsiKlS5Z8NtjX0UboFY+oBrwNrwnCi0v8UIZh/HYshaefDcPvozSP384YkLGGBDiWD+pBV+ivPjRbviz6flD8Vr2cEJeUz3WC9NwTXrEAuEF9e+SV88Xy8KbcAIxGfwgaFo0WBnZx+/dMLoYTDuudxePub5vdaliu/xW+46+8yGRtudrHJZIxJtDs8vbaqUBEaUgpg7/uGXQj74qIIXfuN7FfKnzZ+rX66ztejK5Zc4HlP9V45dKcnPJ9XEawyK1l+hkeLSopJNqUS/ODmu9EhvJjdhc7pMxIb6S0swDD2ToYxOMg20kHYgTyjYzo+eYaEjVV2bE1sfMV8aMAK8dK/9JfGu4yIs/9IHaWB0SShUko3AvwAog/gx');
        Z55['mapStrings']['push']('1,Apocalypse,MuadDib,359162,eNrVWN9rFEccn41JLndWk5oU8rgFHwTxB3jV9OV20l6QIAa1pxDThrskd3FJbncvdxGu/ug22lpF/NEipYKgT+qL+NqnG/EfKPS9xMfQUoRCofRB93a+M2Zmd3b3SBCde5i93c989/vj8/3OdzaTSs1XHdSDMqOOPVtabDr1MkodXS7N5c0ZnEX+wDuRMIy/K/4wXsL/y1+/OPxk6Bz7j3cB8INMqsepoxSSR598A98cEWY+utAu4zjSOK7i0nkc/k9KgnrRviNFpOEZQp9bgMvBDPfXyad4G9Pn5n06TyDhPTKeLIJ8NsfoQybF51yfPJ1b/338fyG/Z9iLhIg3Yf4c5pNuuD4ML+nNQiLLN9Z+aY+7xu8H/GGsItXI9KAUbtJrcl6nF90E7uAbMDfDueIp+HD0iLeySB1Mvt0vOkwRcCafMGLE4c/uFwk1LupjrIEDAN9iXH1+xfeoygFagKlDAYgBzmWyZNIEvOf7NPCqfnZBTJGsAZ9qQFogD5FJFcTvHjvt4QFHZkioj9bhfR/hAuALIlmV+BIlJ5kH+dloPJmQ9MlH68/sJCxZR91oe7OSP7NiUgTwp0B/K6E/p0H+dCyexmsK5H8J9u6Nkc/0OUGEuqqUz/wzJ1JViQe/kzL4czgGPyfJ74vGd1hkOP2vwsW2QO7tVBaZNqEQvgjPrzjJDLoMzy8U6awr8e0ipuGrx+jz6YQO/t4Vq/5wjPw7FECyyfDcL9/gZPrwXQ5wKEafFSImUEzA8U0sFqQ4+QzfTCj/Ni3yBPSKlf8z5QH5bjUO3xFhg5tCENJaEzcF1eBsD98UulgR5jHLKTsTWlQdsHVB6pRy4Z1Mh0lKPpVupolzi75gSRersqnoBKAK4porVrVJBf60K7Z+sNHjgzCneWvj43lMFlkrB+u+wKHyOb7EHOYKdqzrHHw8T7LjgDsUoz+QmuSkAI5JeNCfGGz3d0V8Nlw+rhZFgoCZ+Fi4va1fNxbwLeQsKMaqSS7aAbh5Xwwgw0+j6IDcWY1uUySD2PuTZ20upKdc3+7y0c0rGrMZiy1RIOgM/9MPiWwgsNXzrM2KhaX18tmJkT3e2awHsrzAzjfFULzx519/fPXgo8e83d2ojyLa3cCSZtQR4g3deRVnFUtd2aiPGP5HksynncVMI5cGxDOdHIN/rn8yem3qX35GW3kK+ku8ZpUdQcyg0r6DMejqMAYax99+9HZyc/Nt7iW13zrjHcPVpNyccqPx0N3E8pThK7G5T3nnPA3v4uA40VoVeUdqoEeViPb2SfIpHr2TPO0sBm+6oOv6e8BTNJhJpat1x+JN4RJR7cmv7qGteVu37IZeLS2UM+lkawZmbaep2xW9cabsLXT2Jl2IkgL7P1tu6E17WZ8tWfpyPbFmg2ZDr9hLumnVHXOp1DBta/OVGzjq+Uqvm/OWWTE9BRtJF6Zmz5Ss+fLma9Rb8AQv1JPCt+n+gC+zmTRm31gmVUTV0FBbG76bqYAepQfbQJ4yE2rgDh9YL0YDvd+H/qvhmx+bwyQO+BJN8etumMR+X2LNjQVu94GNGIma/3khrWnp9uVrssBt5A==');
        Z55['mapStrings']['push']('1,The Architect,TamHill,423802,eNqlml1sVEUUgGcLpT+WBOOaEELihSBBI43YChSIO8VSWiGlP0uhFGW329vupdvdZXdrKZCwD02MxBifTDTBgNEHE+ITvGBMB+ODLxIjaGJMsCYmWjUGw5PxAXfvnDO7M3fm7l7ZEC6l3z33nDPnnDlz7rY2NU3PZkkjWRtN2lZ3LpF0CnaiQJqi8dk+J5WincT90HYifSJ/TbmfyH34efHczwc/DZ/Hn+k2AMOtTY3ZPGki6mc13cz/wY4X+S3wC3pIIRvKf4UIG+UcO8Y4t4VI93n4GZC7VzaB7oRrww8XLnZs+rZkvMtTivrIcul+vfzIynvlz/uROx3uJ7JMDJ/G7sMHhqOtjaRJuDMLcEhlKVhJ+8Gxv61e8/tTqw4Ef2pbd8rOFaxtiUx24Znywz3EWjoJJsfBpROya6tM3rrt6dL/Iw/K1eKZTWUejTPxiRjnJ69w7gT15zEkhpWQ6DTof1J2Lp3h3qPr/PWnPcAPwLXZwKeLUvSL5X6JX5dWNv0b7dm+vhRynAd/0g6Z04Q05+Mg31H8GeN3LP2jyI8SPR9f1vPj8PvXFH0M/hdBi6n2uv/61h+8jw9nMrO9ufisnfeL4Ab0MBuTNaWvGDyYoXp+wKDxA9C0psatE9msk1iYcAp5N9PB5QxcSdZ4Mn1xUO+sEClc+1JTGS5SE79w/WsNf8Ey8W99/p2GXyAm/vIXOn5u2cRfu31Pw+eYif/s7goJ1R8crYOpeGEqk5u1OrRRsYqBaqyzRt0JkdFkJwmxM0WZHyC+vIhzzA+b+vIBtopozrbzBqsmIHax6uJGtVEbuyGKsR4DzsINlmsfkbO/wr8M1oX9+fqt2mCfLdg5J1OwEraTctLTeSuenrTyc4mkIa0dpXCBali4q0ydf6e/pDoUQAobCE0bC9f1G+8GWpDBeMHJ6BfEE+GoZW9Rferdm29XMkIUHzPPPpip8HRMySAv//edq/8vg3ZoTWuj3aDqUVDxNFy7iNY03DnYLlJr53ZNY6eB36c0Z9CsVcUa52GH9vDP6nmagk7iOJUzFa8tgu8/3FfinSvyUtKiydWcT4J8lAecp/No5P4Rz0W9txKTP7n+yO9Qcnc30S49NtM0yiS/4E7u8Q/ycXmTQH5J5VGfcaXy7dTXnvpDsbk/7daGnDYQm8UDceGp/kBSevD+PbtLimJxHJMDRBOInJ+iUgslTgsqv4bzDB33HJFaR7rHEOiT+lZQ0+Jx+cjvkuVqWk7OTxW1clH/yK2fej8cvtwl+Lg/v6Tw9S9kS+9cLu0U5nK2diWfoUOQ8t2gAWpu2L4YlpCw0qodLOq3u3RM5kEuNu8eHlMxrKykiY8p+oRr8ENyCRH2rjPYq8gRK2OSP80C8UwpZeKobpRvBeJZWimhFjGVUM7DXi345hrykywYby/L7cygvH4ee4/CFoPrjIdQUoPH+UUNno0Af5LJ69VukJ9mMo/x+YIpPpcD8Xgo9+hjkh8NyE+zQDybgPpwCvg+4p8vUB/EPAjzsdsQb9PLwXjUZ4LI+pjWdwx4WAe1snrjGdvzYn086jOm5PsBAz8D8k9ReUdprsEfUXYgk72zsL5Yp2vpc5rI/kc+YoifsNJKrq9Rr2Ysma9Zz5eDyYd4FnyN+kNtqAc4XOvx97/gB+vkkRuC65GiZIeRh+GP4MmjtnBrjznpycy8NeXOa7S7/xpRPYaofGTe63n6Rx8vlqIFspLFY/KRfKOBH4XoxX5xq3F6y/kZHH0C9yJcN3v4yWSiqvoNKEf+dv0JU4wm40rjjwOryvT5zUvpIN5+7Fh5Rm/Nx1Op/COPdflhpv6xLufrH7q5fIAxMOfrHwNzvv6hHufrHxtzHgYgFCvXoaJpGsFj5YzCY8yYeIxZlHvSaC/nld/TlCV1aFV8fiFf4gv35TMUkQ+XKi/WC9cJOlmT/ABzh8pY1zDjwiXEucOAvDRV51I+ictZ8sS6Xz5mVR3fFF5pzrs8vDtYqt+01eXJnf4My9KKUdhh9hn8j3MePPwPFU3xCeuldN4DxHe9REfWqcRDh4EvDMrO7Tfm+9k3Fqv0x7ieNtYTPn6dVs7sW2S71UVnBWUupox5VT7AO7NsJpOyUpnMTGauYIhQHNo58sQEN4gq49qTyUpxEk6Iye+Ulr65Nbx7e94u8TvPnfPhuzz8nkvFQBE6WDJO+xayIcBbyIdDh0tpBMqwXiUi1unns0HelZbfWpa1FDu5I/a1fcoMZaTof8JU8kZcewx1/gTR85hPv8613WhLj4tZSlTh2hX+xz/vvXr1yU+QF/PfQ8oMxnsC+ereL5WhG04GhJejnmLo8iwoD/nDcGg4apxQcB732RFlGAh1aunm7ZUH5//4HuV77G03FGec4j+PUVWUO+BuT167PAvIC322KPqH9ftsgNlXObWsvDOp3wGCfNfhYWKgqkOp/V0Hztf/XQeXD/BdB5cP8q2D8ncd4J0taWxtapnNZ9MM34ZG9XeFQqGSao0j2fh8urUF88efbnNpfDvcIt7ddfnd9ET1TZV7x+WGTX/vBs29QgTNwzklGfMRscksAi4toVDpDyH/ASpgF8c=');
        Z55['mapStrings']['push']('1,At the mine,Flerax,332372,eNrtmc1rE0EUwGfTJjHpwUuRggcj9lAKFmkqNBTcicZ+iaK1kJaiJrVJk7b5MElNtVBDaU3aCgoeRE/FkycpHkTx0P0HlILgOT1JFIpQED8u7sfMZmc/ujtU9pRHyXR3f3nz5s17M282Xrd7OpUFTtASLPgKiZgvlUzHgKt/LpaLLsAeIApsB4Swe3FR2B/oeuX+7sDr1kV8DTsQeMzrdmbzwA3UwqhvwAeQaGVxgI7jRwHD1p4L8oL97BeFrQID8ZyP3p7NZebTU14ncHOJiHiXW0W2dcs9bowRg8ODlcUFent4mmu1yDtAr5/n4RB6vi6ZCEPoGunZfhtuG/4aKmv4jR1dniV5ps6PkXyXrj0MnOZIftzQ/sJMgr9/E+t/JbXn9IOAn8O9Wo3Xr+YDhrygX8v3GPLCh5b3U+rH86WNwcEgVPoH8ddK+vodIg9gFtL5R82b+UfNG/unr69Phzfzz2HH226oX/Kn2v+thvzThys69pvxd89Yzl8xvwpXyfwKlg7KR0bmcf6qeFadv7L+MZLvNMnH9YTURg387wKT42HF+lDZktpB1fqw/+hscH3iJ69/eaBTsGeT5PtV41Xz2J4K+l4EzcdASW2/wDNwGOkrSysqvFQi/M/+anZ9O9F0kd9TJB77x4j/86m2v/j9i8xje8rSQGHcxD8T6Pka8ssQGT8K/wg8H2/VA/ltNT8KyPlqM4nPKUp+tkTH5zg6/hYln9mk47H/8HyZ8Ti+rPLqeDC1n1I/zher/A30fG3BGp8t0fFhyvHe2aHj8f5f6bWov0TFW63UGGAqMgIfozmNScqCXSuiUZrqznOZL199F6K5glD8aRQ2yQrTaNKXDIuh+OAphQE4SZfIxVfBV8qrCn4GLTJFTr/4cICPH97xi817q2Vt80g0OacclGxyC4dWBC4JyAojpFkxn70cBQyXl3YGbo4z29FJPgat8SgiqXmr9uDxYj4AjJwsVjwyPwPp+GlK/TGL+vMRcr5CJM/+Pvl3NHS6ra7fR8VbPyu5wsn0VKYohJW8rTTCqhFWhwyrI1JY+brFwFpuBFYjsP5vYPl1d/d6KZomX4nIR4F6x1uRAE3HQIzkIZs75GzvcNzuDic5mztM2j3CDLS5w5zdLp2v2tzhPbsT3+60gHanBbQ7LaDdUQrtzkPtCQ7/w+HDZ9Fn9OZVfBMm8/iNhjH/JhpQ8lUz/smVLgWfihA8/hlHwYvFjHUHNI9kMnHAeN2eVD6bNj3mMwxwAuf1bLSY9jAM/wfAP2eJUn8=');
        Z55['mapStrings']['push']('1,Bad Platform,RoctorDush,339433,eNrjYmdPzy1gYGXgcUpMUQjISSxJyy/KZeAKyk8uyS9yKS3OcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQzsDOgAQ8Sh3wKFhgMmBl5pDQZGh1Q09SkJWJ3GwMig7xzHwHiARPUY7klF1YfkHrB6TPcw4DJfQMkQm3vwq8ftHgZ094DV27+cCQKz7C8bg4H9AwYcgAsW0wrGXKxYooYPw2pSgw6310Q0rbCoF0GlkdRbt7UhuAf00MxnwAgKFPUORKp3CGtAdU9gA4p+dPUHSFSPM3ywq2d0SFJAzW0fcIQPE8P/uUEg9dDwgWpzkIHSAlBaSO3wntvP1wFz+v85SOodcKi3//3mXuxC0ZUg9bOB6g+Q4B6IegLuEe4xdeyK/oYwn4B7voVLeD13aYepJzapMzIQARC5wRCUGxx6UP3KwHEAKnJABs11OFITTL0Dseq7X6CmDgZUfZjmR5CoHtVHDoZQWgdrbmPEUK+C0/2Q2OvegapeAUfqgMV2Twde9Q6cir9DXHQlYOrh6qB1EQWxzQgzG16Y2kFox+nXS0BlHEbsI1KHEQM7FztnbnFBHrw4isTtECYG1uCCxPI8Lk6YFbhVMzIwM/CAVStoJOcXVGoCNfkR1sTCIIysCaEXWjrh08vKIIVFL9yIA4TcDPQiM9yHB/wIq2ZB9+EBQq5kBCUYbD7kZGTkBMkCADX93/M=');
        Z55['mapStrings']['push']('1,Balance,GayfishDeluxe,358129,eNrjYmdPzy1gYGVgd0rMScxLTmXgdU+sTMssznBJzSmtSHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUM7AzogA9dwKHsAoTOd0CVYGIwMjJiYHTwhKqLhNJJByC0CJpBbAwaGhoMjHBzEyDmOVgyoKi3/6n4O8RFVwJoPli9QzxUXQpUXeoDvObD1eMwfz+6+ekJEPn0A8Sp92cgST3MeQdg7opkICp8DiQnEOcetwaI+nQFiLqwBvzhEwI1P+sBUeYfqESL30z87j9QK4AaX4TUFzeQFF/2L2eCwCz7y8ZgYP+AAQfgCshJLEnLL8pVMOYC5qQD0AR8wBOWB+BB7QS10hHqFBU0kxgZsn0VkKIGlvuMGFDUw5MuK8P/HX5I6p2xq9+PQz08i3ii5lok85OSkpDMV0EtDRwEMIK6t7eXlKAThAediYJGcn5BpSYoBB1GQ5DoEJTACEGkgMRQzYzh4KIDWAt4qEMYDhQVoKpXQqXhgJVh69atIPPwq3fgRAkYhv2wCuQxfo8yMhABEBnRkIDvIwkmIxQ7iVAP8j2izoGFaiaqPqQyBhxa5JQxRgwcXOycucUFebAwxgUYgZCVgTW4ILE8j4sT5gf8qnnAqmFJiBNWyeLXJIysCaE3kxgLpbDohRtxgJAPGRkw3XwgkhhN2N18gJB/wXrxuzmTGOsVcRsBpTgZGTlBagFOVTJF');
        Z55['mapStrings']['push']('1,The Ball-cher Knife,Nopples,245742,eNrjYmdPzy1gYGEQDslIVXBKzMnRTc5ILVLwzstMS2Vg98svKMhJLXYwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcUMbAzogA/GcEh1gNClDyB0CJpKJoY5rUlwnkNaA1Q5VFuoA7rylROyEMrTD0DokgUQOqwBXfnOeSVYlDPgMv3g0kpM5cUJuNx+fmMTpvIiKB10AF35vX3dQMsVINKRUGV2UO0cEHr/7Tf3YheKrgSG6pWrVxgOEFBuj1B+8/ZthGPCGlDDnQPN7WjKY9Dcjl053DRYNIU7oDrmp+LvEBddCZhymGmZsPBuwKf8ALHKmSDKSXOM/cuZIDDL/rIxGNg/YMABuAJyEkvS8otyFQy5WBnYHKAp4kAkVJ79QCLExgNuUJuhMrC4QQo1c3NzBrhyGwZU5XoY6UlDQ4PhQCWqqEO6Akpq3T/xvtuioLmWQOVz58/HVA4LDmhqRVK+YdMmoHJoVhFBUw4tA+yvl/Js5cmLhsVJwwSI212gyi2xFxkMjAwGTmEMB+qg0o5QU6Mc8JkOixNYQYQrThgZCAJGWHTDQxeaihz7/k0C89GjERHNRgxsXOycucUFefAU64fDFqBLWBlYgwsSy/O4OB0KHhChmgesWkEjOb+gUhOoKY+BCE3CyJrgeg8Q0guErAxSWPQijCDkZrARiriNQJhEKKzAJmkQNAlKcTIyAhEDADznC64=');
        Z55['mapStrings']['push']('1,Balloon Fight,MuadDib,288041,eNrjYmdPzy1gYGXgdUrMycnPz1Nwy0zPKGFg9y1NTHHJTHIwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AcKHqCawMaABhw8sVvFwMiw3sUPSZ1bA4S2g/JdoE74qfg7xEVXAugZVPXxDhDaBM1pCJf8/7GAgeEATD7GAcUdDgJQ85+FS3g9d2mHqXcgoH4/mnoYOFCP5h5M/0ZsLAbqhwXtypkgMMv+AQNWwMhABBDwTcxOVSjOTM/LTMtMTswr4WIFxklYw2icDFycsCdnJOalp+qBosJhNCqoFBX7J953WxQ015KkqGALAUZFdjE4JkYLqoHMFDwKIACtfUDxge4aBmZ4eMHCtawBu/uYIO47UArRCQ83E9R4RFfvQKJ6mP8dIqHhQL7/GWFpA2aWgwiEdpx+vSSBATNuGBiQwwjTKodMtDDyb0D3AzgN7j8JiTuYeqL94CABpfst4GJqnnnFBZlFqSkKSZUK7qWpxSUKRgYGBgq5iQUKCrB2hmcYAwsXO2ducUEerB6CeRrDUkZGBhEGbpd8hbz8EqAp2alcnA5E6BFmEEjOL6hUyE9TKMlIBVmvx8UJa4jg0yjEIOBUWqJQmV+qAKwrFUqLUxWANhKhUZBBOLNEIS2/SCETHASJJZn5eXqcjIxAxMAAAKOxKTM=');
        Z55['mapStrings']['push']('1,Balls 2 The Wall,Stashington,16171,eNrjYmdPzy1gYGQQcErMySlWMFIIyUhVCAeyGbiDSxKLMzLz0kvy8xxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEzFztrQTEDCwM6YEUXcCgJwGoVAxNDxMZiBod8BzDvgB1UedABCC0C4e9/qfg7xEVXAqr8AAHl9qjKHQoNIMphyjwZ8Ck/QEA5mmPsX84EgVn2l43BwP4BA1bAyEAAYCiAWczAFZCTWJKWX5SrYMjFigjuA24NuHTaYY9ZiEpGqjkZ2WlGyE6DO50Zl6dwpIQDllC/QaUdLFGVo0ctAeVkxhWyv4wZOLjYOXOLC/Ickg6ghjtGcDECUz5rcEFieR4Xp0MkAxGqecCqFTSS8wsqNYGaUh+QoSnegQhNwsia4HoPENLLCMrNUlj0Iowg5GawEYq4jUCYRCiAwSZpEDQJYSChOAAbqE+sgVAKABuvzyY=');
        Z55['mapStrings']['push']('1,battle for the swing,JonesReal,7205,eNrjYmdPzy1gYGQQSUosKclJVUjLL1IoyUhVKC7PzEtn4PTKz0stDkpNzHEwYQADGA0D9u/SwMD+A5TfUvXQfZ1INYzvoAFVyMzFzlpQzMDCgA5YDthAlQpAaTsoLQI18lu4hNdzl3YGJoazmxsYHAgo34+m3BMifKD0AYoyuOk/FX+HuOhKQJUfIKAcDiDK4cFw2RgM7B8wYAWMDAQAXMGBegeIhZFQAcGAnMQSYLTkKpgpaCTnF1RqcrEigtGhE5cNDjAfqGC4PGJjMYP9y5kgMIuQyxkYuBAOQLE56QAhmyMxbK7cOwtus0O/BSTsiA0zeBqEakRxGgMbFztnbnFBHoat6MYyMjKwMrAGFySW53FxOmQSo5oHrBoW/JwHiNIkjKwJoTeSDAsdig6QbyFReqWw6IVSAOYIjJA=');
        Z55['mapStrings']['push']('1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g/gALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn+eee+80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm+fNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I/mnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP/e4snzzC4XiTix/PhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn/oP9B0JUVs5vOWab6ailjy+AdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN/oEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra/Ei/jXTTdPDinT8jmp7Uz4CqKaoT+C5a/OtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k/Wdmkdah2PJ/8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ+YImloqsfsPEHkiNQ==');
        Z55['mapStrings']['push']('1,BoAt,FreeHugsDotOrg,9177,eNrjYmdPzy1gYGRgccp3LGHgcytKTfUoTS92yS/xL0p3MGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDCwwjQ5JByAMFgY04JDvAKFV0CSYGM5ubmA4AJU+YAlV7smAotz+peLvEBddCahyBwLKHUT/7n65e3kpVDkMHMiESkeimf7gYJCFbnEqAyvD+Q/zGODevmwMBvYPGLACRgYCAK7gACxcYIArICexJC2/KFfBEBSInLnFBXnwoLLEYRojI9CBrMEFieV5AFB0QWM=');
        Z55['mapStrings']['push']('1,Boat Fight,MuadDib,324929,eNrjYmdPzy1gYGXgdspPLFFwy0zPKFFgYPctTUxxyUxyMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF3FzsrAXFDOwwjQ6H2xvADA4GNODgid0qBiYGDftABkYS1Gu7RpGkXt87gST1yx29SVJ/xDeCJPW//i8mST0QMJKi/v+P7wyM9i9ngsAs+8vGYGD/gAEX4GJlYD+QBzUuHRJ/CAceCIOIOIjgsJAR7CGG/R9Q5XFZyMhAEDDa/1T8HeKiK+EQCTWz3wJFAYZrIX4IGVJ+CMHmB4ch5QcH7H4YUmnJAXtagomGQQVZHVzQMqAdqhv3PwuX8Hru0g4sa8F+OEBAvQPf9oNpf/9ZwdTD1cFoqH5YmYtWgCDUG0Jpxwbi1GuhqoeX5WgFFDwOOCiOA/T8ORqmVAtTh9EwpX6YjuZ96uf93g0QExOgfuRyKDoAEYHRlTjrBDABUwcLWwc/BhR9+6HlPDBMIepnMpBmPlQ9sebD1B3QQ61XcDTgGBzmBZCmHubunhP41TNCGqxw/xKrHiP8DYgzn0j18AboB8rrcHj6nQoxxCEQkn4d3R4ngMMUPXVB8nHJAohoFtRqoQNQEbh5PQoQOvoA1k7AARloHENpBxmcaQjcCTgAFT8gQVA9xHw1NPNh7SIFaJrb77Z7jsBkFZh74P0vmPlK+N0DL08Iq0fp9MDKBTjNgb2TdEAA1b0OAgTco4BqHtx9uNSLoJaD6Pr2fzgYZKFbnApzD9x+BiLNR1OHbs/+bdByHa1TCI9XNH/vP3Xu5efq19eAZQTEfAE09Upo7mK1VH5wSGoLXD1a/MP5DBjugahXQ1UPdz/MP7ff3ItdKLoSw/0qqO6G6dt/ARqebGjuESAuPEnodIKGDjhziwvy4K3C4APYMz+w7yvCwO2Sr5CXX6KQm5idysXpQIQeYQaB5PyCSoX8NIWSjFSgxgI9Lk54sx6PRiFg6cHpQIRCQQZ+p9IShcr8UoXkxDyF0mKgy+A9naIDuDz+fy6DcGaJQlp+kUJmXnFBZlFiSWZ+nh6xehmIVSjgCwwrheLM9LzMtEygA0uI1cienJGYl55KfRexhQANzi4mVjmvAhhAx6o4GRk5QcMgAPDX9x0=');
        Z55['mapStrings']['push']('1,Bullet Train,TamHill,414747,eNqVmQtsVEUUQGdLSz9BQwJGokRLbEhBaPgUaYGw01J+tkApy7eAfaXbsnS7u93dUn7KKyFpSgBTCKb4IaCxwYSfGouJmB0kARUjDRhESbR+EiQo4SMg3/p2587sm3nvdfe9NJ1s97w79965M3PvbVZ6el1DAKWhAcVNXq87nO0KKh4fSncpDbM8Xi/OR7EH5yHhcV6vjT3OG/B564bfZh4ZvJF9xrkADshKTwuEUDqSHwcOZlPUpdIRw6vlJDYS9PTepouFRZpu5aXbtCmu7o0+bzsvjI89zh5k8TzlavL5vO7ssD8QcAez0kxmz5T/gDfT6XGOrCear83uMPCzkTmfgpZ8HIrzZLXat/wUtGxeq46v7UnEuxfu0PE1JBHfuKJdxy+S9JmvyvxapUPHzzfnIwd+nfF+xXuFGr+1bp+OL0HmfNfiIa9eKWnV+LfWHNbxORb8SS6/s64LOZJf/Yxqpb4u6PfVRBce+0HsdhpsqJ9hId8soGOlKi/8Yfchk4Xfuc4qUL5Y3amFNfyd7DhGuRJkxZ/fGbFjWFaxsipqWRM1jXvQSyMA9Zdf4JvzhmHqI0ePaqp6QLVRMKK+edIouojxJqZRnsVajijXklcoTwYmx+PGblN7rfjkXZ0WCivBUCyAAtRKAvvdJICKVKtZe4+XmQTQVEste88uMeELrfnLjXas6regyWd6GqYTF8yxEsalMML2iTxo9V66dUDRzuI2ZY+2UqEqkYfNg2uQKY+riSiXvVcLu/3eibZzez7v5vLdWORcol46+c0zd2vyYQ9gFnHs1IJVi9wf9tBVMnoI58M0VDBEHNOD6anjqT7NIL8Ki3bAfLL85NdkUDXf1NkN2u+wxxfSrxGbCeWSJizePMxGow7LnndpOq8N0O8nSzfWJPDJ7e0TirZV3tX4N17eGuXh+1LRd8z3BvnLkXjAzUWiDx9+qEx79mw+5xW476dI+rA1+rf6UPvwyQu5PvWqKJ/FAoux+8futC36KoXL9++n30+TeOafO+r+h6XuEVx+U48YWyxGmb1/SP7xSHaycbEhX6H6eLPFdZor7hWZx8zeQml9mb2PK+b9Pq/tFudXgb7Fop0sj4rczDhX0fXlz0x/XEdEf8r+l+IBQ8zzSGT+qTTEG/XPVCkelkp7Voof7vcccV3ZnjTEWzk7byX5JUz/C58sH9RZz/WfLJ2jTP4M1ZQn+ZLfXeJn2V48Q/JjBRHW2aB/PY1PUo6FlJqNkYd//7LiwDMfafyGM90av4bGJykV7xc8GG67W8NPnbh85QjnPcDPkXh2m/acrCgYHXJz3gv6zAN+HPAj2X682Xm6oNup8T2993T8bEn+UJYNcPmU99H4J2XIVH+cKslfATdtnlhCcP1ZRsj0r4L8Z6QkPwP0v378ZO3jJ5O4/JVqn7zOn5SHc5JMl/yTw/Zj1vkzp52vc30mAF+MzP1/PffM2Guecs4Xgz4sjsbDmG3Yj1Sf6SAfW8h/0ju1pXXWUcZjF5xLVXAOTZTW91F+5bqRVS8wfVi8E3aXj5Li7S5k8IxfDPxy4Mcm4BeqIj9c8r/ML4F4gLhgfuH8X7sdL47tyOM87FPymnSODjX3Jy5XRXtHyv4U4yf5Oz1zTvQiV+AmJ1BgkHWQnr7ET6SWMXT0iPm0rhZ797PmeEaIW4Ykqj0//eCgZhmzKEmeJM/v6tJqQ7wGi3yJJf/jqW+iJ5k9HvvgJm9ZTcd8ywyYyrfJc3+qXwv2GuqeFPoS90+SPLbJx9d3oBCBJvo/6X2s+Sc3ab735haNL7DJFyfPn/Jo/repD7GpD7GpD/bDTdySYXpy8Kc/2FuB7clfiO35s9qm/CpiT/4Sm/qsVO3xlaqt+CTc/+VJ+T9+/uBE++Xbiin687A8KT6uf5J8vSR/Vt88sctzfVBy+qyRzqtpat/nlU0+2ZvNwa5268eBM2nWiw+METoIRXlbY0oYbsO0cLThbNqWSOUlV/t/Yq/OGHgL2pt1JQErdTxiy0VneIzn8hugnREkwoLo+FEF23QljleSz0qGrFsHVdI+UEsZJs55x1Zvz6v4apqVsDs4NtZ1Wg+51TrocPXne25Lh2n2p6sOe0oqNFUT8brsPsrzPbWlxzQ707miZVmZ7szf0i2eCUz+VV79xHicgCcpP23aPH7YecYbumDIMmew9d+BZGKYz7mLCMvLYtiwOqnVfiWsD2G+01J41bxRFUPMGMKLOjZFq1TIZXxiB84khCeWRUPsNthrI8TGme62AZg1mNjuYaqHkXnDwg8mecTmGUv0I3f37XEHdj7iBTMz3S810aCpFokn3FQ+SxtZs1ERG1POf/Z+9+jSD7XaNSI2FFg6OFuS/+D7q7c3XrvI5bPGrU9q6ED6GLm24s/cnWokrj8cafOBe0UcdSFMC5Ig6LFYauTC1nJeEwt+HJKal/liQei8KBVIjXAdLwCuQCycI/GCihY8AamxMVjUS9cgAB6OgkVELMhzDAUbLZDuwv8EE4dirT/opk1PlJqVntkQCvj4apdY7EqHQ9sjaQsCSrMvKxOzBnGRakmnogExOjt3lT+wfoT2EuveFltP0Q8N0r8Uf5d116Zbv5uCnjN5F4ZMh0P7Qeh/4bJvhA==');
        Z55['mapStrings']['push']('1,CDball,MuadDib,256870,eNq1lkFrE0EYhifWZslaarEVepyDoBd7KAoqSKY1WKvkYFUUVHCS7CZjk5npzqRQBclBKJT+AT0pnnrxB3jpiv/BgwdRD4og0lMRvLibzFZ23HQmkr7s5WOeb3jn+97Duo5Tb3FwGOQvlSq42QROuY1rJVJBZ0BX6ARIqfjT76q4o+qnjz4vvJ56nNTolAJHXGeUC5AHusbQSqeHXlQtiyBV7+kQ2Jq/BhDnveM7Gl5WDt7fnr76rbSe4A/D3rHfyca/pnGsMIqy8Z23S+dOCy/Bryh8pQ++m7o9NOG/f3y8//L4VoIbzCCQMhManopGNs/ObdzdTXDDIFE+7X3ANSk80R6uBQjkUrdb4tvfn8V6jt6td/uKn9QAf314cv7Nl1d/aYP2BdzRzLxW1JhnNauz2YPALxSmbWWuk5nXe2H2VhJcy+uSwh+gbFzL6wV1XOljRsurCdfyajCj59XwVD2vhkHqeR1wTQq3zetgeL+8bh98Xv/pQNc7/2M1S8dcp9ASnCZ1eAv1cZ0DU+BIiUHKJGzhZc8t2PVMVBlfg8yHsuFFjXzGthHYgkfn2xKusTasYgrbwtrZJJHQZwEkVHASYEkYHb65iXI0KyhInRKfRAalbaNTbWBa94bvKH8zunhZ2OJjMJb6iRi6mfEb3KsS3IzSMZCpeG+X8SoLiGTWq8ACLsIaqdGTEjbwqnVQxiWDPGAtJr04xdZtkbs6odHjfBII+8XXvDguM4VcLvrAHwjlO14=');
        Z55['mapStrings']['push']('1,Classic,Crabiki,2991,eNrjYmdPzy1gYGZgd85JLC7OTAYyihKTMrMzHUwYwMBBjwEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUITsXO2tBMQMLAzpgRBdwKDoAoVXQJFgYDthaMti/nAkCs+wvG4OB/QMGrICRgQDArYArICexJC2/KFfBkIuVgQXuIE+cTnZswO5ksEpGYp2MbLMR2OZMqPmROG2GxQulNgsibFbQSM4vqNQEOyAOanzSAVwOUKGSA+QxHIBKgZxzgH7OUSPgHGRX0S+WJHC5CuwO+qVTzNTCwMHFzplbXJAHC40DnjiyHSMoJ7MGFySW53FxOhBSDYQsDDxg1TCvcjqkENbEzCCMrAmhN46wXiYGKSx6EUbkETaClUERtxFwkw7EEQ4rJnTfH0ghrIkZQ1MeYU2sqJo4GRmBCADleNIM');
        Z55['mapStrings']['push']('1,Climb,Fantao,31,eNrjYmdPzy1gYGZgdc7JzE1iYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVcXOysBcUMrDCNDlkOEAYjAxpwKDoAof3QJFgYug97Mdi/nAkCsxz6LSA2PmDACjDNhXkBqpGBgdUtJz+/iIuVgRVm14HSB4R0q6BJMFHoKiV0V3EF5CSWpOUX5SoYgZx2IK0B4rQahUHkNGNwqGVCQ63RYBA5zQTkNJjCA60Og8hpFigR2jVhEDnNEuS0/dBcewCmANMIT3o5jRvuNEMDcGLLh8TkgU6GAQ82JLdBMkLZBUJmQN3k0KOA7raIjcVwt9lfNgYDXG5DsdoQnJoGxGojBk4uds7c4oI8eIKIxBGaQPdwMbAHFySW5ykYcHHC1OFUD4ScMPWGQPVJBwiazwFTb8TFCfc1HvPZYeqNuTgPEOF+Nph6E6B6ItzPClNvClRPhPtZYOrNgP7NJGw+M0y9OdB8ItQzwdRbcDIyAhEAjbHfyQ==');
        Z55['mapStrings']['push']('1,Constellations,iRedi,495393,eNrFW31sU9cVf84WEjIK6UgmVNjmjYpRNij5oknT4UeTUkiBhhAIKYXGSQyYhiRznG4qmuSplapWVasOTdq6bmJIW7Vqq4q2StOo5Nsv0P6ApeEjDZ8ehUAaoEkIgcRN3u61z7n2u3733fgJiccfju3fO+fcc8/5nXPuMzlZWTt2t2uZ2syKttaOoK+lxRv007+0TH+Nr9mvF2uxS79fM12e69tjl2cQ3r/4/P8efzdvD77XFwJwWU5WZnuHlqWJVzYJuGN/kI16/JYnQnFRKHJ4wccfnL78rpahTRqjFNemm0zRK+EVTPRc2ev6fsFvl1C8cYvh18flkV0kjisU7pt96Y39749l07UbI8P0fUscR1bD9/VmvGfww5rSxR0+hh8fo5+37ovjV4bM+BWwjoGr57b+Kf+vDD8xQT8PgB3LBfmgj7iCOeMv/v0Vho9G6efb4PNNIZN/9Gywpwvsoeu9wez/Gay3Afy0TjPhw1+8WrLilS2jDD8wQO/v/x273vQcK4pdnogmufJXNDf7WVR4W9wbgoHOpmBnwNeRk2mxq/niB/pzXfFX2D1+ZWiz8go0F/cK7u72kGXAaS7tO3NXaS6+O4hrJDJ83n2PUjzKR5yN/O9S+ehl4gc9fk0qf24FxaM9uKvNUvzM2Q8l7OHRvENq//R7fkzxtRAFaP9qqfzCe0soHuwl9UKUpeJn5T1s4Z/1Uv/Myi9P8r/4moqfkftgwj/cnwr5GMUcZ2N/DI9ZC9nCo95qvaVJ61Xbn5uvJ9bL/bncHo/xRaYoXxf9XyvFf282swfjRmAnGV7vjJjzSxU/7RGzPcvt8VNnkcwN7d4mH2MNHRnthffiX01DjiIvN8S/WQJac+E1f+Jg/8G3Oyk39vU20VX9BPGlKvypiI/iFyH+F/Hvy6T4yP71FD8H8Uvj3/9Q6oXP/1xH8dz++I16gWa6L/zl0f4bewZOUvlf1FTSuzTEm+VayN+9uSrB1frr8fXKvOxKod8lKRC0Rf/4pZCVjJTdyaxo2+0LWtJ9Jr/peQibjn2yhczLq0jYl8BL6aD8Eb8VvlqGf7S9xQrvluF7d6yywAcGZfihD6rSCfdvPeYNBHe6N+z0NvuSfYeatLwUxwekpaCq7kDiLacAsQE6WTen6nLlS9o0bfOBjqQg26WbUxlewwIe5ZEWtxkP8sMRaDgQ3xRPVoIltdYs39MnyAdKIWKpQfuj0DAhHkvZM0JDg/acluC3hMxUhw3cgIAXKRcbuTLJerFUC40bly/isRHz6WY9q4WGDPEor5FYUnxYsJ/sFFog0Z5/A+kgHnGbBP/APojxQHZp5sYT96vSer9464F6KoV4E+KB+CLm0i20Up6xH0RrKxfPEe3n8SbiRf8AWfL8kpFsRjzJ9DTxnJTfbk+PlNMBZMZoxEQgQBM0YKZqsEswGJjfscHsmhHnt+rOjp2+ALOPBKtN267NJFB8yJqQudqm2mdM9Cb1ijVEhf/kiEHxkLDkacDnyeWf6aEBUSFMVNlS/KQxQfGAI3WaSv6nUWoP8YL8zUr7jxonKB57xRqlfONCJKnLqAf5KzTTxBw+PvfB594ajLAJb5LZX47+DJmGcj5hf7Xy4Fu5e+9neDrRurBrIdWAf1iQ/9n5lftr/lDG8HSidemrAF9HrOXfWvz6my/M72P4myPUnidhvZvMEznHvwOEhfindfCnuZnh+A8T9ty+RfFNQBAbreWHL7TqPb7C+YCXTsB80udXzsZAh9e91rurLRbqKcPsAzwF8zTV1vcYUeo6qGEkW4k3omzrK8F1izRV6Bp9fRS/TrNujK1C/QjFbxSavzlS/OUrLNRR7lPKUDeGaGoT7C2eglo4T4o/a9xOooI6dWqPMf8g1WDNtfHPuXFqTzWEVkNEuV9fGUlj+A71es+ep3io3WS7Uv6YwaipRjgWkK+32ziTNJa2hVT4sxEjqfeqV/qz51oM32A+nLNZ75nTFO+Fw7zH1fHfy+RvA//rmpqKjzN7dHMvaOdPRk3PQL74IurSc5Hihc/RP5w6TiWoKUZ9HvA/DoZzBPzZnO7Dhzy/ZPivWb6vNs9a+gKByq4vPFww4K/m8rEkwH26LuBHElQ/xqgbSoGOpafSfJgaPgS9V0bssNNFMP/WmHtfLj+69eLC10Jhhh+8TvFFsN5V5t6L428kDhdj9kMckCrhUBTtudU54/0ZrVvgsNZFwB9kK9i/TPBn73s3X970UQaXr2PpD1mXkn7oHaE0YC/Nj3EeE+QfSJSSsVEWb3C4W2fmE44f/eNvfO2vfR07fL3O4p+YS+ciAX+zbH7ko/v+GbOHyW+AfKkIWcdbX2K/hq4xe6xbHb7e0Vm/X7p1/NvcP16hFy8R96vyXz9y3fsrxJMqkL8tZB2fV/d8/ut/vLM3Fj+sNNcCviliuV/J8TwZZa0U2PMs+P+nwnpFe2og35sbrOWPDP3lUGmXh+Gj0SQ+fxbOH8oF+UPmVkFW+vnMl2jAnwz421pjDS7WMC/kcm7KBG/DMrcpixGxUVexKrL8EmWDGLnEWBW9UK2sImdY1UFW4Q2WvOqf72HyQR4+WrHtWtiuwK6RtUp890VWZVeEpjoAGBdo1xIetGZr/noikXUxloR5ibjhviIhSronymf8/PA9DD88nNR14QSsCyx5M7Qv+oTvAYxCfS3Ix8lXbEBHGv/2xoLyjch6fH9rdesGtz/BesODSQ16LbHM0nC/mSVxnaQa7HHLWTXWQD+CeLP/rVhgdNQmi1Ia6Mw1/saA1/IMMdELY++pSXf9htGd3pFz0BuwflDFh7sp5G6PcSodrVkxre5CiV7xAY0854xTvQ70Fkn01k65Q/7vUcOB3mKJXtDHH4jk3mG9JZKoqhdyUR5VRtdtB3qXSda7K2LWa8NhXx51oPchez/raj93G070lkr0+oTH8jbxzDrhtPWW2ecvr0V3TG92XG/BUoliHKWmMGoeGXaiuECiuA17IuXM1Bs1nCguVKzYrz58GBp0oljGWfgwsl59QNZzwoliGWnBmE9a1Uk8ecSJYglr8Z8HwGNtm3OS48Y1J4pltBXcZy5L8hWf63IUXDLeCgJPL1cG19iEI8Wl9ivmR2U2wXW0x4nisrukuFDGXJ3AWMhc8pJ4LL1GCxUX2O+xvrNBteJxR1FdKGMu/PWDOo9HepwEV2GRPVfjz1NsorrrM0eKi++W4hL7vpY/7ZS7+qThhKsLl9lXJ13dUPcPOlqxjLmQsWrVHeYVR3lcaq+YrFNSZtQYc6JYxlygACcnG8XnjjtxdZGEuVJ+rXXHFUuYK+VZvFu+x8PXnSiWMBf/3RYaII/qT484WrGEufivUPzq1md81IliCXNxhduVjzSMY06qU5FsUkTKxHSad6cVL7MfUfnopHgenb5iCXPhL1lIsVJxN3v6kr5iCXPp2PoUq4Pr1idOFJfdJcXFS+3TCY9fbPL46mkneVwsYy6ow7w8yvd40Jh0oljGXKCAqAnEoWIZc+FJU4vy9PiSo2avWMZc+DsOv3KP/5Pe0QsqLtGm5WRN393R3spTttb6Dlf8nztnOv4ehzRGpMiMOBIfzuzWpchvxJC6SrtL074ZR+Jm1MuRmXEk/r+FRl2KnEaR012u6ezv/wP9Wol6');
        Z55['mapStrings']['push']('1,Cosmic Thunder,raspy 667,866659,eNqVmmtsFFUUgO9U+gwhhJSkPxQWqNoYHn3TlujcQmmhQlPaZWkpjy7s9t3tstOHFQirKAZDFKxGIJJUozH9I2AkxgfZITHKHw2igsREqyaQikHAR0I00bs754y9d2Y6d+YHm935eua87rnn3CEnM7OzP0rSyZw1A1p/926fv2soEgrHSHYsqEVHfeXlK2kpSV00n3CXeqsjdam34fszT/5Y907uXvxOCwBMz8lMj2okUz9AeQlZVPiFjujGZ1Qg05L/KAo9bHzVO+KcSqJqRCGrnw0QhXbqvHziyE9MTDAe9KEo35n/7I8Q45/2Gfr0GrxpuoN8U48jxt/R9Q58Gmk5q7Hf94F84Nzk08NPGHwXddP/4MGDRFGnTiSvk2rjro2X70z8o04S20shrpei3lv0t79mWZ4Yk+pXrw62J3USo5+2ui4nnWUF2IhpRtIxynQYotDtc7LiVuhx9ruFd7T6wqZHiWLhIUts+A8Cq2z48KQTf85fZcOHHPV5t7lSPgqEzNoYjGlJp9EXIcCPwZ05NAAPa4LPHfDQLEidG0Ozz82OtLHUKigoYErWw1JqAK6B5xO/fDH1+96bV5AXVaE1jkZtXfywDb/GkW9dZMerjrx/4UM2fKkj37BgiZ0+4Ccf+GfKSF9mr4P+PJ+Q5e+3yLfXX+ATAk9h9dBy+Mx1tDcVL52CvMWSPObLWvjcovP5cFXIny2QP1sF+Vn28s0k/6okdTkneVZzNBiJhI1E11vhMbugkj9lBnoTKLiOr+2Ju+fO37m17zhTdNWhQ8ywncYdfS5wlXwtNa8Mo+biE+lWKsfvFPawfOE5UBfZHjs2NjZNn3x7ns67tu9AyaLLjE/VdL0WAtkI9gZ4e9Xr1+cduHdtj2lvG3B5wKHdy9GO0W8eeLPgDuNDIbaH6UEfl3gmXwT+/J9fWFeXTBTQZ6kQ+FzBP+kgf7fgH5SfR2z3eL2FeOLp0KRcvHBPRb6NSsWLDsL9AC/f9P93v36//fX5EywfDP9j/sjKR31adLl8QPmSPB0+Y/y+TZfLh81xTzwdgvzZFuf5Ykv+LEjlzzbiiafDIB/zzi3fIH9keToyzsfLLd8GC+15n0M+Y52SlK/vdODz7XlznbSCvYUuhR790RafWb5CHvT7GY/1dY/QE0O+JRK1H702dywf64/Z05ZK1UNLD+yaz43we5VcfTMbj1Wu9c3It3qws1quvtEyYWN2y59miG+ZJB8AHuooxfUPcVYnLzRVLNPCuDHrNUL9qebjph77ofaNplOVZrz8ID8Y5+VnCfIzyMfrWT7QJuBDsC5b+Nlnmj5VVcluGBvT4xUzzzwKGT1/kvHdQn628n5KXNmSV3+j5jkzXk48sfCGvdjYhITG16rP0PuvMB7lIe+sv/beS4xHPUK6W6McPXuU8dtxqqB8Htnwp19gfAjqVVec18chHyj0GzQ87tYo2/PFjvyKFSsY3w77V0e7VP0x5XbC32F/Y803vX7zNHt7xjnekm8ZpLKyclo+9Ap1xKqPkQ84XfYSN/9XJmdm2g129lI3f67cv5/xPWBfr87VKUf/wFkC7QP5fsd+JjV4uPFmvZXlp7zxCY+8+u2YsrDo+HJp+R559W6EXg0XL5GW75FX/7y4YP7Xp09Jy/fIqxc9+scjr/7k0T8eefU3sx8w+JfHZftn40zNTR9Rvsg7nwka+7UGE+VS4jYvNHz+CbuPfL7kfAcHKzTiKt+YH0XebV5Ae+tc5f/b05usO3HbfctRPsYLJm46Kuy/Px8pq36+7S8mPxUvPQh+j8FzKlzsNXld0l7YJ/ribgcZRj3HeJVK9pPaJYOXnJdNvYW+CvtM9UPz4MzQJwbzfq5k/6kV8nLd+s89RkOsF0j2k4NnvPGYPzWS/oSze9oY544ozfX+JfSfMC/Tfth/N0j6vwfub4jL+RPzp1HSn11Cn+fmnwFvvLne+yTnfTwYjEjO72hnZFLKP/o6kD+gy83Xfohvvy5nL9oly5v1wSfnH+xXNZ+cf7Cu4Tpz8w/2t9q4nH9Ck3x9c7MXz+tkeewfh4/K7S94cDx4m68reN6C+y+eH5ryL8ntdyZfKBcv811foVy8cG4foXLxwro2ckYuXrWCvW7rvcAjj/6JwNywmbcjcdPsf4x6ZeGFefamcN64Ftavxr+gsNkfDf9AP2Wul9VCff4U5mWszzHQo5lKyTfPqfEdap4LH4P7zcJ+Ks7vqA/O653jPL8Yz8N5Xv7FQ0YgrGnhvtT7tSHKNZUky8P7ppN1RTbvd0rIjC8NLfxSR/7t2jIb/hEy40tMC1/ML4tpY99bG0rd+Wlj34m6whn4uRbe3l6BVwVePow5jX3BwY6BWL+vjGTlZGb3a9GI3t/OvdWyvL1WFBbizOZocCTiK8rJ1mFY17uJI5+JfHFONu02klfvceYzkC9h8tfHuf/IYMenI1/K5O8QXoPZ8LOQL2P8ADSdM9h7H/LlTJ9dfFNrx6chv5Lx4Bc94MwryFdkK0p28qD6P7Q7VFA=');
        Z55['mapStrings']['push']('1,Counterblow,ProBond,302013,eNrtls9r1EAUxydtl5AsKpUePI7owUOFBXtQLxltQYQKooKseDDZTncraSZMst1WLz0IeutZT+IfoAf/gQH/AcF/YP0HxB8HLR7i5MesNt3ZyVAJLPSxsJnJm/d9n7yXzNim2d0MQQM0l0k/iDH1fDIA5m1KrpNgDS2BzNB5cMCcL+uZOV+L8bMnn2+8XXgqxuhC4XjCNhthBEyxEAWv84smKBm6UvwvlG7MADf5wefvsKr+28kqn/cq+ydvUn8fVvX/nrh8nlaO/3M14fODsKp/O/VnmrxMk5dp8jJNXqbJ63x7mdor59OlzJwhkJnd+NtQ7LihjhvqvzYUGSoaSnzk/hHkZkgbSurvafpLHrDUn2rGlzxgmT/T5GWavEyTl2nyMl3evcv5/WoNhZaLsCIt41BD3TzYwc7+2d/3Vi6eEW/gaLcVu6xEcBQYfXi+K3ERsdH7F7lrAXPt7umP2bicbcbApoqBjWVAD8UsLEmJgk5gyL5stdahnG1eh6liYGMZUHdXwoD2kIoh2zFqrUM527wOU8XAxjKg8JGM4Z2SYT/dWWutQznbvA5HYfhVNwMby4D6UMZQSE1geFB7HcrZ5nU4CkO79jocYgCWbVqbURiMoj8eSuUbYL5N+rDnbmFIcUT8LbxmW+LUJ19pgDkwH/cw3AhiSiBZh3FvI7ItplrJRefAyU7P9X0cdPEijAnkgp5acBaccjsdHEUw1Q3wdszlPLXcLLBhFONwEa7cusqlihPYJKkZ0Bzs7ETYP9dqtZa4jGqNkR2oeHCq5jCAeR/zhGjAA1N1/vxnGYaVXv4BI3DOTA==');
        Z55['mapStrings']['push']('1,Cruisin\' 4A Bruisin\',raspy 667,874414,eNqlmm1s09UawE+FUdZospiZEDW5FRecb3OsBVYI9HRDxoQN2MZgG2DXy2BFNko3HHNjqzDGZFMgGPA1Tk2Mfrn3mnj9YIg9vgT9YMwikTdv7q25H264Gp3xhtybG6On/T/Pac/5n/PvGvuB0vXXp895zvN2nlOP2723J0aKSGlt/FC0L9p7n9cf8tbA/0lxvLMvNuhdvnwF9ZPMg5YR6RH8YU/mEZyF12NPfVv3p9IhfE3LASz2uItifcRNY6nMazbJrDfmoShaAs9t8FwqfxW5Jf2Pi7B2+c/UC8+o0o17/t+y9uFFyNM26sgn//3ljZ+HvruMfPDGi+nHS7QF5KWI9uEieR8CoaeqreeA9Tp0/kp/OP1atYa7tjMej3bFPUXEjR9mYHviUeXTAetjNEZ1pnIxMCWDrxGmLbMpevbs2ay6DOShCTT8wckAceH7Qn5rwsRv2LCB8xEmy280yg8Gg8TF4sDvA76JmfhQKMT5rRbH9gO3mZr4HQcrOB9R5Jt5n8/HeZAr5JvXGwhw+7ABy9fYE8DtMq63qqqKuND1gpd8mYfJ9fgG19SlXYShX41CvD1IQ9ZXsafD1jtgQgzg4D+nloVOdtzkLlJezoOTHbM4dmzC4gZBxXabS/21bgtf0iHw2FEw1W7gK2zRunLlSr7l6ILIg8lx63P4Ly5+xvm9IH8YuHUJWf/Zj5qqH+7rQhenrdSRT6p8J9hnhMj8Gm22yfJPUTmE/CYe9QF+g9FF0vZ3YTZix0rkkNiYUOVb/B+ZvL+tin0ublv02L/WnkB7sjDoc7RaDuntTGt/FgGXHY7J67XbJxwOc30wJJBfY7RPc3Mz58EObGjG2T7IN6F9LL3oFuAXwXpvKuutAv442LMlIWV923qhyrCnZ2T7+A3+uQX4o6ctbrFcTejtZ37d/c6VnbymZvaL9ZOC/IENVRbG78T1gv57gK8B+7wP9imC9UaBH6+U5NK1Bvsgf6Jb5sv0/s9GU1p/wIYgmd2vyNbV6RQJ/pOolOxOFxrkm/JVvY3/+9VrxMxX6P3N6P92f4hEIg68XT5vkxx4uz337dvH+V3ob5XSOulWG3/hwgUNvx78oYU57++YrAeWqhx+aGiI2PPbGmNJ27hxo8b/zXxDQ4PG/818pqVgE2G5vvQa7V9bW8v5k6cLiy+Vz6f/+Exh8lXeLL+xsZHzUxAvQ7I/aOIr2hHKthSiPvyObpYWW501/eREIrerxW7W1o3MqznUl25TsM2lS0BUHetgUtoRaRfLnyf444fR1u952rrUvCtdxsGNYPl5yjBh6MbwjaKzs/OZbRAddRVx7tSwDG9TDi1YhktsZfib1ggR+jA4D9FK+fPB1/+x7o2mVwOCh7aELZHXiXzyfb18Eb6tCUf9WVdKOpCIfYCymvxI0SeotEvYMS+xyf9bazotYhg+SrRlI6eN+0biNym819bGWTzqswn1SZnKvMWjvfEEEZXXa+PFCSIh+wXq/3Xg3tTHd74neGi76Talza0wlLGesKzPGlmfYHZ/LR73H7+nO2Xa34w+2CbSZtBnlbK/qny0N/pDZ8JRPsM2oxGeaZ42t6NAvg7ev5vIz2DPZEr2B7oZ4mux3A5o4tFq08NeOa7qlf2V49cl8ocaj+UG+4BfMq88zMC2Jvn5Wdcflr5QIfidip8tUz7nTq3fcX2XR7SVtbI9RFsMfPJdEb/QJoI/rFA+h/nkAzEEsezfBetdruRRr80+17Z25shfpc9XQTlfuViF4m/hlFzGsvp/3tjG9Xkc9Kkm2rYyR77F47G0mijHR5B/WeWn5fgqU/j/iv2y+K6EzC+S+Rx/sHiMx3q5zog52fyf3rpYPRPk+wvyvXo/xvVm/d/ilf1X12vjH1PiKh+/XsnLpXnW+6iSr2oV+TOyfNag1GlYj7D/GcUfVhM5nyxV9uvTux558pXZlODrDXE+a6svoH9Cbp/LnXnRP2B99Cn8z2LsYq0X+wuUX6HY56bsn2wH2GU10evz1S+rbh347DbBP061eUHIzw5JLb5MjivbkFSJL9aWkPMJUepLVr4V7zBOEvltsfI90Fqi/4v6G5LHGyK/ZeP3Os8/2YlcQFmHnbfq3X7ZL3Edwp6vy/7GekB+nay/sKfiD6wH6nODHGdCvmr//dgvgV4PKbxq//1euY56nfMb66ByvCt5JZntZ65n8rla3wOGMZALjoUdBr5sjrzfkE9cpL29XaOP3yg/w9vkE4P/u+BYvkfPa+R3d3enx5Q4MVbqI+bp/4j8Y/nbgWlZfomSh1LymJJBHhR1slSJR6WfEcc8b55jXnI2/0FvXm2ndAGBzSwpEX/B8BqU72xyysDhw4dz0iJeVAwazer3+3MuIFqI8zbgNKKlMJ4VyGMbMWe+t0C+v0D9C9SHFagPK1AfsV943MR9LtFP14y8fdoXj8fNvKbtmJqa0vjbgPHCKBM2Qv5mlk+f6enpQi5oFtTEo7v3dmUuaY6nTNeCUTnARDb4H2Sn+WT7u30keyXZ5hzdhBS1RHus20MxEINncgf+T2xuvTEYveUl3DlVfp35zLa0VMOvNcr30Ts1fMgof932xRrePCpr2nO/hjfXpL0jPg1vrjHf/vpmDo8zK+j5xFnl9mvDo757vsIzm5HHGUaWb2trc+AfICr/3p//ksNjT4l62C4Pyarxcc6h9z1b4rxft1heKOQfvyr3lnb7PH/6DNfnKIwqT8Ty3SZPTExwfhzOzONv57uNfe3llzk/CaNiGKE63K6eP3+e889AsMPI2OE2/LmTJzk/iFcliXy3z5b8g6A/xLsDf+7cOc7HFfuY9Tk1OZlzlYp8xCh/bGwsZ/Rb9vtHv5iR6Ckq9b9i9KtmmwXNnU9GD2QyEY6JcwbJyl9EJorqPW/uadfd3H8gFrMyIO2flmaDZKHt9xOBuf0eQvDVRn5kZETDVxYov8LIDw8Pa/gVyukie6rQy1f45Fx5+6ludHQ0P5+jz5EjRwopn0VN6V8ekYUed3FPX6wXHQPbdJt/8lK+kG9+rHOg17vUU0wPpKQfduh4N/JVnMdQjDAjvwB5H+fxVwEOfBHyfs4fotIPR3T8fOSXcR77VAd+HvLLOQ+lykkfwa/wFDNI9SxK8vPVxS5XcbpX+g0SUuMS');
        Z55['mapStrings']['push']('1,Curse of bonk,przemek1ni,8899,eNrjYmdPzy1gYGHgdS4tKk5VyE9TSMrPy2bgKiiqSs1NzTbMy3QwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIU8XOysBcUMrA5FCRCJSKgEIwMacAiE0jJoEkwM/9PCGexfzgSBWQ4KUBsfMGAFjAwEAFyBQ70DhPaECvC6JebkZOalKxRlpmeUcLEysB4YAq7mgbk6JzUN7GiH+ANgiQMyuB3tgMvRcf+nIBytRDVHN3KgOloEJagVcjNTUnJSwSE+BBwvhRziULcraCTnF1RqgrwA03cgUQGnFxpweSE89j/CCyJU80JTAaoXuGBeKC1AdrJDHM5Q98NeEIDSecIdhJM5qOVkuMUwJ7Pm5peWZKC4thOnJlgmwXSt39kjDPY7Ia61v2wMBjDX2v9U/B3ioiuBUC+g4QGM3tQ8haSc/OTs1CJwBDuUQkw/kN2Ay349HKEFVskICy10+zEBexIwnooVrMDW5jHQy1oOqLW64CxJP3s5YfZCLKZfOHPBLUbNwvkOdLLZGmgzAwcXO2ducUGeQwmhTAKCrI55KUWpXJwOBQ8IqmZiYPVKLM7PA6pOgXotEodqoAeYGVicMnNygIojCStmYWD2ygc64wAhtUDIwsDunJFYlJMJUp9CWD0zA5tXfnFqQQZQecEC/L5kBOVuNpfE3MxEoDcPEApCRpANINMzShM5GRmBiAEAIM/9mw==');
        U3ndn.Y$U();
        Z55['mapStrings']['push']('1,Dancing in the Moonlight2,RoctorDush,351175,eNqtls1PE0EUwN+StksrfmA4aOKhJj1wsCQiiaiJnWoVGyMHBMTEGArSbqHdbdqlBT3YxEo0gXgkeJG/wGC8eGNunjwYDx7VeNGLcvCg8eJ0d2b2s+0gvMtmdn7z5n3texuR5VyxBEE4nsqos3k1F82rUV2Zi97QNLWQzyn6IETGtFldK6cWKwoaAkNQDByS+JE1JLFD1437X0Ze9j1ga9RPwe6IHCxVQMaTdWONl+lGCNE36PFv8zlGj446r4IuuLCyQk4q2NzP1p38gIffGFgHCV8HUf7yp0mQuD2d+Z/frhG+iET5K/pXwtc2Rfn3V5MgJb5vNOV54sMZQxKfwVck6CgSCp/8O56KH0PL/oAnOz2lQkbPauViPJtfigRB9hwJ4TK1PwVOf1SPP6d7j5B8zAjzBw/FLbcE+LODvcRHcf0H+vsIL27/+aPDNns0MxFoNer7aRC+GXLh/JEDl0aaIUZP2QXIpsj+SaC70OrKqVcVWzpTYvz2jnN/LyWW+ENLjHWME+Yzuf5Rn26u3d4FqkWtavj9ELl2eGiZrkdb/n6ETD8YjwV5vLbl1J9uHyfGY0GexZV3x/2I621/wBO9nuzinFJeJJ196dSyEd8Xb0xi3l1XXEcM2saLc+NiPK+r9N7953dT/9E5V125vQvomQW96Tdrara6WlOcfj+ZapVHc+RUsZNfgvY8rRNP6/Ly717XrSWP17Phdvr3cyQAHOYtnnyH5EfACNkqnbEF3EITL4HJutvEt7/ukVRTE1Hf3lPPpxbr1HfMRCYvNozLPdYGFNpSPLq6cY22iMaOs4Rp63CnEv0nz4qN82n/VOJd8ry15ylXrTvarI2fmJiwjQJ108nHfHkJzZuJwguUm3G2YDePd8lvs5LtOA0DtzKFAsgROVyslFSR/tAFwZulTE2NhFlV4qFWtAQBi6Z/Ymxc+tFBiy5Rj0db0yFO406WEMMtS3AnSwhtWYI7WSIBtyQsSeHm+h/4bEAJ');
        Z55['mapStrings']['push']('1,DEATH,emil900,1039,eNrjYmdPzy1gYGFgdXF1DPFgYE/NzcyxNDBwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFslzsrAXFDKwM6IARXcAhErtVDEwMZzc3MNi/nAkCs+wvG4OB/QMGHIArICexJC2/KFfBkIuVgfVAzgGw8IGkA7hs9qS6zUYgmx3oZ7MgwmYFjeT8gkpNZK87DJQDHOjnAAkMByC5A6YIFiBY3IEjoUNUMpKTBoyRbXagvc2IKDBGTgORdPM6fgfQIQQkMByA7I5MugUEUe6gQ3jI43IHsnOKDtArWEhxDh1CR42Ac5DLsYHORA6DJBM5DJJM5DC4MpHD4MpEDoMyEx0odYDYmclAa1fpEucq5CCDOu5AWsMgDDI6uIqCIAsZhPF5gH6OMyHJcVgCEOaSwejGA/RzozU5bsQWnHGD3qkH6OdUJwqcii1wM4eCixlYudg5c4sL8uAdPzvsdoHcBvRdcEFieR4XJ7yLkOqAUzlCtQNRqnnAqmEhCdfkkIBdEyMjI1CTMLImuN4DROmVwqIXSnEyMgIRAwCNVclU');
        Z55['mapStrings']['push']('1,Death Valley,TheAngryBull,574754,eNrtWt9v00Ycv6C1IWlApWJSJ1XqFaGVDchWWsoKiFxL2ihbi0rpmFoewLRuktWJvcRVFRCb0Vaxx71uT/0L0P4D7n/ggdfukRfUV7QXHPvu7LNzsW8/1A35HhLZ/tzXH3++nzvfnS+bTlfqBugDuaKqmFV4V9E0tQ1yq1V1tlFptud2NA1NAaegs4ArhTdbTikckuOfHv1Ren76MT1G5wjww2y6z2iBNG7s8xFySEfcCfQD4v5ZOQbK81dACq25h3jnwMXVulMDKbB2p2j/BgrDh+PfuPqZHZ/wYf8R8fFD3JW3CM+uq/H4o2eGe71NcN993pv/k9/d6/cDz1F2YS/ejv25Wrw4bCfcxX/v5gqvExxN9RToHv+pJYf/8Wc5/N6BVH4Lr3/tlN8KLyedUjgAgpKdUza2K019p7GZ7QNpZghqwIGQVVpEyhUcpOrcH5OazALEmmjZPV+gUh8DI6MT3p3i4iX4dPDM6pSXqNXayKWlJR9eI3xuCVPj8MEf0/j7XFzW+l9z/L34xi8u/rSQz6vZRTv1IxRvxcMfp3iiy2BvPB6Wi896uUhr9ZeYrVi7LpJrH4TSSNMyErjQ59zbk23WksPflsQHW6QAL2phKEPS7bWwZU0xt/RmHV5ypPiSADdJp3/8/y4F4y3LR5HD0xYeO/6W9bdSyV4KrJzyUgnPbehG+5NORjE1N+nB3l9zh0t3RdhzU2/nQopE9WLk+ovDmPhArxuJvyDJZ0oSPyOJv8YrFom/IRn/K+IUwGdeiJ+T1LNoyfEpBfgM98ZLDGiYI6edxtkyEismVjwSK3qd47Svc0T6QeLIxJFH4sjhkCP945jFwFt7IDHmERtT1mjzFo+PMA5d/mB8Bv/drg83yDh0wRI5rMw3Qd/sv3rzvD1bHQRdF0zYbNvD7319xZutMuXyvfFUAZyPF5/Gw2S1gjpIONsm1/FdKx6enMdlHifETwX4TMaMfy8eH/SFHH+mzz0ravVF0mEDy03VNNtwtamqjrfqD/je60TSeyW9F+d1ev+Y/OnKXlz+/9BrmK3tJkZOjPwfN/KoyMj+lz79NjPjX2TinjcvWI7qB8XSuq3Pp+QlEnzuMP/igg+PYuDnbTyWiO/Hx40v81Kjek5MOtrRjxZ0wJRoJ9RuyKed334G/2kxkVAs4UdhCbmGTMZw1QeJkhFKQqGSXaZDiaDRgo5HCeofQVFdydf+RFexrvmYuvrlpT3qeiJvlLyX5eT1q/wt4lZEEpXFKl//Syp3+2BJPqj6zgQWgqK2RbCx+7QQz+3Aojsigsn0LTRx20DQTfI/wYtZ8HYwuWN+STzjgwJ8QMhcPJ5uZzgTmLUG8BLjuBX1Yl3ZVGFnjx1c1Ct6HvRn05l6y2ggDbqWm+leN5VK2Q904o7ebLahqcNtVTWyGbo7rHetk+1xxb7hrlIza43KmF2NpCai2jdKqzFuwrqybVeD2QyOVW2orhgtWGtABe5Wa5qaz+ftqqTN966am9sxYbkOHyob2zZNOiyLoLmsteCKYqqwpOubY5lUKtPZF/AOm+3qgg==');
        Z55['mapStrings']['push']('1,declines,JonesReal,151,eNrjYmdPzy1gYGTgSElNzsnMSy1m4PTKB1JBqYk5DiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkJmLnbWgmIHJIQ8qkXQAQqc1oPDtX84EgVn2l43BwP4B1OBj4RJez13a4TYzMTBEbCxm4ArISSxJyy/KVTDlYmVgOkCm8fsJGm8GMh4m6+AJpe2gtAoDftf/VPwd4qIrATeeFcP1DFxc7Jy5xQV5B6BBfSCSAStgBGtnDy5ILM9TMODidCBKPR9UvYJGcn5BpSYX54FMQtoYgdqYi1JTgGqhoXogrAGPWi6gWoTxhRClB0LwGS+I0ILQWQK1LBCfZRIYOuEGOBAygBEUICxJOaWpQMWE3AlWzA1SjLCAUHCA9Qgh6UFoJRTqYK2SmFqhFABmiZg6');
        Z55['mapStrings']['push']('1,dfsfsg,Querp,656349,eNrdmM9rE0EUx2dt4zZpDlarFgWNRSSKtU0tJb24T6itjQZbPYgUobVtisE2oamK9pKD0KN4EkUP9aYHIR69ZEDw6EWJN60XpShS8B8w3X0z2Z39NRsaIc5lSPjO2/m89/a9l0RUdX4hT0Jk52ymkCnMk9DE7bmlPAwQfcFRYlna74y+tE38/OD+t9HXnSvsM8RRuC+ihvIFohJxKeIX8DDp+KiqMh49RBRt48nWeqp9PK0vbZ24rPbxW9PLmdzSQqy/PxIiKrxbLeqWp8AQtLo+G3e+dugX4HelWbDqr+H37b++XF/b+7KqvxjrIQpl3+ec9eX3V7tSP4ZXq/r4rv01X9AlatVPFA33Pvo68uLy8yFm380XWgXtOvgikTD7gp5BQUuzsAG7B1+7TWyx+Ewuf+/4FiIP6piIaAv3ABHDraeaTZ8yrgon0M1r1ivb9Phk6LbZf3MhWz3/3Xh7WKq7pbJCfBeXAHPvDWM/+/jz8pTDnUiEe23I7K3aHSm7fRapL+HejwH+dLD3zrPNdUYPPnpN0Mu/yFF+1WQsrWfvTUHBQwuz1kIFI5hdbz9s/Fn5WXENVQL3YYQTQgttmL1zxAIFKedUkIfrqmUvJq8ph+k/B6U+oOW6QQ+7gZp5sXiwIuLPW3bhZQHjvOeKjoGCTuSdoZZ3G0bRfqkhgYWGg9oC6wOqlRoaWFaW3HkHhUQuORdXYPspxuucmLzfzAr+YbyvrP7cXl4IzFsOyKsF5C3XzXvMh9eh5/LVSnPYBdhYMY57n0sX8dGLXQRmEHuyKGWf+ujr71K1hpp2cwU+Khsz9rT1TS9X+MSkjwfgo9dEPbZ8Okml7FMfvWi/HlckJat6t7UriZOSrYtJ6qmk/W2q6jZ1CxVBE8JbL069mwJon3e7toGeFKpc3e26wwbqTNi8oaxlaUKyJTcNmnPwJKbJpiGUasL/EW+AJiwxezQNdo8cdrBJs2noBwLRe5Vp0695kBs+fPT1Dwcdpl/zxo1JW0QNLxTyiyxz2XBm+5dDUUiIhK7kp+8uRsJUSh3V1cw3YV7lzxOPQ3vMh/hZHugxr7MHHM5yE6wEe5s44m7CbikLHpbivpZqnpEy2Ctr0O41T7uDAe3iFlaU8Nb/sn8Bddt4CQ==');
        Z55['mapStrings']['push']('1,Dib Pong,MuadDib,240064,eNrjYmdPzy1gYGHgcMlMUgjIz0tnYPctTUwB8hxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEXFztrQTED24F8B1QTmPdDlR6AGg03Ckrv/9Wec+PTwkQGJgYDhzCGAwpQkyWwKz/Ax8qxZNkRMahyByWocgEcysWTdfOypPdBle9H98cDBqyAkYEgYLT/qfg7xEVXwuFwewM2BRhBwRaSkZiXXczFysDmgBFM9oSC6fuezvNTd1yA+ZtQMIltKFkj9HAmLFQJBRPP/OnyP/zPDkAwYQQFjwIIQBMmKLBgAQlzLAPTAS+o3gKIjIMjxGgHdMOZGJY6eiFiJAXV1+ipHeIfRrJ972BHdiKB+40BOXkgfOwwbHzsgNXHRFhlidMLf/7vRpRUhLxwQAQaNCJ4Ui2ykxwCG9Cc5KAHpXWgdG4CJI9Cvc7ACo6E/SdngsAs+8vGYIDLSbjsY4KL9FtAI38ChO5RwBfpDpmoznJIc8CmHOYcUp1X7wALyTLUCIZXIlDnotkHT2Sk2XfAEz1FHEiDpv3SB6gBhuY/WIog138ONPMfAycXO2ducUEeRh2BkbYZGUQYuF3yFfLySxRyE7NTuTgdCOkBBpQwg0ByfkGlQn6aQklGKlBjgR4XJ4YPMTQyMnABA4NIhdxOpSUKlfmlCsmJecTq4SotTlXILFFIyy8iVgtPZl5xQWZRYklmfh71PSHgCwxTheLM9LzMtEygR0qI1cieDKzM01P1OBkZgYgBAKYdEzw=');
        Z55['mapStrings']['push']('1,duck and cover,JonesReal,366,eNrjYmdPzy1gYGbgSylNzlZIzEtRSM4vSy1i4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWcXOysBcUMrDCNDnFQBiMDGnCwg9J+aBJMDCdt7OAucOi3gNj4gAErYHSod2DAB+AWOxxORZXhCshJLEnLL8pVMOViRXJyzgFcTq7EHjpAJ69bWYoILFjgPCDgIri5UD/CaGSnGaI4LT+BdKdFScsQ7TQGBkGEzQoayfkFlZogBxyAuTASpx9g8ZWJ4YCIjcVwafvLxmCA2wGcOalpJQrliTk5IIsdFsYQCjy0hIJucSSxFnMVZaZnIGxGT6dYbO7EmxzsX84EgVmEbeaAhTk4qEUgggeScdoLVeHg3YCRc6ztcNpr/1Pxd4iLrgRCPTciro3AVltCrfYkaLUJA2VWCyFZjZTOYNIHIqnseUwgiekCKMXAwcXOmVtckHcAmpYdsnBkZEZGoJPZgwsSy/MUDLg4DxQdIEI9H1Q9zNucB+wIW8OCqc2BKG2iqNoQuonyG07dRPlUBqtuhCGRDJQbcoAoQ5TxGQKlOBkZgQgAEkTpJw==');
        Z55['mapStrings']['push']('1,Emergency Landing,Raspy 667,830018,eNrtWdtLHFcYPyt11/WlLVjwQcoUQrOVRNQ0XkpwTqz1Fms2q0TTRt1dXTfrZVl3raKx7SKB/gEiNpWC6VP7EpBC2ofAnkBJngKFQl8KqX1pCSklUJs05CE9O/N9Z/ecmdnZfelDyEEYxvnNd77L77vM2VqfL76YItXk1fcWY+l4LDm9pg1FkjOJZJz405FMak1ra2unbxNj0SYiLf2vWWPpD+H+yvpvfdfrLuM9DQCwttZXncoQH1GXR/0HXWXmNUXlB1VEe32CePT7V/PrC/2nE8bSD4jDquruq6222dKv/kNo/9Ci3LO/D4mHXjBvWcId/+gx8SCOJV3wVeTZ4T9c/rxmmhykbvLvHM5w/EemzWw+6yZ/fD/D9YmZeBpirvrMzXM82jtKypJPz5h64Hsl8Ib+bAnwne7+efxvJSGvHlmOpDMvov48R53633g62nO8vvCCz4i61pqPO/vU9CYLvIj78xV3/V7gTsuDRNAS9xP5uNMBOWrknKWxgB9FTyrse/VUD9czA3E5BniQiL1P/3msfvCPns+wEdFl2BF743nTTtrjgIeGxmoA/y5cX7Hgr3++wHF9IL8ZcEsyvkj/u9/yrWk6ZT7XAFcH1yPEtpHSBsXOKSrd6we3Qh3HMzE+G3zdfYb7px/1Bjvb8P2sKt/AU+ATHZT9SE8Dj28Le008+uMcyD+bld6zyAf+0XHAzVEpvrlrv/Z+Ffqyk+O/7w8V8hTjQ3vhPVEXwF4v2dzc5PhLYdleBZ9T8bh/2fiDkniLPilFPtqB+CdQF6sAj3VgFPDhA5lvBf/I/MG4dcr8sfB5CfxznpbFZ5oJQrxgwEP+NdjzkwVB7wm4ppmT/iYe6pLQo8uB/x7gQ6fMR5EvfRY+//D+OMcPZWW8s3zT/yNMzscBxZ8P/rw3ce21b3h+GS/RYXg+o+QBzNz6PtjrhXy8CPKnWVl4Ogly0U94bXDIrzHAz+7JfIPOm7sB8fUCH1DejJxnot7/KPhs+vNimXjwP8adRhU7EX9L8MGUH0M88LTZBd+KeCbXK4hX7pHMf3YJ+kV0ryw8xXgNZOU8rrH4/+bgKMeHlXzvIyXrieDjrMJPiJd+Q9EnqlUmX8W71CuL/m74hNJfiMwLsRA/xuT6FpXrQ06pb6IeYr9APwUs9cSsD2mw98OsXBed5gHs65NMrldHLPqY/FHrSZNjPQkEAhzfDc+H7esJffnJ8mT8bj/WE4t8zVG+mV8n4fk7RJpPBX/ui/7yXd4/Qi7y/pjMtyL5pr04z7QSW34Wxdfwv7DvrGJvk8WfZr1C/01SmT9tlvwy+CPOKDBeiD8F8n8X8TX5NuCA73LAI2+mqC1ezFeIx3kmLOchPQ34gvydnZ2ieqvKx/mqgN/d3eX+x/7gLn9ra6uov7jL397e5vhhUpG9bLIyf7LYXkXxYjOV8UHgozIvRb1y4luZeAbfY6JO1bnIv6D0Izd9sN/1Z+V8xHnpF5g3sF59AM9PynOYwN9W6hvWW8z7RqWfPpXlM6z/s2GJZ6Ke7Cv1EPk5S23xOaV/ifzthSs4BuuwqFde8nFLO9d/WKlrPQ7910s+aeng+rQpczBxqFc4n4RAXnxPrsuabT0kDOfgeLgsPA0q9VaT9SvKLzNew8S2j9p8DxrfvyKO6nc3+t3xxLbG5iAuuBBJxowDmRSYOac5ve/c+PIHDnwQsVfMcpSMFdpxibOU011XDGdalCM1I6l0IhnXhoxDhf9Pd0Iq1Z066h6yPQAVW9AVINIa3CcshGg8ermSY1f/SCyiDcVWYgu2O3vFzjhybWi2Pyfwnc3RBUcnOPISVG6yjCKGl9liuCQ+p+CpC16VT130UeUXjpyom6cDb66U72l3lvD1UnckY2QeHlCJXS15qn7iF20UnZqyYXuHI/6to+s2+GZHfDw6XSKbmiz4Rlv57XLrKorbxsqqO74obhurpfD1FryRIW54vRi/XtEPGaH8T2/EU+vzL2ZSSfw3nqVaiOHx8LG/eiQVWU36PR7+R8h/Zf3Sow==');
        Z55['mapStrings']['push']('1,En wie niet springt...2,Querp,408447,eNrjYmdPzy1gYGUQd81TKM9MVcjLTC1RKC4oysxLL9HT0zNiYA0sTS0qcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQzsDOiAEcZwyDkAoSOhfBE0lUwM/+/NZ2DYD7PqsjEY2D9gwAFYnBKLU7lYGdgdkhTQLHVIOoAi4FDwAMXS/Z9ddqgzCjZiWAqjcVrKFZCTWJKWX5SrYAGy+gCG1QcIWG1PttWCCKsVNJLzCyo1QS7AUMbmENaAGtJ++EP8AInqHRIh6g/YEWk+ieod0iEheCCFSPNJVE98CkNEthkDBxc7Z25xQR48tEIdsOphZGQE5jfW4ILE8jwuTgeiVPOAVcMilRMewG4NeDQJI2uC6z1AlF4pLHoRRsDCM/UBHiMUcRuB8AhRJmkQNAlhoAs0arPwGahPrIEILxNlrhmJ5kIpTkZGIGJgAAALz9q1');
        Z55['mapStrings']['push']('1,Epic Arena I,Mad bonkio user,996496,eNq9lk1rE0EYx2cj280uBQ9GKJ62kEMUWmkaJVB0n5RoiVpFjRZfadKkkpYmS5ZS1IM5CH4DQW96ULwIfoKMn0HwKPUkokhPgnhxd3Ym687uZGfx5blsZvOb/zPzzH8e1tC0O1s2UtHkKbuzZlb67W7DrKH9y42W2ex1Nzs9c9tp96GESEAehcL6tk7C2qPjh/c+Lr3O3WdjKFBQNzTVdpCG+FD4F/AAQs9RZFBx4QJSrM9PvHhqvZsnYe0iQWiL7gbMxSVDRRruUPXNgf/DiOS96v8DOcTnrZxbd9/XOT4fXxJ3R4THK5gMcY7j6djafXupPOO0mT6+7u8Xzwr4PY6/4a8XnxTwP6Z/1qszUyP+CuXLlDsxdv1KhC8KeXIu+Lw/xBVaR7aucmQ9Pk/riU9TvpTAs/3WEupP+SGzZKJPMs6cZxH4Y4vglBaBBIsMOYtAgkWGnEUgpUUgpUUgpUUgpUUgpUXgH1qk6FlkdLB9kwnxFqkLSxDX7BBcHIwtmXy3y7TmQktcBVGDraF4F0+gjcfP3WrIp2zOk97ahpDNYlLW/15K/67+15Shs2fmQhnsrIZTXhNcrwl6vVLy8vZUdsg5UA/hDQrquMQVhV24LG0Y31emznyqPnJ9bL984/bY/HjeCviex0eKLtYnPKTUB76xFDj9L18/3Hp28NWIPxauKBzh9N8H+i88vkr/n+WeovWcHUjzRJ9dtQWuIWUjDYnw8qbct9zcRllD07ccu8s+blifjH5jKe4XnnrZbux0DR23ZOhJQpuFtZ5997A76bbMpAO/TxrNhaS5ro9UdChmbiDRkpGYFksESh0ZpUKiUiDIPHQTjxE8KisYVDxJl1T8eEpd+tAVRfcW9gs+SZQZ');
        Z55['mapStrings']['push']('1,Fallen Bridge,GayfishDeluxe,940932,eNrtWn1sFFUQ36P06yxYsCSVmFikIYcBLO1ROEy6r1qKlUhKOUpqQ+lpr6VwPQ6ulS+1F4Mh+BE1xphqNC2Jf2Ai1qRqQoz7AANBoxBMEP6RqgkGMYRIQJFg3O7OvLs3e3u7dxhjIhvCZm9/+9t5M7+ZN+9tvYWFPX0xJV+Z0hiKRMLRioe29nb1hJUpy0M7unvjGxrCkYHtYeZXjIMtUKRDvdRtHOpluN6984flB8p24TXzAXCGtzA/FlcKFXrk0R/YDjhv5fKNScqRz/crHrzkvQTfplD8sSNjKXjgy4A/8fVRxaNeGJo43lK/rTEOdVyxOe5ojoT6uzdv7atYWOvNTzM2D++Fd4Y6zXN4XDprI+ca97W8E9Df/cnoyzm+2z/xbtaWMEe5mZmAybze/IXBL+hP1mACtGvnpw9eP7tFD70xbtYEfhk08SKElXRU5n8CvxZ4a23xJ77SdP4g3F/PJGmkwX936rji0aikbHzhQUPtjqQCKjO4sbombQiLWS+TzUZ3PmEOW/1IhPDtz97Th7mlShoWQ5mCuzSKj8L9bghXOVyDu1SUSIFy5tI5HR9JyLwVcF4J/Ae/uXBl18XTAh+F8PR1yvyAV78k+Fo5PViZfG3hD4E9eC5zsL9fvi/wrQnZP4ifA/c75Ioi8MkUMvDuU8grYm9krzBsAJ4oELqJvWreqQNEkaVyGKG0VBrElzrgIwRf5oDf0JmdPf2Xs+IXxd2hAthlqAghTcAMOar+Mbngl3vzljGsWq8sMc71C3YbP1iiQ6MXJPeLLNEDwbiOHuLdRq81kV303NqD0XPLH2bZ8WPiusTfqjpsy3MmdVyfdSPYML/cVh00+tOS6qjwPbk5tmOuIRKstU/Hbqf4vx5EzSmINDrpg2ghzmdLcaodNs/VtoOKx+P6lIJT8ybHTsTEQyUTU2+d3AxrR9eWP/pzwx4xpYeQPyFP0Xb8iO+TcXhWR+SWIZcpLpDWdZN5j6lL3kReDV1OyquXLK7RG9r2hNysE7xG8VsI/j6Cf43g+5tl/ByCfx+6D8Dn0jBXL5zwhWiU8bB4h81T5E7vkLDVVzlbt9Uvd3asBXI8YGmwDTzmJPpcdFggD+3Gr9+vG5mxX+CXkYUOdkD3AP5qYPb44ZljAl+L/BVyQYeOT4MpFvEcZMwRF5RjxPNeWlT/Qvs1gW8k+Aa51vACebw5LWaMLpwHCaDANjZQM9SDQhemLypIl0ljQ3whfI2x6ZB9oV0+1LJkfjwsfFFBfNFG8CSWHGODvNR3njeP7zne8oWwBzTF20g3Dvmmjcv2uPf19BRfZ6qqeQxSkaPr5skLGu3Hmw+WbDs2Rbg8PmriIV0wbbC6WuQdMX3Iu4flEKFr8xPDN1aE596SnKSyx6OY6ryLyGmVvKjCfkN/9xubmqyzGy6ecNGWgn99WZUe7phcXET4Qhb8u3uDOv6pkzIeF5vQy1F+RvHIH2Np7cdxCXxTZvsF7jmeVZuAdvwDa/VBliGsi21mM2gARGW2784mJKVwzL617vBYTXgIKmwjyEaxwcdMIr4iIcvMhl89m4PEFxkVM94pb2qVYNXHTQ/WZBtCQyI8QCTSYIs3JQ4+FmPDrs6KNyRuSaE22dfa9dGre1sPT5pId59P58fYNBB74HntpvfUsaPqMwLvJ+NdKXfOrHTq0MDpQD3ixT4IntcwCa9dSc5+Bj+MU9hj32R+0BLQ8eAP9Kson1b8h8+2JptM/oji1JSaeHg/zuLsfvvtt7Gobg/qYRXg/JnxOc0oVSkzimhbcpGkKTH3kjQl7F6SUpWzleSfeyJnfhsJoQSweNlK8veBko9Lou1CMrUOkpz66aHum38tFZL0EUk2yPjUJsTgX0nsWeAgScAJSVY7SAzt97uTGPqNN7O06xiLJGG8lg7Dxv6cOoAqQ4trlP9ueUzfYVAtpjSsRuxLSfo7lUf0dTkZL2px2swDQ22l22l55IqNFml5rCNarHTQIvqn1mW5qyJ4f2Z+5BP2VDnYg+N9zNGeLMvj3dbymFol8XMCdMNKEdvIICsSsuVgoZr0vGG5RTm99t+3xqLJS44THryPftoDfLIjayb4SgtesocvB/s3ysvcFLwRWav945LiUvCDPY/rkULlBsh4/ZalYH9Hi66EjSYfX00iC/aoF8W6RBpvNrsr5o4C7glC8654bVetuLGDG0f5ZGhl6fHaaYE3RU6S3sJ/XuDNJILVKrfBp0wwhj2iX/XZ8P8kS1FMFFXp8SkTnmlPKJHRP8ktPsB3Dct8lL9A9ifr4W79b/pzUyKj/1mxWCYZ/LlsxFUbUumQt5ZuS+X/KhWBE0dy17s69dMFbLyysLnQU+60KCao2NXlfYku/fd1xEIyU6snIaKTlBfj+tzBHfBaEm/wi7pPt96si91Y+8SexDp58Sz4Sy32GHjugNcIXtjTRBZ41k8jo0N9uj3rQfEPJ+TFfZnFHgPPHfAawQt76kiXX22xZ+j59bo9MN+6xfMs8ThN8Zr0+JTxmvwOeI3id45Lf08ivtLY7CFhhtA9JBUrmdtPTR7cgcQleNo67FeKvIXFffFYVMzbQRs+j0fP4vzVsdC2qLeYdzIX6BIDjflbzPHvfppZhofuSn0o+SxuamV84cw0zyYpyuRPvekpZtlTCCZMIg7lNT2Tz5EpSYjdbkem0T3gljDJCx+eMvPWZskLp2KPR/+nKH8DZYBeBg==');
        Z55['mapStrings']['push']('1,Fan,MuadDib,219505,eNqVlsFrE0EUxidukjVb0sQmaj25hSJeWgUrFC8Z20VpMRBLQEVEt+luuoTsbHY2aurBCkJRvPoHeBEE6cGLHgpOKfRqQfAiiF7sRaReeqk1TpLZwGy7mfbtIczu7733zTezs1FkuVx1QBRIV3QbyPm6PqdZs3AMtAMOAy5yv8125LbY+OnCj6vL2Uf+GJ5loKTIMQeDOAhGFrpqB7VYSpH9GpAnj4C3k3kAa+nO45uExyeYgi83Bqc3tSUfrzCsDHn8+mIH/8njs0wMusfjU6z61urM+Ag2GE4EOAQ8LhADpRcXLz+/ve3jgqnCOKedCIyEiaGdojYyGKhOwqr3/fp259XxNwHtJEx7//tVc/ffpYAzJOiMj6c5Z6AIz/55vT6+kQusaqiYE/yqiqZ6cuXZp5cfNnycGUkOtiPJ4XB4iz2uFXh8km2xbX5VRfgOv0wMJ0HcLzNwZm3l6+ZyQEwonuF25Ef/Nf98oR257yAkkmo72PGhxPZ586PwLm8QnCH7HjK0+d/mO0AOh3cxluZjfloITg6G+07AtaX2lvOdyK2z1WMRAYLoCbR8I9Osk7kYktGVOryn9jmtGCp1j5LuwTHVS9NRRU5UsWNDxIwaC5tYBGRBn4ZUG3lqVa8YSgLWzvfOoXPLgHQJOQ0Vmao3b9BEZ1RJEFEzmjhA/UoQUQd6HQOpibqnNlBdLem2WsctZS4R5qVBxvJUE7mqZWPHcnXPQnZLnCiXiku1xEGvIAT7QTpPvVKxVbYt06ICPdpBlEivJJBL87pdNkYTUkR5IsmlBTxkunrVwEWkGR6ydc+QHiZdfc6q49R9w8VUvtQ4VdIdr+4a16yq5Z1mg4KLyq6BcQo9sA13SovSPwQxGO987GOPm81maxPRuzK97w9p33iySDVUMPgPGYA75A==');
        Z55['mapStrings']['push']('1,The Fight On The Tower,G3nius,610164,eNrtmTFv00AUx8+lTuTAQqhQyoKRIlqGVmqSKu1kD1GrAiqlRCqBqmpakibQJCYpilKGZgDxGcqHYGBAYuIWhJAYkJCYYUIsiBWxYDs++3z22b5ALSviPFh2nu/9/vfenZ8viXh8r6EAHpwv1iriUn2vdiDeaIraRbHVrbRBbDnbrD/qyDmgNzkNbE36UdWb9NO4fnL4dfnFxGN0LU8bhlOJOK90QByQ7RR5Q+4Z5za0/zAGXr//CDhYMn6vE/YEGuDAq7cfVHujH/lI9rN/Cd8BTvp+rLXn0qes3qQvgNJOr+2XD6qtdkPMzCd4SxsiU3ukaSsBUttGcZXFdxLzLU7vtpTeFQ0BdSxvUREK9rPZYn+BkMcQYIgIk04EnARFPgQSkUqCRydEoCk/IJyrF17IZgNy4XEMEW+eDQ8fxDox+2MOSjQzmo7ZXynfUe9f69vtV+xnTJVmzyF7uAPt9iV3e4jsiX597evBeNAlbBJ60672IHhUEmZU5vSE+D/UJzbUZ62hxpO7JZPjSI44Ip51EGzeXneZskt9GvHR4UOWKWslR0ZPjgijWoObwQf3HhHsyBPDCBOnHMQueWy+SljAG7UyE7gu9F+BowK82mcHv75SOEnwizRwPGO64sDbfTly/Jd9+PEwRFjGTDAZeFBQ2dSKnpockxpcVISneJCZYtaRRqkRpbU10EyPMD/LTN/dHjjdh5FLIwYZMMIy2BcsWRl0Breou0c3DboJR+H/tL6mFtoGNSTVA4ea496mWvivEv0TG2FQuPS7WJhJAX7QP0299Muwcylb87q0bXlkpFlFo21jaISCl3IoxIWOUCg9haJXFaRveNK/S7XFZagtgAX8LROGayudF2ybeYNSEKJS0EmQtkfDbLw3gfR5I3X1W+GZ207z3GAD5G4/NN9JzDcunxkBS0JPhDdBESBzBIZHmHQiYCSmvxB2KLF/HfK2mfCgT1ttcpRcMN7w8jpksQeQ0X6YmbbotsyMgEJrGVu0SaOncNG7PBsmcbI5W+KE4DuJ+TYiC2KJuNDoKE1zDEruz3Iq1zjgbynlbjMhoG9VL+sxcEa3RjkkoG8Rr4d4cA5/yHwW+uGpxzjpEPpRqscYzaEfrHrw4ILLs8ZJ4DhBU/QHm6oYeg==');
        Z55['mapStrings']['push']('1,Floors,Gladi,216374,eNrjYmdPzy1gYGFgc8vJzy8qZmB1z0lMyXQwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXMXOysBcUMbAzogBHGOJDvANHSbwGhPdFUMjGc3dzAcAAqbX/ZGAzsHzDgAFwBOYklaflFuQqGXKxYbOY4kHQAYnMk1LEwWgTD5iX9aQwOpCmHmQ4DeJSD/OVAmnKY6Q6kud2BNLc7ZJLkdiKV29+cCQKzSIlCI+QohKWu0SgcqCgkPhcKIqJQQSM5v6BSk4GDi50zt7gg70B2AyQ24rBrZQRCLgbW4ILE8jwuTgeYahPcqjnhqmFmO4TgVs2BYbZDWgNO1eyYLsHlbmCZxoXhEpzuBqrmxHRJCG7VHJi+xOVuoGqYuzkZGYGIAQDxmax4');
        Z55['mapStrings']['push']('1,Forgotten Floors,GayfishDeluxe,532611,eNrlmk1sG0UUgMehJolJpEikUoQ4uFVVGdSGOj9NXanxpEls0vQnTUvTFNLYaZ0mJbFNnEIDIqyqSvyUQy+AQFSKQFx744CElKk4cUPihDgQxAH1giIOiIoLG+97Y7+ZHe9uQCYSe1nZ/vbt+5u3b9460th4bbHIwqwtVVi6VlhezuWjqYVCYanEWtPZldn50txQbuHGzRzvYeWD72PkSP42Wz6Sm/D59us/p++3v4GfeQzAvZHGcLHEGpl6aN/wFTgvCfpDA0v0p1jIyM8zlT/KR2rwM5r8Y4Mna/DjGt+fOlOD79T0GTx5oQbfpvGpsUsVns9bXvY+f26KhZIPP946Pkl+310+khvMcLQeT0fHFrLLs4WlxWg8EmaNfCnqyC5wB3kMWQHf8Hfh7ocg4I/2/HV+6GCHnUP5tzNV2p5mlI9p/MqHL1dbB+ch90RzyBBbx8TCBDRYF8IMNB2hGr89UfFK35ZbRKmNujwiUM1+OOP6GNGCEu/uYyGRcoInBiySHHidxoN8cQbM3DQmlcOngT+l8FEDPwz6jAmSfHjd+kMIk8qftlz5pMJzsJe3K/6B71V9OOo/qPBw/fqDn1Kfjd9LSB78KIZpOiCvyT8O8k8o/jHw21xEXeVFpGbLLrRaYNS7jCXF0RbMERctX9GU/CSni2PTwI+CPhOKPh0K//g/8kb3ljc0pEErgPk1WnQq5OjoqEvBBO1d+GQyGUTbqnV+yFXX3SK3QctZAs4DWh7ncjl7nag8o3VC1VXyXMl7ZuDnoECP0Ui76OPwV9YC8XwSfs9s0Dql151XF8/b/ATInbJIhso68t2D8SMHSznJX4J6k83Q+qCvw7npERe+iZGzpk8W9MkK6s8OAz8D/py2yGNHe/yYeGbkP/3onUp8xawVKH8k7zN/xPVg+SPzzmf++OZnlMc/xutp5m6vyjN6Xn8knytEvvSPT/maPw3yt1U7jpSrfhZqKraVYaz2IqH4IqFVWcc2+F2kLdIyabkOPOa0fIY3GXoK5GFt8hMeuY48+uqU59oo1+nt+K7rkKvvdgusV2mlj9DbwlgsZvuun/ZfmJ8uvjgQP1DFY33jhjpnPwH74jbfo8htNz5h731ZtPl9lJd9konvoe2vJ98ZkE8E5MeBH6b1WXYWv7zfO/Dei3/YvON/6GT4oLIuTfFK034QORd9KD/C/PEo9zh9LrnURYcfVnhm5B3/pJQ+Puphb4IF41X5zMjT+Prlj8Lvcebe//++/5uvf/z1vp3/xF7ZiXYYNq24vjpZIH5bdTdRrh1vcWppi3iT3kTm4i3hHntrLBgPd5R7wBHj3uaVQqbCS/kjymykwn/x+R1bLsp/gVO+w5WX8nlJWXv6AKWcAGivuMhpLrYb1sYqPGemlB4GY9ost/SUz6z55KEnmeZktOBiL/X/zaIve7nq/wsW6TlUHkcMyW8hJzeCTxAQwf4Ch01Yfwc+uPFs+bOavRG6l9Qk7uJ3/nSsL8KVt8dMe0Mn2kH5DHg3D/xLwsTfvXt3a6cQjJfe9VzpEfeNpHxEN/BFaEpPKgmmD1VKpVJl4icTckKYFmJZ1eQPfotShI7RpKqwi7JVDXhryWcsyk9oOb66uhpE1ZaKqp1EWXEJZ36B/Qq8uMApP1TvOFQbR9YPPr9Yg0DjcIrgYZyoi7I0w3Es1BD05qIuadNDPHt1DdImsGcxbU4p/P7/MhK95YEv3gq2jUxuwWRDAz0GP2u5KRtSG38vXgTk8Xvf8gPy2tBtQpjeUhBezu998sIn779BrNRipz/EUObVF07/t1DKPaPf0Ixa/3JoKussAesMS8CwqaeSRUEfOuRuVbcT+OJx+80a2VvEiXpnhZd63XVQr7VKvU6q4NUNLwU76+u/LqLeNU//Revrvy7Ff/NrO05B4kGc39dQsK++Ae4m6sHYp4Z6TfX1XzcNMOeeCrbVW0HnZSEqeNmzAh6rb4B7qtUTez3V662ver3Eez1sh63fXif/pP8mPSvg/vr67zBRb3pHPH+r/HdY8d8M2wn+Iwo66xeaIyG3+rjTkv9UaVJG7jg6h9GqbLfmlRGu4R8wUs5XHuMpbZ4XwOKqNzRxYubyJpqp7OrkG4J+97kSD8j7/qOPjymcNnmFfw7IKZxqXZX5Xawp0ti8WCrm+TT3uE3Ijmn4XDH7Wj7SzK9veNJh1lKmo7ErheLKM/ZF+Dr3cq2Lnqy+SLuW17z2KZdrpQicwIrTBhGhrYH9HrOIiiSwvpakMIt5SqoIVF6Muwt8zq9ATS6vqejhgHLh1BwKNW8J+Btu0qJn');
        Z55['mapStrings']['push']('1,Futuristic Slide Thing,The _ Llama,308681,eNqdls9rE0EUx2eTbNOsSHsI0oLgFnoo1UqwpVpqu2OMSksQaSP+OChLsk3XNrthN7G2HlpBKvgf6B8hiCdPWVH01JPguV4qXiQHEYqHOMnOTrKTbGbHl8Nkdj7z5jvvvZ0dKR4vlspABKeuVytVS7crel5e3dQLmpxb140iOJFb1+SHcnZTLalwBrQMngc+U36ttUyp4/7zne833iSfen04gcGoFBfLNogD2gT6AdyFvlY5Hvuby0yNgEgLF5Sfr5r2Wvk63TLlEASYlFbzG0XLrBoFSWwv7ViO+4c8gfgJ1PEu6pSnCLj71kYzM/155fOdkeUfmReIbzzaQHyOwX8j/M2DT4h/wOAPP6xcmrI1xH/5XUDjDD21tp6Dd3tonKGn1tbz8uMyGmfoqbX1zO/vo76n8whXRUBqBMA0gsBt3C71Bkk2Y2lza7OZZ4dSC852lZhXzeNdq9Ybxz1K8kIg36yLttZhf9V765ASFv3+YQq3yb51J8BJzA3iVvb3a39I3lq8w+AViocjOJa4Jet5MQY4z1i/w+BrdT9PcnXOv18IAvabouIP+vMOJ0+vT9rxXlUoCA4nD6hxchoOdulp8SRPE1SevPfsCOdrAOth8ArFEz2T4fSTU5vebzIg/rw83HPHMejVH9HfPvLdevP4+d777fDv8pcBn/85zCkh/V/E3BX/ex/o3zs/FkP6n/lP/16cWP49Ph2ST1HxBAw9Mp9/Ujch80XqK6R/eJrT/2Tv+Ad9L7p41vuV4ssvnObkZ6l6HmbEZ5bT/xwnv8AZzwXOeEI+PeGvkJ13YBCR4omSXTbgPfw5Wwy4uyBZIkiks7fl1bK6ZUgJhzUD/dCMlWsZd0YiKkjPovH8jh19ciavltH9XLtlmUVLs+0hc8vQrKXMSUst6FV7bM1SS5qdMzNaxTTUijb0WLNs3TSi26N4ZlYv6ZUYiAFxt9FoNPcaS3Z2gKi8dwOC1h0YverOku+bhgbAP+6Ltlw=');
        Z55['mapStrings']['push']('1,the Gap,Querp,632380,eNrjYmdPzy1gYGVgL8lIVXBPBDIDS1OLChxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEbFztrQTEDOwM6YEQXcOi3QKHhgAmsnNH+5UwQmGV/2RgM7B8w4ABcATmJJWn5RbkKZlxAHx0oYcBiIIrVMF9yQH3zUvF3iIuuBFCl0827CHUHohsIqX943RnEJ92phiCnOpDs1P0Iq//Pn0/YqUjqnW7cJcWpgginKmgk5xdUaiIHrkPJAjQXExFYqC7OJqi+Pfc/5S52INnF+9Gil5CL95PtYgkMFyM5HHcWcvCD0kUHIHS+A3oy2mg6GeEQh8PtYJfjcghm3hRgwMibiKRrysDOxc6ZW1yQdwBq8YFMHAYzMgLLGNbggsTyPC5OB6JU84BVw8KB0yHpABGahJE1wfUeIEqvFBa9COs9GYgwQhG3EQjHEGWSBkGT4AbCkyUeAxkZ9Ik1EEpxMjICEQMDACqf+TQ=');
        Z55['mapStrings']['push']('1,Gemspark Cave,G3nius,1103560,eNrVmn9Mk0cYx9+igDDcUDEhbpHijFYGiKVdgYrvgaUUQQUEHGEqVKgCAoWCgLrZZWrVbY3GGN3UTLdliduckuyHbkv6aoyOLWbsl8mWbEPZZtwWx7LIps5lL+3d9b1r37e9Lsvi/fPS8r3r87nn7nmeuzY+NnZdm52L5iYXN7U57A1drerFDRubuJji7PbmHgfQcd4Gkjii8Tds3saPwtfbNl0pfjNpM3oNNFCYGh8bbXdwsRzdouk3QD/5xC2KKwQrOZXQ7HuJnqAWPrcCnwm3Uu9UmTKSxZHzjRWivsP3PkD6ZlIvscSnXwj/3+n0PavIz/FQ4+P/UzpQAqfk8srkJddMLtF+r56//vx4e4H/PNvb+GFOpk0p39DQbevoalNnqzVrO+z98+Kj/TMoNMI/JgTM4Gz4LIAWj56tzMlwNIkWWzLMosU5cIREqEPOzYXvx1Ysm3txUC3q8+YaRT3UCZlQNwuN75shfgwSRnPWnFXyhCAR2hEmIfIUG2GRgYnQmDufjXD1CnlC/keowy05gFACKrSSS4wJNNViYgJNMeYxgRZZ6xRcGQc3AW4pcqASXmAVSDwWXo3FwsSrMRqYePlaqwLv1K+2bM1O/cxv6ZwQvFI3Q2yhwsmOnWmZxYStNs5kwi60LlDAntIdf3vbid1+SzPCw5bSr6F2c0oAvY6MnJIIrtUWiRS1ZKQGKKLDWePRbEVBPYwwwnqo58lZ9ryDI7JPbzvq09ucROTG+p9/+XbVsenHsb4R+hNliJVO0p6bH86c/sXJI1gPuYQuXz+wmhyf95jfP5y4bzbSAyPUo0y4hkym/B3SHjRvwiY1mYnQ+Nd6Et5OaK/D+hbf/Am9QlBefoicT9AE9X17SH/JzA/oAiQvXP94/F8p3p6s4Bl9Nlr1Y6MJSa35WO+o972/RsZf5x+cv/Hw6DDWt/mWs1AC9Usp3r90dX1p9TOx3g7tqYN2Z1Lj/5D78PC5GW8F6B8nObGeWs9gA7QjC+rSKHtunbq5q+ZclH98uN5Lg/Py1+H4MVDfS4ZZ0AD71Tjpisqn7yTfx+Mv4oLre+B81lL+SpfRb3YqVmyUXgU2Qr1VZn2i6KVC6yGR3C8wzqKI47l615jQe3EyHh/uc2GLOlTF5tOvdZLjU/7FTQX1Zmoe6fHp+EZzotdLg/oLV8DYX2ifVQWNhyq0LrH9aD2geHuB5EUVM96/aN3BuOWh5ocfDLeivQ9nD63BmxvQJ8hXejrSp5LMeChvrzjXFugbNdSZyLmWZEZ3mrhiANQJcG0DLXxWAjoznik6oZAZJ/726oWcId5vabw/M3prHccpYtK4CehMhNH08mg5mWxo89PZ0ExAoYj9/Vl9we66sVBlOqC2M5vzSlvYCHOtbIT8E//+qIUTt83JTph5qIyJcKG7nInQcKacpXCT8SEqpXRh+9AfvBa7xOM4yIMWF5BJAyyjNko099iAQwwuOkoP+4NyWJp+/9q8109u/0jUd47skyf0XKCPWv4NqJUeNoB9mB1N0+JiQtPvHGBCM60bUdiA1+nDld95WunyRBuwy36vOe8y7TwZQpQfGiNYnttdC5gIB45bmAhHrlgiCzFSQpwmWp3shK4tWjbCYzlMhN+MOFiuAJIDCKWu7IBF4wY1O2h1Htt2rDazbcf6aoXt6Nn7nfmlyiO5IV3ZDj+vrZ6dUF/ERpj16FNMhLmlgoIrJ02M+SllQlG4rkT3GfWAHbSqZBzUGDaoycDmyq66kchuILXBbiBLZOOOXpbw0gGz5AxfQN1BBNmVzeJYsoQVXEDc6S4bzxEyhNPo4k3Zle0hK5xFZOUiDT87ckVXIsOBk5wYdNiOPfhxYcW0/eOgb+SLrkym9A9xxKGcv1Je1gYmLRf1n46sV1qzXz+Z+97Vl+UL8B54ilkP2NGe9mZHBrRXGhnRnlFAu//ds7a7f+eFLN505Dch947zPGMPHMpadXtqyAK8x3fjJKwT2Am3l7uYCPfYB5gIT/QpRZqEFw+k/Ln8UriHKKEqEh+W6tl8WKxnIhx5brkCYdLBJU2TszNC+rAP3s6kRUKYPo+NMD+PjbC2WKEO/+ODXZ/sPz0U7rc5ffAauRMu1qj/zTWqA4OuwcrzYRoObLDKtgmh8nlNYA2qFwsRMAcaXkiB1iCDYAklHuRNO0TQYqSnJqQM5vMv4Q1rNNdrdivEkbN0aeZPAgZpeS2UcBGgdVnZ0Hb2M6G5mxsVFh+6VA+yvQxS58HLPKHxKDuhxpXORFjjTmMizGpJUSAcki/GpIT4Wr05Ah+aT19iIjTscDMRpve7WY5IMoTwQh1UA3TR+x9vQNkNdUO+9CAs7uYi31ca1zYmix9xMPqkyc3yFX0gIRcTHxvX5rC3YzyZpvL+bCR6hb2htz0+Dv8yQ6ekTvCq0VzG4Usc+rtx3Ekldpom7eTvaxXC6DsjSF//ELUhPl41bnOq/BB4JHzftohTGEkTciT4iFOp4sa7/AMkVIrS');
        Z55['mapStrings']['push']('1,Gentleman\'s Disagreement,Querp,321315,eNrjYmdPzy1gYGWQcE/NK8lJzU3MUy9WcMksTkwvSk3NBYoxsAaWphYVOJgwgIGDCgMKsH+XBgb2H6D8lqqH7utEqmF8Bw2oQk4udtaCYgZ2mEYHTyiD6UBaA4qRDiloKmCAiUHFxJWB0YFE9fYvZ4LALPvLxmBg/4ABB2BycudiZWA/kOUA5h6A+ZUd5msHEagvP6DSSFbq2gcjdBKrHgYOqJGo3gJqjxL22AGqBwJGRrh6aGw4GEBpBuzqYe6Gm8+A03wNDQ0GhPkGaO7BNL/P3B6hHp5acEQJI66Ycui3gLO5g0szSxQ0kvMLKjXB0Zd0YDT6hk70CSFFH1IsOoxmQtrFonP6OSrHIgsoFsHxNpr7hlK8oReeyHLYTYFVs1i8Aw5e4qtbNuf8nPzSInCZDa3THYoOoFl7IN8B1VrMWv7s5gaEtTBnkRwqWJQ4RENdpQfhO06/XpIAchO6a7kCchJL0vKLchVMwIFIiW/ObKqnrm8cOBV/h7joSuDyDYZrBRG+QUoZmK0leDDEoaUMPeyeciBRPfEpicUpsTiVgYWLnTO3uCAPo+pADxFgqEUBI43zACGFQBjFwA4LBE6MlgUW9QEMfGiVGacDIW1A9wQwiKJqg1KcjIycIHkAnL4bjg==');
        Z55['mapStrings']['push']('1,Get Stamped,raspy 667,863955,eNqVls9rE0EUx2dT003WSygeIgSMWKQXC21qakHdSQj5JYhpitpDNGvbtCXdZtsEij8OexDEcy9VFKLXgFSCJ5EMHrx68A+wnqSXogdB8dLJ7psk+yu7fQQ2mfnw3nf3fedtBJ5flRXkR6czK41osSHJysoyCm5LdeVhNB6fxTNICzyODCEeVbQQf8Hvp49+ZN6decx+4wkARwTer9QRj8zBmRfwDtGvNWzc8KHFCxOIEw9fdOOl+C2mhXiAHMKXzAj+fkm8CF8EHIKVsl4Cb6n69YFeuvPme/rt/Os5WrJUKtF1xksgrQL8OjLz1WoVcTiKDPtDeEVRKC839f0V4HLIic9ms4gjSZYP9Kcd+a5+rp/PlS8UCv2WkJhJf8rCt1otmxYCx56r+HeXOze1N0n9ZeBJyp7HYx8+/T56skf5drs9wKdNeiYtejS+w9zoapHRZK3RqMldm5AAFCnB3lkcYeWgPVuK02O7+75O1xm/HDXeznrZzCcSiQGbSKqbTfQ2MpssNU02adq2sWeTe8jY9rWmra16+UqqJ5vgVf2+8H3dVr1Dv3Zgb3PIRxbAhlngL0K7vtwJ53+mnlFeGwwkresgRdWW73xNf3wV2h3v8WW9LrkF+TMmvq9H47EEeubhWGfVoTzZgPwYuPxwPVjWnw9huvPD7xdXIH8BOHacYg56wJfkhuqJx9sh47ELG4f0AK9NWrK1r/Ns+Acc+VwkSvkN8MMccNftXxpUijYmLfw1R147LxY+dsL80yfMfxWucE7Fw/P/F1KXwszPbnzHKx+x5B+uJ2LJr/FOYw8HgXN65VqD6/zb//P89mdfbzTDbEgsjRU1T5in5chCTUEBgQ/KdWWz93ch55Ce41AA8UVF2tmMTglB4oHnGT9N+Zvu/CjjY0IQe+D9jJ+h/KI7f4rxl6keD/wI4+OUl1RX3sf4WarHA88x/kqQ4+gHoWO5Z24L');
        Z55['mapStrings']['push']('1,Grasstail,GayfishDeluxe,695345,eNrjYmdPzy1gYGXgdC9KLC4uSczMYeB1T6xMyyzOcEnNKa1IdTBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhUxc7KwFxQzsDOiABcZwCDoAoQMcILQKmkomhqzIjQiuQ74DqnrHBgz1EUjqDxBhPor6ZgtU9ZXY1e+Hef2yMRjYP2DAAbgCchJL0vKLchUMuVixBAWbQyaqgIMlA3anMjIELgwEOpFE9TDzHZIOkGQ+seph5h8g0Xxi1ds/hgYxCUFtxMDDxc6ZW1yQBzfdE7seRkZGYBZgDS5ILM/j4jxAlGoesGoFjeT8gkpNLk64FZn4NAkja4LrPUCUXiksejGsPxCJzwhF3EZgOAa/SRoETUI4LRM1l2MzkIVBn1gDEQ4lylwzEs3FcPYBvMbbkmc8hifw2+JCkS2YXspRwGOZNzUsw/QgXjuDqGgnlOJkZAQiBgYA5/EWiA==');
        Z55['mapStrings']['push']('1,Hamster run,MuadDib,304194,eNq1lUFoE0EUhifJptukhFbbYntyCgp6aBGqED2YUQNasbaUVJRCdU0n6Vqyu+7sWlvFKiqoePGsB/GgB0XqwVMPnV68CVVP4qVWFHqRKCKUUuI2mdm6Y6bGg++wy+x8b96bf/+djatqvmCBKGg4ohWIg21ouwZQe11tJK2fRbtBOdA2EIjU11w5UkU2vjH58fDzlkt8jHYwMBJXoxYBKhBDQcbVwANeQiwFQqC0Mg0A/UeeB8+rlUc18ohL8a67HKmFynj20909B+4M/VxPSMByMEnj0SpqtIsPEEay6s8O9XrPx2mQP826zgh8mPOMO1HJQ2fY+sfZLubnBpKdBPu8M8/6WKjOLwj8+X6mnoRf6ljJpDvbfF5/WJm3i9X5orD+MJt3YXX+x7fHr5LzKc77ujCdfH04vxzsh3JduE7i+qsDfYt9t7/7PNeF6yTwCAT7p1wXrpPIh99fnurueOvzXBeuk8grwf1SrgvXSeTV2JvE/itPff4v/kExQR+mC5X4BzXs236/58NNn2e6UIl/UELQk+lCJf5Bjecmdw4mh32e6UIl/kFNgv5MFyrxD9r0Oj80ffSB6B8q8Q/aHHxf/LuiEv+g5s/3Hr1crvd5pguV+acl+H75d0Vl/mldnVmaeeL6PNOFyvyzJegH/l1RmX/aWr/smhtc5PxsUXL68XNhPaoeeGFfYJ0V2Cs9bvmlMn/9VuUu+TN5K598QdYbRKf4gSUYmy+PbAo2itCGs/VxNVYglvHHdnRhlVBo7R+bNqFhOrCgjeF4rLacpqxpTUAzB51R7CVaXbUmgporHHQdOGG6MKsZ0CUY1prYrDswZ9pQN4il25qjm8Z/6K7XEwsSPW/oOd3r0Kk1Uc2OakYed8Uiofi1iJqdJO1ZzXJcGx/TC7rTkbO1AiYZM40d09AcHJmIXGy8gG3ibSNhayO6S7ayhH7bzNuYkEZz3MB2T1qpU4BSKpWSCohOefc1bynh3wZezbpExqs/5lnxF59MeT8=');
        Z55['mapStrings']['push']('1,Hellevator,raspy 667,868128,eNrtml9sU9cdx49djJ10DFRFUx6izmQRSpkJ+WOSOAF8QhyCS2KM7dIGCsTEnuvEcZzEIcnGNK+DAlJLGRtqBi9oEtO0P4W9TNrLfJkmIk2bhFqp7d7SqdqGtE3p1E2dtkm7vvecc8+fe3zvVbu33geMcz/+3e/9nd85v9/53dvo9eZmS8ADGo9kC4Xs+XR5bgE0LKQXS6v+3t4+GATaAdsAc4T/9hXtCG+i7xe/+v7om01fw99hOwK/0Oj1lBaBF/8QHkT/2Q64Ay4r+mcJsifcYGpXALgEPo8+5wS+vb0duODr+t/hKcQ9B9nfPfX7C9/o2fmWeu/9/f0Uf66CeKQnD3m+q6tL5W8EET+pfx5Fv/Mhl/yhCN/Ndn9J1ZNMJoFLudZuznfpfJXjiZ7ZO6zu0Qp/v7qeDDp/Dv0uhr53Ij3vx8dmoe+Yynd2dhr+VLA/J6HMnxqvWNivGvY1PWScJhXWfj/g7cdiMYrP+1n+qHC/gQAVDzCB7DdL42F4eNiE90n5A6++KvIktEV+aWkJuMKPv1c7boXf7tGO8AaQHO5Do40ekylhDMncBjsl4sIl740cc3LJz0eLmfxUbXL7x9OLM7XLwxU9DpUsMt6j4L9cXtMvm2M9S11+fX1d5TC/7Gf5pvo87ADO+FWH/JUrzvgbR5zxa2OOeOXKdZ2LcvdhrCjdCwvqDCP2f23Kh/+189+pyJ5mgc9vsHZzk6YRSvjz+pSFKameXC5H8YuT7IyMgPr2cygeTiO7mTs8f+vWLYNXvnndSv/q6irFr2460q9cuG+ln7X/MuLOAFv64bUrzvz/7e9a6b979y7FX//Amf9fQ/FwBvEZhedv3ryp8hc32TjDyX5B4Nc/yqj8JWT36po9/lv3Ufz7WH5pw5yXzZdJIQPvnZ6uw8cFPpDJ1JlfyD41v/bOzNTh4wL/5ampOjxa7yi+/dSpOvo7hAqF5duwbnS9HiEedo6NqXxJn+cKznQDgM3chv2d4+MqX4G2ec3+ChvnZJzaJHqwfy4rlvo1PUg/vPyxPT1Iv22e5IsdzvS/8Wcr/VpFQ/SvbbHSo/NYv12exJulfpbHlWSKq4yp+VUoUHymwsYnjo8GFM9ucPv27RqvsBW0H3EtHO8BDx48qPGgLk8Oj5ZPDT08j+fD1uebn/1T5LJaSGkVn8C3mG9mVH7k52+a5NM4ty4a/nntp6N1+CaB/8nbJ0z07JDqqf3jUl7vZ87LyjsXsDxceO2BN0pMjh4qXtTECNWgbwTtBmu1ooJWeLFUJXN/gs1l/O7NfqnakMxnskaVOo/WJKQXbIEz7H6AVIdBISq1rAJf5JQGLXic9XtY+6T+N3jNEU557Am8v/sko0ruaZrduw298W65Np6C9zyp/GxWH1KEKuinoFUJSYZUXE7uRdTdB+bJsjDBpi+Bn+AcH2I/SXpEvFCWWPAK3lCj3gPcBZhpVn3M8Qku3frZ5a36DlpOPIg/XmGXZflyovNJdH4QfWK/tkr8cwQwDQGiPyjhxzm/APY+qu99x/XFrrUOg68wk5jwaLkK8/wxdH5IwvP+xPZD3ATwSfTHKsz9kV7SptAQ0Xlc1g1VWPtYz9//O/i55fVthD+AzncDtkEgG68hruzxsf4M/7XxrfWH4a8T+0FunFq5+8D+3Ir4Ni6ercY3gM7v59LcPiG9IP0V9jyQpFNsv4+1y/tTmC+9bG9P4D/40TM/vnfpN4L9kDkf5vl+Cz0fffiDh/2PwoTH9yvhw055Xg80H1fCf3z04pYfjv+CrFd4XvVy4ytZD6ub3Li2cfe78SDRv2cxS+zv4+IH87sl44vHn/OrbP0h5Ug3tx42CeUb688gxzWb27dfAmw/XJibW/CTnhXdLVOm0LA8oSw/YvMV3kaL+UpP1Hb5rWz6Jet8XrqeaeWa/fvbFsmmyy/5h7P5Qr6YY3qBqPMHtihlLhvjMmNIaIf29akzTZlHm22cBVOKbHXRmyML+vAqzyL+BNuOpnitPa7MP2I3n3jTEDLnw3/5be34nbU3vPpoj5n6wQ0d3hd0eF+OdSb0srTCxAR4isRnhFstosJ1902PmBTQUbYbTDULrq48Z2Qbwg9y2cbIfrNnI1QvOcqtSmL2C+YjdfQEBT2Xysk6fJvAV0pxEz2A029km71nD1J8zJynVsfOdJji8arE85uE1+xjnXi8BD2G/cDJAdX/aBUnccjzuFp0g47T+1UerZ7KYXOeioc9JwcpPVGJ/X8S+3vPHlD5zvr+oexreggv0UP5U9OjdNb3T/WPRE9gIqTax/cbl+g3srHunxbMS/z/kNjX9NhfXT3xQrpY1mZpCW12z6FcuM1qVpBR5GbFZ1H7WdR+mlFL/G60PbSo9afmSub1ALRfD4RCodrWH+XNES5v+iV502F+J/xhjvdL8qzt+fskyrP+sWyOzrXKS3dwO1DWfNplXnkSDs8yzAcklXOKq7Q7JLkQV84pSWspKuH7ne30Hax9o+mlXJapl3FDzk3+cpCrfxMSL6ARhtBeP8jBCB/JpjNZ41G0+CQcvwSizHeytXes8gmvvY26tr/b9OpP4BYj6dy0sa86UFdPJBKq2hnJTkistQZfeYXicTxa8PbvzntoqVyeKy7qTVv2RQrwtLCjiUo7BCdjtTke5zoQgP1O8RPjfVQHC5h3yKhsqTWFyfW5+zd5YPZCzT7EHaZW7joBbP/+P66e+JW79sBjuIvawVvr1+wT/3QB0wceFF84M6zqOc7ZBWzHkW+CE/+McvyAwD8/1qvat8+fTQ5S+g9z+oU3UMDp4wNGdiWdCzmvjS8cQ+cPsdmSdISM8dXih2RhmzyOF6UJmD7gofTo84jnW6R8T7lswu+waZ/vYIn8Cz9btOapPGCPf+yMrzrkqY6vPfsO+fCH5JUwe/Yd8lTHzp59h3z4P8FTK7snn7Zt34In8dYsrPP7V2KO8nwqfa7A5nnciXhSqI4i0uxi/mLlsJTXXjMR+AGH9kNSXq9EW7lswD3fILPCo/fdSA2/g6u+gPAcR+MFPT6Lx7CQe+AI6vPQIU84WHHEKzZ5B1E1XJib0ioyBdfcRekD3xRXNX06FVkPc/WgNKajbGzTu5mT0EQtngPQvHcr8B1Sn74432Fif7eUn355nwm/S8ovXhsw4Vul/IW1Aya8/Nnkpe8fMuHlFeg77/2SqixauM+Q8CxKe/layouvNmkvO0t58VUKhy/bbk+mz+fV7WQ8nS+WUbcd8vHl/n/Hl4M3dRPau/d15fqEywcdLtk99pYYwBXYtu3vdmi/mdVFFT7m9jm+asU3SXlzPU1SPU6XVG04gbvR2zC7WCoq3LsS/OFStfiAJ1lKLxcbG6AN2gu8Gu3vbnC5Gmq38j9mlDOd');
        Z55['mapStrings']['push']('1,Horizon,iRedi,513720,eNrtms1vG0UUwMexHTfmoxbkUKRKbKMcoipYVuNK7YF467pOQtIkJFHTiBbs1mtnS/3RXaclSZWsCwhxor0gwYkDZ87cGP6DiB4KN3PspeJQEDez9s7bZsY7OzuhSBy8lryx97dv33vzZt5748RjsUq1gaIoNls39J16DUX1Fa2kq2nUO+AMR+ZZuXdk/iCfP9v5feaH0V34rE4Q8M14LNowUQzr5EIFO38MI+ZQvzrnnMeZCyF0kJ2231m+rvL4J0sXPHjQoJ9/unnJg7+BefxfnYUXPN5j9NcZfgj9mM8e4luWiP/+7BQKZZ5+0z2+zTye6h2ZNuIcISVuD5wrH/QN91k0x/HAMOoUyyik5i2aH+d6rMdjST64RahrEDacAcCrKs+gRXI+zTFonlHwtMAgSV7WoIZjCE5zRyhHzgrHoAuMgorAIEle0iB1g4TcojDkJgKG3IRkyE28XIPKZG5OI1HIjQUMuTHJkBt7uQbBHMpxDSKmqpMcg84z/KTAIEledg6RVR+/T/w2yZ1D497rsHoJBV21ejyW5T8k14mG7hRIeuuDVzDNJ/3lqxrJe3k6Vrn2Fi2aF+jv5smgfJnheFMe9CnQedtnCjv8NhOoecvXn+rdFM2L/Ll7IMe3Dqg8K/S/1aZ5kT8fYDl+X/WON54+rRTNi+QT/dV1TNub4MjfZ/iEQP6OSiURV/+0d12k3lNoPs2V7/C7jp34CjNfePLvE/lJJPKnw5P4xEnheDk8Ga/APOjD6O0R/w5P6lE8K5yPDm89pPkJgT4kflx/bgj8A/qw6xtP/wd0ynL9c4LHN2j+hED/TxNyPBQ588z8OsPRZ5bhzwjk37Dk+Cty8Qx29vn/JIcnerj8SX99IOEH5gmHmXnlsZ44/GVE8wmB/FVLij9qET9DvhzrK0DS3IB1FjwmcHwC0CkQJHl1lG4E4TMvIWCmcfRxWK8RhwUiME+6KKwwPMF+Ovh55dw7pmZXnE8W7cYd5OAEoz/i6A/25gRdG/gf5F+0/P0DFW1ajlc3CzSX9C8A3QIqIRxfx59lRg8Rf6sgJ/9WQU6+9TfdGqVEBdFDwlvB5MOGSWAeEp9Fz8fRvg6H6HPVub7ELEj9PJH/nRwPBc61gAXXPknI6wH5XZIAFyxRk+/we0yCGg3Ko2A8LPAfYNEuCtUQBOZd+Zak/IA89MyQ0M5zNmUg4TeXaV4RJPA7KSleMkH1fRnBTRKwsHBAhwed6hu/3d+fOvULiqKz1by94I0zO6Cw0wqdG8O7HSZUgmvM/Sy/1aZ5kLvhrc+/dcAwhgeCIXwHZL9Ytx0wzRgA5zVv3i0JWfkwwiwP11kH8OSD/rcxLZ/DwyaJO+BMS8XyR3Swu0s2hKEH/ZJc+bzNC+n3vi4eMuBRSrT3P/PoOkJH3DkGf9l2Imbt4m+z/fn8+aHN+oA8ZtZ+Ea9K8n01Jn/N+LWd5Y9opk1qLcZhEGAkYAYOEzlsjvk5a+Awf4e5S10NDRwWKMIgJ5C1fOAwUYRBsisNIiyYw+7Q5eDAYT4OQ2Px2EjVbNRc2QXVs/4I9V6vKsu3taKpKbmlxbX4iPub1EfeRUso1O0mXlcu1hvbytqmbiqXiw37NqjvrlvcZ4VRTNnr/a+GmHcGOaTYJFS+1yyuQhEUUVY/3rbhEsCIq0bUNnmuZjZ0Qysp2e5NuuCmULdBfkWZ3zJ2KppZrDTte2pwD9+3dvVpgxC6PuofCwJ2j2OORwbkgByQ/ztySPlPHj8SDsVb4djNHTP8yfG7mmHq9dprRrGkb5nh7eP1ezXNmMu9fbPYaG4Z2rJRrxiaaZ4qG8WqZq7Vc1qzXis2tbcIsKBX9Wak0+m8G92337tpJBKPtKZffOq+ovZDh8N2TvoHvh3wlg==');
        Z55['mapStrings']['push']('1,Hoverboard battle,MuadDib,178935,eNrtlrFu2zAQhk+ubdZK0yipH4BDh0we2g7JUhNFgHQJEAQBim6VHdkREouCRBVIunRo58zpUPQJggzdy3fIC7hjlyJv0JIiKcSKZUa7DwZknr87/veTgOwiNJ7E0IT1t/RjkAyonxzhgc/YaQBoL/OPdsIBeQV5kOcwE/2/ozz6t3r95fz37lX3k1mTTQ22XdSKU0AkUmvOfqgvTdOKMK6e23rtzW4Fbbj9dy7yW4a/Vs9uBe8ontfkTfCLrRmuPLrhf5nRf+rRpzA3HLBGgZCvqgnRGop82T1wW4D4ocnC0tPant5zL/eUmGz6Yelp/Xtadk/dU3N7E770tP49LbuXe1pUDXS2ZTJGG8l0v/elHRvzlS3gv7/evaPnQJ8Z+6yecI+XHjlc/17wZp/efJ7U5Pt/LmV8M35VnUHJsMLGBk+mM4devLsqDCA1eSOwf/MyjwUCwXNRZ5LGEd9XY/PK2+JAF1Z2KI4owxP/JHA7thp51g54QxqfYTrC7DgQhXHP7RBdSHBFnSh8JtyzgrJ/A1beZAyf0QwP/UioOlUweVE9yQa4WRrgkOERTewlcpBH8CSM0jhMfBbSSA6hi/hm9RDr+RAWULZvgrcnPMVpOI7CUSgGYULWO249Ew/Q8NiPxkHPzssxWrkiDS7yfw3ah6LxSWrHZeM2rGEd+h+c0EOn1pN4KvXYQCkc5cI1uMjz1YeAsuVjgI7jiA/8B33pIJc=');
        Z55['mapStrings']['push']('1,Hurdle Easy,MuadDib,489142,eNqtl01oE0EUgGdb45K0xYg9FLyMkEOKWBBFD0IzlTQKEokYehAF1/xum+yu2U1j9GAOFTz0INhTUShE/EcrFsUfTPRS8VTQeyt4EAQR8aRI3WT2bdhNs5mVvsvwdr95+37m562P5zN5BXlQ39FiIZlL4XFBLSM+WhSSYfEc2Y+aQkaRRULf000J/TD0mYufjzwavAQ6CRpgr4/3KCrikV167Q/ILKZj2faiBwVDJxAHal3EVj7ext8ZO9ZS6yJi4bkahPJxX1NCa6iD+GI5QUvLhTw+4PMgnjyZox8q1On7oPlEoTbIiOHCRGVDV8nDr5TXFtj423cpLyErf3zjVJCFLOVz2MpHKs58SWHj52KUn66w+XOZuIt3ackd//yTu/y8/OUuP8Cz5ufNoLv81Of/bz1cOGvlR5Fzflj5dzspf5qucBJGltEUD/q9XkUcrPtOPPHu+hMP7xkC3lw/k4TNH8gnKw/7EeIt4U787vFTuj+wH8F+Nx7WJysP9YL6duOhXqw87F/jROrKw3pm5aFecL5146FejHzdeG7mc7aL/bdVd/ziFmu8BkfOUD20Gnl1w389YPJPA458zc7fe2+NF/gJOta+3B9+8PjKB5N/FnbkQ3a+epXy6qKVjxj8z7+H+kvLAyb/IunI1+z8/DXKn19hs/96xpFvs2/UxzyfgY9WjO4iuLz3mxgz+dotR75m4+EqJwHD3zXbuWMIh7oKB3PgDIG7a2xokur227/VHRxsdAdtFnvMhgcamekVpkaGQCPjzLtoZLa3GhkcTMhKeRj1+3hvXlUks3uCsNpl/SbqC8tYkjWcF6ZSPi/bHH/jQ1hOYy2b0icqI6wTESu47XBRw2W5iBOChIsqs2c7RA3r2cCipCpiQdBEWdp85/xRPVdYFTOSmBZ1BzXWiXwiK0iZ1OZ7tDWuG55SWfEB3BTjB6E1q605gR3Ecfo97zmpCCXJy3Hehv4PP4ypUA==');
        Z55['mapStrings']['push']('1,i came to drop bombs,JonesReal,637,eNrjYmdPzy1gYGQQyVRITsxNVSjJV0gpyi9QSMrPTSpm4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMLAfSGlBNYGRAAw6pDhBaAk2CiaFy7yyEzTCbHkD4+6+FS3g9d2nHaS46YIRZdMAfTYY/ICexJC2/KFdBIzm/oFKTi5WBxYFW7rYn2d0HcLlbDM3dSM4/kAZ1pBoZzj//YR7C+ZeNwQBXsON1hQOtXGGP4QpZ7K5AcgxM5QHvBlyOwZHoGVjBjrF/ORMEZmE45qfi7xAXXSQfcMAcw8DGxc6ZW1yQ52AJtTz1AfZIZmQE2sIaXJBYnsfFeYAo1Txg1TAfch4IOgDRlMmAR5Mwsia4Xgei9Eph0YswIh6aSnMU8BihiNsIhEeIMkmDoElQCgDJ9MBx');
        Z55['mapStrings']['push']('1,Indiana Jones simulator,Querp,194122,eNrjYmdPzy1gYGEQ98xLyUzMS1Twys9LLVYozswtzUksyS9iYA0sTS0qcDBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQxsDOiAEcZwKD8AoesdILQKmkomhv9Z2QwOjDNBYJb9ZWMwsH/AgANwO+WX5iWnFik45ZdwsWKxmgVudQ7U6kIDCJ3YgG712c0NDA5lEyDSmVBtAlA6D81gsFWMB4hVzoQaDmEwx0DDgQPD9IU9KQz7YSFOMBxYnBKLU0EBAHeIYwNa2MPtdmHAHvaMKHbCUgEuOxkdRBgIAqCzcnKQ4+UAzFlMDmVQEXOofbDUBzXW/sPBIAvd4lRoyB0goHw/qnJYPBAOOQ63nMyCgtSiYgZGLnbO3OKCPFjKcAg6gN3njIwMrAyswQWJ5XmcjIxAxAAAKE9kMQ==');
        Z55['mapStrings']['push']('1,It\'s Cold Outside,VulcanKittie,1057557,eNrtWt1PY0UUn65bKRWVjX1o4iZeWSKECAot5cMNHb4WKrIS2F1Z+ZACBRqgbWgrUV/6oIkxJvrig/u07yT+C8yD/4H/AD6uD2YTk02MyWq5d86lZ+4dZoaPsBJuSE4LP86cOfM7Z86ZueG6uvXtAgmSG6lSS9Eazm+tWh+XS8XsaoY0PChvraRzE9lSKZuhcWI/tJmgJ/nnmv0kn/LvX3/5+9gvka/gO23lwDfDdcFCkdQR8QmIv6A/9CLpPtdIS98kCSSf/Hz4PEr+FrOf5AGRPOGh9Mrm+k6+nFsNB4+GpilQSBcZHnre+U63LKwpSN4bXSABcfYinta//c+9kfZoFd99N2tiasPQmDVZNbSUzuaK/sayRWHwDHXkg4ot9//6vnvwu7lnMDi7yZfkqT+e3vjmj8EW0gKTO4Wx7L6jkk1UuL9oh/OBjfDBu7iMOnL/CffUNTJb/rbq2cHKsfjkEf6T0iF+nOP7MU5coSq9bDw4QRdP+wiaESUK/drOexU8Z83k8ruH3qOjfC4LV94z954nUK6ztOCNViz3/3aj1E4oLn6A4zqwlOI7BW93KfB89jSEvXiKBHdvJ5OxqtF4q9Mm0oDUFbeFhYsqTAUXNGEpxSc47iaWF+GKLtsV0+yKFbditisWqMwVd3h4vk+QlJrK45jGsJTioWhIYHkRrojbrli3ZK5IGa4az7i0myCpdEUvlhfhim7bFYUfZa7g2xFtI0gqWaHLorghi87RFQnbFTvSXDFkmAY/MMwtnYa55Rxd0WO7oqTcTHVZMfD/ZUUvqivgw0tQvbhDW7jArhl6b2+vWgURjHcLcW8V5OC7zPD6UwvNbOc3M7xKYBE+zCWamLPng1nRyzOxGKLiGPyVrT7WLWamH8WrUQP428qEg/ERHAQ04nHcfOKtGnyHcht19K8s4agPCcF2pP/f588P8QTj5Q0FxzMzPNg/jucJssZ+G2/QK49Vs0rOsnNLJ6pM+VDkNXdwqCneIUjWDN7xxVSNsbzLou9iWYNvR/izX0ysfwBHmXwxGcarFidTMcODPaN6i8n4wQiLYZxPlsD6Y8qo5/oPzPAQHJZgv8yfywzjlf4h/njijz8Z2Z2UnCOY7K8YkL39hSa7LrnA2edFLiCLKRktTXsgOCxN/WsVf/yZksvp5j6jskwKjS3U152KTAotTBxLJblCmuQCUvVg6dG/IvQdqky6LOCVkW+K5/Z/VFEd7/DF52Tswf6RkmuNIbyaXMQfTxT292C7pfasGNoDO5Mm/mRkd05xdguY7A3u5O4qyYXJDv09HOb2a5I9qkl2yNRJLD36+WEMaxXIHpKRRcCHFIuzYYgH+6FAa8Z4L9mZfycq079s4TImqgju9JJZ2bN8YIQ/GRmdY4LCwWVrSGBb1G1IMhWzBmONvoANiXMSWGq8WsxLsJgJ39sw93qdZoXr9expD8xCw/nPMzvt5YLvwK+7l4BxYdU6PAP/OjlLAtABuMVbI94XPHjQP1LBLPWyAuPbhPzb5NH/U/9wDT6hvPR08G0CnshZ96zqaDpUMcPrXwrbLDK4FHbw+pfCDkv1L4Ud/fqXwg4e+PChXqcCJ8yAVxVjYK8uXj8wguP5cjHjGxVveN524blKkpsINPeudSnpebeDfyjM5vhVISxriE8J+D6FPdPMTH+fmT3QBLr4xePtEVmk1J97bGb/QyF7NSn2BniFKCRUwTL8FDXCu/bq4ifM7Kecb2K2luLnKngPbFbgOf9pRDPLbCxhfNNZRfV18Y0T94m4BQfcLzeqSnXeOixqpsI7sDVqprYl3jpwqWxN+G00SKV+vshw2KO0f5bPd5Zp2UP5+YT2OcU8x88TLf/DV5a29OYLW9Gcnv0sBW8V6PmH3af4UFR5vSG8taDyJ5z7TOn5k25wPoubjwzPk5hnc1AkMQYneKr5cr2ezURmD19X9qmefoNL4sMksLaV3swUybVwXf12sZBzo3mH+f5PIBCo1qDBmUJ6Nxeup1rol220VR8IVH8I+Q8pIjZY');
        Z55['mapStrings']['push']('1,Just brawl,Querp,347461,eNrjYmdPzy1gYGXg8iotLlFIKkosz2FgDSxNLSpwMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwM6IARXcCh3wKFhgMmBnXLQAZG+5czQWCW/WVjMLB/wIADcAXkJJak5RflKphwsWKxmuVAPkSvQ24ChPaEOkGFAd3qs5sbgOIkqj9QOgEin3QARR1MH4b5JKonJygMsQYFM0YsEPJakQKYe4BYr5GonnivCSK8pqCRnF9QqcnAwcXOmVtckOeQ7wCxJBK7VkZGRmBqZw0uSCzP4+I8QJRqHrBqqE1cnA52EMkDnrg1saBrOkCUJmFkTQi9sDTiQoyfHIhSje4nWFxlNxATbESpRrGCk5ERiBgYAOqlkqg=');
        Z55['mapStrings']['push']('1,Just Fight,HeyListen,84917,eNrjYmdPzy1gYGHg8iotLlFwy0zPKGHg9Eit9MksLknNczBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQysDOiAC8Y4kOcA0eIC1SqAppIJRDA6ZDeQovwAacodygIgyiNRlcG0oZtOmnKY6Q5JB0gxnUjl8IBMgHoVFmdQev9Pxd8hLroSEJVw5Q6JkBBykIDyPfGa7pCPZjoDVuX2L2eCwCz7y8ZgYP+AAQfgdklNLMlQCE/MySnmYsWSQljhVqZDw8EParUCmko2htjKWIYDpCmHewyWMuwYUMIDyWM1i2qA/n+AGsouOExnYlhxewXQMSQpJz7YOANyEkvS8otysQcam0MsNFqzEyB00AGU+Np/YzKjvOEMPaDFfmePMBwgoNweVbmDC1R53gMU72BJDWDTSVMOD+O4BtQowWE6acr3w8oqgmHM7JmcysDBxc6ZW1yQB3dUUgNWxYzALJLCwBQSxMV5gJBSIAQp9eHihBVnDqkLcJpqxMDsFGQIVFtIWK0GSK0R0AmEzAVCkLk+QHMPFBJWCzLXB2SuHjRszRlwquViYPIFOZeQUqBzRYBKjTgZGYGIAQAKHrKo');
        Z55['mapStrings']['push']('1,kys,JonesReal,9331,eNrjYmdPzy1gYGRgzq4sZuD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF7FzsrAXFDCwwjQ72UAYjAxpwqMRuFQMTg3VbG8JmmE0PGLACTHP7LVBonAoYuAJyEkvS8otyFQy5WJGc7EmGk4/4RhDtZAYGQYTNChrJ+QWVmigOMMLpAKjFsGBHcgBIuf3LmSAwy/6yMRjgdgDC68Ygmx2yG8DCB/Rw2hzgAKEZKLRZAmEz1OtIIXCAfu6Qx+UOJOc45EOsOWBIKEKwOAeUIsiJEDNwQNDPZkRaNIN6nYGNi50zt7gg70Am1A4FHHmPkZGBlYE9uCCxPE/BgIvzQNEBItTzQdXDAprTgShrRFG1IXQTZakMVt0IQyIZKDfkAFGGKOMzBEoBAAy1vko=');
        Z55['mapStrings']['push']('1,Log Fight,raspy 667,826797,eNrNmWtsVEUUx+cCy3b7qR9Ksh8wWZVoY6CpPEpB7E5NLSIP27LyiK++9+HudtktIi3GS1NBbGu1LQlojK2xio+QEiL6RTtEv5oUSYCgIat+UJQgiYkJvnDu3pnZe+5r7kY/OGnS7vZ3z/7nzJlzzsyW+/3RVAb5UGBLbzTUFI/G+lAg257L7A/V1q7Fq1Fh4GoERvh6T2GEb7DXQ/3fbjxZOcBf4yoGlpX7fZkc8iPzqDC/gfcR/XcGw38sQFtnZ5HCX5I44zex38tMhhR06+bvSMGNjE9gGX/l0mXKRxgfYzoaVHcemXhn+99cuIQUktWfIJ1tnvTzeZIOZr/eXT/Jhph95Gm+JKPrID0e9SS5fak/L547r9ln8+3BnvyDk1Nsvtjb+iYJ40My/sL8V5Tfk9H5LsZvk9jfozIeyXhdf5qtVxuW8QX/h68e18Zr4fOrCiOcRw6j/IH2zqej2d696a5yH/LjLt1ReJ0waN5Kyx0/etepHN2t/KP57nX4aAXJhoJ36380VA8V3GURh8q2Z7LxdDTUqmkn/2ftxFH7Fk27SECV7I8N4h2uvZctfY3poxajkf6dWmjoYnlqwi0qyJZzV2//I9K4Ish5LOHDnF+g88KHG1Woh6UyQ0rVeIXE2kqyjyX8nIknbEtgLE1JezqbDHrlvG4/lYf8RtWNV6y8o/0vT6uUT5v0NDny77wateEbHflPZ56x4Rsk+s08LlG/cwk5eSxpw28oUf86R/6DowkbfrXMfgjyNag0/9xTon+CrvFJSyAB/zd3O+Hv0vhi98o7xf7KML6OcXfB58LzZ1vrVuS6i7yp9FVBfu6n8C+fxXdcEzzfL5X2fPjXkTUNLz32m+ATeWBf6Gfzmbv+8dmev/5eX+RVEDdmPnwT7PeiP7fZ8+b8Y8n9EficgS/4nydssa+2Y3f+Dpafa2B+tuH3JzZT/ZtMcblDdbfPW7NVjH/EXT/h+puxJ/skwvOOCvKVI98O8wd/TqaHcP5x4j7fbj1+CPMrXw9HPjYF17dF4k9eX3jr1Oquh9dTYb9e4p8ogfwyiX5T/cGPSuIthcE+N+8zC8/zU4Q9l5L4h8d9K+Pj7vbFPDernvSQDrUkXqzXJo/xwPNbI9zH0nhu8KinG8M6J9FDqu37E0e+h+mohb2qI8/1NMHnHPVzvzdjb/7hef9BeEp39v88zG/1Mn4W9nnVHuON57nn4TwM/P0jI96PQPJeno6FW3qjxja9+A8hiy8Hv2nYbS9L8HEk4zcMDxv4TF7KHzlS0smvOdne19ObTYVqjVPDWZbHbsP7TZcE1c6H2hc66Pv9GPJVMHJwgFV0H7o11EEj4NkMvLSocLT/+uVWA88P5UFTB3NmZ/DhHxoPU1cc27ae8v1tUE+FY4R9nY0YeJMeG/58usVoPyTjz6WaKT+pA+RA3nbHzuVFxzY1NaXxD+n8c6bTKzM7973owKanpzV+F+BFh8R3VrEDoxGi8UGmh8DMgyx6Tpw4ofHNjDddioQsJ9JYLEb5iSHIr0Swo/S9/dSLr5R30ngYHByk/NGl0D9LGVdmOQFOTExo/CLGq7YdPF6yeeHdXakWaj+ZTGr6k8w/qm38GNZrZmZG49ugfucO6YutuzQ9zJ8D81AH0x/++dqVJ6aXvEf5seFRzf5yxiNb/xtOyGNjY5o/2aXRwCw4gdjo0ec7MQL1VEH7Bj6RSGh62H4fuAH3Y8jUkfvQ+MuanslFkA+ZKleR1/VPdjG+AlQKcaIoxufo6Kgh3ky88GeRH9ZSJZ7E7nzRn8z+AZ3vrwB+4fFpOIGMj49r/myD/ixz3C/xeFyz/yeLHwz9WWnxT0GP8MO/r1jFsvH5YdXY5TTUD4HrGpHtFzfFc7HQvYV7tEGWD/YyAX5ysMZrJeg7Q6OIHJx3rQRi+FDuNPUsUX8sqRII3mMlIAfzXivBfYcOGXh5JYC8vBIU+P9ypXlVFSvN+iG+0pbV1Fd6ZeG2t49dSrKzOyqznJqdb13eeuNNm1N2nSNfmLmFd46k92feLekG197+WgRqiSEHnPrwpJw31JxPTn/kwgctvLueoEWPHhme2zdfq/Y9mvYdWCCVy6TFdXGjQ5woCl1d3/ZM+750eUB8f+VC+5G/QNNQCRAP/GLOr6J8RM77OL+a6vHAL+L8Gso/KecXcr6W6vHAL+D8Wmq/S84rnK8LKAr9Qegf/W+MVQ==');
        Z55['mapStrings']['push']('1,M Slide,MuadDib,191974,eNqdVc9r1EAUnhR3Y6K2i60geHCEHry4Iip6kGYqiyK4ILgIItRNt/tj3G4SmmxhrWgOehM9FNFD8Q/w4M2Th8yfICjosR69aK9SQWd3frCTJo7ru8wk+d68733vzYttmu1eAArArMKbq3ilSTd9d6WCl9E5MDI0DxRzvrdG5uzw58f3v159O7chntFJDtxnm4UgBKZwJBsltimClKFbMVtXCTvy54ndWuXUUUrrzeJ1+v7hZHgyKd7juDuxim8zfJLmMyFe8mjz9flFti6khJhi+ERI+/HsyJxtkGPFWsf1uqFdGJP5AeT6y7BurIRLVxQYKk3iI0UuhLNpyvMfId35u7/fZeDLQFmlMdmMhKctOy1HBiNPHaHz0A7CofHeVvR6wo+dEm0g3XkeefmjCfGyrP+bzxgEWazF0FNWbTRgHxZffo7qY0CZHRjPGV3jm+k9Odf+3iNoQjwRvXee427z9QLX4Bu/KkJTDT5J4SWPFvdb/6BczT01i/j3S6nzUZzJh2jweXyI4LOk0fMux99jVUPdWOGffDp2en1rZ1uOKg2eFF+/aAbPfslR1YnVOgn+dXYHnR9X3m+VNudlvhp8ksYv8xmxpM4K4ed82TSOn3lVlvpr8EkK/++jEID9tmn1wsAjdZQ9XqX0BpgDByo+9PwI9txu07aQzodeyllQavjBAPotGHWa1DEo2xYRAlXj3GCH6e2zkA5IIxwBM5f7ERz4fdhwPdgPKTNyQ1QE5QYogVkcwZa/BrEXBnjNjbDvUXJI50tjzgzJkQW1DFlBpkGpSrWCIW57uIUpwYhG0DnSCIeA2aC/qXazbBmGNXzzB/rzEqM=');
        Z55['mapStrings']['push']('1,Meridian,Fantao,240,eNrjYmdPzy1gYGHg8E0tykzJTMxjYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUsXOysBcUMrAzogOlAHKqAQ1gDhJZBV8lwdnMDgwNpyu1fzgSBWfaXjcHA/gEDVsDIQABgKHCod4Aw2ILySxJLUrlYGVgPNHeAhQ40RuDS1Qml4zCce8Q3Aqdz7T+pHd5z+/k6hHoWn9S0EpCdDrSy84Cg1LqZkQIVCPWsQZnpGWBL4UbnQRnMGJbGQePFBqulBwIbUBKUQySUDj0ApvdvC5fweu7SDrQKpNyBgHIHzitbxGan20CVExvrwMhzyi8pyc9l4OJi58wtLsg7kAQx8EAkrmTAyCDCwBpckFiex8XpQEg1MC6E4aoPhDAQNFsIYTYh1UCzBRFmR6IGDDbVfAizCakGQl6E2Y4NBM3mQZhNSDUQciNUx0BDEBqS2MzmR7iEkGogFICq5mRkBCIGAA21nbU=');
        Z55['mapStrings']['push']('1,mess,Querp,299228,eNrjYmdPzy1gYGVgyU0tLmZgDSxNLSpwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwwjQ5JByAM3gNQlkNYA4SGWcUBNfJYuITXc5d2BiaGiI3FDAwHSh3A4gciGbCq349Qf+7DPKC6nAMoTsZjvnVbG8LcA4HY3bN/G1y939kjCHMPRONwP0L98S8pSO4gbP7/rGxESB3wJOj+s5sbEObi9C/C/CO+EUDxNKg7QhgIuWdjxkqgeN4CiLwdQfP/TysCipdA5YMOEFK/9dB/oHiRAsS/ONIDUvxW/M8Hqis6gNf9SObv9PkF5L+cCQKz7C8bg4H9AwYcgCsgJ7EkLb8oV8GQixWRdGEJYzTpjibdwZF0HTgVf4e46EogQk4QkXQVNJLzCyo1kVMwHDDCU0A+JGU69FtgLedhMQQv90nIPMYMHFzsnLnFBXkO0PTvYIhdDyMjI7DeYQ0uSCzP4+KEp57UBUSoPlA0AWJ2tgMxqqEp4UAMPpfwgFXDApDTAZa9NIhxPjyTBxwgRjU06R8IOUBC0DiEElbNycgIRAwMAO3uPNM=');
        Z55['mapStrings']['push']('1,Musical Chairs,Juju54,264212,eNqtlT1s00AUx5/z5cYCCqIDZQBH6hAGiiilUqVKOURUlIqiABmgQ8FNnOAqsY3PbmkRapG6wABsCAbE2AnByMRJ7CyMLIGNBWUEMZTEvrPjxFZsibdcLP3e/33cexeB5xstHdJwZNnCSlVqitV7kmJgyCxZ69bFWTQLtqFp8FnhV922Qod+721/v/Ju4iH7Zn6QEfi0joFHm8SvIJDru/YPMk9d8vSc8IOQgS+dN12O8iguf4PE4klMHt1B8fRj8khux9OPyaNnb51TpPyTAT4BTz8v9ek3iZ8vBfOf2Gh8fNWz14U2BBoHI40r/Mn9rRTPnkAvdSemQmP/XnfOoekqNyWzrhkt8byQBp6UKa+GBUUbtBtTwdUUftIqvl6wLaya/tAzdmjWNhY6gfB7f+hSyEUlgtvz/1I95qUq5quavnWmlzEyOyNuiEVGGhrMYP/bft/Vx8hgtj8DfNfpGT7qYNmhDNi7ND/Ug1sfcNez6HySUkS+QvnbEflVyq+RaHyN8kpEfcoR2uGRPJ0uYkTM5z6dSqsdiWdGdmg+LM5UMB91AqIsP8rS5X+OfHtyaXrPLmJoWsaWFdUypYZs758y9PyxWgb+21B9N3D/WE8j84t0P9lsXIPgXnGUt17E4ylHGqLfbzr4/XC3dd3pn/uf3Qnmo74fUe7O3ddHzh2hmv/uhm7Hez3nYEzgsy2sq67IAIzoEHMcB2VI39SlTVXIomIIrbddugaHbJq9OVlUCXNCrtMKHO938nxXQ3w1z3cRTgb4ehK1EAlae09iBnLhEq4SCaveEF2lBciPVPIEwzpDt6InmIdzUQW9kpUQ3aanewrmYurSI5vkhMdJvrqNJ6uSblqGfFVpKWbywWFDqikWztUNqSXjilaUTU2VTDm5dZqCZUNrGDLG4xuygRVNHdc2VdkoFVPp1EJKSEHq4ODgRwrSO92zN1Duj27MzORlR0Rc0VQZ4B8wypfu');
        Z55['mapStrings']['push']('1,NeedForSpeed,Querp,678035,eNrjYmdPzy1gYGXg8UtNTXHLLwouANIMrIGlqUUFDiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkIWLnbWgmIGdAR0wO/R9QBFwUIHSJmgqmRiO+EYwMBwgUT1cXXEChK6E8r0bUNWzgAhGhgP9FhD5egeIlx4wYAWMDAQBXIlD4woIDTXbcfr1kgRsOpj9S0u4WLEEE4ZtMKNg3kdSqcGjyMBo/3ImCMyyv2wMBri8AQwnJ3esVrLjtBIzpMFWOrRooKovXICiD0k9yJ2MB0hU79B+AFW9Cc6Yj9hYDEwpJKqHq8uB6HMo2wBJAR8w1K806kZSX+CAot7BHqt6RJTAMgs1UlbZBexhhhHLnnnIsXygE8OkIqivRaD8tAasvob5wuFwewNJvsBIqcAUI3Szpt5Y8ZJDowREiR92s+Cu5QrISSxJyy/KVTBh4OBi58wtLsiDmx+CwyGMjMBSjTW4ILE8j4vzgCcxqnnAqhU0kvMLKjWBmiKJ0SSMrAmhN+kAEXqlsOhFGJFJjPWKuI1AmJTvQIRJGgRNQhhYRIzv9Ik1EGFu6QMizDUj0VwoxcnICEQMDAAAb9Co');
        Z55['mapStrings']['push']('1,Neon Triangles Beta,ProBond,328588,eNrtls9r1EAUx9/YLmlCwYM/EE8reFgPImiVnprHUtDSbWnrQi1YSNiNa7FNwq5S1EsO3j23p/boxX+h49/gUZD2WChl/wPNTt5kmzSZ2eLRfZdssp/5vu97mXnEMozOTggVuLHsBX612d1y/c6216vWvfcuGCvdoB74bZwBEXgfMmGfvxFh9+n+y6eT599vfpb3WCNwwjIqYQ8MyAfLP8Cvs5lrGtcEzuzTvUHs2z+fiLCPoSSsutt61+kGH/y2VQGDb+X+vy1/8AVK3cSkij7kUy/9acTcPHEzxbzd/7E2+7DnxXwj5hlq+KMcz6Wf1wmH7VI/DeFng7gl0m87Kj+AG8QtSx5UftLgzSjh3Ujlh/FV4mTdOf6SHw2f7w/eIU7WMQfq/kvec0bjm8kb4ItRIX/Jj3OQ8Kv0HhbUPJe87OcLUPdzHbP7c07N4ybP6st9B1B4lLiT9IWvkP/HWf5CfwQvTz+6vFD/KM975H89y5ftB+5Rf15FGT+6/YlvSf+psj/xeuJbxxku9f/r7Pfm4a1vsp/plNOMGgaaUAFTcuQOZhT+64xi4xkVqf1cbUax8Ywaz6j/fkZdlzOqWmsF4ccHMGUZ5k4v9NFL0nEHS0RZ/GlZeRm6u75l4nZ1BHpa0JTJMrkuRWw8/nq9uGi4VpdQrL1bsDaVkOeY07kv8jwJ98olhkpdPoJSTas0rE4nGFc3CY9GFRzq6koWus+uqEsXkzFzIPAXadH0xg==');
        Z55['mapStrings']['push']('1,Niko,GayfishDeluxe,426752,eNrtWmtsHNUVnt14/VicsBUOtQItC1iR44LBdl4m4Lk2jkOefmRDMCapN+tde3HsXdlr6BKq7g8kmghBQvgBtJFIVVVqpILoAyRUaW5aiYeEUNQG6goJlgJNQyoI4SGeTWdnzrmz9+xcz67on4rMn7F3vzlzznfvOfc7926wpmZ8Kq0FtKptycmUtnhDNJtIzk70xvfO/SjOVmrWxRo06dLfT1iXfhb+v++etzY82bAP/2fNAGwM1gTSs1qNRi8f/YDddcK+p5j8hV8LLV6h+fTTjxWux/W/dliXntcUV7AnGpscn0nNTY8FAy6vrue77T/4qP0q9kO4b4PPFz2wqvvAyKcmKYPXt2s+5oE3/rmzcdOp3vsRz8cBHw3buE4IMQKfL37s5a/mTyaEfQ+8/tabfb8YOtIp8DH7/XwYcL3yXX8N/PGDPx54g+BZgkO8NsdiFgzZn+v59tsWLXvjXtOfgwMR074HngWWxrf/eC6LeJaAeHfm7O+biP/zh31XtD3aavoD9hfGG4ivBvsx8GcHk/2B54yzx4fWXjsbF/Y98DrBlz8Va2+JZsLrozOzrhPRj39wHJAx+cVF2TK8ao2TM6wPiEjC/8PaN8yZmoKjkVS64CeGL64AHx2138Ny0sRkLUDQc6+c/mjfmdfMAd6sT5uExoHIm+Ry4BKXjR8H+2s1eQAaYcDQfjXiwY9ud7xO8cknZH+uWtif8nmr2zmRnJ2Mz4TbCsxxSFy+7QJzMnOiRJYy124xF4ESNcAuMCcz9xEsRqXMdVjMKbOVK5gzFMxxBXOs7sovI73XNlLm+NoymQDmeHeZTANzXMEc9UfFnMCVMrfSqnPKbP3WM7fk2eOJr/9zgwtzqyzmlNn6rWfuO5ngF/f95oALc6st5kbkldt8P67pWRQb8l1WzCWy2RFZXfDcexCZX2u6bsIUQwM5SawKfLf9uf5u59X5Py37vYlvWXOPiQem+HLAt8ojZLz+7zd2HV3664L91oJ9GBHeRfDhEn9C9aYmYX0K+4h3/LHwBvLxCLQYirXYp3lcPn4jyXfnCg0lxycy4e2x6EwiPBCdyViVlY5VleA8+Q3HCrg3isaqwCVXjRUKXTpWODvXaHLjAGOln1v+5z++fupJtP+/45Kpubx4SzxBqSwBfVdQsh/uD4SlNDA+h4TDngoTGHsM1OrDJEEDJmu/daaxCu8slzZe2L+DydTfmlvYvgJP7Yt4sXfsIj2VE2/LVXoR/racPLSAL+JnhYS/Q55imF5FrcGhHYNmvDcRfJj0SCcvu+6un5/NI17YRz5x6mEZcfyxeyr09868PKW7FD1qA8EP5iS88TzBR8DvUVJGasH+mV3vND+YM0x/OnoOmuO1Cb7fE5ZlZQjsvwPxBrT27gJeJy0ZjjfgWZWM5x3oP5NlZTv4c0LuIZkH3qD4XixGcG+Td2YE/9jTVohn6+H7cS7h8E794R54Gi/fSPAhhRzGPYgK8eW3bFU9qbFscVFiGyFlay8M4v/LINZvj8dS02PmApOJTVjCCuv7JA4zVjRnmOVKoWNj5ddGO9eZwYVJhlP8J2LxlfBi82aljDfeffH7S08+dQTx7HrA98mCByu78be5+j/UT4/gYl3BLpO14nbPTFmqhRJRK7R1s3tghkOEtcvEmxcmwnCIsPFNGFhOxuP22Rf3750/dzRqlkoLj0uGWHIjpIRrMOsQ30rsdxL7ziy18ahgtwJuFVGYx2E7FfE4MFtyUvaKLPjy0vElgdWbxPbrLYAnvLDL0f8jh4/965UfIL6C3SRbhsJIlrFnvlu5p/DSIwcrKop90VjcyiPQY3wMv+H7a2Ul1Kp86dEdWXM6IB4nYhOZPo5SeHDzpIn/6TzYJ3kB00//rKr6vSsWrTfx58+fL9iH7x9iC4twv+2UEL1vL0xCKbulECy4QhUkySOUvWB/Oj4d3pqay0xIS04n+ogNqdBHTUTH4MZZtXYgHjOjv3xhvPG2SGYLX/4UCJR4Ka6lYqMaVSsuRLdzyrk18UpqboNyzlheihTdQWoppuwpURst+xzxkZwrvqhRkvwRJyA75caqyH+7pA3jiQmX2Y64dyesUjx0AeLEp4uUnDOiyQb7cEIRy3vxaatjD/sGsc8rtT8EJTxOSmAjUd8oHLYA/3uYO/795hfaziQHHOED+N05d/zZ7Kvf+2XzhwIPal607I1K/208zDOeeEIu3dgN5MWSYh2kMI94DRIv84jXIPEyj3gNEi+rMF7mEa9O4i2/aly8LTUbDy8PF86PlN3+EnGC2kxOIBWb4djlorQQB154Qvip6AYjgz8zx3MUtu/a5S4T60LRRoi93Tci22OwkclWA/7jD3/1/NoTupmvu4aPOXhRd/A5xH+1b/7h3x07bNq38eS8XHTjnUR7on2UUCtJvHAv8Qe2ZkXDso5sSDn82PXyZsCvIfW1i8zfAOC7iLaljcQhIaEsvNjWxHqP3Tvy8/VQ/z/6959D/9kIjG+Lgs9PhHa248X5cCNZ/VAK+mF8AzAfWgmfVDI6kteyX/58v6hv71wikTXne3JGWtG7MCH4VpgrDZ5z3V77KsTTLbcF8Oc/iJr2K8TzzQQfIppFE1vXg+tucPBixyekXjss/BaiXBqIPnxGKB4Jz68h+BYi5xHfn5NzI6yOt6AnGfpfS/xf7R4vqzBeBm2FsN8g86kfE0cRYJ9omgYv+8SfRg/8xsr4qaCJWJ+NS790EAo6JARYNym8rSUk2wsW/hSnR3PFG0fFoNsLugdeJ3ixIN3s7o/xNLHvgdcJnu2BgtWrsO9Mctu+B14neMEnLlzl8jmg4OeQgk8F3jik4LM/Vxb/3ANPx1fw2a/w30kimU8F3iB4Nm5nAd9ETlRUArJCfAW/XisoqZ5UJpNy3wTws7kQbKoR6mDI9NPSSYXGPfDM//d7f9Jx5V9M/NZ4vtBxwm/7vF3dEJ2Kp/dGs/ZvOETWT4XR1Rm5PRSyoK2k7bJezcvHW6EZ5bMqXG3TqoM1dVOz6Wk2DWI4kVNsCPhMTgLb09G7p4N13AvtK5z11FvocHMslc6uCNaxdL7yh7jXQ5ZflxQ/5LwwM+De2EovdH+Wez1rvXeZy7Nwq/P56gov+C+LKHXu');
        Z55['mapStrings']['push']('1,Nuke Alert.,ROBOCRAFT GAME,412973,eNrNm39Mm8cZx18npQRaRWuXP8ikqa6UZdm0UBKcLtEmfDS0HVGbkJSm+aGl5AeBpAYMNhj/wDaOjQ3B4MWFkl8tilop/SMTW6WqqtTxtlvVdn9smSZt06Ru3iZ1yyptkdYtTFXF7n3fO/vee++4ew1B8z8vxl/fPXfv83me5+5eV1dWdnR5lQrlvr39L7Q7Gz3tff5aZf2BfY/t232g8YlW55ONTz8OXIr+ApsU08v9j9P6y30bvU+G/vTkDzeE8XuwBQm/Vl1Z4fUplWAS6O/VzE7jA4c6udPUJAg4jWuzuStljS5X5nHTP03H9S4LCvPloP8BNqMr0eF9LZ7j/tM9fV3O+m9XV0DzYoZ5+Ko8oKK/1Oyc8UkQtYLeE+a9v/gZo9dN7JnDw8Ht4+GCiJOtdyiLX3wKpwvre9B1uI6r//fPCD3Wpb1c/d+vEfpxp2mcLP2tEKHPZ4T6P0cI/aWcUP9LH6F/rcZ091j6qx2E/sZTQn3iCKH/sSrUv7Cf0L/5e5G+sH83oX/7M5H+J007Cf38epG+e9sjhF69JNIf/OpGQv+ugU9RT2EI9a7d9SV/Bu9909AfRu8PW/z50I98EMdbF7XXJfev6/WXNJ4Mifu/D3/e2rS1BqMOThj3qLE2GScpLdJaXcR5m0az2kyxZ6WzAV336w0q86hHGA7f+eh9aIHkaMhIsu1RvW+PKuq70egTHFxu3w8SfTu3nOzxBr+hBzP/rMiEXeh6TFmmCRutJpCWtKEbVSu05PByLXFyLSENChnfV7vRtyosBm0wX+m4XdQhz8FDA+so/b3KnYU7igN8C33eojLbd99+98DOrb52aImuV+n2izqLPR//4WOo34L1aKoVrr596hP+hLo/zDse2jZTa4vTn//i1r/Cn/6myOle44PGl37rb9Pe07NNwOLSbgduSY2iP9bSfRQLCsUyvZ2dHSUr1XVsvbvkT7oevJGxdbvLDmuWBs3D36F7Y8poDbzYgqoO21VEymxPsZqIAVq/+E4eegutb+LrP0gx9A18/a+CDL2Lr/9jL0O/ia//5xWoHzGoUOPATIk1633+aivUJ2eRHlUdB1SefuGNp6B+VDHr9yo8/Z3rx6B+zNBZqjmG/toeov2occfBE3z7b7RA/fBNZE9BZM/C65r9Ca/ZnhbArWrefkarCgqy9n9xY582n4bdakQ15zKGPfPfh/q006xv4La/+NaRkj/ggLBE+4vqs/Lpoayqo4mKZjStJZy3b9dTPy7h0U1Wqrk4u9g4g4AxTSpeC/HdeyRzDkYz1KPaj0xr5U5vYngY6hOo/cE20e1O6+2jRYPap5rqBYZ+OBGDerQ4kdDHh+NQj+wu6o9yxxuLwUUEXsyo/hZT1cDQh0IwHAHsrv1CfJKpJNSjekX1zZlKNIY+k0ndZfdzmd3P4l2E++0gkykuqWB+QWarLip6N1mKrXyqCw6/ldLj7NDK0ePb7aKKOU77KtZvouxp4Og7nOb2m7lVu6FHbqHukrPfgmeQm23nriftFKOlBYkRGYaQP52/bnx+PzcyNAgiA/ZkvmdefeUivDWoR4nIEB0agvpzGVn99MwFqEf7OBKkB0ODUN9bJ6sfHRuF+oBXNjJks2NaZFiwFxlSNfYiw8k22chw+fJLjEjIn898XpvPCBqvtyCan5dfefkuR556KvLQ3vsgEXmIxVXRl1FRo6wFZxQz8BjkvRYgx4ZOQ4Dx6HFZxM9/up4L8GYLRTdeS9gB+IHSEIkRFsukiUFRhufsYgJUWEpk+KFYCPoFLtDEXAYHNc6St2UzfH5qEupxQSrDZRrqfW3y3GuchaQz/PBwlKhQxBx7vT0axwV7HHeoshxHo+FV5oz2ro1Wzli4oRpfWaOifTJA50t0dX/yXM2evzal4eI52XvSJj5hO/jUWPAhKYp3Gt3k3hJRhOiwUBSuk6Uokx6Bdx31KEFRYGBAo2hQlqLJ3HmoH+uUpSKq17G4UJGoq2MaFeE6WYoGBnxENpfNhiOHZCmanpmG+rOF/1+KaO9yciliwfQs4G3oLAHHtaAdOB7iwUEygo9tLnxPxMhBDiNoCS3BiLe3i1hbiRnJTU4SkVfMSFTPZHirROzz4UiQsTbk68ez48RaWMyIz+cl1oZiRrq6PMRaWMyIUcF6pDPN3V9LbqcYob3r6yJGWKgcAYTDyaJy1Q/LPA+Vp6j1qfsv4zsax47+B+apsVTUDlqbBWiZCFtAB5i/ExF2lENYTLqWCwT9xBpFTNgPcjktKs/JEnYhP6HVch/KEjM98yJjjcXX9w/0E2tKMWG5XJZYY4kJy+oEY/vFhPn8Wpbrkc5CgUD/ahNGeVetJGEs0J4vJydd6bUDzlY5cEh+UKUOpjpF/LQBzlqoIMvPhF5lnWuT5ScUDBIRW5af7JwsD8lUQlvbSO92Dga1tVkMyPLj9/dp/N+0V8WNSu92Tua0DN4bl+UnEgmuMj+0d+2wxw8LoxPOMjC66LGDkcsWRiRNqGIH0wsimk6obJoSTps0Se8Q+n0+WzSNZzNQP67K0tGn12Py2cg4O4hL7ywkk9rZBz46FNPk82n0jc7K0pTOaDsj6KkLCZquXLm4yjTR3vXdsmhiQXVqFnkhvl+Wo2Vc1N1EDzrcq0xlo/YgnOqwA+F3yoGQZBGtDMBMRsRiOy+zAVkWQ5EA45xKdI6Hd+3ELGYntLXIxKx8pedjrKX4+qnpKY1F6cxm7E/gWCJm0a9XenjtKLvLJ8+ivlu/qizS3rV7OSyykOwoJ89dOGUHsceWgRhJGlohgEs1ItI6eFlP+sTc2E/H++Ni0iLhMJEFxKRFoloNNiG9s+fTa7zRQfO5z/H40muwmHTWM2pI+RNztJ8OZEkLR7T5GZCuIUPaOeCqkkZ7154VII0F3JlZ+8C9PnHcDnDNywfOxB26u5evi7g7y8lwSendReNJlVTBXobDEV/M3XBCO7+elD6PNqrNmPTabSAwQJxLyXKHM7RstYkeu5fgbuy8dt4dkN5d1J+cWV3uKO/av3LcsfDzOPFxM745G6jzrybL+Vc6PQINpZybPi+bf9Ost4P3+UPyz8QrSsuK4U1SPmLMP3gVzcd6LuUeTnbF2SA4K/Iyg/LMl8xR4ZiIcun2jefRJoz9ahXtvCyhN/bg6aiA6nXu82t0HYuqDu4a9Bx1Gn56aQqL1QSOCifUpXd08I6UF4j0Rt2LHFJifiIRbUcqSNXJ/Pb1MwrL84CHBWcyxepDEe5453N3OUrtoqIUTcehFY9SrGDVXUatcK3/cTu1wnMrHUzIH1DgZxSQJzDGwf+hkEL+js/OT2u21+l9x40TXbw6XaJv+umbe+z2TTziVEcOH6c2BADDhFrztke5wxe7uKM42r+dNa60ceQM1usZAf/oi28+3ndtXsG751LWVVdWdfm83UWTz/BG7VAqlIpnvMcD3dVVxXC0hPoe5X5djW9SFehzmnemGF9aq3yZ/FLpu2fE5q1RvsL4brEJVWSzQ5vLh/lNlFoSzZVD8+stwpZKDTaLG6xQHpFtsNQunrVT/HbXKo/abBddqhyOKq2B/wHGlJIh');
        Z55['mapStrings']['push']('1,The Obelisk of Thoth,Stashington,268062,eNrtmG9Mm0Ucx69EqLBBZsKSms1Yl0nQBBwb8sdlPA+RAWWOP4WNIMzBoNBOoIWyVSRDSGYMvjABXOLYps4XDMUpKDEuaJ6byUaM0TFdeGNERIMhMwY3TZzG4LXP3bV3z13LGhLfeCE52n56931+f++aYDa3tHlALEiucjqsZUccrS7vs1Z3s7XK6e5ygg2VXQ1ep6u9pcvdrmaCwFC3A2YovzYHhrKCX598/oei95J7yGs1FYNJCeZYjxeYAT+SoM8a+Afaof6VAfFWwATu31IETAb+RYuMfzT9uIDv/1PGZ+0+JeBPTMj4vU9pAt7nkfHltYsCvhPK+OrGPwR8q1XG23vvCHjHgowvPS/iD6tS/VOrAr4GMLOy/NDfVQVpFsRXXBPxZK7o4/nyRcST7VQbYO3JR06MzhvW3yuNn9tnDgr4Ain/V30dMCnLp/1jRPlmV2AoC0AyEspbG7qa3Z1t1pyEWEGom9QjkM2eFenW3d2Ho9s6V7I19g48qq7z1vcFt7amNro93Y9IFOC4hdgIYRRcujR4NwosBgXhhXTs0IXYwDoLeVAmJLyeY/qCsP3NSHqWlqbuRk9KBD3hZXWV67Lq4DrLSlubLIE6mkAx5B2YyVWJKkOVKP3ix2BVoSv5IMNr73y1fLvn5hzii6e/ji71soWGjKNbksJKpOYZpK7Ov4EM78DcwT62EGLDK3PVlpKfC14iPHwGMI9CCzKJ729/mT90fvPbqNG//koe4nG8qU16vKluleE1wseA5et1ITzen+oyBoJyOgvxHfjzUsxXSxvcnqHM6Eyd5Te1WsIKArFqLn6HzHbp1l9O9SFTk8+fViPyHyKe9oxcztS4h2ikl8WC7y6/jPhCzoU2aQ7Nf4Z4airC7esLqyca0z3OJBR+IPAAdOvRAFPEUrUbWx47fnZlAcVzQCpdgRwvSFTXGKJ6sLcWPRqJMpzCdDY+mjbqQ6Yj69o4V+LvaXeoqYdeqPVH3Q6W57PgI5o1o4NOxBMXHsC6XKwr1Q00a/T1yf7EpVyoqIn2ssWygVuIf7X/EOJdOLvSI7pe1+Pmqj/hsw2hdeViD+K9E6yOmvDrq/UqG+pyPfDCcwJ/udkUCfHvhWFnSNWqEFct1fzJwLVTH88i/aODLYhvwcfYYrF91Ht+G72aM6sgfvJMO+KPLrD+Mawffz0xr3c8yGM9eyKuPzrk1+NR2SpaJbXP2LAL8SReSiT5Mp86k3HTVY7yRec7uWp4QJragXhTHZjbL7ZnSDzo9nSJ457yv9Pn1dfH7Z3mrzx+dN5JukYfW5ry9VlbuWzPSfM6SL5D4l+ZniWaj3p+tdSH52/9s3ujbyaR5iPx7z6u24jiH9kHkmtWM+ZrI9l/gbUPybM8Q5fUn9enJy4EEv3BLvz5+yeiK92Z/tJN2ysueOgdXJJguSrsNkqwVDY1NaJHwyWJ8tzNLITv7/d3SWxayHcxUtpA0uljc7n5KNTHL76LeHwDg/u50o1LrrJaOH120/B2tP7IyGvIdGT9anFp0kjpjgOOGgWtX8DxXClWJr8vfMt+LhfxHY1FwVYFa0D4G24cKGx82H8jFbuGHqRopEQcJmIbWnbwnJ9+MuA0gzeD3s4InHH+9/Z/5G0tCm8ruAjKvG3wZvDynBHuMraZGr+xnu3KmZzTY4A2jjoSlPHpBn55tg7x2zCfDJh16RxPg+TGp5XB3/Uon83ydOh3Dlo1aZcq7mNOO1RPHCiYvIqcvhNzDdhgO9m7Ov3RiPBERyWMtP6TE1cQn8HpTmfX1xZwN0PrfzCDeHKKeIK7i8nWJ/rJaXGrtDtV/7QawpPTU/IaeXIXuzcCn4U/J3fFFG4O+lfnSfw0ifkQ/+o8sSc5pRF/bzXYR8wT+1oM/PSYTaB/GzcH9es8r5/jQ/RPjxUL7Amk9mR54q9NYXibIB4s4floTge7QEyCOb7N62mnPxHXSOqUyYQePLbS0+BrT4iHa6I3BmhcpOJNJvQHwL+t6rGH');
        Z55['mapStrings']['push']('1,Omega,MuadDib,212593,eNqdlMFrE0EUxidN4pq1MdVWqCB0Cj14sAXRQ0E0Y12QUqutBIsiwjaZpEPJzrqzsbZFG8GjNy8ePQmK+C/seGlPilTwXG+KIEq9iEicJjPb7pi4rS+H2dn85nvfzrx5pmFUqi5Ig/SVKq7YwJis2SWLzKLToBloCEQi/7XcjPw3OX+49PHiq75lNUfHJZg0jbTLgAH0OMIZaj7wc3IJiY7Bz8FfBWu4X5h6PjYh3u+RV8Fpax1akeO1etRJl9SnGy2+JHVnW3N0S+pvvL46Osyw4nkMn9d4dEP6V74vy3G6Pc9jeN2P2gcONX5c6r94+3lz+cuHUD+GDzQelZ62/lf7j+R4Vuqv/z7TvbCWDfVj+EDnlZ8peU5qtKT+G3N9bTV/76/v7cAHGs/LrXPnc9LXTRTdn0+PEwMnn4yE+jF8oPF8QvLzdemHR/V/fH+2OvouH+rH8IHG64EewUj976jnYWsGJML6v67xGLWr/21eXXm73vbqC/LEhZk2fAF04pv+A9Uq3p9qRn4DdIhuuBWyA5np7eahrhbo4r62GUMdk282Xor3e+WHdmsW7DQYRoofU11Bnur5emRXO3WrsKstyNOa7tCt/ldf8f0gsk7X3/1pAbDfNDJV5jphJ7zVnkuIXx84YFHoUB9W7XlsZlDcGlFnvaCnSN1FSMvQn8NioTtiZsK2+I9kh8XpZBCJz3AI5MZqPlykNVi0HVhjwhl34hP0gF7iwzL1IHGYSzzbJ9QR5pATnzO3ZY7frscmOQh6JsVeQUYqDikTYdAXGeIWigxZYBTnbKeCRzLJhPkgaRSXWPJu1rNLpMaOFm3Xr3n4EqkSf7Ds2VXMCtTCPnVsH+fogoO9cSu5mLuDPSa+akDyUx6teJixFEh1pYwUSK80Go2t4kiJ8f72DIic+7IFkX+eAfAHNp1IGA==');
        Z55['mapStrings']['push']('1,Overhead,Official,10,eNrjYmdPzy1gYGTg8C9LLcpITUxhYHAwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcVAQ6HAIbsBQmdC+SpQA17OBIFZ9peNwYABF2ACYi5WhIEHEh6guNAhrIFEAxkZCACE4+Md0OXYuNg5c4sL8g6kNeA3A2gIK9DlnAcSHAgqZAErDGEgqJAZpNCBkNVACLbagZDVQAi22oGQ1UAItBoA1P0uNw==');
        Z55['mapStrings']['push']('1,Phantom Menace,MuadDib,282835,eNrdV89r01Ac/2bYxVa2VreDxyfIGIgdYx5E6PI6OnXoxOEU5kGWpukaR5OsebFUBaNMvMg8eBAFQfDgzX/BgH+CB6/zuIt4VQ/zNb+2JE3SbV0ZfnN4Tfr5vvf5fH+8vGRYdqWuQgqGb9Z4mSh1NC/KvCACO6/zlZJUxhfAMnwWfMb9rFrG/XLu1x/+uPJ59JF7j8cdYDbDplQNWFP2TwCM+8Msm7bLdcd1KYAcgE/Fa3SJrbdte8d9m7KM24Qoy6ToglXDnr71wX54zP0Xa8v2mHPuFRxc8Nzs3R2CIbxDOEjQE/I654tZFN6b/7HNFB8H37gL/2f74y4+zrxRAdiJ7KuLEQFiuN9n/i6Wzp8OBrs4vW6RCUXPjum9fifxBvQ7iXNwtJIYbclJDEbPimlMvRxOEnHfk4j/oyTijknE/e5E3PftFB+17fQgSey4neJ+vxNDDweDD2IWHOcWgAnWXRLe3Cte9xcPFpxkNszOfPaIDwW4YcQFmPninm/2GeABj5i7YCs+ACF8PEHYJ0H81Iiobrxg+EZuyy7tUJstJbQN/vrCSGgbnHba5vmmT3TxzXeyvJuTy9avYQMOW4NZSmx9T8NLFK9hw7edPrHrFj9TowqlaPjGoAYzH6jkacf/suPn8KKHe1+hYKn3p0f3fetpCKqzD3MH1owTNHu2X8172OKDmkPqAEYybLquqd4ubwY3pR3bfg8nSgqSFYLq/KqYSXfnkxMUtYWUKiI1kTqq+W4doVtgdkYnqKXoSOBlpGtdMxuRCKoqDSTJmio1eCIpcu/J5eZprJAmrchSVaIESbeOrEA/d1fE3jMaXKQTr2rdwoeQZc7HdiZtugVdiipUBkbbbHASkJb0COTmrOiLFVRu0RKRKC/zjpHoeApSmiDKNNc4CU2vkzBTI0TVLk1MNJvNPK0VopfFvKDUJ5o8EWrcg0Lr6lpl9laxsbp2e6wq8kRviAULly+LY6QwOTlFibk9HbNUzpKeBKQKsm2geR8nAoetGZOA9BoCSDNMuu3zDys20iY=');
        Z55['mapStrings']['push']('1,Planets,facetious,1566,eNrjYmdPzy1gYGRgD8hJzEstKWbgTEtMTi3JzC8tdjBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQzMDGjAIRJKq0ANeDkTBGbZXzYGA/sHDNgBIyMDAQBXcKDeAWKHJ1Tg/Id5//8zMHAB/VmSll+Uq2DIxcrA7JCJ5jTPAXBaxMZiVKcZgZx2YBA5TRDhNAWN5PyCSk1w4BUdQHWhJf1cCAfdh71wu/DAIHKhBIYLoRQDGxc7Z25xQR4sxg9E4nIEIwMrA2twQWJ5HhenA1GqecCqYUHCCYvYA0kH8GgSRtYE13uAKL1SWPQirIfGB0luPkCUJmxuBgCYqK6p');
        Z55['mapStrings']['push']('1,Quicksand,MuadDib,286014,eNrdl71rFEEYxt8VLutuiDmTFJYTSGHjNUlht69yIBYxBgISEHLr5u4yHLe7ZneLM4JBLAQFS9E6ZUifKgP+CSlsky5VSGssdHZn7mD35hhBEJmnGfbm43l+895+jGvb3X4MNXDWMxr0Ej/cBns187eb9AWuQCFsQEneZaeQdyWv3706f3S0sDe8xrtyYN21a3ECNntNimv2QfZYUBFuyvbT/XLHDTjAxwAnV+Vx3hkoZYFWFjqLPzea9+4glWs2Rfvg8/e0laespp3a2PHDXuLWOEksgmCX6UiegJpEJvdOlwtNIgGYIYVkMXL3YQ/7eDHJvd0S7dKY+/Wvwz/fR64CNxDLscFomaHR27j031DgFoajyG+wPL6h2Z7jL7m+/k2hvR+y0P5+uTTf3otMVTrBvAUmM1fpBPMzNJm5SieY14yu85qyzp7RzJ6KeZTYSOYxuoIZja4zKuuMRt/PqLyf0ejnNiqf22j0+xmV72c0+jsMld9h+F8dGkaeEw4NY2kFwz88LgDcdG2nn8Qhk274nE2AsWABppsRCaOU9P1e23VQN4cnn4d6EMUDEnVIutPmE+OG67B+S2s2x3fDQd1A7nAbZh9mKRlEGQn8kGQJT8Ze7msN6jBPU9KJdgkNk5ju+imNQh4OdXO552wejqVPtSa3oL7K94oktBvSDuUBU+6gm8gdZsAO+Amy2244luXkv/wGNIO0Hw==');
        Z55['mapStrings']['push']('1,Rasputin\'s Foray,Raspy 667,861261,eNrtmM9LFGEYx9/ZWmdnsVjCg4fK1SSXoEjdVkNqH9KUIo3WX6su1oImGzlOTiJm0BLhP+CpTh46BxKd9z0EnYowKrzZKTQIo1NE0Luzz7vuvM6rM2fnvbzOO5993ud5n+/7PDhhVZ2aNkiQRFJZ05h7mNObzGj3zGx2gWizbGUhmki0QZxYAxqJbSR/3rVGchufnz361vOqZpE/QwzBqrAaNEyiEnEo4gLM09JsgP1FwMKV5Obz4niR/NRqjeQGkYzAlZ5wcGdLuIx/HIWhfGklhfM4EiGM4vtc9ZtqfYxtGYvFiALXS+u0D7k+O1/Y+rD5e/HHF87vCqnL+fQYOdrQ5MB3SvmReic+KeUH6k478HEp33fylJM/eE5RPJ/N+r8DXWdrWbwS/+18wS1/fJd9Z/8FviDwgMqBBM410nitfFFAew0uea6XqzgPU7sevgr6GUb9jAr2Q8723Us81G9kdX1y1iwKneZW7EKvg2u40RA62I2B8uu79q+jev7dEebo2970zkFDLc4XkdsW9q0i6VWzIiGNwsx/9wcTEyQdS0sOiRR4OLb++Elr/RrjYXmZHdwZXD+PcwTnc9yvhc8nXsZ+Mf9X10cq/Bfi5IKvqCVWvBTLEzQL9vG5sGP//es88wcTBu1CImsE+8GSP/SSEGfEfr5ibQOPPB3B96PgKl90Hz0UBD2AW/uBkv0yPwau9EA98mX7aepKP9QjDxn0I0Nd6Y0OUk88DOH7TN7OtzjrjWa88cALzHjenT7T3ni4I+RrP33eop54SIEzH5XYvy2x3+jMl+tDv1BXJIW+zN8ke9tX8L7wejLgjqceefeNQblR7Aj8vtAJvyP4HcHvCH5H8DvCge0IKasjTEVt+vQ7gt8R/I7gdwS/IxzAjtBb+XmUzmzIvsg+pbITs260+x3Vzsnc/Zw+RUJhVZs2DZ2aEVtwu1xk+QgRtd/IzuvR5rAGDz6W+IkVKa9yvoXx/B+geyDlqzjfyvgc8mN5KR/kfDyslQ9vD/4w5y8w+4Owr/+HOJ8Ia5QX1T3OJ8D5NsbjJ0Aal/MK59s1RdGKgv8PhRK6Mg==');
        Z55['mapStrings']['push']('1,the Rising,raspy 667,863711,eNrFmE1ME0EUx2dLS2lPaDiQ6KEkHIyxplAoHpR9EFM0GlI+YjQapUCLxVAWSoJUoRtEowkHTEyMHgwXryZevDImJp6MRg/GGx7xYDh4MR50dnemdL/oGxPjXLq7/fXNm/+8/8xOo+Hw1IxGQiQ6ej0XGy6UCsUpEpnPlrSlWCrVA13EbHCc2Jr6PW82dZffr5W/DrxouSXu4QgHm6LhkFYiYeJsivMBLFLrcxbsXwRMXFF3nhjtqfopaTZ1m/i0QP9ANOTRZZOrS94VtLuSO6SqHinOxvx4M0UXP07l4o9vysUv6tbnWT4LO22/Rk/HW5lk3vEd/BaWP6M7+f3z4bzq4PFT2DhsVqAxjZDlQe9yWoGljHlBC7zb6W1v2YLk7Y9JIw10tyMLs1ps2OiWVnhtjFvdkxBU7IUJl/jstnh3C3easfzv6Rvs+c0xNF8w+Hs6lh96zqSCOTleyCZG7SebuwweuBA4+OV2Jdn2EV4/slVg3+PPC8aoXWoH+7OlXK2L4WHCujgAK9YFdbjLNf0BS1c6Z/2SznNerGkFF3+yPGjoJMdTbcPOt/vyhq4KzH3A8hdflohSzX/FWlyhldjyUn9yl4XMulNAkq/Gr+ievJg7xm99u1YTH8nv6c/n+LDveNMbV2riI/m9/ME+zl0X78i/Lu/QJ4Hi4a/5XXs9NBPPjZBK8tjlTyF1myJqB1Z57fZZNdCXPXrftgQItwYzHfGUzcfrGvcx1a1E6Cip52NzPaWTm1hfHsvn2XNZPreN9eWp9XU2byI+1peCx/qsmn9dH6SWl2vj4+p6j09I8sg6nRiT0pNK6kkl9aR4PZPlcm183LpCJfWkknr+Ux/3Em8fC7cGM53xbp/9WN/A7seD794w7pyO9eWz3jR7LstnAFt374cus7oW8bE+FjzWx9X869bdq4FMbXykj6t8QpJH+jito/XMMD2ppJ5UUk8qoWc6Uxsf6WNJPamknv95P07Gu8zzzSo/y67xYTW4XuPHwO9YZbyXVhvl7/IwQXF8jscd3H+/lz22nTf+bIjMlLSiWM3gqo9s7OjaRMIjWnaxGOuIRiiCDwu+k/EX9Lp8o+CT0Qgg+JDguxgvVtJ9+KDgu1k+CL5B8CnGT0NdPiD4HpYPglcEfyKiKBHjv4E/Us1GhA==');
        Z55['mapStrings']['push']('1,Roof Fight !,catqwerty2020,555053,eNrtmk1sG0UUx8cVTZqkSFEVoVRw2JZITRGsUtet6ja1t6mVyi1t89HSuB9pnMR2nA87cdxUhctSIVVCQnAtXMKFwoUTCHHKICTOCApnOCEuVU5ICFERe+dtdmZ3dualW07ei+Pkl7f/efOfNx+7ne3tpaVlspvsHatWi8ZwuTRXNw6QF2fy9ZW7hVr9XnwgPmAlSPOCT7jST4rNK73Jvr/39u/nvux5B75b/Qx8ubN99/IqaSfi1Qk/0EvsXz484XyWBXIXOTH2PomJAVw+6+OT4x9s824T5PzJqx95+IySP5176OEvKXnr1qce/oqSH5p65OFzSv7c3NceflLJX6jQbZ7m+PtAF278eq33/B+ZB1sO+emXxyRGa9Thy8G81fH4q5c+KQ0Cn/7zYeP6OP3z0eaV/o1Irhem8zMLnbtbJmmZRG6SroZJjP6Z6vK9w4Fe2Wct2M69+4Qc9glkzLk3eIiytlspKf/ZF59v8QWL92KfIv4840dt3mMyfpHlLkP0+CJrL3Cmgq9a/NhIKNpbCW6nNP6yxetR6a8IYzup0MP0u/kxNfMJ+VfxJcr7wFToKQr9aur5TZsvCP1l6vnT7SdT0z+aPKKgX7x8+VLgIG2z7jj/Zd22+MKV8BWgo+OPtjvdmrICTbLx94F/rmTe6N0qKPGxBr8ywMdN8QuSNPC7SHzUy0OxeJ199vj0xEcaPCtwLp/iC5w3flPPms3rkQ0ixusnua3WWLYdDUzzEIW0TQrzQ9aXtsPW/a26Dd4ED5WJbF44nL7v8XLJ0OJdD1+0ufSCwz1p4/lJPi50v5SHbhmUdqOj39yhnnGLH8M9wbwbX5On5g7jn2f6u9l3w9+/XHxN3m0vNr5mPimUgVE70J9if9FpNuzyAv+KJD7wGeXcxfNnhJq+RxK/HDyuoAz49M8yDu6TlZYNxts4voCMX0DGLyLjF5HxS8j4JWT8OWT8OWT8MjJ+GRl/Hhl/Hhl/ARl/ARkfptmUUM97w3n6Gj/OZfWc1klw/IQkPuMpWxZYxxTxV6f4OpLl68OGL/7IjniaJHr5hOWQkH9pPQT+OuXquLS9ufD65ot/lfLzNdTPbgU/YXF5AT/45hfgrwtrXBKcT3e/LebHlMynwN/g82IdUfATlNNhDQTrd/kc5fXvUcR/S4jfrYrP50fWX+567Ypy7yvwwjy5R7E+zAv+T0n0lNj4usm44+zzoI+/sEQbe+t1HF8W2plS5AfqyQ1bzz/Aj9icb6C/fPmpC+sllX/qwjmSyj/An+P7CXwtjf+mreUf7DYlHrhNedVdZsJ0svajbBnY39/v2Qqr+YZ3YxR2mbPr/BaXLTs9aWjGR/DN+JasDPf50taMj+D5+Dl+FxswTPn4ap6PP2EHlu0NmZ5xS2Urh4fyUl5XTfs8P6u0Oc9DPnv4aVDU4x51QP9COYgHx3f5aYPPT6/Eb8DnDV5/ryL+1LpWe11+0tZr723h9CSl0OOeylA9PcBfE/QYEj9AmSkply0OD6ctuvyKvTN+2ghcVkj16PJ1guNBT57o5RP06PJ1guMrwjHMBTtUP61vBm/rZf5ZE7YRw3ZoPXT5m4wXtge+8Qg8jK/T4eN341vdaa29Oa0dMRrzmrt4H3NUkW7fYyi2XJIeD7C/u7w4/T795rviv09PkjY2XWP5FMHxSSSfQPImku/T5GH504Pjff2l4CkyPkXqpyaSTyD5JJJP4XjZ8jANjwvda//dQrk2a6zW7xSL7Ome5yEfFY8F9/p6Khl+8NZycsvJWs58wjj3MqTO9BjU9x5Cy6Atgz4Xg274SuchlUG9Pq3RViFt+fT/KKQ+n5qaPvXaFfYdI5bMrll+JyWu5H32SAjN+YvJbGN8FslnkHwKySdwPEW2l+rGh51UCslnkHwWx/v8oOCldv1BtGuXx67O7s4J6WbA78VhO9yLw3a41u3S5vBDBMefQvJxJH8Qx1Msr6sHvHIKyQ8hed3+0vWiwOuvQff5S2fgQfr2+xrfP7C5g5ec/yD97LuY8/vOkcV8vVitLRnHg29Na+w1sgLlW735zK+RjdfzteCbWjPs+S07iI7upl2Nm4bm2io6p2V03oj43vs89w6XwM5/6GLUOd/vlxCqhE47HUAHScRKDKmScEG3mKCFqYgFHVIJCtcFbxvfsCPWZWrqCpfH5l94USA6ecdw8sJVVpnv81EncXBHKsMH6QpbOCxEPUjPPovYcM0V56a0GHVtOx+B5nDp8Og6GXUlGo1OusIwbAzeiroFE5G3QFHr1rlfRNeQ28+rIeyDxDrbO5ZWlytEccW2ln1bbT9TqVZM0+yIxToa68D/AFbfU/k=');
        Z55['mapStrings']['push']('1,[TRNA] Rust Valley,GayfishDeluxe,787166,eNrtm11sVEUUx+8aS+mqCQKJK8GwJA1WI7W0pR+S7J3C0toWS2lLsRSxpWlLcUu33fJRUGkI2og+YEKQD0mhiSEaQV6IDxh3CL6boMYPHiwhkfBClAeDGo3be+fMzsyd2bmzkjSRvSHcbvLb/z1zzpkz5869G8zP7x+MW3nW/M62lqaaV8ItuxKj4fbuWKx3zHqsrnusbyCxPdob27W3F5VbzoEKLe6w7/Q5h/0r+Xxo3426Cwv3w2dURMAlwfy8eMLKhy+iAfLHQ5ZwoHr5pVLkjUvnrYAB/9X2Ritg3z4xc5y0vylzDnvaUhyPNMe6R/uGRgbDZSuCeWlb6fGw59pj5DyCxWtfO/Zh2lbUIfADHlu//eA0ww9o+e9PTDI8uX4G/qdTZ7PzxQrHF6iJKB8Mu3/MEb9BQy7GIeD+hyLuR/z2PZdrUsbtu8lzVgC1j/N8oVLf4eEjnojzeVHs9d3Hn6X06wW+WKnv8NiQT4pTQuHrgKU90nGOI/ccJZ/v7eB9CdFhwlc6Ez4MCXUQK1LZOHwtmJ/hYvg2I54vyhw+XDtuxN9P96KCpX+1RZeH0Ci5ZjPi3Ovx3nzGveGinqH42DPSgjEH97mjQluJQswNEHrH/Zz8w71yqgh/feR4yhK40jbM84eaXf7PidgPd892A49JQuAmoRiWyPUxsQM3CPxzCh6iuE5ebFX246g//awKUrnU14vwNtdXWJj4qMaNgZ2+9qfDQ6mxbSG2riYxqlBmnOuLPmTGE3tQJ78WQmyZGXN5/1iax6sF3vLMMNf+fsKXCeOttsTxXty9P82jrmmdPV8eeIvRDwn2zPXY4+pDgVxMOFKLEPm+fXfZ1S+u37pA+WbCVyr46SstVcsTvZQnFYKOU+RhvMC3Czx83xuvqwfeTPFkkcYR3u+SCkf0DflWUuGQwBcq+E5DfhPh1xKuXJk/PF/lk++y5P5X5UMH8fcqwlXyvH3zvZU1hzt/98RLrB2i/hyBb/DrT8uMbzHkXzW0p9FMP6taudJp3rrIetZGgBBtfmAVr1TWskvxnam6Xkd4ooCWaWofrOawLkWV/OV9YxK+MLO+pxGHuS2prY7+QmI/mVPU11G5r2Eu0Byozjw3aPMpdEWgw/COPym/ztJ1Ozy/eZz3v6fjcNcGyncgfrwhxVqy2IxHpjzpqHAb4mvHs3L/oHqSDzDHQ8q54fYdoL8JZ147Rf9AfwY1vMnTp/Dx7SH68/gaKNqPy814ZMjjDcQ/hUJNrrfk+V8v9GULlfnpzl/Qh3lVqqzFrj1NQn0QePvO51f6/v7nBeBVtcx+/+faqZbT1bJaVlrl3MlAV0U6XG8nSNexck8sz8cHmZsp4QYOeFvFR+RnpX6DcJ2IRh/uOmot7qzUf1noQ2s1+lD71lvcWdT3v86E0rEhd0HMzRDcOkDpzAVq9gK1RBUoNl4l/O1SLl6zF69lmngxYaP7MI25sM122Jb7Cxs76WD/plhZJP16t8LQu+JdVr1Gv5Uv58Ar9aETg46gTaPf08Xb1abR7yW7GHBvQ87ZR+/p9F1ThXbWwR5KfS5usx23Yp9xY6cdGBHNInwfDb5mFD6e14eP5/Xh43l9+HheHz6e14fP4bParKhwphZcIZKLzWzHZr53ajkh2oi4AeVCNHshelJZ/ZxIxXD2/UUuUvc1UmHdOuWsTGTjJUNjoW7n+QHo23mejxgmRINhQujbeZ7Xt/M8r2/nDQMWTLfzzlyK8HvNudDMXmge99xpSZ8JP0H3LzfIn3HZt+kzw0R7qutEGj4p8LiGn65oC+Y8z4zwWP/MPq8hT59lb5VnDsO79hvyNEJgh/plKp4v5zeLoCNgeMd+z3MRqO5rFf4B3Xb+WS3shzP6U7vfSPGFwupRxO9vizy1n+yW0My35ONF8Gx0jTADLY1/6oRnemGFfsSMx4Y8ehH4cX/6pnxU8E9JZv9AH0JX4ZDyOdDmNRsZfpWV+TlQgOfpc7XCzPlAnwvWCc+0FfmWzW1NaTVbm6AiWU95Vo+w0tfyFx+jSl/LefUzTzkfUdZKX3xS4KFWWsJzbs8Lennui5u4mR8ZrR3eF/qcBIBnfyp9eMsrpe/y/vWvj7bNvC/hW9+xH2nGy/COPjIcL9LYw/jT5f3ru/b713fsp1zNuJRnar2j7+k+hPeXxPF6On9Bn+k+eF6vz9uv1+fsx4rxMjynjw3HixX2JBXj9aHP26/Xd/MT1sIqIR/Is1780I+vHyhbeo3wlMMKHgk81ujTeiLwKn1b4O3fSO0++h/fGM0EMO+Ql0hb0gU0zeDVTghXhydM6899MtPakPSKn+E4ONu/bAo13IpOAI81fFLgqT3D7tpN3yFvwXJ7hpC87HuXZNceQx7t4uNC7Y/I/YMNebQnzLe8gn88+oY8Gib+34GkGyDMMurqG/J02sK74GPKVz9ce/a6vQy8+kv1VeM15NHIEZfvn+b906TITw0v5ifNy2qh7Ymo/JmZTwq8fZO0cgb7Ac5PIrD4LkyQpuA2oaJ6O6LGyalURYVutlfoDLwdV93xUymeXBH1n5HyjL49cZjR34F0+i4P+rFpM/2hcTP94Xlm+iNdZvqJi2b6uyxf+tlvHYk9epA2+z1C8++9dIOfVEkapoptmCpJw1SxDVMlaZgqtmGqKEOvSBXbMFWSWaeKfCsLr8llTC5j5EfG1+5QM7+jmFuVcquSptS0CveJuYzJZYyfUoPFXz97fx8NCeT9WcZL7G92Kd89zp0ZvvHklIQXHs4yfP3RSQm/lT8zfO27pzK8lg4OlDR4lU7VfYBdka4qlew6tI/c5v3/PQI3rJJZUymZNQ+MY5IexyxROYacrLnB/ILBRHwn7u+SuwD2igIBK8/Ka41379kZLEC+6EcdGiJRgOJHuO1S+ZcWsF+i38W+vrtI8t305RPzfEgsVUukjfGlVKRVSpsGG9pbMrnzeb+CaUN96VYY6pJTQSCQ+mdZ/wJrdlu4');
        Z55['mapStrings']['push']('1,Salt Factory,ROBOCRAFT GAME,305275,eNrtWF1IFFEUvmOu624SSgYiQStJ2IOBaeoWtNeyFftzW7Uy+9FM03DdzZXEemgUQ1CjB1EoCLK3CCoqEuphxx56DnosbCMiCglfSqIfm9059+7embk7M1LUQ5eF4c5855zvnnPuueeu024/HQihdJRV39rd5/K2tvUFewfQKn/djrqd/ipvg6umat8uXIbiAxciZng+dcSHZwHmw+ff1NzJvUDmuAiA2U67LRRGdtylzKUm+LCCqCJvcC48m1hTKA2NjY0iAWcD3i8puG2AzyaUZmY7fvzcKuOnpiaRoNKCsFdkqEWmX3tv+q+7UQZ6/GRGlv9wNTau0SVFke4QkMGgAOkkMA1i8mqlr7u1ryPYG3CVlDhtyC4dVSBSEKzZcaMCxtuBdh48Dyj0Pc8O5e1+Xz0iL3NoaBAJElmWSTzeD9/LWPfhPYCPzvori8PtFF8L32tVeNATUePdxL7EZA6Ri7ycnzs2veaWjBcHRZl/lcjwpfphPR4VnoaTpE0zyK3VpA0TVpz+28JKLI+EyKscGtZSV1FbMDSwMR7cXnDBQZFjgzrVBeQescGiOfmiND545BFyUgYVimlFI26JmjQdeTu+pWq0+Yt104nFVyQtHodbmLimYLBBkxkWGeRpGCRHAYhI1ciISLYmhcTBi3winnfu9dGn+Q8TAusokXKWSLJj+pW0kU5gHh+ylbs0fO4/uJtUqSxkRTljOtDCM01SFnaxZxaKpGXTORpXxBjQPSR2GjFIFE1Ti/eQcq6TFeU6WXHuORP7FFGAKm6WSITsYQNXkOogFSKTG8S0K2YtuYJ4mh68Du7RWahXE7WVE9fBc6/IfrChyyMjOgv1SYwcPYNk/Pi4Dl6l37NA8ZeGh03o/1rwraG6OE/GT05M6OCrEW+9+nzcfLwun018fMw/JPUoPjcln4T9K5Xmzjh8+7DlQzBRS5TO5X/W/GNZI/3xrLnXaTlrErWvJLn2NaqSx0bJ1Kra2FpN7VPaXrcqyQzwvLOezNVtrxE+wsFTOdJmQ1ua1Iaztw0LZ3hpvFrzXWfSFZJFV/9t10WW7Tr9tpza6YbW165hAH2Sug7LDOLpjqF1w6dYTTo77dXcnOxxchHsusH0Njr4j/PzSR6kctyd/HlxUT4vzkIzc0TFS4v/vrQk8yE9lg/wx1PjNRWon+0SVY3Jsq4tm1Gm0+4IhEM91LtekVNuBJSJbPWh1v4ep0MyQguxAGfF0SQJHPhMFG7oLq6JDI1Qu4GQEBNcnSxEZSW4XUudLVyD6TxZYpcnK8T+TcnXkU2ogL8XCA0982kGKvp8igofTsGigK8CHg5BkH/oF91pjD8=');
        Z55['mapStrings']['push']('1,Salt Factory 2,ROBOCRAFT GAME,307796,eNrNl21MHEUYx2drj+MuBqnFhDQar6Exh0lNQTAQk+4cL0fB2OJBtQStnAgE5WXhiHq06HmAROMHlQ++k9IYk2KslmqNkeSmJWljExJqU23SWM8YJcRGsb60pl9cbp5njpnbvTu+Oblks7e/mf0/z/znmVm309nVa5CNJK8p2DPk8Qfbh/oHw55SkhfYU7WnOuDzN3vqfA/W0jKSaHQbkZr+W2ei6StwPzb8Y93RggN4T70A5ridDiNEnPQJlrhn3fAglyiNeuDaxUn99COFDUs1E2QDGRgwiMaabfgWIvM5wNcovD/Cr4XA/6KMv5P/z5BT+Ni3Ct9G+fNqGP9hhb9y4OIbx2cmk3xc0psy/uLJQMX2UIfg64F7ICJfkf+5sih+astngg8AHwRuN5HjvXrX/NylpaPI68tvr7Z39PP3JpoeJzbN3dgTHOrsH+z1lLsdxCkSOsgnihTR/ZC6xyElGOoAlxK72ke/6ygtIg4yNfUu0Wg3f84GPbLkAgjtr5nijz4ZP2tKnZgYN3mDpOX165PanSVv3SP4Xv6c9YOehxT+z/Ozj27+8GnkkWNdMD6mHvlzP/gPB96vFDzExSBukWrkl7feaK7ZXih441POt/OMUZ8S7+8XPj9X5M0T/EFYLCOGrAcsTW95arh4b8V+zCeLco49f4g/R10Qd2xa6Of8OMQbjsj5gffEVsIX7vjA+0cKDzMudBSkLA2u/zmId6RN1mPHR3ne2QswX62g53brfNLoIucjbTIP+vXL3jMlv3Y3mqWA+20M/IN5DEG/dn6N/fRque+V1n9EPlF3vbKklCpINLK8vGTymBcochR9l8pfu/a3qScC+YSSJqos5j/m/+q9/Mltpv6FhbPm/2GYV+TxPTZ66CjPP+2g0jq01QPvFX7GeMAXom3gethYI+f3wbhYChsg/68Lv3H+ZRj/oEcugbAZ6OhPiJeF8jkf3SXPA/SLxUWp5DzmE9YB7VT8PK3oQT8PHZLHhy1FvyjqCefBl2z4Nc5VyflMiTcEPOrYKc9zbMH9zZnT+gjyGBfmlT4j61fzTydgvaAPUD/Mn35CrC/Ov3RdXl+7lXwuyvmkUag/o/myn+uV9Yv+xPo5HJfyYuE3zoM/2Yv7LOvJmq2f8+AvNloh+ycM/I0rlx+bvu0Irl/c2sT82GxtGsnYNOritQffhVp9TbcuSscL3A2Tu2XJ6m5Jx7hmBppNjdDYXshqPowA92tmm1dHPJhglUC+Ambje+EmztfB7lQruxT76ZcgW8CnHMRwNqD6xo7J7hb6n2TyQcxmtsVB40u4ZjsbNO1ZpDSR3ValsqUeK6vkvSS2Al7XrB1AG4CvQ+8A7yBzJ45ZiFT5f2GvcpCZw1MW/C7ga5Xa6iDzp05m5vUVoWf+uJUe3XY25ua+sODLbPnZ2Y9N/9+v8AVpxyfiiyDDsVIIoW8a616cSReUrboA93XxiZBrm5VsXYCH8+osXaDymVxQE5FOghldoPAZXVC5ThfsSO8CVq7w+f8DF2xKusDjbe83wsWJkgCHCvw+Mz9y7Qpcoc322rJOHrffu2WOqjbMkXmWJS8K6NfrLKDiax0qr7x07iO5bqerN2T0iQACzGZgzVxSjiYj+Gyf20UHdmSkNXJzgsZ5cdEeT/pO2mrHzWs7ib4sC3k56gvF5KV5odPuhS2Z+zrIFou+ySG6Mw9xE9lqP0RyJDzkpYl+o2UgLk0zf+Q/QMfN6w==');
        Z55['mapStrings']['push']('1,Sandstone Cave,Sirestyx,231553,eNrjYmdPzy1gYGHgC07MSykuyc9LVXBOLEtl4AjOLEotLqmscDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQxsMI0Hkg5AGMxwkQQHiJYQqFZPCL3/p+LvEBddCQZWEI8RrjwSqiysAUUbkvKZk03hDj0AUxbYgKINSfnmdcEM+2H+uGwMBvYPoLZwQpXBAaevs4JGcn5BpSYXKwObQxnEuAM5UG+xwi2GWZjJgOIAJIu7WvQZ0AFceRqG8nkzzBgwTIcFGjQQkb21Phih3AXVETBbkJTv2l+H6Rg/KF2HofzE8QkkBBpTkDMotA6MhhZRoeXjjJy2HEZDCxFamIApyA05bY2GFv7Q8nFjYOFi58wtLshzKIS6IbEBq1pGRkag+azBBYnleVycB4hSzQNWDSshOWGx4ZD6gHhNB4jSJIysCUpxMjNyNTKzJ1cV8xYlpmSWFssnJxaUlBalBhTlpwNrtGL+stSi4sz8PP788rzUIk8X5grmSsW0osTc1OKQfJdUYA2YWJIqCdXkk5mbWcLCxMLAWv///3+QW+AMFgYWIKsOSLEA7WSTdIboUIgCVqEMADGvSz8=');
        Z55['mapStrings']['push']('1,Simplex,MuadDib,228036,eNqVkj9OwzAUxl8qikn400J7AA8MTF3onqiqxIDaBZaOaUlaq8S2agdRWDowwcI1kBBXwHfgAnABhMQBwCmxqgaQ4VvsZ33Pv0/P9hAaJhzKgI5Iwk+jc0CdNDxpk37QhLmCXViS/xrP5b/l9dXFy8FD/dLUwV5uLHmozAUgKKpkNkE8+1rP8rWvis671uGiVDcF//Xtj/5HE+1pfy7/GX7R6vEopGPhlRcxVdNcpuSy2UyiOBFw4P3jXp//17/y15gbOFP+MLDmITcRnJqk5qXgG8aBOqy3GaZM4iQcR54b2HocgBpUB4xPMYuxHEW6kTc8V3XtsB0ATejaCdtQaaUST1mKByHFqdDJVM8OqEKNSByzCSZUcDIJJWFUhwt6dmYlC6fCmRWyBdWOnhUWZEhJTHRAqQm2Rk3YBDTQ32kYNVzHcbOTT8cLYtY=');
        Z55['mapStrings']['push']('1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX+CweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90+YLsdKLF7cmMM0A5YrBK0WwBut1OQQnB+WgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB/uAF9EAJRAtMMCgoEDw35L7PkK6FKQ/ZjutcCpHiVzwNUbkGi+Honmw9wjAQ2Xl4q/Q1x0JYCZFb/7oer3E6teBEM9fveIYLgHrN7+JfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg+VB1+NQzwtRbcDIyAhEDAwC1XNIF');
        Z55['mapStrings']['push']('1,Sobriety Check,CatAndTie,899334,eNrjYmdPzy1gYGXgC85PKspMLalUcM5ITc5m4HROLHHMSwnJTHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUcXOysBcUM7AzogNGh9AGKANwqE3SVDBcSAoFWXDYGAzj9gAEHEAzISSxJyy/KVTBR0EjOL6jU5GLF5wKHpANUdoEEhgvwOuQA8UERsbGYDg4hIkRIdIg8LofgdQ+6AB733L2RBHTPy5kgMIvW7iEifEh0jxoB9+BPyKnQaAuCOisS6iwVNJVMDGc3NzAw7IflWoLO4oI7yxRHiqGZ1YhcbAr1PKgw4cwtLsg7kO+AVQvMckYgTGFgDS5ILM/j4jyQyUBQtTcDD1g1LJg5D0BjGJ8mIwZhZE0IvZGELZRkkMKiF26EAyEjgElRkkERtxEIkwh5BGiSEYMGQZMQBmYSdpo3gz6xBiLMJRSpQHNTGMxINBdKcTIycoIMAAA9JQ+s');
        Z55['mapStrings']['push']('1,Space Jam,Raspy 667,874036,eNrtm01oJEUUx2uyTuaDCKOsMIiwrQbJIZuPScyHgXRtjJtsjG528rFms8aZZCfJrk6cZCLBD9gGDaJ4WNnDqihmvQlBEPXkYUovnhbED1SEGC8rAZEcXUSwZ+pVZ6u6a7rq4K3q0qT7169fvXpdr+qfnmQstlwsoShKTJbyiwVrLF9EifV8ufSi1dPTi7tRreE2xDX7r6Vasw/g79de+n3kk6Mvs79xC4DRZCxaKqMYEltEPIE3CT2WMH+hoYZH7P13q+09+/uuWrP3kKQ1DI0koyhG3hDON/keeQqOzaIF9NSnZff8ZeoKuQi9POCPt3WmykfwWxa1F87v7Owc8uQ5Esb/kBt1+TevUP6Uov3XIaTzofzW1pbLv91B7S8QNfuvgP9TofbdkXN5iKdCfCi/RceYzCrG/9UUtX9Usb9XVvisPpDkA9hXTcEICm0R+9b9/0wNH09ji3/miWs/beSqfRazNzq5kV8vVxMb5x16C4QdrePVHA3UQ2AszXeosk8f5ib2jc/cm8kkWBiG4yzmAlf5+WrkWOc7bS6/u7uLIownEt4W+VnhRcth3mOvUzXeSziPH4PjBBb52lxACuBHFnPBCxg46g/wRJU/L/jfEsLPK/M1//EzWIjPHj9tHk5Ei2cHXb9zND7kBIuPw8f/5s27L9/6Zc2LP/BYwldE/hzEZRj4ARZ/ON41MV7E8dNu/FtaWg7zAffB9UHpREp5ljdQRvB9cGyV8FMOd93rh2+qB//7hfhbwWWL2ccrQr5BXPADPp5OdAWsx88IfCqEB3ukVzF/8pr+n3eC/WmW8GOOlv9k3NGKv49PI1n+U/tZgY/DMQP5fP23kx9lP+hHjVA4hETxeFl8hDxkt4eNF1YcLzFtvUIjsy+sgbyFSnfg/OnP/5B44lUcPF4pyfsyK8Rl2QourA1QWIEnqvyMw/u95CjxRJWH+YSweb+wrcR7daIQYr+YCx5ff/xpfi7v6fHPOnr8xW09fsnS4y9o9ndB05+cZnzmsR4/h/T4KaLHn9Xkz2jyT2jmw6hmfzOa/JCmPwOa9ps1+bgeT3R5S5MfFOpFN1+3K5WTX76futrsra8egetdfF0R++XV0xkUXK/FetFI5ysfH+ef5/N/GuZDyCMsbPh8+4VpWH+OOmr8jKT+ZiTrgTlh3ZmS1l/aX1a/HnXU+Dnw/zFFHvYLHh+X8isrK1V/MO9PGD+H+f7GJfnA+Hm2bnb4eMr8n3c43stnlt+wWXXzh+6/2H5uTNG+wNfZaFP7WdjvtCE1+2xfp8jjNdgvs3UPFgSDb7/K9h0vFyA/EeOxhK+IfHFba33IeOX1fynFvR9efkI+VL77d6Bp85s7vfUw8ETC2yK/Buu3Vj0etyr6s3bAz2uKPGlW9QeEo3hoPtTeF8ZjVb60x+9jFXmizCNez1HksSJPYD/I8qfO+0j5xRynt4TyTM8YUbTfjfT8mQD/hxw1ns3Pjyvy/Xw+q/JElYf9ry6v7M8ZrBfPBYvXl4T3wN735n/KX4Dr0zh4PfNj/4N7X9/7OdPuGU8kvC3ySzB/PsnrCGx/WPnjhaYvmlbnPB7yDPcI+lJasl46x+eb+B6LvEz4xU0fXjv29+kbhzccmbGytX8+GI32/9VokdFojUZrNFqj0RqN1mi0RqM1Gq3RaI1GazRao9EajdZotEajNRqt0WiNRms0WqPRVn79c/fp6/d8zGm047XvaDegB5cAFSs1wv3SMclkMgHfsPfpaQy4Q8q3t7cH2G/TtN/Lx84+1Jg7OztRKH+bJt3R0VGHT/v4+v6kff4gvW/8o9nqTxRQPBlLFMulVfZFvChqe/FxfYmj2GQpv7lqdSYTTKxhi54gPsb4jMuD+M1ekiC+kfFdyQRR4KOM73b556kf5JLcnzsY/7DrjwJ/hPE9yQQ7z35pEMQ3ML7X9WcD1W1VPsL4vkQkkqgO9n+bSlSA');
        Z55['mapStrings']['push']('1,Spinnies,GayfishDeluxe,841943,eNrjYmdPzy1gYGXgCC7IzMvLTC1m4HVPrEzLLM5wSc0prUh1MGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFLFzsrAXFDOwHkg6A+Qc8oRJMDkEHUIyEWYFuFQMjw7ILWUCdxKuf+OQC0Ekwp7BAnfiAAStgZCAAMBQ4uMCZXAE5iSVp+UW5CkZcrAzsDpT4cgLI1QdIDBW6+FIQ4UsFjeT8gkpNsGfzHSAKI+kQpRPoFqUSGJ5F8vMBSvw8eCNYHpefoRQDBxc7Z25xQZ5D6gP8ljAyAksTjeCCxPI8rCahBSnnAaIM1CfWQLi5DiUBRJhrRqK5CGcTZbwtecYjPJGjAClOImnjCaKMp9gT0ASP3xYXimxBeIkoy7ypYRmU4mRkBCIGBgCP4hFW');
        Z55['mapStrings']['push']('1,Square is safe,MuadDib,316556,eNqlVc9r1EAUfrHsxkRtt2sPHqfgQRDXQz14y7SsSNEuFotQT6a72W0om8T8OKwWWqQeBEHQk548iYooeOnR+RNET97q0Yt4F9HJZibdTHbSDb7LMG++N+9735uX6Kra63tQgembdyPTt5AdoMDsWqCuRGanaW/gSzA0fBYyZvzsDs34xfZ7975ffT93n+95HFR1teIFoIJoVdGBn1xO1nXh4Bicv3IblBx+PRsn4rFPknMbsmv+/nPGKiiE4cmEeFwST0ryMX48j+2F8XVhaMYBSKy6tmk6W4FeARV/wMIZ/shodl4m6R6jZL2BxbRvF69TP8PjAWTxjH4O/wbK3c/wZe9P287xkmfC+U+K/8RkFWXG2vzvteaFMxyuwJGWQvCr18n6KNkvPqt/Hu7F7pxEsbFZi/vHDwhjDVPkAevHU7buJHfghwc5vZZivUrgY31TzhzPxyqPL9RLKkaBXrj+bXtnYf4L3oOxeuXUgFGNsIslqfCt3bFfLVrDn7/7lPvEozW77ASe7VsdtDFAq5Hle6MM5MWmKuZf3cVrd8oMN4wd6ynumeBrErdZ4fh0TDl+/JgqeN/LFrSczSM+I1lB/zVG71Amd+oX1QA4rqtaP/Ac0mKQluxuBebgRNNFjhuivrll6Ro+KoYSOg21tusNkNtF4aZFA72GrqV8WvJC6rSBKZAUAGdhZikK0cCNUNt0UBRQZhxPCqqpQd0OUdf16b+bvlQztF2ncVgUKShqJuYmA4zmmIbaCpUKBXbPsbs25RceZpAG0gynQG3Tf1PPamiKosWef5P47d4=');
        Z55['mapStrings']['push']('1,Square pathway 2.0,antidonaldtrump,737187,eNrtXF1sHEcdn/O3rSZ2ogM5UCkbODUROJfYORK7or4xuQQ5Taw2OdKaEOONb++jse8u99HUKVKMhFRRKlEJIRWeyhvqA2pfEEhIN4gKiReIQCD6ZqgEipBQRKXyXbN3M/+5ndmdmxlUCancRsr5vL/9zW9m/h8zszOeGB0tbFXRMDp45VbTrXlO1W0Ub7vbzlzyJJp0y41SrlJ2N3ONWnOrilOoc+EEEq70n/OdK/2Aff/Knd999nvx5+E7PsaA8YnR4WodjcKD+C6mP8SQdOGc+Nl67ef333n+T79BA+jpN+oIka/P06J+dapzpXeR4prMFpvlnFebadDPieGI8ofgN6TE7pSiqwrlcwZDPNwPPcfw6b8f+Wc2c3ya188Wb9weD7XbIaoxeJFD+GvfpYUlxWbihd/nhb/4kwv+7196hTIY4gnDm/ITpseY37AxYkh7xfDAW1+6e+rIL3GFlblMbyxtHLwXBPLWm2yY2Jt1lSybzLZLbLv8/WziFuPmTXyBNXH+7XXBB6D19gVNOBlsYH4dDAWUbfbJCgk46CcOPtbVyQMA4FdDDr0YP4tipElrTNh9sItQAIhRfsLK5fyrIr717lPTF/6YecHnT03N+/g1psfdobhFJT/FA/+TDJ/V6LlBKD5rqP8yw19l/Cu98ZAryM2dSP70Oy99aunFa+9CfeE+b89VQ/2QKBY07cP4SH7HDP9Fqb8WDfmlOKHEg/5nsBk/003KZnow6yeySUQ9cdb+D358ef543ePtD/azqklo0P7GCWcKEnDe8zadRtGLdNgPcwdMSQbADDrggHMfWg44LODWFIJH0JH9s10+siDygqEGMmoHT2Q8cwAVnvMtSg6VUui5tiM6rLpDHR8fg/qRRZFXh+e4TG88DzhZZKSHrGOxvwz5Oa8OvyL107JiBDTM8HJgkvjTf/3RV3/xzR/c4/jzEu+i5CASnvPJ/NPRevDjO9H6gf8fL2z+9i/fcTlexsn1hQQB+Kckx5br+7dvxA7PvpIEPPeXq1KCGAsluJmPXvf52X2SAV07Ap7Xd4TiSZbZ8xmp31R4c39p60ett77Vvr6tDzgHYGSwWSoUG+VSudCOOKRGRNgYgZTjYV0E6SggS6yGzHOxlKpCFplSRDSVxyaQ6ZCC8i+iSB3w2YIQPyJaAG5oQzzVA6mybKYHQ6qpYLMIYpxC9j/SzhtOcMSHQ92JLbsTW3YnXpeqVTLrHqJwbD6klrsna2Yu3LzWDLsHzLBAzBIO6FCM4P777oQRgdNzRHAYIi0fAqfESJ3+Ph8yz7ZHBN0G2RGERszJZz5yPQI/LUb0AP5kT34Ga3XnSJSfZRhjPTJep0fFj0JzNsoPBukSMz0yXqdHxa/SAyMOcKyUhIcMCfwcvyvOVRMhe4jGTysN+LAwAgK8rP8PjH9EGjEp8K1dMf6SNTbkdx0BF6GH6r/O+tdFRnjclKYsKUVGHVDgj0nLdV08nSKo+KdC/Uv5a46dHhmv06Pinwr5I+Wvr4tTKJ0eGa/TI+OnRH65fQgbIfIZBuhhianVtefH2ksOPMFJuiEeyksaHA+BPtkzIXbxEOhPK0aII9RfOD4h6YmH8J32Sd+3HsFdDI7g5Bkf+jh5dkecsyQUCtqT1qX2og0W8cd6THLb+MYTFH9ZEzEBDxYg61HhwYKBX6fn1kmK/xw2469a1pdZrnF9IQI6Un3Hoj2Ez6n1+E/uS7bnFAz/MUP+FUv+jGTBOv6UHT+3WEP9fNEsYcYPcz5jfmifhw35s8Z4ym/bvzBH/oI0Bx+LjiDYFA/6wR/BnrPKCEXxuVcp/rw4d4cXWTyjQ33lNRBde+ZgTm2IZ0N1smKIf2ZXnHKY6smKUw9e37elRVro33kxnvAXf901MbF9oL6zGjzoWTHEF6RFbB0e2gfWTk5b6tG0j3mGi5jR8vkfW3lGB+Swy2e0KCT34mdO+O5kiQ+9I0mI1QuYi4APDbw1eGKJl2emWn5LPD6/Y8dviZffjWj5LfFYSs9afks8vDsw5rfE489jO35DvLn79doUAG9MUCLkH3lx4hYo/9y5cxH+FFeGlw4+5N86fMoSv2iJz1jily3xK5Z46dWPFp+15L9qyb9qyX/Nkn/Nkn8d2+FdSz03iBWeWNozsbRnYmnPxNKeiaU9E0t7Jpb2TCztmVjaM7G0Z2Jpz8TSnomlPRNLeya29uztRo6PIhZQovFx5fT5ypUrvn9Z8mNLfvMV+bHIgSh0Xz8R9hNhPxH2E2E/EfYT4Qc8EaLO3gJGD8uT/QTYT4D9BNhPgP0E2E+AH6wEyOvZnQkez3aXREk/EfYTYT8R9hNhPxH2E+H/WSIcuLEduS15gBdVpJtL+H7ucJP9e++9wFvPG44okX22uvvM//XentUmguUtt1Aqe06m5hYqZWHtFuz4ED/wdlPaE5IKtRA7OUplwnkJ/jIe9nrcl04e2+LhIBvbm8bPrYT35Pz6Z+kgnm6nhN2RCnyM3GR6qruRe2AC3UP53V07POiBUxS99XcP7rG9hFr9HP9A6KcIPLXoAsM3X+7tMeABniVe5n9YiWceb4mX+eOW+uOW+pGlfh2e2+eu2L9OqL/e/OGjAfusVcX+RZH2FuP2aYpnu6FlfER4onpylnheX0ew/4hNGWL7SP6ixL9/J8vZch6PiXB+/BA/2ZS3i4mcyTAmmuJBB4+hmpjYxb9sFFMw2BzbD6mLcRhszhQPeth+bF1M7OLvmekH/O2qUUzE4PPPTRnFOOxZ4mV+TYwL8evwMn/cUn/cUj+y1K/DQ3+B/WhiIrdPtj9fF+O4fZriIcZJOVUV4+BonzGe++OrRjFO5S//g5gIfw4jvFKTVPjYAHr9jdfb54uRzTsVcotVFf5OSjxUoPpAe+e4WEhYUomnx62Sigqp8PKm+2RvPaFjLwkNvwKnxLPNzLCpuQee6gEcHMCe1vCfkfh1eDimtCDhUSipUT0afOi45Nne+IABGuEDTkrxcHhgwbA9ZbyufVZQNH88pIfiLyrwKv1PsvufluzTCc0jRTwWcfx4nHxc/ZKET0pB76f8ONqbl5622m17vlQu1YvORqW6XSoX0mhsYnR8q14twxibFEh0PIvF0DiaXHpkyX+2UvVqbsM7Wp8Yx0bP7csWPeesX2atfYrMf4qNQHs9NYYeWtpoOJW8M7tw5nRyYpwYPbR/NpmpOOVKo1PHGf8xNpru9dgomlrKZI/WO890NPrlYaMHJ+eSl9ybnuM6G0W3XPD859j0o9dzI+jAqeRynmo8W3TvHN3c9KUaPTmV8za9hudsV5o1Z8utJscHYxNfHhzduFMffG5fzc2VmvXB7cnK7bJXW85MPuvV6qVK+Ui+5m559Wwl4zUqZb/3Dm+41Uaz5j1RqxRqXr1+iH2/WNoqNYbQ0ODQ3t7e74fv+v+3VfEfhtr/hv0yRw7NLjx6cm5m/sTciVk/K/4HlKdnCQ==');
        Z55['mapStrings']['push']('1,steady,JonesReal,240703,eNrjYmdPzy1gYGFgKy5JTUypZOD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDGwM6AAu4uALpZMOQGi3BnSV5UuXw3kHCCsvAyp3yHdAEXWIgSoPgtD2PxV/h7joSkCVHyBNOdwxSQoQZaUPsAYTmnIH4pTvRw/UBwxYASMDAYBPAVdATmJJWn5RroIhAxsXO2ducUHegRBC5jEycDGwBhckludxcToQUg20nouBB6xaQSM5v6BSk4sTZsUBaABjs4KDQRhZE1yvAyG9QAvZGaSw6MUwwgGvEYq4jcDwiAMej7AxaBA0CUpxMjICEQMAhsN92w==');
        Z55['mapStrings']['push']('1,tallpendulum,JonesReal,53,eNrjYmdPzy1gYGbgKUnMySlIzUspzSnNZeD0ys9LLQ5KTcxxMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFrFzsrAXFDCwwjQ55UAYjAxpwKFkAoVXQJJgYSkpLGexfzgSBWfaXjcHA/gEDDsCWlF9Skp/LxYqwFQ4wbYXa5pDdgG5re0cH0bYyMhAAcAUH8h1QZbgCchJL0vKLchXMkZ18oF2BkJPrHSgLKITNFiCb4RGQdACXzZ4MuKJohrEuA8w56Dbv/3AwyEK3OBWbzZYgmw/QymZ7DJu54TYbGjCwcbFz5hYX5DlkQsM8ElfkMTKwMjAXpaZwccLceADmVixqWRi4gGoVNJLzCyo1gVqgxh7IxG08M4MgQgtc5wFCOoEBxcwggaETYQAhnwENAEZAUk5pKlAxIa8BFbMwcIMUQy3gZGQEIgA/dI5H');
        Z55['mapStrings']['push']('1,Tam\'s Hill,TamHill,373046,eNqdl19IFEEcx2f1ztOjMlBC68ETtExUMk/MHu4mPCxRTPNUTIo7z9WuvNvj9vwb5Bk9BEUFRf8DewiCQFBCMiLX8qmXgixCIfSxl/Chl+jB9nZn7m53ZtY758HZdT/zm9/8fvP7zpzVYhkMhIAZWN3ewCHRdso/NAQs8nPsAdqB0mAV0DTn7wGlOTfR+7WJjZMz+ZfxOyxDoNlqMYdEYJFc6IMHqg85QNfg1BG1L9F94EBeKZT/6vmRqNpfiur5gspWCi96WPZbD9RS+BBk8edKKij8RSY/UVlO4fsBi396vI7C90ZZ/EJ7A4Vvk1j8ynALha9n+rPyoglwzl+PYu2x82uN0pzrgNGsbUPeyIAQDtiOWs1y6sfUwEt+9D2bmLqP6erq2ho5AfQyQ/H95zvK0jzM1Hz59pHCn2eG4sOnl2mlZnn5CeAgRN+bUW9n2p+buynzbYhrRFzFNjzipPLU+J2kskZJZRBN1IrLmwiFXdvHWwaYmX+QCJ1UrxUKeELtF/8W/3O7KgtkywoPHdqlYCHSCxLI0tqHNtQX6AQp4U9BRZJKwAtIHQaYqVxdGtpZ6OxK6Fy676W4HuJC4GdmTXg2K4csXyc0Pei9iQidymfr7LpR3x6l8vFQYB4lGXZtx0+rvUtbDUweCTasQ+8+D5WHkemd8Sn6k+BTWy+MbKKtMp1SPOEw2lKDNm2+Gln8Ha0/WBXtwDieqCjhKJrnILHVNfZx8epVzqn3ZzSkVU+Hdj6dfS5uH8Ujvl4Hwz7m3dq44zwk8eOvlpJ4XC/dhvWS8KcLcR1oHZ1SavbdTCm4Mvs8yT7mzzD9uTd/n8KfZvKq9On5JqY/79/covAuJv/57Q0K7wSG0gcnNzX7F/avG57aBO9jXsBeb/yh2O+zsfjrS6sU3sP0J5ZfjtBb9ilP59mnvOIPwfcAw/USfLfhLYjkO6X07LtBev63R9OLT6txPUq3j6l1l8bRWR07OuOJQgcd2MO6EOKfH0nSpNxdCZ7tauxuTF44m6PGS8NSrb8F7SVuKcogLO1SiryUOq+WXur+0C/YjcapJ3gHMJTKNH5rKFLJvFUypJLgq4ChVBJ8CTCUSoLPN5bK+FZfQLdFtNUXf9zliqofViXwbZoRkKiSWmCyWnICYiiIaxJvGMIex8nHnbkj5B0NWnMkXt0gUm/UgN6l0LYynxAaPywPQrWGj3n6oLzkQYmxaCLJAQzG7qeMRV1OJmedyrT4JsTMsczx3WFvv39YLPR5Q5HhMN/iD/gjxQNhb4AX3YKLjwhBb4TPHeHDol8I5gqjQT7c5CpCdFtYGAzzomi6Wm3a2trymOE+1QlThgmYJ+V/xZIWfzABee6swgZ1sO2sEOQB+A+dfyDG');
        Z55['mapStrings']['push']('1,teh foolser,Querp,562053,eNrjYmdPzy1gYGXgLknNUEjLz88pTi1iYA0sTS0qcDBhAAMYDQP279LAwP4DlN9S9dB9nUg1jO+gAVXIwsXOWlDMwM6ADpjQBRz6LVBoJJV6TsEMjHB1+Q4QuugAhK53wFDvCFS/H+a0y8ZgYP+AAQdgcnLnYkU48YAnlIGwsrAB1UoVDM+c3QxUQryVnE6JxakKSfklCsg2O+RCNbDA3aKCGv5YbP7/zw/BPRDdgKIOQz0jWD0jhnolnOr37tuLpL4Sqq5GAUKnQfTb/1T8HeKiKwFMRfaRRQyM9i9ngsAsh8PtYAW4QoKRgSDAjAVo/DhOv16SgJyAYKHHHZCTWJKWX5SrYGhAIGLLD6BGbPQBbBFLQlrigUesgpM7AzsXO2ducUEe3L70BTj8yMiQwsAaXJBYnsfF6RDggF81IyODCAMPWLWCRnJ+QaUmF+cBQprAUBhZE0JvAmELGRmksOiFG+GQQNh6fgZF3EYgTMpIIGgSH4MGQZMQviPCQCYGfWINhFKczIxcjczsyVXFzBX8ZalFxZn5ebxFiSmZpcWKaUWJuanFIfkuqSX5eYklqZLJiQUlpUWpPpm5mSX8+eV5qUWeLvJQwYCi/PSi1OJi5koWBtb6////g9IWCy8LsOhEcBlYgCwBoJ1sks4QbQpR+XmpDAwAwFHkTw==');
        Z55['mapStrings']['push']('1,Thunder Spectre,GayfishDeluxe,843868,eNqlll9IFEEcx2et87wtKcxAejrjKnvw0jzNC7kd4UgMukyv7AiNO91Tyz/n3ampD0kEvYQ9F0TWWz0IvdRLsCNBjyEEQgR1vShihBQEIkl7uzOzO7t7d3vXII4rn/nO7/eb3+83wzudQ2MJ4ACHwsNT44Ni0t2TEAfSSRFUdkRn4yOp4aA4OnVHhD6gDOgBzBB+xpUhbOPv+3PfO5ar58k3rMMgzzsdiRRwkoXwGVT/KAOGATutt5LJtplFwBXBexqbASdsPs6OJ8KnJmUIGZBj8F2j0XR8Ijnm9vMOzVQ6TP+Bs3hOItPWN0TAoYj6ieILKoe/ySyt9dZc3Ag+kOPvuTkMOOIKimI+DJhZ2F7pbq1PiTJ/PBKT9YfUfREJQT87S3tvV+J/985n9ftlfTSlBh3F1HWwm52FDKsPR7A9V6Gl/cK6Zn9f1n4cDzS4pHLEDzzreEW/lKM5qz8ahDcEFaajCeL5nulovP1xiyzCHFmn4+vt8DR0dvlfJ9+/+7KxbJenqWKX3/rxte/50ZeEhw/dLO/JUTWc+gsVyUuk4P0kHtYHyYECIx+gZUFzNguIjWguk2Mt9Nq0egLasxoezmm3sFO7Gw7W18BH0BIwWat502TZbirppn5Du+k05eiJKxHNSBQ01EDImke4raCAoZNiXtrFOeRQeXhtgdUPsLzwgeaoykdwuyFtox23gxprHomY97G6NKdff7vwovupn+ob25/Bb2HFwI9g/jq2w8f6If1Zr7q783mS+IvSS6y/4fzxh5MN1vEh+m+wv+WYTxvib6gxGh/CT+P4kzh62Sw36RtruDp/NdBLnVzipdawvho8wN7QqsGXrQZiO7maLGrbx86601Bw+iTZ/s+OJCMS8YZkGr5A2weqVpVvo7WaNy3MfUWisZ96ETLUttf8irkU1jWgXsTyZu9PhfR8zM3yAfP9dlnPj7oL9ZqWrnBpV3ez/mDN8Uf+AldNGdu0i9n6nGWH3Ue3Jg+iQM5TaJte1OXerQzbEWLI6u2p8eShFc79tpX1OaEE11otXStH+O1G3nA0qthUXfNVTIUFeMnAI9zsTLyo2iys0geRql+Alww8eauaePwtvfq4+Xt+a43qF+AFA28/1AdoqBsbQAXvdI2lEuM0c4bc1i2D4+RrxNGTiM6M8y6ST+j2Qh76oEK76wYmErOneReyteiIfhFdW7CjKWuPWaylEqZOYSlRm1tCc8SWUl1BJc20UI7mxwiesSuoGWpLt6VIXTy5OE7+AeAfh031CA==');
        Z55['mapStrings']['push']('1,Traptic,Fantao,1871,eNrjYmdPzy1gYGHgDilKLCjJTFYw0jNgYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXsXOysBcUMbAcKGyAS6QcgEkwwow6IQLX4QWkRVKuAKv///QvnORBWDgSM9i9ngsAsmLT9AwasgJGBAMBQ4BAJZ3IF5CSWpOUX5SoYcrEC/Zg4rP1oBPIjXMXw9KMxyI8OwzseTcB+HN750RScH8sJ6lWB0v0W2PwIc7T9ZWMwwOVoBgaO8MScHJ/UtBJw2NLPXk6QvUGZ6RklDFxc7Jy5xQV5B+ygZgcdwB6AQNfEM7AGFySW53FxOhBSDYQJCNXRDQTNjmPgAatW0EjOL6jUBGpKdSBoRQyDMLImuN4DhPQCLYxmkMKiF2F9PmEjEvEbcSCfsA+SGBRxG4FwTHECQZOSiTLpACGTgN5KYdAgaBLCQEJxC4SxxBvIycgIRAwA9yQC+w==');
        Z55['mapStrings']['push']('1,tunnel,Guest 2000,359280,eNqll89rE0EUx9/WpkkWb+Yg0kMKOcSDGpMgFKR5gUItXuKPitWCTTVtk+bH5kcV9RKKB/8BLXoMPYvQP8A5ehEED3oJxKMgxYsH8VA32Zndnd1sdl+dy7DZz3zz5n3nTV7UcHirpkEIZjq79XqpCurSbqndiadTqRRmYTQwAdLIHW2ORu4Xf37x7PvSu9hz8YxJDk6r4ZDWhjA4R8T5AT7+bMwNlF9MwcG3Y1DEI9tgMr8KTv6a9tPGLzv0Ey7+1Ue7/o2uH793aOfv+PKVAzt/35dfe6nz2OTvHxj5wAKfuSW5P3N/by9eOKvzmqaBwoh87seb4Xib+5IZjdwAPIZaqBY7m41WLZ5WQ5aV2OFmp/GmYQl7FDfeXBx/aowkKAoj8mbqKnxL9/h8vetM3WgR7nH9Mtdd8NQ/+r2mp1rwWzye2OR4TL5i5Axng/Ig73fWYU2I54cYPyPGz4jxM2L8Lr94ieKy66j3+31baWwxmY+5+OPKju5XgcdT5fudB+mo2/herwfuePK8BBcD8iL/+e7k+AXPdcVFZiu9kT6mQI4/IefVedUwIu/KT9ZHn5hPRtTHYpdU79ik8Yyoz6j6vE4C3z//y/vUC6PyTeOmZjXOXZVnG2/8lLTinF+Xz8O8x/kR8QSo3/LOmPh96tHF+9Sjp75HPbLqgFaP20R+o0urLyfvV19Ef5HoLxL9RaK/SPQXif4i0V8k+otEf5Hor2jVzFbOo1VTwHeYCO5rxtwyPM3vf+2s29tx0d1Z3V/W3v2ZI2quKPs22sPdA7bfS7eVOXvwjMiLyF2N8IJH9RN5sT8mTsWqPH+wuqHM6xWdC86nh7yZPxHPinzKbfEMeYUR+ZM0/pfHWm8dJg1l690/RJ8Ouyf76gxE1HC01tbqoqxEW2y2XXeNI6zonWcEQre04pO6GjX/lEygZ+D0iI4nHza0p+f1RTyHkxZNwxn7ImttaeC7dgrOjVlrSrAAOwzDnLeEpRRg9yFI+ipZggEycwouBRW0dANkTYErRF0+RRUlOvw78g/4P0/w');
        Z55['mapStrings']['push']('1,Up & Over,Tyler_89,276361,eNrjYmdPzy1gYGXgDC1QUFPwL0stYuAIqcxJLYq3sHQwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AzogBFdwKESlYYDJgZPT08GRvuXM0Fglv1lYzCwf8CAA3AF5CSWpOUX5SqYcbEirD4Qgm61Q1gDKg31pf1Pxd8hLroSQKv///wJFBeBisN8i8NqRgaCAGF3vwOELjoAph2nXy9JQFIIdy3CN4bIvsFiYj7UxLILEDreAT0gA3b9B5rcbwHxBQkBaUzA6sIFhKz2qyfJakGE1QoayfkFlZoEXFBM0AWhPiS5QALDBfgcwgqLR4ckiIkOLlCH2UFpoZs19caKl4AZ7e8/kENIVA83Pw2aVj0ZcKVZVPOJVA8PyFKCAYminpRUZMTAyMXOmVtckOeQBHWdCY5swsgI9DhrcEFieR4nMyNXIzN7clUxb1FiSmZpMT+wiCrOzM9TTCtKzE0tDsl3SS3Jz0ssSWWuZK6QT04sKCktSg0oyk8vSi0uloTyfTJzM0v488vzUos8XVgdxCDlF2v9////QS5nYWABsqJZQAwWuCjQajZJZ4gBClH5eakMDAC2j9WU');
        Z55['mapStrings']['push']('1,V Slide,MuadDib,177674,eNrtVTFs00AU/SFxjd2mSaFDmbhKDAiJLO3A1JyQBapEq0pEHSO5ySU9lfgsn92QtBJUYmeGiZWFgY0pXpmZ2IqYWBArYgiX5M5qosaOByADz8P57r9////nfz5T15stF3Kg76PHT2idgL4T2HWLHuBNGALfgjGUvzeGKP+Q8xfdLw/frZ6oOb4tiVdNXXM5LCjH0AtHL1m1guUKPpBjcTyU8H3/YA9CZfbejMa1yzODzJCO09Gjut6+GuB1+RwuRQYSEVHwy3tj4yQiKZbRCFJzU7sgl4unyVWFWLmUeUa50tF7H6VMf1MuJQUkCBSMVvD+81iBlDlAMwmUjt77PMcCtWUH7cZ3kDK3Z+ugdPTe140h5lKgruygrXiBlLk7Wwelo/e+zV8HhUjuc4pnqjgdPcryVB61kpzfkf/mn+u/KtbdNdBGAqmr58O/Eggfy0Q3or6YAN6eUvGV8YqtdPRKOno1Hb2eih7SCTrBcfTyJ3nuz6d+jYG04X9p/4S0YJi60eKuE4UoTT8Rq7BoMeQwH7XsI2Ia6n831Uc4XYdijbkdxBrIPyTC0S2ZBk5yFM818d0NdeXERViBxfuBjzosQDXbEZvvJm9eBDPgBFEfNZgnwsi7PC5MAZaow13q2T5lzqCIJCfxLA+LqCYXkYfijtAUcdp0aIOKQnwRoZpcyRLotUPbaZKSkc2YZ1m91uXZpwXWdoi3bd2s2a4feGTPY02PcF44Jh4X6Wc7N6TlEW1RP+/ZdRrw9YZntwivMIv4zLF9kgPtWb/fH7TPxdezrZymqabKgQi8kK+IJI44/AbeBj+T');
        Z55['mapStrings']['push']('1,Vanishing Platform II,Echostar,965994,eNqtls9P02AYx9+yjrFFgzFo5GAcyQ7j4IQ4iV7oC0yxht8Qw4+DvM4yalzbtEXc1DATEmNi4tHoxf9Aws3Egz34Bxg9eEU9eTGEGzEGu/Zt17dduxZ4Oby822fv832+79O3TyqRKJUlEAdnbiOBV1Z5oZSeeoDUFVEup1kWdFwvroqKimSYB8aAGUAM5s+KMZhdvN6s/hh93/XYWsMsBk+lEnFJAQnrh/BJ2vwnBlwD3tXM+WWa/KINjM58BJS11GTM3YHm7MJ1PnupDDwDLjRPRed7+3Tels7ilHZA00GBloNi9nv+zhUunoPvsMZXV5uCthtUfyruMOnpsk8sS7wniXYwv63o5gwAIuBRkoBJnASP95w256HX39VlpyZLbaxfkYg0nkvYYW3BlQZLnonjLIw0YFSeDZe2x+jNXWsft9F5cnZHtLlFXC275OzmNf6Q1eUtnUZ1TdcIZGj29Bfip1Z27f1q/REnMrcqz85cy7u8zrTIXNwh+ZxP5vPm88p8u2yM0GeD9wW0rXCJtMQqTEfE4fHthoVQgS35CZ2HtVXyhqj4OmDwWkSe+f2mPt6GcKDP6UBjH7dyuIEzm8DVhCtCv9GZW1u6wgg8uxVFYQals0VRqvQGTRGTuFFzixqZ+BCQhJcfrvPhkziPjlH9oMfSm7OfA9T78OHVn0XHITvvkTG++DVAtg8fXnYnOpLenCf+HPoVoNeHD6+3Ax1OaMYTeOH+XoBQHz7CpYGaKqTtRqniuthxZHfDBCPymmh+ruFLBRZ8rkEKZHP1/SPw9f0/Wa/U1g4ozc/I4/lgcEQYkY9wRsWmr7Y2DTe9nrbDT2FEPkK5Fx3lrnXhN65liLdbv4ZnTDL/ZiZ/Tr7Y0xvR3EBVf6d2ubqKPMk7GtfcFQdvczl/Pl+N8njQY2JJBHQqkSwrkmAVubZU8+m/KP0JjM9KaF1IJa2C0AoggD5h0JZ9Sa1VCL1BaYTQWoUwaCJEMkalnsUSxarSXUSSuiZzY3yZV2OPOh9yssKLwkkZ3ePXlFilU1wXOJktXMDclCyWZE5RelZkVOaUObHAqaKAVI6maRDfODg4qNuoL6YaC/1PD9jePWJukV4UBQ6A/+s0wRo=');
        Z55['mapStrings']['push']('1,The Way of The Dragon!,Stashington,296965,eNrjYmdPzy1gYGEQC8lIVQhPrFTIT1MAMV2KEtPz8xQZuINLEoszMvPSS/LzHEwYwMBBhQEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUIScXO2tBMQMbTKNDvgOEwciABhxEsFvFwMQQsbGYwf7lTBCYZX/ZGAzsHzDgAFwBOYklaflFuQpGXKwMbDAb6WCzIMJmBY3k/IJKTZADDtDPARIYDkB2R0kAvdwhj8sdSM5xoJ9z1Ag4B9lV8Q6oejFdFXQAxXVIrlrcl0q0qxgZCABMiz2xJHFjcMwOCUcjcocxcqosNADLHkg6MIjdLoHhduQ0MyS8II/LC1CKgYWLnTO3uCAPlgUOeOKwhJGRgZWBNbggsTyPi/MAaaphQZWJTzUPWDUshDkdiNIkjKwJSnEyMgIRAwDDduz4');
        Z55['mapStrings']['push']('1,The Web,TamHill,489003,eNrtmF9IFEEcx2fU87qLiEhBKtD+UFZmeFqclO4vvFCjP3qaVynlaXsleOehkVhGF0XWg0pBkRHSi0FBUj1JPrgV9ChGD5EvaSBRD+JDEFJgo7e3587OuDv3Vjgc7P1uP/udud3vfHdnnXb7uWAY2ZC9+ryc5ZMbyBd/sKypuRkK0EKDXKRr0nRgoUkzan3j0mTpYNrlWA3ZKuh02m3hNmRHdMP0D3AVotstBvLd6BTC0ve++fZQ+pi/0KQJxGnOimb/hUBLazArz2mLdw0t0Q7QakPXZxGv65fDY4yhNig8fmDwLYP3R3j8o4EhBl/PPRW9D54y+NPc8d/s6WfwtdzxdF6/y+BPcvVbO7oYfA1X/3Z7LYOv5uor8mEGX8nVHw9UMPijXP3xyDEGX87nH1cxeA+ff+1l8MVcnjUzEOxDS00NlMjUKNRNjeOKul+pjui7lqNWjE1sBed0f/ndmI6S0JWdd0hdSfGNND98K33VrznCF3ifkfoIPTXq9XxSCD7Jrs2Ez+9+TupSSv9MRM8ne4a24TXXCJ/bJ5O6hNKvo8aTUjydPHl/PeHLXu0h9X6KP0XxtrqvodSRacK/eDLPuyj+BDWe1P57crjnD+FHO4tIvYnifRS/IiX1R2byQcKPlUjGCwY+pOO1loSmPD3k+Bo1KjaofIDSR2+87l1tMuFdbhLmSq87ut/UKms0q+RnZTe2hDu2Mx3jABPHAOUYMHEMUI4BE8cA5RgwcQxQjgETxwDlGDBxDFCOARPHAOUYMHEMUI4BEwdAwg7IMDhgkRG0e5qMEosOLBgdWDA6sGB0YMHowILRgQWjAwtGBxaMDiwYHZhnHGlG5awZR6GNI5ogWDBBsGCCYMEEwYIJggUTBAsmCBZMECyYIFwjjBiMkMkzwlJ+WA6S/zxIeI+rifkHlvPkH88Tnh+MN5atJn5gPKgaXzhAWB3eRc4qUn1Qkj6Lr6rci7tWCmP7eQtA7fXJe1/GoW+eLtL1/IIamfEjovyEdsYt8ZIZX2BtAQs51JbNY0jTv2bSaiP/c+4DSRzr/Ozc7CLeFXOsxfFY5K0uwDEyaRqgNBn2rYy/1spDdqfdEWwLh7QzfSDCFsQY2dDaqrC/PURNEgcU6q8m+9h1jGM1CcWSxEa+RFypXH8p2UrZpkrxf2dJcLdVwbiuNxofyo6ldPcK6sbPgyX5osTk1Y0DY/JB6C/uKiFW');
        Z55['arrowMapStrings']['push']('1,Just Fight,HeyListen,84917,eNrjYmdPzy1gYGHg8iotLlFwy0zPKGHg9Eit9MksLknNczBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQysDOiAC8Y4kOcA0eIC1SqAppIJRDA6ZDeQovwAacodygIgyiNRlcG0oZtOmnKY6Q5JB0gxnUjl8IBMgHoVFmdQev9Pxd8hLroSEJVw5Q6JkBBykIDyPfGa7pCPZjoDVuX2L2eCwCz7y8ZgYP+AAQfgdklNLMlQCE/MySnmYsWSQljhVqZDw8EParUCmko2htjKWIYDpCmHewyWMuwYUMIDyWM1i2qA/n+AGsouOExnYlhxewXQMSQpJz7YOANyEkvS8otysQcam0MsNFqzEyB00AGU+Np/YzKjvOEMPaDFfmePMBwgoNweVbmDC1R53gMU72BJDWDTSVMOD+O4BtQowWE6acr3w8oqgmHM7JmcysDBxc6ZW1yQB3dUUgNWxYzALJLCwBQSxMV5gJBSIAQp9eHihBVnDqkLcJpqxMDsFGQIVFtIWK0GSK0R0AmEzAVCkLk+QHMPFBJWCzLXB2SuHjRszRlwquViYPIFOZeQUqBzRYBKjTgZGYGIAQAKHrKo');
        Z55['arrowMapStrings']['push']('1,Go for the Gold,CatAndTie,-1,eNrjYmdPzy1gYGXgd89XSMsvUijJSFVwz89JYeB0TixxzEsJyUx1MGEAAwc9BhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFrFzsrAXFDOwM6IAJXcChEpVGUpkmZ8LACOMeyHeAqEs6AKEjMdR3aLgyMNq%2FnAkCs%2BwvG4OB%2FQMGHIArICexBBgAuQqmXKxYnIqwOoUBxUoHFQyrDx7IYmDYDwsVEqw2Qbb6QNEBqIEHYKECFXEou4DLarBLHUhUT2woMTIQBIwOnIq%2FQ1x0JRxKFkDs9IRIOOq1NCArhPsO4XtD%2FAHvAIvz0ge4fLNx%2FQYGBnLi3Air1cxwx7pAnQCjRbDHuUMmVH34AULqp04JBKojUT05acqYgYOLnTO3uCDPIRUacNkN2OMOGNSsDKzBBYnleVycDvEO%2BFUDISsDD1i1gkZyfkGlJlBT0AEirBBG1oTQa8lAhIVSWPTCjThAyAiw9Yq4jUCYRMgjYMdoEDQJYSCh4AQ7TZ9YAxHmEopUsEPNSDQXSnEyM3I1MrMnVxUrphUl5qYWh%2BS7pJbk5yWWpDJXMFfKJycWlJQWpQYU5acXpRYX8%2BeX56UWebpIQsV9MnMzS%2FjLUouKM%2FPzeIsSUzJLi1kYgPD%2F%2F%2F%2FyLAys9UAa5HoWdgSTGWgnm6QzxACFqPy8VAYGAPSODRY%3D');
        Z55['arrowMapStrings']['push']('1,Commando,CatAndTie,990796,eNrjYmdPzy1gYGXgcM7PzU3MS8ln4HROLHHMSwnJTHUwYQADBz0GFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIV8XOysBcUM7AzogBFdwKESlYYDJgZpW2EGRvuXM0Fglv1lYzCwf8CAA3AH5CSWpOUX5SoYmnCxMrAfsISIH0g6ALX7gCfULhgtAvXGBwxXRmwsBuqEyRO0mwtutxGy1Q50sFoQYbWCRnJ%2BQaUmyAUOGJ53GCAXONDBBRIYLkByCGY6cCg6MJAOcaCDQ%2BRxOQRvGjlAM%2FcQm0YODEzUOKQ%2BQAsKjHIq3gHFQUjllNnGbAaG%2FR%2BIcwgjAwGAabMnlmLGHJygKHG1Kd1cjYh7c%2BTcAHW8w%2BB2vASG47Ekm0HuB3lcfkDyCm4DHYKgWRLWKFDBUJmy0RToBaJraqRkzMDBxc6ZW1yQ5xAJLYwycfgP6B5WBtbggsTyPC5Oh3wH%2FKqBkJWBB6wa5knOA4Q0ga0QRtaE0EvIeWALpbDoxTAC5lPsRijiNgLDIzhNAntEg6BJcAMdCBkIdpo%2BsQYizCXkZbBDzUg0F0pxMjJyggwAAESObig%3D');
        Z55['arrowMapStrings']['push']('1,Spike Island,CatAndTie,992539,eNrjYmdPzy1gYGXgCS7IzE5V8CzOScxLYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFbFzsrAXFDOwM6IARXcAh3wFCi2ConLdxJQOj%2FcuZIDDL%2FrIxGNg%2FYMABuAJyEkvS8otyFQy5WLFYzQRjHID6yiETSkdCffNT8XeIi64EMGBQXHogugFFnQOmyREbixkY9sNChQSnGmF3qkOOAnanBjhgdSpcPcypUHVYnOp39ggpThVEOFVBIzm%2FoFITu4sPkOjiAzRzsQSGi%2FE5nNEhHmpxKsREXGkf6OaNGVZAB5CRILHHMuMBEqxOJ8lqzFhj4OBi58wtLshzsISm6ngHrFoZGRmBccQaXJBYnsfF6RB0gAjVPGDVsGDmPECUFcLImhB6ibJQCotehBHQIgW%2FEYq4jYCb5ECUSRoETUIYmElMyOgTayDCy0SZa0aiuVCKk5ERiBgYAGiD7s4%3D');
        Z55['arrowMapStrings']['push']('1,Towers - No Bounce,CatAndTie,1040432,eNrjYmdPzy1gYGUQCskvTy0qVtBV8MtXcMovzUtOZeB0TixxzEsJyUx1MGEAAxgNA%2Fbv0sDA%2FgOU31L10H2dSDWM76ABVcjJxc5aUMzAzoAOGNEFHCpRaThgYjAWdmBgtH85EwRm2V82BgP7Bww4AFdATmJJWn5RroIZFys2qx0yoVbB6EgorYJh9cYZjgwM%2B2G%2BJMFqQ%2FxWH4ikttWCCKsVNJLzCyo1sbvgAM1cIIHhAqIcQv1YkMflEOLc40lt96gRcA9eZznQzFm6xDkLr%2BtgjAOWqAUFhusYGTY6OANdRUYuNsJvtUO8A5WtRmQlI6jnGTi42DlziwvyYLGBCzAyMgILVdbggsTyPC5OeG5POoBHNQ9YNSyY4Zoc8GoSRtYE13uAKL1SWPRiGIHfh4q4jcAwCb%2FvNQiaBDcQntj88DlNn1gDMcx1CGvAY64ZieZCKU5GRiBiYAAA5d0SXw%3D%3D');
        Z55['arrowMapStrings']['push']('1,Blockhead,CatAndTie,1042197,eNrjYmdPzy1gYGXgdMrJT87OSE1MYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFPFzsrAXFDOwM6IARXcCh3gGFhgMmhukbpzIw2r%2BcCQKz7C8bg4H9AwYcgDsgJ7EkLb8oV8HQkIsVYbeDJU67PbF7E2j3lxteQO8RbTcXwm5kqxHedsiDMA4kHYBYaceAQiNZ%2FeyMG3lWG%2BG32iGTgZDVadHypFgtiLBaQSM5v6BSE7sLDtDM8xIYLiDKIdQPCnlcDsHrHoeSBShJFI97Dq6xIsU9agTcgz%2BYaOYsXeKchd918dASI5Kg67qqtUhxnQlJrsMfszRzpDU5jsTi1gMtAWjFokNJAGqx6ILhVrByYt3KyEAQMNr%2FVPwd4qIr4VB0AMVuR72WBmSFcNciijtjlEI%2BRwFXIa%2BCo5BnZHCzFyWzpGXg4GLnzC0uyIOX65k4PAh0DysDa3BBYnkeF%2BcBQqqBkJWBB6waFmVwTbCkhF2TMLImuF4HQnrBzpPCohdhBLQwOGCJzwhF3EYgPELIJLBHNAiahDAQlsnwGqhPrIEILxMyF%2BxlMxLNhVKczIxcjczsyVXFzBX8%2BeV5qUWeLvLJiQUlpUWpAUX56UWpxcWKaUWJuanFIfkuqSX5eYklqcyV%2FGWpRcWZ%2BXmSUKU%2BmbmZJbxFiSmZpcUsDKz1%2F%2F%2F%2FByVcFhAEsp%2FDRVgdpCCuZmECWs0m6QzRrxCVn5fKwAAArsyofw%3D%3D');
        Z55['arrowMapStrings']['push']('1,Nothing interesting,MEGA-SKILL,1216849,eNrjYmdPzy1gYGUQ9ssvycjMS1fIzCtJLUotLgGyGbh8Xd0ddYO9PX18HEwYwMBBjwEF2L9LAwP7D1B%2BS9VD93Ui1TC%2BgwZUISMXO2tBMQM7TKODHZTBxYAGHPotILQKmgQjg45dAAOjQ8wBiDzMSSEM2NWzMZj5JjMwHCBevSlIPdwdkVC66ABe9Q6uDRB5LdQggtH7j4VLeD13aQeGMlj9AQLqHbjac258WpgIVw%2B1%2F4AnVN4T1f32Hw4GWegWp8LdQ0D9fjT1B6D%2BPJCCGjNw9RfQzCeg3h5N%2FX5Y0rhsDAb2DxhwAK6AnMSStPyiXAUjBg4uds7c4oK8A6k4lUMSBSMDMKDYgwsSy%2FMUDLk4DyQQVs8CU28EVB9%2BgKB6Zph6Y6B67waC6plg6k24OB0IqQdCuHpToHpC7gFCuHvMgOoJ%2BRcIWYBBy%2BmQSlghKwMDJzMjVyMze3JVMW9RYkpmaTFzhWRyYkFJaVGqT2ZuZgl%2FWWpRcWZ%2BHnMlf355XmqRp4tiWlFibmpxSL5Lakl%2BXmJJqjxUfUBRfjqwKClmdeCBWMHCwOogBGGy1v%2F%2F%2Fx%2FkIBYgLYXgASHQBWySzhAjFKLy81IZGACrY6kl');
        Z55['arrowMapStrings']['push']('1,Dungeon Master,CatAndTie,1366182,eNrjYmdPzy1gYGXgcynNS0%2FNz1PwTSwuSS1i4HROLHHMSwnJTHUwYQADBxUGFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIUsXOysBcUM7AzogAVdwKHeAYWGAyaG2JgYBkYM9ZVQOhPqhJ%2BKv0NcdCWA6qMiI7GoDzqAog%2FJ%2FNy8JIR6h%2BoGVPdkYqh3dXZmYLR%2FORMEZtlfNgYD%2BwcMOABXQE5iSVp%2BUa6CMRcrlqBgd4hEc6ob1AkKGFZ7uLkxMB4gUT2MewDqFQc7BrzqHfIhXj%2BQBA0ybwLuIVG9QyokrByKClDVR%2BIwn0T15ESNCY6oQfeaJzToRDCsnjF1KlAdCeqnTMX0goMLfvUHSFSPEfWWBNwDD2o090ficA%2BJ6vfDCgwSosYQa9SwwYMA5jVT7GUVMP2j5AK4ehOc6mdebQGKlwSgqrfCbz6GekscQQE1%2FwCJ5h%2FAZT4O99uTEdRGDFxc7Jy5xQV58NCKxK6HERierAyswQWJ5XlcnA6FBpBklupAhOoDhFQDISsDD1i1gkZyfkGlJlATzNupD4jX5EBIE9hdwsia4HrhWSdHAY%2BF8BCAhtMBS2LC6wAh1Vg9A0sAnkRZQUg1phWcjIycIEMAMPjdkg%3D%3D');
        Z55['arrowMapStrings']['push']('1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g%2FgALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn%2Beee%2B80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm%2BfNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I%2FmnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP%2Fe4snzzC4XiTix%2FPhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn%2FoP9B0JUVs5vOWab6ailjy%2BAdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN%2FoEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra%2FEi%2FjXTTdPDinT8jmp7Uz4CqKaoT%2BC5a%2FOtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k%2FWdmkdah2PJ%2F8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ%2BYImloqsfsPEHkiNQ%3D%3D');
        Z55['arrowMapStrings']['push']('1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX%2BCweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90%2BYLsdKLF7cmMM0A5YrBK0WwBut1OQQnB%2BWgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB%2FuAF9EAJRAtMMCgoEDw35L7PkK6FKQ%2FZjutcCpHiVzwNUbkGi%2BHonmw9wjAQ2Xl4q%2FQ1x0JYCZFb%2F7oer3E6teBEM9fveIYLgHrN7%2BJfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg%2BVB1%2BNQzwtRbcDIyAhEDAwC1XNIF');
        Z55['arrowMapStrings']['push']('1,Spike Island,CatAndTie,992539,eNrjYmdPzy1gYGXgCS7IzE5V8CzOScxLYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFbFzsrAXFDOwM6IARXcAh3wFCi2ConLdxJQOj%2FcuZIDDL%2FrIxGNg%2FYMABuAJyEkvS8otyFQy5WLFYzQRjHID6yiETSkdCffNT8XeIi64EMGBQXHogugFFnQOmyREbixkY9sNChQSnGmF3qkOOAnanBjhgdSpcPcypUHVYnOp39ggpThVEOFVBIzm%2FoFITu4sPkOjiAzRzsQSGi%2FE5nNEhHmpxKsREXGkf6OaNGVZAB5CRILHHMuMBEqxOJ8lqzFhj4OBi58wtLshzsISm6ngHrFoZGRmBccQaXJBYnsfF6RB0gAjVPGDVsGDmPECUFcLImhB6ibJQCotehBHQIgW%2FEYq4jYCb5ECUSRoETUIYmElMyOgTayDCy0SZa0aiuVCKk5ERiBgYAGiD7s4%3D');
        Z55['arrowMapStrings']['push']('1,Gang Grounds 2.0,billioninjoe,1308302,eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D');
        Z55['arrowMapStrings']['push']('1,Quadular Grounds,billioninjoe,1324297,eNqllr9v00AUx%2B9cjGsDUoU6MHrokCEiahMhJnytiqJWDMBQYLSbNNg4drDJQod6qMTIDH9Epap%2FQO8fYOIfKBNiQZ0QG5yD7%2Bw7%2B2q7vOXpok%2Fefd%2BPe4mhaZPpDKhg5dncHs19OzKHUTgPRjG47bi%2B74aBG3jhGA3AwtAa4Mz6ebAw6zI7H7%2F%2FNjxZPaRn1MnAm4amzmKgAdFKn6CPDznPTAG9Xg9AxoWI5wVphO90OgXex3V8t9sFENO4bva91cxHWOQfoz6AqCWPHdwufkve%2BvEptc%2FW1%2F7CrAsgMcWZGGpFS26VWvIqqS4Z5Euc80DGcy1k%2FA7vxRaKnzNeoge35EvxB7wXRxBfk8cCJ6sPuiaPGvK4Jd98pO4O7WBibhU2h1k5Yqr42tkCuRTIG%2BDlaUwk0%2Bmnr2EvkY2M53mF19KQp%2FExHd2G8Zvy5zS%2F2hKqT337XVysGjpCNFZm%2BG122yN%2BJxRu%2FeO%2ByY%2BM30ykvEd463em8oL3oDQX4rIWA0K6AzbvHyfcW6HJACNN9CCMpuaDyhlZwtvCpqdju%2FzPn%2F96cW%2F3%2B%2FYHov7LGbkE1fCWwJeSkK2JbAab9%2FDOE3se7L8eR%2BZz2%2FUl2e0Iatf420vZ1fD%2Fmx3rfW12Kyy7LfJXYX8cgWVD06fxLGDa9hLJ3EBynRKtG7r4MKvQJYJuGDr9xcQjIEUVgvYJmgm4CiVwNMhRqQCYlkZx1nMBV6FEq7ORpyUVANPHpjhEK6rTClO9ijPQIdTTw1%2F6LfRC');
        Z55['arrowMapStrings']['push']('1,Double Katana,katanaioninja,1353828,eNrjYmdPzy1gYGXgdckvTcpJVfBOLEnMS2TgzQbTmfl5mXlZiQ4mDGDgoMKAAuzfpYGB%2FQcov6Xqofs6kWoY30EDqpCDi521oJiBnQEdMKILOFRC6aIDqBJMDDExMQyM9i9ngsAs%2B8vGYGD%2FgAEH4ArISSxJyy%2FKVTDmYsViNQ%2BG1Z7YfQl0ZHFxMRanujXgUg92KoZ6Syitx4DuNbD5MHm4ej387jlAonoHIzT1Kgx43X%2BARPUO4Q5g7gETtPCUgdD7P6kd3nP7%2BTqgf2tqaoDqAyDqHVyg6mD6FNDUszHk5%2BcD1QdB1VugqeeApr7bb%2B7FLhRdCQ%2FPeKh7PLHHr%2F23cAmv5y7tsKTlEAZVD%2FW3gyM0fhkw3N%2FS0kJeUjTBmhRZYUHngCPo7HEE3QEcQWePI%2BgO4Ai6%2FTiCzgFH0O3HEXQOOILOnsigc%2BBU%2FB3ioiuBCBpBRNApaCTnF1RqYg1BpgMpCyAmRKJlBhE0lWwM%2FzOzgeIkqM8CqocXcRSXO0wHciCx5JAJtTLoAIpTkMoFUOQxOJCo%2FoAKsU5FBK4xvsCFl2QO%2BWjJIgijkAZFL1mBBc4ZByrR5JkdmiBWHMhEK0RVsDmSEV5%2FEK0%2BkzT15AQu%2FpTrUDABtZiF5R0RHNFLqnoV0iPDFFRjc%2BYWF%2BQ5ZEGjPKwBqx5GRkZg64E1uCCxPI%2BL8wBRqnnAqmGBwulQQIamA0RpEkbWhNALi%2BN4ByL85ECUanQ%2FQXPKAT0GYoKNKNUoVnAyMgIRAwMALJw18w%3D%3D');
        Z55['arrowMapStrings']['push']('2,Stone Pillars,Team Arrows Ram,54144,ILDmJAhZIawhjrAIwBUAmBxAnAVwC0BlSARQEMB1ADwGcBNADQCkAvEHAVQMoDEAXAJIBRXgE8AxgFscAZgljIRepQAMIUsAAKANSw6AFgCMSkCQDtmANwyyAsqE5SBIZgYnhgqgCwxE4OxBBBGR6EE5IABtfRGBSXhxYpOTkrQB6WAMAahQAJWEAGVzPYF5gck1Y4UgCZNIsSsQAEWAiRoQCtIBWQQAzfk5cgGFVMKh6+FjoSnaIOzhkgHdhScQhtKyiAAkAdh1hUn4sBAjaYNj41ZDgCVok+dqkqwzsvMLiiDKjIaTqx9jFlsCkkWjMkp0ev1BiMxsAhqQtgAmRYpVFo4DHCBNHQ6PBGZz8HikRyIgzufRpHZpak06ko4C9LK02k4SnMmmLSAAS3oUnOUBAKB0+K6xkoOlggl4ADkAPZMKKM9nUgAcIC2aWeyqVyrVnF4ZH8wGlOkoXTwKhQkQIQ0gaHIWF4iwIjE1yrSUDZytkbuVwGEKGlaHagWxuPxAiJJLJEgpVOV9J17NZ8fZnKokVlCGEguFUlFRnFkpl8sYiqZuvVvvZSeZat65i6WRCmhNZotlCtNrtDqdLurzM9qeZPq17OATVA3gA8gLgOdGIFIEK8QSiajqpR0Uk0jEkus1SC0mg7KxT+f2Nur9eb7ft5poKRqnEc4aIDmwBONCBFzAVxHCTBO9t13VE0gANgIKQoJgqQACtjwvC9gJQ1C0KSB8X0fD9NDKYBOFRQIunQ5IyifZAoB0aVFiYDA8EBYFYhaeg7hIpByLiBAdDQWNeFkIxYEgMR6UQRYsEYtiTmwhBeE4WRIAMDBER2YACExRB5iIETJNKLCQiomjGDo+oPmafDWJ0mAOPabjeP4koQAAXiAA');
        Z55['arrowMapStrings']['push']('2,Partition Demolition,Team Arrows Ram,177474,ILDuJAhZIawhiQEVgFU0HEBiBPAJpgDYAMAhgOoCcArgJICiASkQEbUDOZAGkwA6sATABZgAEQCMLAJoUSAc2TcAUrlYBmfAC862ZQAtWqCPCQNxUorIVLVG7boNGEAaQnJ55iAGEQ4YPII5t6okMgAEgCOxgjQFDFIiSjYpojeAPQA1ADK4QDsAGoMyAAumAhokABsqQjIKYnQ8hyJDJAAWkkACumw+plSDAAyTIEg2MCsJK0dSRFDjcDSLUhi6QCsdABmJWhM3iTSPshiK4jQW75mkADGSceni8szd-cwyHT4-rEBmGNviFA2CoAIBlU6iWQYUWNzOQWAolB9wm8Va6DmdAWq2A3C8SKQYQaBOAE3xCCBAA8yUgQggJAVWABbdaGCgFWC6AByAHtpNxIEQtpl0iLRSKABwgcLpABuYrFQvloslkQpHH+P2A9KZLPY7K5vP5guFSvSkuA0rlpsVppVao1PhA2uZrP12B5fIFNqV5stpvS3vldvViTEToZLr1HPdhq9Jp9IDWFMZ7RTaekgbFkr4kRKTDRWojurZ0Y9RszysT6WTqdrjLIFYlwD4VTziVJzuLbrLcf9vtl-sbZuAAEsxOtoMA8cByoWda7S7HjX2pQPrfGg8B1tgyJPEOFw-OowbPcvbaurUqh5Lt7vEnRD5GSyfyxusxfB2-K7e9wgrtgtBAdo0HsIgbgAOy6YBYRmMNqRAdJEVDYA6AdKsABUAFktGw3DAPggjCKI-FQmAZA2jI4JEC8QI4NCQIDwCEBuEw4BvFgAxpEEEpwJuRkqAkJkEmuLZhKRRC3nSKo6zrAArdIsJwpTsOI1S1LU0jyOgciUBJEBZOAfBSUQTDID4dT20o39IAKTlQD5fAaFAcIGG+CAwzIMT1LCCiEgKdCbhwdRWFgSAKVYpBQEwWoLJASpKIQbA0HUSB9HwQR1kM4yEFM8zYsSqzYls+zuEc0AxBixNgAAeS8tSfO0hB-MC7BgvgTLEnKyqLPinSICSlK0sEPIljhCBTNE-L+sKiAbLshyaGQTAsUQMNuGmKb3l8pqAqC1gHQAXiAA');
        Z55['arrowMapStrings']['push']('2,Cliffside,TheRedKirby,177491,ILDuJAhZIawhiQEVgClkCYAeAHAWgLb4BeAhgOoBKANiAC4CqZA4gGoDK+1AMmQBpoAlgFNUEAPYJowAKLAAwgEYqE-GzQ18s+rgDGhNAFZEAJzYAVYOJABJRQHNgACRABNEOAUhG0lC-AAERskUIQAWUh+cCRkWW8w4AAOYBNQ0ED4JGgKEIhw1LCMrMQcvIRg4BYiGuIpRMi9GMRQZ1lmpA7YlhK-NwBnUNlIbALE0Og9KzDK8cTh6NC4hLCkyHwizIngAHly4AK02K3s4FzEyuria-x6sOGm9LauhBeEZB65oZGxlpYebZTC77L5yKJOWKyMjjNYbdInUq7faHMLIBF+c5hSAffgQvqDJCRNhvD4AMTCAHoANQcZwAdjYsmQ9BYCAADKDQoFgGwACzfFh4pAABSRoRRS1JvQg3L24sKkuliEYkH6JIU+25aDCBUwnLCADl9Z1SQAzbbIewzYpcsVIYZwzromV2xAO8bk-Aib5CN6gM3bNy+JCBClGWymphUBRsjwgS61Gp3cWQR6dZ6JN4QD5KmDAAbfUbGvNArFo-bQMj8+0KFi-YtfRgKcJWxBo3PQAAmAGYU46G8ByUbvqYhRBQBqB6DsaTWadcQ3kKToUgFNTaQymSyEPAjvroKY2a3Qiqksfs7Jc3NItqp4PgIRAmO5ApnHo73eNc5MC9uYwCW6kAAG4giAX4-iGwD-t8e6hOBv5QQBCDxAoWbxsKFIflOkCRP2ryXramKIJEHB+gRxa4XeKo0NWbb-NsbDvvakAABb7EBFKwCxVIqLIPBUHiw4Dku3qnKoFz+rmsr7PIsHjs6UCush6wesAABG9YQPIV7IJOkEGs++qzA2CwkvEMIqfCHZKfkCrHNZRHZDiz7QAWzGLN05Kruu9KMsyc4gBykA3NcK5YsA-CaSAkRFjq4zDLgDaTNMxGQL6SwZmEJAUmhWHjFQZzIpApGKraHAyZZxrQOVU5DvckCjhlYV+MgcYDtixl+FWKaYIZcQBQ2zgdEobBqYQRgsWpFBsLAtikgaEhuPwkA0KaVIUhtm0bSkLgUhxW2bWtB2bSkACuKhCX4wAjWNE1TTNc0LUtK1HcdFI7c4e1vRSr3HWdF1wSAN3jZN02zfNi3Lat61vR9X1vb9B3-VQl0utdo0g-d4NPVDiNbTtoaJqFeMncAvIAHa4MmWlAxjd1g49kMvTDf0gJ9+3HST22eOE3J5F5wP0w9EPPdD31wxzB1c+9PN84gc6C6Dws48z4ts-DnMs0jsvWIgrjo7dSvY0zYuwyAPAUoZwDS8jqN2LThtY4zos2+rktba750oyA8gQLeitOyLuNa-jbvfZ7ANyAgADSDuYwzQeq2bXyuxTVOhACBvx8rJuu7t7uHSHpNgLzusRHHQvGy7Rfc-n4c1zLJdywgw4BwnKum6zdcIw3O2gKXeQ7BXRvO8Havd5rasAJ6yHQoSilnlej0nXfs-XasWN2U9Idmw+Bx3edrz3G9bzvIAFYvI+J532sT1LvfAOTFBGKYPsIBwe-t7nD93x7D+wDQIwolfYgGmG3HO1dx5H0nmbQgWgKBvwgMGcBVcx7J2gffNWuBYC4FjlHCAbBP4QLQV3C2VsI7eyQAgy++9v5QI1pg5O-dm4QH4EQ1BK9b4YL-uPZhZcIBxhQcvG+odgBkLCBQu2wA4RCOvofBhPCzZe2HCA4AK5ZEHx-twwuatlGIJAGpdhwi85zFTpTamIAmIaLocncRoRJGhE7EYuRWiFE6KUZHVRolrGQPQW4jaDj8FsxAKSEg59+jcHwGyUALAACcZVQKJGFFScYySQpJgpGyEg4Rsm5PCLlPKhSik02sMMUpMh3zYiqJYxQIBbxSFJKgVM4AoSYBoP0DSkAlC0VePRYsoYrbAFDLgdJhAyDCliTkqZeTimzLmVdMpcRoCoG5MAQYqzhxSgYCQPQLBSTdjUkISAbJWA0FOvgXKMSnz9MthcCkIyibjMmXkmZ8y3lFJkL7JZusEj8kCOASyzg2DP1Om4CgSgtBzGQNHOkAA2G5gyLZZgmdM1F7z0VYRkLYZZiy8wyAimMQw5MlyZ0RMgAp88UlJKpKM24mSXlTIpRi5lQwUCLLKbrJkwAP44XvDAR4pIDA0HJmQZwBU1IckJJAW8xYKQ9KQBSWFRMiAACsKQWFRbkll2rjRNPKaUmA4AEGpmqdImAUgWDgCYqEkAnY6ZG3GNyGqxZkmpJpcqiQ9LNX5J1b6uYXz2VYpcKgUSKr1JRQOJACggy7zkjiKUNgBpQBLU7KdZAzhrmIG5GwCxeUqnLIQJYXZ+y1KDCpSaZqxTgz80YN2VinZMB0mkTtVK0b5lxtUTARNyb+CprRPK+MPJc2Yr1YgIteyDn9EgKAAdYBlxvJVPwkJtb62YBMBpFMba5leQ5VAbtKa00sHNJBHN8z81LvHSWoUVomVwR8pufysgWD8CUN2AShTZCBECCxAdcQrwgH2kZO88g0ARijDGNwyB8Cml7QND8yBwg7GcGOaA0EZi1zmEAA');
        Z55['arrowMapStrings']['push']('2,Arrow Grounds 2.0,Ranker_717,173728,ILDuJAhZIawhiQEVgCVkA0BSBPARgMwDGA5modgG4AmA6gKyzG7C4AyAViAMIA22ABb4AtgBc+xPgA5CAWQAqxBAFEkMEAAcAygE1GAJwBaOAGYA5AF4rCIIWWA9NARw0JSwANIhwPVBABVRxAACRQYD2hgOUcPHhAAZ2AwmGQAcXgkaABLf3V8gsL1AMgg9WQAETyimtqEADFgADV8tQAGOs66yGR66ohocy7hopKjfMr+kengRrop4HaZ5ah09nUchZW6krKkZD9tmcaW9TVMo+GelQXB6eQQzA8ZkrTnxEqLzpVIAEYAFmWjTQAHszsAGBMVF8BsAaAAFZbXW7AIZnSDYCYhBTgF6QNTlKrqCrAbQLH5tMHHdBUxBqSHqUDQjZw7wzHoZFm5S4jV7vBCfEY-AFA9CtYAdK5wgCmSOQKgAhiyAPLkjFYnHLEoE-ZErKktVtaSi0HghlIJkwqCsuU3FlopAxPYfEJpFZ8wlW4AkxrogAe-OGwPFkotzP1NDZ0x6fXtPJGsB48OV8cQJU0tIFAElYJnU4VGgqlUgVDxsFH84VlBAKk0mgBXUT1MRGeakAIAJkEgmIaSaAHoAOz9kejke40wAajHY4AnEOZ6PQJBJ6YAHaAkveuuNkTN1vIdtdnt9heL-sT6fn+fD8+gCoKAJNHUILPbhtNlttzvd3sD2+Lpe579jewH3o+z7qDEtYfnuX6Hj+J7-mBIBTsBoF3g+T4vhAqAwbu+7fsef5noBqFXouGGASu66bmm74EfBR6-qeAEzkB16kexNEbuougMZ+B7MUhXFjhxlGiUuPF0Qgyj4YJREschd7kehknjtJ6gePJcFCYhJFsWJqmcYZUmrrxSDwDphEIcRrEocAaEmWBPAhII-zVogYLWUx+n2SpjkUTOVHcXwrbOhASQ+XpdnKWRgVqaZGlhXQEU+AJumKSJSUXsZEk5aArnuZ5CAdNFWUGQ5Tn5S5bkeeogLlbZSnqblCXOXekApWlwDGk1wmVQF1XBa1y7mTJ1oZTZA3+fFw1zqNXXhVkaj9X5cXsXlI0FUV9WIJAb5rbFo1bQtBVLalWTQTuCnNdlVVBWdtXFVkeE3Zld2DXNj2jiFYkXWlpRTb5x0Fadv2jbtJVQPxR0tWD7U1Z13VZHJ73TetJ2I9tz17QgkDaejIPww9iVgVhkH7VZRMxSTQ0-SOf1SaAxApMAeSQN5NMVbNm3Y09Kn9vCljGvtUXc59vNGfzENg0LIuMiAmAxDwKg0AQhANkYPCQHIoBpLOLKmKGqjANgWamGIARoDwbS6PCk6FFQ-YFP2bSWHIHte3rla+-GahRPjIAeG8CBgoc6xgN6HhovUmSCAkuiYA2uhdpIsCQJoExxyyPDaCEg7PsgYhpBU-aBggZeaCIRg13XCoHFshQxF6ftt7C0QQASqBRAS8yOGkfqCPQDCcAqfa4PrXrQEW4Lm5b1u2-bjsFM7+TQJi7db-76XhL3wcwOMwBZvgaT1L8ojmCCJjrA36JH-swCwIIk6-GgKjsGgpD9hNiD9gAbLXIBdd4Ct0KCSTe28oHs29B3busDZiWBAOYOQWZ6jQGIEkR0wAV7DB-gUHg-ZRZIDLgoT25CvbQKoTUHu7Mfh0PCASeoSDUTaDQSSTBUEcHTHwfkQhxDECkIoRQ6hoiJgaHlNAeU4RfTMJAIIEIxARCzgviIQ8+Am7syzFmCuRQhHe0oUUeEs5hHezEeYuBUj6G0OAPxYAysYB0FAKQYg8RcBrGJMAfuwwHZOxdvkN2BjyG4gsWI7u1j6GLBgOASAxBwD1GINkSAoAswVHWLoLBiA5CQAfl0Xh6h+H5H0aY0JFjaGSIYTAt8iD5GKOUaow8CgfhUAWA8Q2+o84FyLiXMuuiQDsDakgYxpjyGlLEVEKYqBvCQCiuAHuagVAeAUKkWYHgWixJAP3Hgg9h6MDHhPdI09gCzy3PPK2Ns7a+NXv4-UkCxljIJCEmxag3QwDiY4ZAzA-b5PUAA4BwDOD9jIUElh9yqHlIieEI+ghgDEDuV3SAdBfaNGkfjJo5hQBJxoPWUAIRDj7WaH0lYPQJEICaEoM+hB8AJEztnSO+YqSopAPUAIhBIDDw7JCO+JZIDaBCfGbwTKoDosxZgbFTJdHQFyfGa4Viojkt7PUKlGdqn7DSJorUcqYEsrZRyyEugvTZJoPynkKLIWQBFVinFaR4UgBJJgaGlxZV0PlRSpV+B+T+BNXkyc+dC43BLn7c4WJ6XqFMCOToJIZhlwYBbc5S9kB0DkNoAI3qZi9CORkghI4BHrxADEGY8J+zP1fu-T+RLiVm1aJASeBQi2DJqGmuo-ZfVdIDWkFQ9ROAqD4AWo4PxpW4TSKGxAPBnY3MKMgAAvFOoAA');
        Z55['arrowMapStrings']['push']('2,Arrows Warzone #4,GudStrat,94011,ILDuJBhYCEEUKKSBAlOANAUgTwEYDMAJgF4CSAYkQBYDGAdgA4BueAtgKoDmZJCkAUSIBGAFoUAcgAZabClIgwA1FwgARVcARlUBAGoBrDgVQ4AmhgTA5OEBWYB5UAMTRgB4G4ASIDrBAA4iBkKIgAssBhCPAACtSMABxIMMBKAfTgyFnZObkcagAsAIYAZshwkAW52QIwAJaZ1dkUqemNIC4Ark3IKaIA9j3ZsfFJiCkAMppDKAGMM1n5xWVIFVULwLXdG4gtaRlIXTtqwGYAzjuKcHGJycBTO6ABRZcQS6XllTthMACOVpc9m1DsBtgsTnhpjt4F4vADFPcoa8kAB6JQAZS8AHY9AI4AAXIJvGAADwUn3WdwA6vChjEUQZqEphKgBBNUNMWrQiFkjllQBQPBs1CiAKxkEr4jioSBSMxXWG0-wPZA-eY7NGYnF4wmIDik8mrL69YBFJVNemM5ms9mc4Dc3mg7JwLwTY5iiVSmVyhVwk0qpA-HDtIaa7G4glE3wwUBC1YUFIm9Hm6qWpkstkciBcrC8+Dm5xxmYi8WS6Wy+UgGGQJUpDguVX1EM9MPayN6mNFiBwBNZFLnHZp62Zu20XPIWpwc1wAIATndpa9FYVNZN9ayP2YKdyrYjuuJsayPcTSBORAApoOGembVm7Pbx4d80evBgkU0S57yz6qz2u1XgAkbIfjvGZIBRYQABtaDMdFOiIARqEaDwwRmFJUCafUG0+c0z0uZhr2HW1s2ADDHX-FA-Q2CYPTLb1K1gOABAolInA3GAACY-AWcCMXDHUo2AfVH1WNQLhNIhIJ2AirQzYj7xExAXHfEBQDIUVa3tWxXngChKXGYBk2RYyUOhUjMPcZ03BNAArKSJxgchkRaGlHUNeNBKGEUqT0ElqAAaVFKRMSuAQWAwSAbOEUB+nnMJmyaUA1Gwy59TdI81Fw05REdUAVKGFp0QSlx3MQGcAk0sIQh0uA1G4u4WnYmzBk+YyhOAYRnXgPtTgANkdfKCqEhilOAElnQoEgshON9kV0zyAKidjaASgV9J2fVLyPZi2teFpZocxSIDU+ddr7Ht1oAoyJ0gGJtzazbnR2s6Nn2lTaiOl7qngZ67jYxsOJSnpeK1PdBOE50xJ6mhpMIuS72SxAJD0KlRU6MwqSg0RIBgAAVIoAgoUBRAwFECJRCnKZRKsUSxKmqYIMn6cp4AvAkAgzHAE9QmR1H0cxyDsbxgmiZJpnmep2BaYllFGfJ5ngDIOoJiIaIkFUXm0YxrGcfxwnidJ+X6ZpumJblmXFeV1X-EQcBNf5nXhf1sWjapk2ZfNiXLZVtWEUAlGtYFoW9dFw2Lal03mc9hWlZ9m3f39vntcF3WRYN8WFYjj2M+N2Pre5mANYDh2U6d0Oc7drOzYrlm899qs7eL5Pg7Tl3w5gaXq9d2urfrzwQHt5vU+dsOvarqOa4p7389cBBB6D4fy+7qfx-p6Pc97+PPCLpOF7L9Pl8ljvI7XyfqbrrfIEb3fHZDg-287ifD+nvuTkTwPb9b0fM+P7Pn4v7mmV34lxbiPM+7su4WwAYgDQwCh77zbmPX+kCvbQPUNfD+pc76IJ-o-U+-9N7cwbPPT+YDn6rwZuAtBHQ55Nz3tg7+xsKGU3Xm7ahmwd6YNAUvB+J9KEELjkQjBIDF73yQXg-hUDCG7AHnQ0hPDxF8JYVQ6R2ZaE3ywV-cBzCKasJ7oI3YnCREIMYZXZBT8pEGOzMI+BDDtHmPwZYmeEAiQkM0WQ3hf8LYSA4kof4yAKpwPoVo8hDjJFewCBhGI74AhGNsSEzxKCFYCFnAkAATlkAINjgkeMUV4r2KT0lZB8EE+RYjcFKN0dogoMQKpAz9G47h5SmFhOUeQmpdSkBeDiTkhRFT8kK0icAaJyAvDZLKTglpEi2kWyGSMpA1VGmiMmWY6ZVTn4CAcFfJUZB1FcOWaYlmOjZbgM2ds5AZAekTMOSvVp6zvG+P8Qs8Z7i+lMOACiXqog2DfN+Wweg4D6T9GEO+ccSyTH2LWSc5+Pi-FKiwHs4xdjQlQr0VPWFTzEBYCua85plcPlfJ+US75ALn5ApBcgLALymkrKOQSv5fzSUW3Je+fysiNE0puUfVF4CMVKn8oi+JuT+lJONny5A-kcWcshZU6FFszmgH5dSg5MqBnGzme+dK4LkWJIsQUrZirkATEFb0vFRy7lyv1ec7mDxtUJLyaKt2Gqt4TGVRClFsq0XU38kUUUoEIARFKbi2ltyeXPx9X698bgYArWAP5MwcgbJFA4kQfA+hOg5S+jAlEg0RSMGJUSooMRZxhBIKW8tZas1VurTbWoWg60IBGlofukQbaNXlDGRWIAPCQFUOlcAQCHAgCSA2DCMAQgCHAH4GAfgKCqAwHYKawA9CgDwITGQCVuwUHutkEUg0IjVWQMWitJ6a1nrOomBtDbgC5kgBEIkdRPAIARdYTwtA40gHVIKEA2MiAYFQFIPAHEsTACIPVcIMAgZnRONZU8SgODnk6BQLwaTqCoBA+e4ytUd2XH4B0CADZVA5RgOsDAEROJYDoPQLAjASaHsw8gcCYxkAilxiestS6GNcYWHhzYyBVAvBgOJMjsAqSoEghYVALVq09hsjkAiOQURSA4yezd3H1MgmbQZZtrqwCwHAH6GAmaBC0A4hQDiohaAxmnF4TmVaRSXRADEAoqBeoFAQ0hrw4kNNnQiEoS4iYyApCYsF4AJwYBJH8uAbY37gC-v-YBjiopQPgYDZB6tMHd3wcQ8h1D6GfMLCSjhnYvHsKEeAKoQQIBXIwDZtQIgbA9D2ig5sTigas1oiywIHLKG0MYYK21E48yNh4ZC-W1SwBfieHAMaxWAoKInDY9WmMdakB6FxrQQmBA8AGCM9kZwnGs3vvG9mYwMB6vAdOC12ouNBrIhcExZIegJCgAsEQToM5uYIg4I5tqiZQsQHW5tig22ziFwLAIQ7X0zAA9OwQc7RAktXfYvFatRJVtVme69jA72is9SAjW5wsPl0ba2zt4ApVuxAOrT8E7dgzsXfWKoXZZm1IUBYOwJrn0IArH4AICQdAcZFCA6KSCFRtySuAI1KwamBtNBcP5145NizIk-HRZcNa-x7Qpsxpo7W5cbBSMNjYeAKay6QObncfE2z7mrbUTN0I6XVAALzO6AA');
        Z55['grappleMapStrings']['push']('2,Spinny Capture Thingy,TheRedKirby,79820,ILDWJAhZPD4cAisAagVQMyQA4CMBbAViIEkBRAOQAsBjACQCUBGWg9Ac1QHFr8CAJkRAAXdAENuqAMoAtAOqMAMuIAaAKQCWAUxTRgYyTIXK1W3cADCtTBAAq2gBzJ4pYABEQn4OXiWYEOAAroihCNCyAJ5hgcAhMWGeUQlgcWFI3LQcKQnBYQDumdk5YXmhhfrhwACavrlpoRmV8NC1KWWITaGebfXxiBXdNXUxHSVewMl9BUXjoWPwGe7FLcCqAAztDQPcy4ieG+2QtChzZ+iWAAqnCEikAvlnTzEAsgD0AJwvAF4-f983Z45bj5ABicAQngA8oCIORILICu4IatDk8kODQtAYaEXgj0sihmjnu8vr9yT87G8yAAzMSMSzrapA+AgzH7YA4xDwxHlQmIaDEuYYlEQbGwkB43mdfmQtabZ7NYCUVDyIhBaryZgAG1klkgdkkoPyslUbwAbm8rdarVA3gB2G02zAWp3WqzUN7qFY+DyoVBBQigkQKJAcdAAJmodCkDrdVsewBpAGp4584-HHgB7GmRZkQfzAZioQhEah4eSoUCkUGULPVVSQbUptPOYD0V3xlvx5wAaXojgICEeKrVGq1uv1hu4xtNnbddsd8ZdlvjHq9PpQ7n9gYIwdD4ajMdQGbdie7bo+p6d2dz+ZAoJAxdL5cr1dr9cbzdTPZAHdXboXk6fYDkOYrZKO6qajqeoGkaJpmgBTqLmmK5puu3rwLQfoBkGIbyGGkbRrQsZLmeIBATaV5kTewA5nmrhPiWxCvlWNZ1g2TaUdabb-mm3FWiBg5+CgkHjjBU7wXOSE2ihy7zshliephEBZjhu77gRh7EaRabnj+l7Xjat4MRAShMS+FZsR+nHfq2f4KTaAlvEJYETMqqpQROsHTrOiHoTARnWmha7kB8jgAE4IJs264Xu+GEUeJEnjRxkUQZTrUXpwD5Iw0jYS4UIWSxVnvhxX7ObxjnWpVwDSKoAAscC+O4I6eeJk5wTOCHVbagWpcFvVvD42rJuoUCSiABEwMWGkJSyORvA1CRLWEVJ2P8-wLdtO07XoyDwi4VgIHU2TeHoKDcCABWqC8M1xZpEq7SAq0xG8ABssgEF9P0EAAVm8G0UuSz2g2DKT7Ugh1QyAKB3cAoLfCAWiyIm4MeG8PqQm8ODfXjX3iJcZKbb86Nk+j+jQ9DHggDF2SXCAjCTNEiB4uNZOPlDzSQKglD5A2AhBIUWQctIT07ZAXNHSAqB2CRoKYHgWPDuQoqg+g0AwxAoJYJA1ACBGy2vJAADObjo5zh1irz-OqILIC+JYVB0Pq4h4BGRDakgsAxN4lOw+TgfY28aMxOQAC8QA');
        Z55['grappleMapStrings']['push']('2,Get Squashed,The 9th Doctor,81600,ILDWJAhZPD4cAisAsgJQEwDUAMBJAMQDkAPAEwHVCAvAQwHFs4BWAVUbYHMB5ADXQB7fAFF0ANwCaAZgkBjLjBDtOvAcLFTZ4hcADCc6RAAqAdhAoI+YABEQhCyADu8ESEUBle8C7HEwET09F39Q22AAM1wwmKgkUQAWRGguUEVYhCcACQBODJi2PQZoxCRc-IrKtAB6AA4q-LtfMIZskRD4Ow9LBFRIAAdQp0I85OA6Hvg+iMmIMvbELtmQEUhSVH8yvnTO4Dk-RFWARiTQ1DqGjKaD-3QnBm3F4D4S3sgASw74e4AZfzsXv5pstgMM4AgAa8ppAPF8IL9-sBukDIDN-E4bODdoCGgixjwQcDNiIsRBIf5VrD0Qw-mNKITUSCkCNETiEKtPtTaQhoAAtACmKLRpQeOzJwHpKIANqdMoRSQgaNU4ZdEKg9JANv5IA4BUKmTTEZIAM4Uxnoll0hnChDM7m7E1mgBSQ0tPOABP1DTsjrVwBYrtGEKR1pBw3t4t9b15gdZUIgRMQeODUehMotQd2erVkBjm1FT0loRsAAVqqrYk5RCqoMa1lrMiTERMvSKFeE2a56+im2N9maTuisgt3eRBaFIEgGO3oC7Lsz25VwGxXTOJSD4MvQgvtevYivF1P23ZeYIKxkXQ4UQBbMVzeWxS9nSC3i2LiAOOeHAbbhh0c+xHoSCTrup5mnmYRASBYxgTmEETkgQG7i2AEVlu3p7mEIhikc2AAEbXiwAAWeGUMwRDEIIkh8JAUoRAA1NUTHMUx9TAFk1TiCxLEMdxzH1MYhA8HCKDENglAsAArpIlBHFKvIasYjCEE4vJ8JxfFMVA1SmJp1TSBpmm2JIND8kgbggNYNjYNgkkEYQAAuvL0lwbCYERRFyEwOl6SEvGaTkPmaS4-I-LgFkoHYwC4QRxGkeRJBUTRdGMZpbEcVxmn+Xx9TEDQxABpY0DAGJEnSbJ8mKcpqnqZlfHabpmkGXV3EBKQximkowArtZtn2U5LluR5XnYEFfF+alfGBY142amw5iOAwIAxYRJFkaAFFJbR2Xcelhl8TtLG5flhVQC4pVSTJckKZASkMCpan7a1MBjdxzV6foREluOECKLALA6AwREsIYT0sQ1envUZehfeOxXgP9gPA6DLXgy9M1vWDzGfd9UAgGe7FY1p6OQ0T5Yw7j8CmojXnI1D9Uk01ZM43DzgwKAAO0yD9PPZAr0sTz4MU6zwAlBlH2M3xgvY8LCBJDTQPc8zkuY6jMuw3jwD1ArdPK3zGMC8zstKMVhNq8T+uk+b5MaxAkBuDrSvWxDTPO8bxUrs8GyQLgxBSnQlCkP0BFyKhYTVLKiB6Bc-zVMYqA0AnSc0GHqdpxUKCmxAFlihZfAbJi5AAJ7UZATh4Qw3BsAwOTBwAdugKfp-AJb0TEXHh7gifd0nNbN-3YcRaE1MuNYYD6IotIuDYKA8CA9QWeg9hN-0egycQABOvLSE64hUCw76oa3MSt9evJnxfp7VF3ye9wP9-p0PFLuDAeZZEgO9HHI7lSnIxp6CWSOFRqj0Q8FkUw2ARBIAcgwGw1Q7zwB+MqUIZYH5oJiBseMFRioWXgCgPQjhQSvxAO-T+38iK-1AAAoBGRo6gPAZA6BsD4FhCQX3VB6DOG9FFqqHBpR9AgBXJARQ+B7iDDGChKo2RHjanMtASY2BjBeUINIPCdZORtkuH0QcoQ2DyNwcAQgbBpCQCIuQTA5hsAE3ZD+DCY4wgODkfASA2BiBOGouQSSGIaFKEkZUaRCC4irGQPARRyjVHgDbvmQ+z4dH+D0cgAxRiTFmMwAGKxZpxFVDsPY0Ijjgl21ce4vgnipwRjxn4ioASELBIUUo+6ETIAAEcDQxJRHExACTzLwGSaY8xkcCFoHPCgUARF6JHHQCIH46AiKQB+IILwadoByAMdnbqJ8mJ93RPfEQIhJJETHqnVYTgmTQW1GWcs+QAC8VygA');
        Z55['grappleMapStrings']['push']('2,Cubic Combat,Clqy,33467,ILCqJAhZIawhjrAB4BEAmB1AUgBwE0BPSNAIwCYBGASwIA0BFGAUQDkBnAY3vmGZaMKKFAFNmAYS4BmCAEkA0gHYQAd2CDgEkCzUIADMDQBzYAAUYUEDhDgJpuSA4xTAWRBdgAcWaRGLPiRgAGVmRHCIyKiI0EgbCP9A6OSUiIAxELDEFjjUvPyYRIjoUIKy6NAJL0NwxgAJAE5y5vCM+PCconUWnr8JLIRoLmcenvAkhHqAGVGIswB6WAALAGoqACUWKfXTEDbIzu7ZiDR5gFY5ADMAF1B1iX0CCD6B5+Bh4+bxyOnPhAXlmtNttdsB9hFDn8Ci9iu8RlD5itgnUlAA1QTXLwIWJ1UGTFiiKEFDLrAAsEMguKJeT8BNhZOpeRxeIg-kJjJSGVKHVyHOStPZQQZfIqvNqARF0RJ5J5VMlxSK4RKr3lEGZCTpqtamQp7S1zzZ9Jl+pAPgQVFRZAAtmclmQsKjYHI0mwAPYMSAAG0uK3mfv9foAHCA6vMAG4BgM+yP+4MAFWkRHhIGYbFRWDOAFcCFgqJ6AFoSSBxgCGXjSqnz9HDMb9UHmSlr82kNdrGgagYATohHGhUajM9a0td81hGMZQBQlksuF5UQ2m91o7WGgva6pIGZLgojkYQBbrbb7Y7nW6Pd7fbXg8BQxHa8uY-HE8nkGmM9ncwWi6Xy5Xq3eY3rRtaxbADIxgfRrjCZBwD7AchxHMcJynGc5zXGMl0vGNV2AjDgAwKZwAQLFgAPG07QdJ0XXdegvQfSNr1vJt6IDYM6mCKgkHUN8sxzPNC2LMsKyrVtAJgdDI1ApsIKgxBTDgwcrWHUdx0nadZ3nXDI0wpscMXfDCMQeIyKPSjTxouisIYkNRMjFjYxvDjEHsYAeI-fjvyEv9bIDICmykttIEg15nAUhCVOQ9S0K0gMdJXCTYoMoiIHcUjLXI48qLPWiLybRifP9eyg0cziEDQVN014z8BJ-YT-2k8SYv9ALAKC2TLGAckwqUxDVJQjSEv9OLsMGv11AI5LmAsNLDwok9qPPIr5nysCoys1iSogXRdFcyr3K-QTfxE1b-T8kCCrrNroNYIx+0U5SkLU1DNP04Alr09dN23Xdgn3dLTPm7LLLymyTr9Ja2KcnQNG4va+IO2rvLB+YzpjFrwJYDtuwNW74J6iKnoGpqxpAd7RvmcbDJTYBUT+2bMvMxb1ocm8LvmCHgATJMEDSUw3PhmqvOOhrIHJ9HfKuqxIE8bqHr6qKXvXUnmb9D6MK+ncECeGaMrMhaco51nkY59jSo0DRfHzU1GGkVEaHzX79FUNJMwiNBgHoZL8jMFZoh9q18wDoP8zwYAxxNXRHASMwljwa9BhSVRyuaHb-GgNOQCj6mwT4fNMFwT05DQGwsGNBAcgwFUUnmMvwnmAA2QOm6D2BICtk1mBZKwVi8AA7Xdoeid22BaZh3Yz-wQFMZAZXDuA2CoAgrVAYxXC4SAyC7-g0jN-JTi3kBTjwYOg5LRg0gmSVoG0CE0FJEtLgSZJ3BqMpkEYdOcn4LRM6MS3rdtvbX6AAvc+rtwju09uUH2fsVgnybqHcO+pI4-BjnHJUidk7lB2sYL+GdgBR3UNNNIwCQANC8Dma4hcWA4CWAQCg1xe5cCtA0Kg1oq6fBrtEBuzdm4ACt5hxlcMA4RojSEmgkVEXw-A8Gp3NjnfcbAyDSBDtaLgE5yxEAwNoLodQyADz3GfaBvsogbirtAS4r9JHWOiKnORW1CgwHbmwOMWAGgUBLBmXuzpIAzl7uONgrcKDx0mF4S+KR95RHcF7SYjQbHxKiMgL+8irDAG1uHNAoAqBhgwFaT0mZ8wkEYAwHA+gi58OAEYnkFAiDlC4ZEd2GQKTzA4QkmxAhB5ZGYHUPYfAqBKJUXgNRGi0haO0PoRgYS3b4Q4AfKIMDTF+FhJYtpqyHHICSQ4m+bcQAuLcR4rxPi-HjjXpAYJERVBTLKJEyI0SfhxLWaszZ39kAdT4BkrJOS8kFKKSUspaAR5VMQK4M5tSyj1OmU0nkLTHmrI6dIyYwAFC9MUco1RVp1GgE0do0i9R9EYKBd7ExkQzHLKsbC6xcjnnmwkOoHZrlXHuM8WcbxaRfFcH8cYNggZIChwSHorOeQbkRDufypoFL4nv2pR1boc9YALyXivNg693QJD7nMhp8w5lH3gVaM+F8JE8N1bAO+D8n7RBfs0KVMj04-0gNtae7cfCAIdsACgkylhd2gCWQURLYG6pDmHVpjIdW8L1YwNBITUnRCTsGqIO1VCyOQI4Fg6giIGuAHnbAOBC6YEqSRYFvLa6pAhREI1YbW7t31P7MNgae79w6MkYeo8f4TxwTTGA6TfDysXsvYwAB5EFqrwiXN7hqt2WqoihpPvq8JIpy0nxNffR+tRn7AHJTSHQn9bXaGlt4TOztwGIHdlWok2hkkIE9MEAm0hfEYAoGcMOxbgAgrnbMHpGhXlaFgDgDg2AV6gFvUse9KhS4Uh2IyEi9iHgYCIKOAcp5VAMAwJmMBsJQDayJEs15yAUD5lHCgDgyjMVAZA-mkVkAwxxqtTI5yqIc01VnGkaQZBW7DsQJc8V1Io6TwgAoRgVoUBUAdsWJjLG2OYdCdR5oqUukvqwA6IjXgGjSEQ8hzMlzPUYNPVCDZg9gDXDqMw1EnoyA0FE+WFjDgrB8OAQfeIKA2AMGAMYVxF8RMSFEHGUOtmD5NOgL5yIyLgDrHIOWM4jA5CBmfT-FMUWYu0pC252AInGDKLYMAzxv6PNeZ83ZyIJEAv5ZFWQ699B8yeg5WwAsLBYMMBDhgOonpgCBYiB+3YBjN0SGRGiDEXgWBzgwMEV0fwcj1y3ufN9kBLh1iFXyRg+ZURUAUOO-I9QACOsIkERC8MVPIqVmgAlWBsLY6wlhek9ptz40BRAjZ5DpxAM2Kb5E66kCQiIevokYJiAbqIht3eOGNibGaIgSAWCjObHIFtLZW38DbW3Wk4D26kA70DFjHeBGdi7oArvHBuwD8u9LIidhJnkV7KRr6fb679-7o3IDjYSCD8I73ZupHdi0KY5wri3HuI8aHy3Vt5Hhxg7b4RXDI+iEAA');
        Z55['grappleMapStrings']['push']('2,Orbs,kklkkj,64477,ILDmJAhZIawhjrAEoAUDGBbAUgLxAC0AnAQwCYAPM8gexAEVgBxCgFwGd2BHEfDCAGoAnAAZkEcDhAcYIACIgAkjADuc4AE1gAYSYrgAVV3gIADhCGd0xIwCi8W04QBZSAFdnXxADFgAM1EnO0hCZ1UACQATdW9beQB6AFYlfzZDFB1RbRA9PTiCrzymQtKEYrLK3QZ8qtKKusKGxrjmlqKakvavSAYlRyRgAHkustVmYW7DSATRiAYHJ0UogGY6tATYAAtBAEYUOwAZFFNgaRtur3PL72ub5wsIADkANQB1JPdNN92AG0IdJAACqkZg+VSEAAaCQAbgl4Qj4VAEgB2RGIlaw9EI4B2YRmYiIOzAeQvF7uABGWB8bEIbwYoEM5C2WwwzBeqOx8Ni-kEXISwk5XNUkDQ-gA0rFciBdi8qUkthS3i9YEofE9aJpIZBfrz+Y8IliuXquRYgThSAA7RDqV4fL4-f6AkFgiHQuFc5FormYj3Y3GkTSwKXAJik8lUml0hlMllsjne7E8vlcwWJ9EitBYUhBCB+YCy+WK5Wq9Wa7W6lPYg1G7Em6vAIGEdwABwQkHAds+3z+AOBoPBUNr6K9-N9-NxQwAygArUYCcOU6m0+mM5ms9lCpMgevotP8kVDS2kWQQAyFrAKpUqtUarU63eImt+9GPhEWFCaQRvcpMLsO3tnQHN1h0RUcfVAnE7FIHAsEQehF0jFcY3XeMtwzHcqz3dDEUzCUQ0OGU5UvYsbzLe9K31EBDRfRE33hM0VgAT1PBQQH-HsnX7V0h1onEYBwhFx09OwmNgX4QyCRDl2jNc403dNcMw-l92FSAXiwQkECGIii2vUs7wreiEmffljIsKcADZxQAS3KdRQigCkLAGe5CkSFssEILyfNIDY3NKaALkQRIQyqNwwicfy4hCUNYqYZADHpEA3kmSLbGJQQAoQBJLO8-KfJnBIwuypxOmcEz2kUQwckQQ5iriaAFia4lQxJEAfEcHwYXGXhbGgSFWICtBBB8grCFoSrSu8YlXIQaKWlUHwAFMKqSSEdBnXZVFoYQMC6Zq4uQYlkEcmBnMgGyDBtHx-Gmjyxt8hbpqcILnFC9o3FIU4EDhF4ImILYUEsgAWQxTni+KNGMYBkthyZIQEWw3CwEqbly8bCoal7nHKpwpsaRQ3iRuqEiB0HDGW9wfGulqWsYFgOq6nqIkI+JgEIEHppGx78smx4cYy4A5ogZ66iW618YFrxDsO3E1BgSLIApcQJEQBhmEhe6Ek8zG-ISQXXrOd7scaNxfmu36DZium2uQUw4dS4AMFqhAQinNHLgx3msCKz2cbx2wCbqRQXjmBQEh+o3ZdapgbE6jqeuYcP2owHRudGzGJuDw2QFm5wxaqJao9yBIubiGPjvaxWnPEVRLYgcYmO13XHv13PBmChAPpaCK0bQMwfYmiBIaajRc0dg2MCGkfgFzUrvcxv2O4QQPEBzyoifLkKEg4KmfABoGUQgW2FgZnTgBnLQ4ORyAZwb+4-BjmAXieVQtSidwGB8cUlmAHNpq9FHiAF4QI2Q+BWBSWAkAWyu0bswbe2VphHTaj4QwKxIBbCiOQY+UR06324PQUqT9IYvzfh-dwqg7BEJCqgEuNwgG22AKA8BkDoHcBTiKFONxkGy2AGgjBWCcHACiBfRAbhmAvRIfTdS5DISf2-g-OQbwaEBUYSg5hYCwSQJ+qeeAMMV7AFULURoDEyjSHzIYkIItGDyEQbYfwSJ6gMF6IY9qpBVEj0gMtf29VTYFH0W4oxzAlAl1DtLHeG8rj8KCSEGIThxgUh6Bsa2TQXHcJeooaeTg3CWnoSAaE-i4iBLcQsVqgxCAk1sMwMxpQLGxMgJQeh382avX4mk1xhjFDpXEZAeuXgipFO8CUwxDAIhgHZhSJRfBamFHqW4twTE0YMHkBknQHpSgAF5NlAA');
        Z55['grappleMapStrings']['push']('2,Whel,kklkkj,72390,ILDmJAhZIawhjrAEoA0CGBxAagZxAC0AnDAJgA9SyB7EARWC3IBc9WBHEAKQC8BjKFjwBNZBHABpEAFUYUEAEkEAEWABhCPC6IQAd0UAZXSdPBtZs9FAFLFk-QASHRojUBTAA6XzwHbr1nVwRoLx97XXojH3C-GN1rWzMIxECXXQ9vOziHIITgMOz-VOj40xSEKOMykwr4tRtY4rLEptM04IhQrOScgLy3Ap7yvsQndMHC3uaIcc6FKZGZhkcAUT0a3TqGUs2EbeADar2tUbKGpKWT1qLTOfzF2rPZgdUhtpMOjPfbz9eun5mGTqSTwSKKRwAFhOMMQ3DAAE9wIhVuoAGLQ2Hw0AAG2RCFRGNhwGxSN0AFl0ZiYdi8RSqcT4ZJ8QhyZAKOTiWjgJ4AMwmVbAOTE4kslQ4HAAVwARgBbNEsQgAdXooBkZAAFhr+LgAPQAdl1RuNRo2wAAZgBqE0mgCcBptxr0kAACubJGaFMAAIw4OUAVg10qVOFgijRADkaCI0JAcVbHUaABwgRy6gBuid1CcTKYAKryEZcwMAIzglf7JSIld6cYR1JA89g0XpCGgM1moA7E7yO4ngKtbUniIhOeKpXKFcrVeqtTqcN3HWac477YbE863R6CSBfQGgyGw5Ho7H49bc6m+46Vzb84XLpBGGWK1Wa3WG02sC221ebV3146vaZv2g7DogIjAOOMryoqKpqpq2p6gBNrLueq6Lihrrup6wCOLufqyoGwahuGUYxnGN4mimuG-ialHGneRYIJopblpW1a1vWjbNq27bAY6-5ZkBnarAiAB2dKnFBk6wTOCHzhhJqoVma5Zs65KeP6EEQNIPoEURh6kSeFFobel78Ta9HJsAeaSO4SrMRsz7sW+XGft+fGdjAinGsJIHiZJ+iQRK0FTnBs6IQuyFKSAVm6qpG6QBpWkIBG+H7sRR5kaecXUWmFl0aZVE2XZDkQCo4DOa+nEfjxP4Fcagk9rRjWiRJLIptJMHTvBc5IWpsVFcaCVLklmnaQw6WEQeJHHuRZ5ZnlLVGrlNmeEqdAQKsT5sdV77cV+vHLbqTWAcdA4BfikDKF1YVyX1UUDRaQ1GiNmHJRNNlTQZs3ZSZi3mVmq22fZCDcqxL4cft7lHQ1RqnTafkCW1gWQHIt2yb1kU+aag0qTjurqeNCBlXu02ZUZ82rTRcPZi9ur5qVYNObtUNuXVnn9t50W+edKNXeAGM9RFCk87jz342LhNjSlECEN9M1ZcZC0XjTQP0ymWAIgADNRgpYJVrOubVh31V5kAE0jf7qIo-oAMrgNAkAEEL4Xyf1G544mb0xdKhh5majCCHpGWGXNOUa4DiarYoABWOK6YKjg7ZDxsHR553c0J53OywLoKJA0Ku-d2NS8p3sE86ADyOIYCy5oKxT4f-ar+XqwDBZMV0jCQPLuFG5xhLUiK5W6iyiCGITdzklXjjjyKLpJrKhDL6vhCbSPm8mMggomMoJbqIwukuyAaXAEXGyQBgGyOAPdY+PQqxgpsKhj2Yk84ZUM9zy-upr--W87iAO3iAXeuhNDIB-r3VMd9CCUiJMA1+88IAf2nrPZBsJ0xLxXjg5eG9gGAJ3qYZQkBBSrHAHmGAjA0SMAcpAQQWAoD8A2OoEQspg4EJALqYeuhdQADZcG4NjrqPM5JeBiIkbwTh0jpE92AI-aAj8qHAHlpAOgWANiCEgNrEAaBOTACVGlZkJg2QchONwsw6huHiJsZIkRkjJEyKcYAuRKJJoNxUcAHApg2QAEtP5b25AokIOAIx6BjAAE0lHoGhJg1AiGLFvR8qxFEIBwHmHUaJeTSlgHAdoWBjgEPoIosBwA0QyF5JADUESyD6k8SYyA-jpGCmCV0UJ4S0BRPoFgHhIB4mJK3noFJ8i0kZK-NkvAkBJT5MKcAtk8jSnlMqdUsgmJGCKHoGQFs4ZPDpjlN4+EZgPGuEds4s5IAXTwxiK485TjgLxHoAAXkeUAA');
        Z55['grappleMapStrings']['push']('2,Climb,bychtromae,64092,ILDmJAhZIawhjrAGoBEBGBxANgFwE1wBpAgOxwCsBDACQCUBPDAJgEYALALQEUYQADgEsApgHUAcgHsAJrQBSANwxiAYjkQAFWLWB8IASWBoQWEAFkQ4CH0i3gAYQCiIAKqQuiG6vhe--gMCQVWAjPydIAHp9RB40ABY-aAwABiDAuwd-aAAzNK9LAGp-HiwATnTA2AcAGQA2SsbEVzAS2gqvE01rRAjFGKaIEIAVAnDWwf5XMcmIOycWJNDZvR8ViHcJHoQeLNmIxgB3deARmd6JwegZYhPM7OA88eK-Uo71lu2d9r8ur5A+gNJiExECAR4TpD5osvNAwpMeKozCdNv89HtJhFPCczuM0UFoABjADOdx4CyW8MGPFoAGV8ZV3AIShjISsQoSWl4sWyvDVIgBmABOAEcAPLmLDExT0OY0mTHJDAahg4BOByQF6IQ5YEUM9LufqvVQ1JbDRWIcyQADs5wQmkKLGJXEOKA4AFcUgAOCDmSI+3mTNA01xgkzUEXhSDxSxeXZo6BcFwFSDdAIg1URWkWnZYFj-EzENFoSIAVgMOTwrnoDhS53mviVYszkBYUleDnxkUKtNo1pQTh4eGRbkgzNeaEbCETyctkDqU4gih7AA1KHVzABbMju2ccsXjUv+Q6qd4IQto-lCFJioViSCbsUoOWnpYhKMoHMQQ6T-zd3v9oOw4IO4OSqjwdhLCu-iWEefiaJEsAcIUbD0E4NT0D0IS0i28glGsnSoPqBJvEsGCsoGjTuEIX4gBBqrXCIfhWjgiReAhSEoWhGFYcABCktywBcnGtAKoRXBMZ0ZYVlWNZ1nKTiLlAwA4VGTp+CeSmDO4rGvFgWm5PkvRwHaS6IchqHoZhIDOAgEgoGIpbugQYhsDgXAasM1BYKohxcCukSKJEwUhcFUCRNaoWhQKgVRSFwBisMQp1DmLhoCgKDuhgm6qHgXCgqArgsBwHCElgKARXFwWKkF2SVVVxwAB5YPQwmOCAbAoNlpYcCoKCwAYqjSAQK6QDgOSFFV-ogPytEgBNU0+uY9CwM+CDHPZjnOa57med5vn+bFVXhZFVUxUFx0tfQmjHMgfDpZl2W5flPCFcVpXlfVcU1ZEdWnd9wDlvQ7ZDB1XWbj1fUDUNUgjWNC1VQGtBHXFCNxUtK1rS4kDgJtTkuW5HmQF5Pl+QFF1xSdU3nVNxhOFwqj2MAhLGBlWU5XlBVFSVZUVf9UWKmjUVlF9AvAM1rV0cswCdd1vViP1g3DaN42TYjIDIxTUVC6FGOrQCjh8Hj22E3tpOHVroU2dNfia7TaD04zCDtg97PPVz7286LoU-X9U1NS1bWmjL4OQwr0PK-DavoxrKPa9HUU+qWYqKEK54gMbBO7cT+1k3HVswN7IU08dDsM0zaSu09nOvdzH18-780J6FIv8z74uB1LB4h3LUNK7DKs6yFSP5yFQ-BXrWPGBtDn4ztRMkwd5O04XbfF6PYVl070DIFXHMvW9POfWv1VN1Nrf+5OdSFAJICyj3EPy4rMNw6ri2x5bY-N8PwDDJQKSKANk4XGs8TbZ0XnnT+YVV7Uw3r9Jw8Qyg1FujASwe93a109sfRujxv7BQvg1SAYpNC0gDHwLkstH59xfoPPBNs7ZVXHtNP+ACDZO0zvPM2S84FUzOjwhBSCUGQDGOgmuh965F1Prg8+kjIiHCISQshwBoIPzDs-SOb91bAAYajOhPoWGALVMAZEHDTY53NsvY6MC+FQPgYg5B-A4Cs0evvD2R8G4NTPlVAh30FGkKltQMGvdw791fkwketjwm-3-oYlwWAZ5bSzgvXOFsV5RBPoKfh9ihHHFEQfOuXsMmCzoT4gWkBCS0l-HoYAMgglUJCTQqO79tFwKiSuYBcEXC0BAYkzh5juG2N4XFEulNVCNQMM2RxPo8luIkUUrxcVSk+3KZU3wfBrCULURHAeTStE6Pju-dpoBOkwHAOU44qgMC0EgFIEQK5NDM27nOUAqpAgmHkPiJwkQ6hcE3L8-5m5KCRGGOYAAXmCiFoLKLQphSUfg5JoDkhgCg6WwQQBjEgMcMIqgoXAHkEILgaQhDHkuE0EsDISwCD+dS351BNBlEhYy2FzLYXIAiHodlTNYwrksJAFc8hDh0BwKCmkaACx8VnE0Q4DhTJzAdDSmlUhIgpHBaqiFc0WWav2HRTl7LmaG2ALcYApITDAAkCARIaBbrYlUAQAUNy7mxn8BEPCsxIhsT8A4G2gliVar9bC+wCKOVS30DikAMhYD5QkIoQkm5Djxt1EsCMswHSBHlQC-5SqVWMvBRq-1+aAjJiDUG41ao+C0lQacEAz5hGnGOBi+AWBwAYGCLiiNUaY1xsaocWgTg80rFTQEdNCquBZrVWq-tBap0QCLf4FougakwESLQY41hhjABbcxSA99YUhGLdjFAEhDgjRkO6E8wcmyvKhPu5AKBhhlVUAKDAsBIC321KoSV0L3AcsRacVw9qOAyBYEeVwb6Z2AxZXu3VMBD3HpXKe2I-Bp2wviukHgABedDQA');
        Z55['grappleMapStrings']['push']('2,Rollergrapple,The 9th Doctor,73335,ILDmJAhZIawhjrAIwGUBGAmAHgZwC0ANAKQDsBjAWwDEB3CgcRwBsQBWAVQENHPQA8kQBKAewCSAUWEA3AJoBmWRXDIuvfkLFTZi5eAiSAphTqSEAYRB0Y4GiACKIAyACyj4AHoQ9gCZHEEHNOQNCw8IiICwdJd0j4sMgY+EDocQSMzJBOC0YABlCHAAkATizyiJJgfgqMqoA1G1r4hqbmyuAHNvawqoA5Fx7Q108AalqHCwAOMM8Z8IAROgWUxAXgKuHgdgr1gAVBrKquofD+w9OIEfGKyfnAuYilldD1zcD3HfL9i7rgNEuvWAA0BHzGtTo01m91eDhegTeYXMNyy0AETlqVTQolBiCxuLxwAEv0u5wJEHsABVfpJIMhQQtPDJhAAnACuFEkJFcbBACz2nhJEXMMjCAsiMy+gUhGLWRNlmWWABZmvzBaEqhY0EUAOz1SQOAAujHcotCMm8EUlYRlr3lFWVzSSRToF2g9nJCXgAEddsA5HhIiEQoVGAshWFXJBhBHIiMSq4AF5JlOJhUExh0RhEC7rbjpoKQFgq6WMVYIaC+D1ZBzZt3AfPDIslxC18sQdZV5rxz2RTN1hENgvAWnF0JZ9tQYBd8q1nOpIdNseBNt2mcVEZTZPblPdDNZ+dyxuBUcthAT0KV6uZOf14+IKPL1tltfXrKbqgET-fgixnr9w8EDzYdT3HF8F3XG8ByQRcPmbUNJ2ATs30yTcv3Q78-3aADc1gxBQNLRCr1uaCKzwhBHzPCBV0HSD3zmVNU2HQEcMHe8EAIxALwglD4lvBd2KueCV3AuU6NQx5e3CVijxA4SuNEsjxL40iIGgQS3HkhAaLE3iEhGHUfx-LDmhkoDyMMLSIG4mDlMifiYI04BKIQ19miqd4sizAAZSIqnSB1GF8iJ7AAMysE9gACqTEmKV0F08mLAlgSA9MuFLJBMioUqKKSUui8kMqy8p4CwKTE08KiEmgby9z5Tw6oQPZ7Q+YBEOAZZ2oidwUWyyACoJFLw17UrysqioasaxlGogZr0S2drOo3YBepKyAAGliqyfK8sgXKRtS3bMpG4AADY8uAMre04SABDCGJzFxGRRhKRg2XYOgHFgABPENnPBB0oVCSSwgWOFEMRUJkQmlqNwBwJAxIcRQsNThhAsPI5DuUILBB2F4TlRLDBWmH5tqexYEDSKupipISGCmDQt9coszKdocjQRrJmY4Vqh6Cmqfwtq-SMAAHdpLSgWBfG+jAFHqNkCCKJlPFVtXVagTwdXV9WFBVnWNYWUWShYQZzEgLkZCVlgtYN1WmlC0Y7c8EpbbtmxTtCgg5EsEAWBIDAqGEUW5CwGg8jlkg3YNh2nbt13tfdhYAHVRBoCgPHWYBRYsORk76FkCAUEgZF8ZP2FgR3nfmZWLTtqu7ZmIoUr6IIYCCBwqBKWAjCIfWDc1xODb1uuB4sAg0DkVRshgS3rejnXY+dhPnZsKhOCoAKnEYEB0ewYR2Abg2a-7nWj51mYSH9gBLNvIBsA0u57vvR51wfnZH52kON02EHACxOAsEVowFgAArOQIgZAUDIKfdW787afztt-E209haQBQJAGQ3By55GIFHIei8QDn3Vivd2wB16bwQOtXeFh96HzjsfEAtdnbELVjMAQZAsDJ0sDYEgaBy6wGwX0AAFr4RgJRvqsNVifV+6spGPA4VwtuWciicHEaLDAZBhAsGgbAtW8Dh56I1uPSegwCgWxLvPAh6sl7xwXjYs6XsfYQDusAf2gdg6h3DpHexatbEG1ITHRx3sPDNWnA4bAQCxH1EkQwi+TCjGeHkZfG+HEfDCCwMIqBShfH2yIXEkhuSGrkLkPtTowBhA0LockhJsi1Y1LkOtLOhhwB8IEUI0R4jYnV1qSwgpbCNipJHCOXh-CK4dLERImpwBmH136dIoknDuHDI9H0eo5c2R5xQCwAgFhICUl4PQYgiSDE60QQPI2KD26QBCOgzB2D2C4NIEU-xOtAmEIoQVZZvgIlYCiYwGJ0zZkGxqVfEgt8KQ2FcMIYuwiKBFEgIQNAkBXAPJYECxJNTFHLJADvYEMKSBwoRUi++kS2S+GBW-GARTzlv3HqADOal4ALHqL4UW1B+DrUYOwKBjBhHsAoN9G21i-H5OXi84A19KT1AKOU7gIBRbiGIKAUAX4aCwAnsAHAGK6mqxqc3GgYTzCZmAOtNAAKlTiEYAQYRBA+CgFcDA3VlpIA0pOZAdgACnDQHvsACwsBhEsCMHsqgedtHiAWH0CVwB5HvIcUYBwKA4hOF8AqpVOZVW0A1QCPIOq+k9ObsIeobcijgDNRaq1Nq7X8D6C-L+1KRWq1pXAj1NBGjXJmP6wNwbIChuTuGhYBBo2xolUYbRKQnAGEVcqzN6rNUKDzXMgt0sMBt3EE4ct9RLXWttfagQlK4ENo-u69g4giDer9ekGgNB7k4Ktdo0OEjxAWGEWyOWkBRC91cKLRdIL5kKKWWumwnA1ElA0WQBwqqAWgLluIUAXKeVMH5YK4Vq8xV2MbcU0NZSnApCTWi59r732fqIN+39Z9-2XyoL64ZJAnB9EpCAxWAJRCBxKHQbgRQWCJnWnWpBR6EEnIsCQWtF7c4wBoCQDRVBfDDv-XGvxkBQCiDiOUsgIACABzIH0UWdr6hyfFZhj2TiPA4mAAQPo2DhCwAwACgzGG0OexCeU8WFTaFYAPuRuRlH-RNMQJtYAjAxmJis+inzMzMU+exW3daoz2n506VM8LB76lRcA8M4Kqj1GaO0bo51pzdZCYnlPKI5i55cfswEiVTnnEgDZBprTOm9OVbedVkz5SzTuKDiHMOEdi4tcKUZ4JzinBNB+WS6J3TG69KXdNsFEK3BOBoBkrJFAclDZjfJiV2HqLAG+lUjz9CekRedQ0vzFEbCMEpMnFgGrmBheOylvVaWlHDNbiODeQCi4nIE4Y-LjALCgCaNABYtzYBAIoH8jVfGB6-bOScy5v8Qc+wAV9kB4DIF5fra6zDzb9EmJKyDjOqPgFgIgcoJ12O3X5cR9PYaLKFaBxoIaAgydIOcEyXCuzG2R1DZqx4L442-nkoBVNxhJ381zaGSAYkMzQPgdy5T-jOPj35YJy4BYgYGdvtoCztnoAOfCK5-pnnW2jNKZU+3EA8wUD1EDuwYRGBk71FgOIGgfRRAQKLF51LPT5ttz2PR9Z7BNnJ22bs-Zhy6DHPy3DwrsegcYhByqSAeQ+gsGwTgaTsnTeGcc+13FPhEwgHqIwWzJQoERgcpkRkQpvLFNCHsBMO4dxJTb+UZAj1tJ+qaqoUwprO40FAdwLAMs5YKwIL2WvixPCiyMl+bgTfGKt-b6v+InegTOUC+AVdvqihOACJAGYAVhE+BZH7VwrOCB5HEEUPoHHk46mABgWV+FIBE3X32PGQFPCUmX0mdocwf-RMd7NfICUYDCDCeVC9IWQHcpC2U1EAKgP1DOY6SkGAJbJwZZGgYvCpcQPOdgdTcIaANAHmcIPYVaRACg+fT8UQTwPIFvXcMA5gqGDwUIDOOjYAIgP1beJwFHdIcQGwSAbgGwdaT7MgTjSDNbSADRFKGQYcZICoLvMIDABvQIJfRg5MdoGwTQ1wV-FgmQdgGgggUQDfVsRAhYIA8AYvMGYEJwMqBYDOVxHYBYMzZOQMVPPob6XwIgD3PBU1X4VwCwQPCocacITwU6SA78UBX-YAiIekFgqSC9GIaAGIawYAMoTXYAMJQQxgPFGCIgfQjIOgIoSQGaJIWkcpCAeoSkJgGgBQDAPASASfQoGgNmd8SAHAVTQIOQVI5QmgTgBQSAURLAJ-akKGSAUKMgu0CgdApEToSotSeoe-CBXwNkZYYcaAQoh0UomaDqSohUGouoho+AIo6iNojcTo7oh8PohAAYoYkYnYcYk8SY6YwcWY8IcwFIisZYugVYtkBwdVS8Lgs4+IEosoxIUAA4hAI4xgeojAFKYRX4QE9o1CK48IG6BYu4wY4Y3wLAEsOwYQKgHAGQSOYAUBRMWMEICwSQERCgPZbgbAdgFgBwcQKYKqEAA4YAD0LeRIy4evNQz4tgvknoSkPJSISQAAXiAA');
        Z55['grappleMapStrings']['push']('2,Grapple Grounds,God_Of_Bonk,73524,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAEwE8AjAZgDUBXALTQFlgBhABmoA3djhQAFdqRS96AJgCsAJxCU+gkWMnTZilQgBKADn7AAignJ9wOEBeB4+qhACkQtgJoBnRM4CqvnaE8IGhYYG8ZuQAMuFxcZEAIvbxqYhJKWlZkGaEeOBIwNEFWQ44IaUIfpBeVr5mkZXAXJD0JU229LyBahVZicAA6gAsTRA5ee1QRVOpZjisYxDVtYENmWmUkOxLIH0AcsyDCqwegwCMpOy8kAAqAIaE+OwAGgD0Qm9f319QbwDsPx+jA+QO+wEoKCM+ggakSzDY9FwABd2IMzKA-HIABbYojMAFgr6OYAAMwA1ES3ihCUS8IlKABHWA+cxOYDnZhIhTY+iDZiwcg4fYAew8L0gpApVKMIDQoKJ0qJsoUXjMiwQjkOx1OFyuNweTzwrwVYL+gKJIM+ROAAHl6JRiggLPDESi0Risbj8bSwSSlWCaRa-Yk0ABlW6jCC2DlcrA8vkCoWi8WSgNA2XAeXWsHpn6y6BmNT2SDgbUnM6Xa53R7Pd45oHmqlWqnOMBqEAYYCu1hInCo9GYnF4wgE4NA-2UolBqn08ORywgTnc3n8wXCsUSqVTsGZ7NUvPfTNFwtQCyQDCOADSZlwACt7nI6Ew2DtduFEm9ZhBPwAHLDsABQH3OIKBcAAXhBUGQe+sFwWMyBbOYSHnm26J8KQLi-uwOL8FQLi8iQwBdPB4zADGPRvAAbIBtFAXeby3NB0GkaxbGhKhJ7IXY7LlCApBcGi7B4ZQBH0IQ4HEd0rHQBRviUNRdF0QxTGQWpEHsZpmmcShHYuu4knANifhMGAfgkNi1Bad2X5hNEbwkr4oHMep1lubBiGFih7Lnuel5FLeKCCIQKDIkKNTihsrFvFGERvJmvifqpLnualSw6V5IDgGgWUwF42yhHgOCxJp1TcdGfiMJAlmKEMUXNJAYaOaxthceMzD7Hg4rUKwRV9GR7AAKaaTk3kQMwtxEDgjD0LABVrIQLzfrBZVFggOCVdV1ByP8UmBC0b7sa1SHtZ13WsLk+SJXVI1cZkE1TTN7R1M1lRvOSYZoP8zCUGYyKEJQOB3pQAmkVsh2IEW-WIKSvxpAMSz2Qo5CksifgGAIHhmIMXBhn4r27PM0MwMAYb1SAvBfAl4RAA');
        Z55['grappleMapStrings']['push']('2,Circulation,Echostar,81532,ILDWJAhEFUPhICKwAySBMAbAngTQGYA1AZzwA0AlABwCMMAWYAYQFEiArAQwHEBOAF4ATHgDEcIVi3bd+wsROAApAQGMoABQB2Ad2jwA5sACywSEdE7gAEXjMjSkEanANIJvoASIPGZQA5ECtmKwAVMzhRIzhIAElgVhRmSWB-I0gUFERofURWSHNEIuKS2EgAZStETNLi1AB6JlrS0WAYEiKpF2a7eoBqHpLmJFjwQfGoGuyzYuMCownxuG6EKYRoJF9FwdbchC7inVYebcGM438hBYhocqyEOawmhB0eDGuIZkaGHQBGTbofGuMGskBw8VWrDGCFsAC0AKadSD2IoANz6AHkLjAeABpADq9S2wFaMHUeTap1KDWosQAZgAXGCUZgABmJGVE3mmrW2SE85A+EHqADZyp4AOxERIMk4QGCQShVVYZIrQOmspG-Z7wdGgAAWfV+lFYqEo11J5P2lKK-L422s9VpjOZbOJw2GVOaGU8OiFM0CXqDCs1tus93gtlolCKjx1EFR9QNRpNZotwCExSkoeqPFZEZAcMRiAaAFZ6UyWeybvy-dNA4sdAL-eNwO8iq8AK48WEAWz7fdoGcoJAExjHY+VbZbSB43YH-d7Q6EI4n4+MU+ABEOPA4AA412Pt6p7aVpx259Z1xO3Lir4eNxBwNuL-uH9ukKJFwvrufc5372vW9ALXTcX1zN9r2MY9TxKZ9ilnSC1w-L8Fz7X8wCDWpwGhLCihwvC4Mwwj8OIkiEAI8iKLIqiQEo2i6Jo2j6IYljmKYqi2M4jjyK43ieJIvjBIEwihMIgR6mVcZoEFKlTBKOYCCteAkGsXCIFsIRiwmJtKALeAJKklSwENY1TUoDhgFkxA5m1BTSkU5SIFU9TCwzbTxl0-SIEM4oNCTUzUwsqz8VjSBYQchzICUsNXJsdzti8kpfLRAKU3M-UQrC1FvJAeTZmipzkDUopNI8wYkuKCSGBgeFOy5AAnfVygY+BLPIHN4DmRwO1EOLbHaJEIt61A1SszqIG6hDRFg+Bbm8-JhuqURRsQWx8QWiojKCGaxruEprH81g6sa-VKD3VqoFqI44ugDFcqpebY2AUsvRSy6EKinrqhKqikChUrgHuqlWgba04Cox1nUrN0a3DMbeXIr4xUlaUkFlCA0ngJRO1UTx6kTeoieJ+ooHqCUSZJggCcp4mElhAB7Eh0hSYBe1LHQ6T6WmiYu4B8cJ2muZ5+oLtCLAMAAR1ZoxmFoLRIHJkWqmFnm+CVnm9AxcguAZ5B4uAX4iFodn9VofEiFAWJRH8BmKEgLBVdpvmBZFp3KYujFWC4QMpH0OWFY12mVe5tWg8pvQeC4VAIRQXkcbxmmebJimeepwXKfppmWeALZ2c50PnZAV2efdkmLsoXsAEtFD9qx-CIfFS07PB8V+LBYWYSBQl4SxYXIJPaZTkX05FmwGX8LAc6MawiCITsTdEBlYQ2gwYAwfV9VUHgiHDkmQ5F9XU+D4AJVCWEthQHqjZN0szYtq2bbt8gHbL4mXcHym3954BQgIHAOifCMA3JuLc24dy7j3MQOh+6fxJsPNOcC6asD4HuBqCAOiz3novZeq916b23rvY+EcQDf3qEfZWkANB0lxFJeSN9Tbm0ttbW29tHaFw9sXJBRMyFi3-oAwsARG7N1bu3Tu3de4wIHhneBZg97E1HsnFBaCEBNAwEoVEQgS5DzkcQqm3DSZKGoJ4SoMxgB83xAAD3kUTA+Yc9HEx0MwLglBWSAKmOIXhXCZHEy8b2UAQhVpdBQNYEQfAC4iw-j4nhHDy5swCUEhIRhcRhJ0LEHgliO5aCQAYYw0ix66JHgY-mrIRRICsDkUwzACCUFRKoLuOAuD4iEAzIQyRLFeP5gYrxdJQjUFsAkEkIAUn8DSRkrJOTjBaGKYUxB0TSbWH1LuFAOQ4DMF7BotpkASAr1hKyWI1hRA2MkqQ2JxMKGa0gHwDEoB5IoFCsAagVdaAEBybQHevY2nABwJ07RX8zk-y9j7FIlg0B4F7HwfZngjGwg3vsw5xy7G0wucHK5Ny7m5xAAyVkLzgAGFUL2LAWguCeEmdM+ZCDaaKKHos5ZMxIDgGYOozRDSmktK+T8gFotvFuy5Z7b2vtgA8GAcIsBYjIGSNgRS2ZVLinKPQTcTBc8F69iXivHJ+Ct470Racw+iKqE0KkuSBhd8mGP1YS-dhkSeWlz5b-fh8BSWpFFaIiBEjoFSoKYrBxRNqWZ3lXNJgWCVVqrwRvLVRDla6vsZQ6htD4B0hACa++zCn5sN+d0u1f8AHwAhCAkR4DxFQL7vk5OMrKZ+vgQGz4Uhg04PVWvcNhCdXADISiiOBr40QCrkm42jCH4sOfq-O1XT5leOzQI4AsR64usLRKj1padHeqKRS6tIBPR1tVbgjVTbtU+pOa2rl7b96dqklgXtt8U3mqHVanmUTeXWondjEVoDXVFslYuzO5b9GrtQQq9d6hN2hp3QQvdUbD16v3XoONUk9aGz7aagdabLUZrHVmh1EBcRCNfXO91JaZnLrmWPNdLA9ZAe3Y20DkbNbRuRfqmD8AFXJrNYO9NI6-kk3HRhkAq181irdcWqRBHjmVuQX+uwmpID4nEASvgBBUMPrvfEwJKRUAWAoEoHALyhAtrbYi5xrj3HAFRCAIgW8tCbNE0TSlFbilGJMRUg2UmZMQvk+xzN1r-EqcGcYbDBbxV4aE9KwjsqKVXj6AYFZNh4hSf8Jo3sRBOXWtHYpou5g8ByikI+awTTKANQU7a616WThZEDHxt9878PBZE3Z4xpjoDWDgORhtmrm1Qdo5TY9jiDNuP1lsUQAgQBKCrrCbahFHQtkLE6b8i4uAaD4FBNcH1lten0PkYA-0NgG1MJAKwEIBsgH1M84gLcMCJdUHuSAOULzWXGBNkoKxEDzcW+uFbb3Fj6DmBt9brNGVGFWlUDaIBQiPf2A7eMPQ9yTZYNyzooTwiICcQ9d71pSi2DBhMKLV1jKBgO8AIgrICWiG4GN5yPBbuDHu8UKGM2+xzYWw+McKPme1DW59YAQarArK6NEMwpg5REDML4UFEU2RoCMCZgZwAgfAA4KITKB1gAIm2BoCExREzFGgAQGA20pBxRZ3NZoOh4bbBcPcCMUhhVmGGpAYwJAtq2nJ9D6nig6gHuqP4X4+UNLKAN7UZHJhgATTOKzQZNwzCAJl6ENweBJ0QHyE8bYUOhiw7yPDjsno-dZlqOjqkWOzHOWAOSPqkhWSvDrOsJX5Ueiq9KBrsa2vtqmH11nvYhwTeLDN4X+P-MVnDWYMYVVbQ495XB0n6HXw+Zp6EAj1Ymes8UjR6kPPBe28oGLCXqdAg8AKirmN14FOejWFd0UBopOkCe+91db6C-Vi1FMMHnobPQ-0osVkDglB9Szgr5GKvKu1epSa5bg64Ugt5+5t4dgd4TBd76w94QjhTrqoChCkgj4JBj6LDJ7FCT5Zjp6I7z63495L4Y7jD55bb6wK6b6xAMjGCgCQB76O6H7NDH7Uju6rCX5rS+4EF36RSP7eih4rDQDMAQgy5VysgCDf7+jQDK6LC14lD17TCN42QiTgFG5QHjAwEbbwBSDTrW6FhIHy46ArSAzSETCyHq6kwN4gHWhgEG4QGI5qGDAaEW6cEIE2BIFKD6ivCrQwh-4yEAGIDyGV6KHWFcGG7XQOE9BOFaHKB956GhD+CeE8A-4+4mHjBmGAGWG67KG2GqEB7Z6aGwEpBKDpD97GChBRgxhUSYFFDYFw4z6LC2A37vag4+HEGDCkF35aAgCUGWLGCqCQAMgtGfhcAOgn4lisEqTsETDN4G4B4P6nDP5h5XQojS5ZA4Csi9H9GDG9QjENFjEIBn4IRTHjAzEs5zFB4LH8GG7MBjAy4CCsCWI74DFDGiC7ETDMElCHG2jHGOHZEMTnG8Gs5XHh7MBwZ3GsA6BPHbHkQfFu7n4-GRF-G0QAmXFLECEsCR4rJsi9HSbADRhhT4jO7FDVGIC1HT6z4h5NFvYtG-5tE9AdHGSAJ45EAMhNKTJElUhU6lTTZoS9j04vZM6hHM5rYbDrYoC1qmDGBGCaiNZmCXb0GI48DeFUQKjfZbaiAwAECQD6hCAYCvSx5hQKlUStCbbfZmBED+CQnkBCCdhNgQnTAdQMTQBik-ZEChDbyiAEC0D27UCHC7QMSqmmlxyanam6mvRcDeRzB0h5HbAmkunmmWkUA2l2nbS2COm0TOmin6BukelenO6vANQcnbBfZBkkghk6mMB+AsAiCWKy4CCTY9QuBaCUA4AjB7gQ5uRmLDa0CsDMAaAYglBwZJB4AWZ1mTaJJsAJH1KQBcD0ClhYBID4EPDBAQAAC8QAA');
        Z55['grappleMapStrings']['push']('2,Cycling Nodes,The 9th Doctor,81585,ILDWJAhEHsPhICKwBySDMAbAVgIwHEsBXALQE9IB5PAJgCUsBjAd2CoDUCALLASQAiWAAwBDAMKQAonVTC8GPsnZdegkROmz5ikADtUbYFIDUAZyRT44kG0gBzYADF40YDeO3gABxAusGIjGkNyOiJbgQVEgAgD0AOocAB7cANIArMIAygASEOJIBUECwACapdGVIAVFiCXxALJBDZClRlE1KFWILaGVnUHQjc2t7UEDiNDl3dETCENNiFKj-YVdMxDLfbNrxcDDSys7tQgl0xuIc-D1iwgtbasnF71hHbuT+7fw92OX7-NlCoXBBXCALILLB7HdYXLavcb-a6fCFHKKQJB8PAwqDAABmwmBhMq4EiRJmAC9Yr8yYTIAApYCkKJNExRJAEUmwyCc+BIAQAFkGwAAGvDNpAAKpsggAGSFopR8TFyCcgsJywAtsrgCwpNicec7pAAKbSuV1EXa5ZSoIsAiiIWoZkhbUsAT64BnIFGvCuvV7UpWJbAVm2ggcIUS73fBwe9nm077NUIZb2D0sJweiCU6k0i6QErC51uRAZgAcAdSIzytqcSSFdO1LQ1yd5Lj2wrghwAltGIBnaEK+xAWjltez4kK+FbIKI41INUOostjeOpEx5cvgBuguyACbKkr0VvitNhgjKqZKHqz3OWXMlUimnrAa-M2IVvM0hq6m2JmVNsAACMURuh6JSpE2kDiOOAhfBAJRUB6VjdqBkC5tAAAKUQylSbICG+rhoIBBK7gIO6JtEyztqWUgeACSAniALQCLB8ExMABBbmYlQNB+X40nSbpMZ6wCNiMVa7tEiFWsAACOaEYcA2EQsA5L4exwDQIYqmEbyQaXPxqmBLa4h6Ti5nMcAxC8UZAmEjkbo8RaKk3g4u7iCJ0A1ocwCwX+RENMhkBjmR2pYbmTTOeE6F7JJUQCJhsT2USAhmJA3a5rq4FlNF8DWqBThcR8HBdkaAW8gQxUAphM7bAgSBOA6HykBVIDLFgcaZkOw6eKG4QELiewACozs+pZODyOJOiMU22N1FqjbNhVzSUc4jFQtmfilFxIVIq1lAZMaZbWzWJqIc0tJtYYJkRWQei0vq7k4NkWoGKKdbW1VEUyqlzcA7IetA9DLiabKqkKv09nek1CqVqn9Q1sp7AyKK+LaUgidmeE7Rs4h4HiIOHDglksDkSSXsAxpEym4hSOQu45E9AL2CZKYZb1jWvQC8S9SucYELElN4Hl4rdpZSA5MN1LQEww0otwbI5Eg+qIbmyzeCJjU00R8SXcAWONT5SIcEdYukzRAJ4JpLT2OOBAAOyHmU235ZAMAiRmWBw21wBNAzu7okOrvipBu4EGWlOoDOWCewIZW61BJQeTl9CRZARYY5phYiVYi5hqFALSyM-DPTgeyiKhhxnqWBCkQCpSTje3NIzBFpMCWbtKraOR8DLwDDb1LTkvXbZZHse6gyTPd9x8ojXUaQFm8gBAPsAe4KYcei9WTOD96U+fFEluMXORkAAJzLwDUib4mTAAGwoszCB2i3YLAKIllNP97INJTg8oj0HeAgehKaNxRLQNcZ0iK4gAE4ohrg1HIj8Ph4HHocAALneHItUPiMRROQBO-Z7RCiYJbEckAgIhxXufSoEpxCYQFheD490iSYXPqQYUBApCwL0PQPgFF-BszdvVeAup-qVFwokFIGRsg+XRHwWhHxSjQIoajYE4hYhAWYKULIxA9xSG4O0CUkByAwyzJUZY9BtQbBcDrfKwBfY6jokKW61xYjkhwAIDgGUsAADdBzVD5AlAGudoI2KCeIXqJR8GHDbjsZOFp6IpmAMIhEUS9jJIcWkv4iSGLIWAFXY4vVoAq1UkUtElhvrvzDocY2vI-JRA-PyFgQEkClG8Hgc+rwTFmOetUmYViIlVHEJyVAHB4jpGII3bRpBJDDVEAQJwLBOGxD8bEDZmyNlQFiA7LZWyMBrP2ZsrSTBrb2AMlYbxHBiB4A1E4DBpB4hIHsBKWg3BuBMHDLs45GyjC4hML82I58fm-LYBg0Q6QjoeCAhwO56RuB4ESKAPgThUAwFKMKSAWAAVAs-DkI5vzcW-IrDKeIxB7FsHGZM6Z8RZnzMWcs1Z6zfk7L2b8w5LLjnuCArA0AMIUDXNufcx5zzXnvM+d89lxz-mAt+SC6V+zwWQqOu2WF8LEXItReizF2LiXHPxYS45+r9mkvJTrdy1KpkzKwHMyACylkrOFEa-ZbKgWcqBTyvlMINxCruQ8p5Ly3kfK+RwUFMqQAmq2QqoFyqoXwGvOqjUCKkUcBRWijFWKcVyoNSAAlXL9lRs2Wail1gUBWtpfS+1jKnUuq2W6jldaTniCAnJfl8A4B+pFYG8VIapWxsjTm-ZMawXAAhfGiA5ok0pq1Rm3V2a8V5qbRsotGyS062ThWm1dqHVMudQW+tWlw37I9aylt3r4AEi7QGsVwbJVhsVVs2VQKR0RvHUda607NVpu1ZmvVQ6tmGoPZs1d-EyWloQlSiZ1q6W2oZY65lnqj2Ps2ae7l57204k9BwG5-rRVBolaG49T7B0vuI5suNR0iZftTemnVWbQNAaBYx4AqRySkEnp4KQjgt2wZ3TWxDrLkPuuXclcQSRuxmHaJAJo178O9vveRv5pH5VKbwqAVAUhPwoBtDR2d9H-2LuAPm5jAHi1iQEPQFSVhuq8arbu2twHtnCcbU5sTpR+TNWgK0bDuHu23sI-20deIzMbNfUqvEDQnBhBQJnPTP650MdC0ZEzRLksVjpDgDBNorDFTs3B6tCH91IcgGptDrrxBMAwBwFA3nwByZ7XeojKHlMhbIy1vCBggI2hQM1eLdG-0LpJUutzLHMuoCrrlqDNLt3wb3aJhtxzyv1pguQDgdgtJsAawFvtD6B1tdUx1tgjUsjXhQJx-rv750seM6JljdYzAMy6KFfL-GisLZc0thb0AODTi0lpCs22CO7bU8+w7A6usBTCJNG7qXjXpeM92UgbgrB8Fq6QOHrrPsnu+-yDUZToBmRAPEegoOVPHPCyRk7Z3gDl2cH42Hd2Ec5CRyjsSUAFAfdKx15bJyft-cJzaeIqAycHYp2T40dJQBBhQPnJwOBGejYR9aSbYlpswfswJ4rQnucibc-937jhCeOCBwp5r+3QOU4o1TKXMvOJ+HUuvAQTysBmFEJMvQlQ1pY0qJhRGiB1nRFiMIckDRQ-h5-CfKP0fPDX1KcsEA0ZJ6QArJJDckA1TPPcMIJItq9BBowJATpyb0h2lURxKMbD-cID9xqUgdeG+kF8CYEBuYySaNHjH6PdughwAICgeWseTfKCDsVDcHhIC-QaBKDUWA9CiGVq8wvxf0jpHZOX0SlfCR+99yYRvjfm+t9xsHrvp+e+ID7yAG04A27mi2yga6FYgyQFYKxpA9ycCiFoHucgCgblQyjziAiTiG8H33r1EHYTDygIj1P1gLzBR3j1KVEmkE4kcAJmcEdyAhyCYHuRYC+Vz1RUgD8Xd0yEqCGAsWiB30oL33r1oLrxgGDwjwjzbzgNYKomUCkmWX2C0ilG41OS2zeTnztEd0THem32r3gFrzoNoIYJD2gKgJYLYKUIcTj1UMaWvEViJ1nhvylHEk91pw-jmg1lSm3F6j8DUKgA4EMExT3GIDtDcRxHWkJDJgGTBEsCQIgA4GGi+ScAwBFkgG7gGgkWiBaApmiBMWvngCcAlEL24D3FoAdmUhnHRmBBKCYDMOcAsK0isJYBsOID5C8g-goNAhyFcKgHcIBngC8J8L8NAACPtmCOdDCKiAiMsCiJiJCHiPSFyjRhMPSOiBcAqLBByLyPZBSKIicOBBcOiHRATxhGqKWT8McA8G4AEExT8niA1HPjIHoUwgXkqVfCQFoGWVRW8D8TuQjBwHJBsU4xtCNzzCkCcAECkAwQD1iAoOKO6FxGcyqFqweKeJeMQCSg+IEhZRmCQAAF4ISgA');
        Z55['grappleMapStrings']['push']('2,Compare or Contrast?,God_Of_Bonk,79938,ILDWJAhZPD4cAisAqkgTATgC4GMBxAMQE8AtAZUgDc8BLSAEQCMMBWABjwFsiAvACaMAHMADCHAdTJEsABTIAbLGNZsATiACi4ydNkLlq9puAApPnigB5LQElo8AObmQKYAHcYCFwHUQZsAAmgDOiMBakBRe4bEIgaHhALJRMXHpgQDS7ggpIXbphVk58JHRhRnA2cmp4UgEADJFVSUQKeWIHo3NgTUdFeGBvYhlafBdTZVOYQOz8ETAdK3awGyxSAASBYjQzACO4Q0A9ACmmUl4AB4AbBiKOZBIdnAI0NbLwCkksV3XLghiI4AZjoACsNkkTjgAA6oeCoMRyD5IIgvOaFahYAAsAHtLnwNuoAIYANXmwAAZhxwpFhgguh5-vBGMAyCdDqdzldbvcII8NlhwtAKB9Ivk6gQABpMiCAkHgyEwuEQBF0+AoyavYAkmUQSJ4D6Y3H4wmk8lLGm1TpEILhFmSnSIY5nC43O45MRIMRovloGbo2Ven0gFmof3wFJ0MaIT3eoXAZhiAPwWPB4Ch8MB1PxsOWqPpbM7P01fNxfyyklmaFkDAACw4di0ADla3gNkdqEcu92u1AjgB2Hs9oEdofdiJYYSmPXiLSXRRkAB2SCcmCIHgpAGox13RMB252d1ud0dRAAVIEkTMuLRnggk7gCA8nvuDncjw9jkZtGCV6t1jhjx3PdnyPbdgMQdxHAIJBuCwSQCFwICxxA0cwJPPd1SgFBGBJRCN3AlCQFAsdkKHTCICglwiFQbhFEXIkNgAJQHE8YjInssFYndo0cfcQCbVBmCBSBuLHdjCKHLi33ErUQG2MwxCYj8XxgMShxUncYDwTcyCgEBwFwkkAFdmF4HAyF8FdUDrVt73UnsJJPaS2OAIllPcFBMhAABGEkzLYWtmF8ElQDsIgmxxIJJUgRQOO7VDPyHeLd2AAhQAEakInELwmxJXw2GMoJfB8hcxEgM8iWIDwyElNCvzUmSNPqocYGhDYBH0zx0xJEyzKICyrKcGzazskkHO7Jydxcni3I8txgCbXz-O4QLgtC8LIui2KUtPYiWp7XbRHSzKVkYFw8oKoqSrKiqqvXWqDvHRqT00r9IHazrvGAUQjNM8zLOs2zCHGprHJAXaZtk9ygU85AQBJCgiV8AQcSfJ7exe98MaOb8YEdHymNoEjWqxsc3tJ0ooAKSA5wXRcWLByaIckziJq7XiIDPBGkZRtGSZ7V9XpxvHHhgUAzGoJ8ieYOqksFsnmvl56qZgZVCeJkXFeHLXVfh4BJSSfGWzbI3kwGI4sXSI5rjIbg7Yd7hQSOM8kj4N2Pb4c3vZ9326nTBAkEdGVHSs8RUHnJcVyYxCuGjP2IEYI5dWZI5oXtjO7aJOQsE9vOE4LwuBkcSJtGgFBHW2LxHWVQ2DLMDYi4QORN3SFvM8znEjg4d3e49+Om8HgvHSD8vS+AFwk1cYAcRyz4QGpc7gDkEBURAaFedRgRyq0YSmK9ofl9buJ28dh2u57vP3YHw-b+TEeH8cCuXG5sWiBQAgukFRAWTDwfHlLiUEkZ5CBECBMwUANAPgeDXkPVAY95ioBErWAQGB+zADwJmMu-RZgsiJB8VeyBx5QBJE2Dw0UBDGU2JqeA0BcwBi6GmbCgD4DANAeAkIsUradClCnBO8CiGIOQagtYbIaiKG4U3BYo9aGkPIZKSh8lZwm3KkSNQ9xPTpBQI4WsjBooT18HBYyZA4RMMDuIFY3skBJGsBsFO3d0iQBgTQ9Eok9qzEdObaxtj7FZViI8IgLi5hJ3cYUIAA');
        Z55['grappleMapStrings']['push']('2,Grapoints,kklkkj,64031,ILDmJAhZIawhjrADYAkDGBbAYgdwCMAmFAVwBM0BZGLAFwCcCBxRgQ3GQC0G2iAPXkQD2IAHYA5PCAAiANjR4AoggDCIUZGkQVkAIrB1wGpHArgGEPHiJbd+7esPnLiE9ce77zz6vAbvj7egR7BIc5aCACMAGoEWACsABYEAOoxsACSOBLCAJoAGpAoAGYA1AD0VdVVABwgaBUAbjU15a3V9QAqCQCmAI6IBhIxqQmkealRKFyqkF1szPhcBc0dVVAVAOzrFQDMa+vASkS9AA7gEJnAMjExpPE4dFypeqAAqkRJSRjMMdu7bTtdYATgB6zwkAkYn6eQQMhAsXiyTSGWyuUKxWBHXqwEaLXW2Na3Tk-UsEGQIzGEymMzmCyWeBWhw6mx26wOBNZSjK-TEiHeNzuD1wz1eHy+Pz+4I6QMqoJlrUh0NhCGYiLiiRS6SyOXyRVK8pxDRZrSJNRJZIQkUgGGkkCoBgceGYAR8MgqlzsABkKtpbAAFEFUABeofDYfCUejMdsyCU0D0CeABmQEFeIC6AClgHkAM52KiQHMhCoAFgcqgquNsHv9sc8AYqMb0qidiARJZCqZTyaTIB7wBwNiUAAYXd67AiAMrtnwBsrOFoOasN3x16M0N0IPBt8LmJOJ5PHECcLhQCQYSAAT3rED0w5CHq9tl9d4gTbXvlXUc79i34TxkeiYwCANDABmwBdOQFgFrYCbnqWFb2FWNYdn6X6Ns20atnOEB-uEPaHr2A4nkOI4hs4M54R4C5Lthdg-phLgbsxa4Hn2x66KmiFQi+tgPtuHjPg4b72J+bEuExknRkBvYgcgcKRM6zB4Pxa6gMBKZDu8eyQEk5BEMh-6QNO74Nmg8kkZAMRSIU5CkHozCTrWwDvHBzGmJxyAxF0vw4HsBB5pAACW5l4DgLlsXkWkGDgun6YZxl2AmZmSTgVn9jZdkFA5ehoFF1puR5mHQN5IC+f5gXBbedgPoVmF6LFOl6QZRlqiA5gya4E5TrmJVID48bdR4TkNbI-WVkNnUja4Y19fmDgIsA1wuMNs3OL1rmLfY5hdQ460bU+k32BlniHUd64nXY6pua4kBAA');
        Z55['grappleMapStrings']['push']('2,Merging Tracks,The 9th Doctor,43273,ILDGJAhZIawhjrAKwDkBaANAUgOwEMB1FPASQDEAlATwE0i0AnUAd2AHkA1AcQAsANmQAiAgAwEAwpACiAIwBMaMXIDMZEAEVOvQSPFTZi5Wo0IADnwCqyeJIDmwM+GCOcIOiHYyQPyNpAKAJsAegDETX9EEGFgd2iExAA3ENg+AGoARioZABkqR0DgADMxBJ8rRM1JcMSE3JCUMmKAFysqSTFPKE0ACVyE6ApEn3g6xMkQ9IBlXoB2LhlNFp4EK0keMujI2vGEAFlgMb264b4W8uBKk6Q4m7r-SQAWQeBcwvutMgATdk-EGzTP4RKLRaBWADO-3+wyIu18VyqFAG0Pu-mRr2G5UgQNR9xsAA4XBFejhgXiKe4ACrkiD7SAAS1pXgoq3G1OZwBkjM5rFZew52IKCU0-PZwBpCXpwu2YtOYCh0W5AFMXv9YlZunj-DI2bcsdF6Xh4cBWDx4ohJjR2pB0gAFUAAW1iEBskA+CB2rwwW0Q9IZJrtBIEMjtVOKVC4VHCw00WoQFSqPAAHglYkQAPZpkKZNAZmhcXrmABeAE4IDq9Qghol6RCTXyAI4JSalqkENB0fZWFBcYHFkKcimfNBXE0+D2engm6BmJWQYpI44JAdD4c3O3ADAjVyJPk+MFOWsLpfjN2TrSg25yWvAdKJFJoWDfb7Kx3KqnHWPxiCJhJmzlYjtC9gGEEJiwwXosCwcw8FgFAK00XVMRGSACCTABpFsQmTaYOCwPhhBoAhVHCc8RSvBB0xA7kGRAoMrAAKxDO1vnscxgTOC55zCdcKX8HgUVuUc+IpUITS9Q8LX+O1UgybI8hlYBhlKS5rmiVgalRMCmladpOi1AShOrZS8VYH41xOWAcRAs1jIgDUf2iGwaE5TQeCw6FpRA+53CsLN5yZf85USPyAr9SAlM9EKEjCoUQNFKsEi47FePVYA+FUYcagoSQ02AOhFQiqKwT6eyoAKudPj5JLoWszQEsE-LNT2erbJiiqWvGNqRQ6mAricgFGSqiBqkSWIMHUhNIHdBJZOEIhkzIYtWDtDgCQgYY6AZS4fPcrhXjjepB0yCFpn2AlhGLJJENy15phNekCAk4RfTxGwGpFGRlwrYAiB+hFy2HYYuCm39gAUPceB4Yt9lh+HR2mNVEDA1hTvOy7rtug7DzQGjID4CF4bhuGkIAV2wgk0DkGRGM3Ak5mBGwgu2SRLNEup3Gkg4cXZ8Vud-Xnh3cXpj1xSlgFF7FxbxLnUJl1E5alIWKS2oqE2AN6EHMoGOaQdzyv6vLUWqA8KXgAGtAxYcLb3a2xJ5EVhBNWJGK1vXTMKy4RpuWcTTRapkZM94TYsm2jjtw3PngYlED5KP7lt3qE5uGOkRTk5mbc52PZhAr1fBgvc-GR4g9+kPoU0MPzbASP1zT5P1yzkU2eL+59hCDa272MhWBkMuYi5Y8eB8upYhEpVgHCiIc8PTz5xH6FoCpEDDn9pCB9A4B54ijg9wcM8VZBF3gGmY9enouSshyfIPncYDlYViBNM3hB3A4R6j+154BWAB-oRfr-D+qJAHin-ogbkT8vA-3FMA+cUDTQwPlOA6ae9ermHyhXPENQtLRA1EXT4OCZxXAIQHJquNu43GbtsWelDEhBAQGgLgJAyYMEyAIDA0h2w8AoKwbAIQUghCEcIkIUAQhzBESI1QAjJHCOAJIUA6Qcbg2EFwLgZM5COgoC0DAcJ7BWAUHwPgoAeBcHEbIoRfxijpAsSEUs5iLHsDwHaAQtRjaZC4JolAfA5BEC4LASgeY6BYEgAIaxtiu69BkRY8JFiNpUlUDQAu7AmEsLYRwrhBAeF8KwNE2RYiJEWOkYI-JCilERFAmojRWidF6IMUYkxZjCmyKsTYix9jmmSKcS42oWJzBkEUMmWA2AyD2EaXgWJsjIl5MkZMyR8TEnq1mqklArCiDsM4ZAbhvD+ElMkQU2xxTbFclLASJgiBwCqPUZo7RuiGr1OMaYhxLSQBzJER02xrBIB2mKBhckZgPFeJ8X4gJFAgkhLCW0qZIAol7JEW84RCykkIC0istZGzMnZN2ccmAzzJFHIsTATQvz2DICzJATIOAkjfBIAE4QFA8UiNabYj5jjgDONcQgFE3xphqHUZw4ANAEVCOmXC4RwrO5xGLCgKaLpehWEdKWTImiGpoFhTiyAjLhEEtKYo5RIAygUqpTSlAdK0Bassa8qFkjWUvI5bUNBKAFGOgEMMhQVh7DfH4EIHg3xjHqsJbizpUiZkiPkXqxAG16VoBaIoUsEhTE0BEPsewVIA35KDYc0Nciyn6uQNG2NCh41ZK4Em4QKarB4GzUIg5RTq2iNzdWHwBa40JtLSIUZlb621tkTq-ZjaKwaBbUWttZbRlpu7ZmutYqa0DqgIcSQFBIBJGICgMQyoz5CutSI0VtiJUbRwNKqaWIyBWB4KWcwcg8BUCaPSi1g4rUsvvd0zlEAcbJipL40s1LvWgB2ktCgOBn2PvacB+1CAiAgA-V+n9gg-3ACWjIZMwGSjbuEbarp7KekICwFBz9RBv1ergztMQlAgPBuEcy0DFHLXgYgN0aDBHYMCHg6RpDKGJUYaZVh19IBtzAEBY6bxvj-GBIzME0J+6YX1qk8IPgdBFxD0XtQR0yYkhqHI58kDsiuOUZ47UG8AnPFCeBaJsF4mIVScljJtDIqpUyoQFLNF6TNnbJyZOzVNGQh9rDXOmAZQrnVNuXUwxjymladQ0+rzL7ajKhADyvlZMBXJis+m2ZtnJVLrOQiXo7AP54BwOYDAvqhC9CoBmDA0xIB4AkxxjLunLVWF6Mi4A2hCgJdUPyvKW6InSZnSEKTWXzlDzINoeVirlWOgavsHzcip29u7f4ElRsNBGupbSkQVA6tRa001lr2hGIgEE8JkFYmJOQt69Z-rsn5OKZ8PENACqlUqvsPsKrl6hMsarf1nt+LJ1PCILlo2lRhAyBwMRIgVA8CVcgB9lAX2PP3tmzW4AAOgfQEkJ4VRxqNvCFGaupLuBtvUa0xwCgfAu7aDwEd3lnWkt5WLGQHgAhqmltSzZ3rcmFMIk8o9ibL20DSDhwjn782-ui7R6S+R8B6UEy9fYMZqhIAQgIFgabuTReeazT9pbfyjZZll3weXivleq+m99jVSPFvEr1xjqEFAl1G5HiblXavXvva8Sx-97PrsZajbdhEKIrBnooBIaQxYTHJnMN8brTOWeaPbXe6L2mbXAbJxTrQwALiRTjFgcrZBehoFYHIZnpHQf2AJyM17FvA1a+nTiyXRsXgO7l870ASvXfTYZLDz38GetxL63uv3oEA9D1yOwfIqn1PqAryw7Amm2WRZJ2y9PlPTTxdp11hDPuh+9cPQ5ukY2nuTfN4jrzyOG0RockOrgOPTUiBkLP1Z8-ic6bT+TtfxYaeJYFUm5nrP+9oUrtd8B8uc7tgARJxtnsptXsNdLdz9u0-NhBKg1sTU6UF8Xkl839k86MQBIZgBeAS9v1QAa8M068FsfskDLkZAMAIQ40-9jUyt1M4Da8rdKCr8YhHBUDccGVk8sDU8cDsMIAEJgAOst9AD5lB8Ylh998poOBHAVM1MNNX8BCtNcDgA5goMeAiCkg-1GQ1AqAVAFBMgVD3kwMhCQAu5+lBlhksBRlxkd9pDesEkWsQA7Qj9+cYD9gWCyC2DjkkCXhsd1t79y9K8ic+DON38M9WtgBRFRDN96dBVHDZEpNZDPQQA+doCu8e9PsSCz9tcG9AcpcZA-ArBaD6Dkj0s98j1PRHBJ8lCZ8wiMDMN+CzDk9V9LwXRrCFAhkq8HDh9gCnCB8XD1YqAMjj8Xs3scj4c8jNc-DA1G9oAZAQdb9gi6V8c59wiItIj2iP9Lw2QVgdC9DhdZj4CCiFiij+oZBLkqkblal7lQtGlTD0MojKdIAzAMAAkkMPtwtF8ditN3IGRrhIh4hvgvilUvU2cBi0t4Vh9uQMwBAERphHBehNkcBe9SD9kxcQ0JdLilioRIAFACRU1OsxAX8Ij6tgNATgTIBDhRCkgyAZB49HQoTLsYTxVh8wCEQqQxs6AaBvlvg88Rczj69CVoACAcBtAliXhCSU1phNjmjuNWiXjdjojIhNxRDGJGS0BqUWSJCd0pCUjOTR8-woCT9YD8jRTdVylNo-BKU1iRBFS9NlShEGsH1cCcQQBCDz1dDMSw1sTtVECr8hgF0yS6Ci0-8ITE1KjYTqiD8fAD5IB+M3tz1iIYJ1Nr0fE8pUwHgMospi5NJ-ZJU6ESz-xaF-gDxwhagqpkAKAxg+AiB58JBGAfE9gq5fhi5DhLY-44jSy+yQBDh3ZfYERfBkB5EBz+oYB+MOAqQCMFBV1yAaDwzSwy0zZi4QgktHQMAtytzqceB70BwqQSZiYhz+zxg1y25tBYgkJwZIB2BhgXQU0ENQJDhF4bplIv9gABA7Q6A8BlAGA0AIRsA6SRhJBehY4OZJgu48EQgjziZ4ZKFZIzzK5Jz+oAhhB2BPIoRhBHARJ7yQAqQYBPAGEz5ZBQJ2ApSFDSU2B5FNBYAIKIEwKGKTgQhX4QAQgAA2bc7incxiWC48485CoS8YKU1rbkMSrwLcEAeAXuKcgc6YVM1XcwDMqgLMwVEuPMtuQsxIYs4SyhVgcsz4SsjWEADQHgdgFwCgT85MXPfPGQKMqPTRMGM8qC8afi+CuGRC3svSkS1C6AAIJYYAOLLSMwR0GAA9bQPgcNJwRwLMSQeADCRwc5ToN4EACma4kAOEUCWATIXUlnDAfk7Qn0vvRCuYHcnijAL5JIP3EIMQDy4sCeHyxIMc7uPwLkMc5AcADU8sYQF4O0L5XwHwT6JMkAKwWc0seckgRc8oiMh-ewOgItBQEZShDciq3c4AfcrzQ8gS2GU8pqkcyhK8iShEfwSAWIQK6MLZLkboLAOk3MIrSyPuf2cYMCUeMCcwcqncggO0UsHakmfany5AcSpCfyo8R-U+SILCGQKEQiyAUcfuCUdgKWcaCGtuJY0Gt9KkExCgVQOQCEGaWyBGtuGwY6wIKwJXI3BQBCI6Q0SANBYuWMcSisLgIvYJb4MmGqfKLgaeD2PuDGr0rGnhXG6yEqFkdCNuekUm5ScmuXBQTQ-6ZWPgUebKMSlqyAFm1gNmsmUUDBPBAqQaUSewYGhALgQWnGuQD0OkvmPEEosmPgH2YcbkJgBKb6cYWSbyvYF0PEHSZoNoDoLoTQaYDi8GvWdyWqfqB6B4OzduYcbQNIa+RSPgSAXIDMM+PWcUzebkAWHDS1E4AAXiAA');
        Z55['grappleMapStrings']['push']('2,Fight back,GudStrat,75194,ILDmJAhZIawhjrAA4HECGB1AJgexwGFIBLATSwDkAnEACwAkcsAlAFRwYCk6cp6mrDt14hCAYwDMEAMpYAbMACKCAJLAAIiABiicMgCyMYzuABqNADsA7ogCikAI4rEwaww3hX3iBoD0AKyqAGYALgCqLIQADGQQkEoACnQoABxIwBjwrg7WACw+hcB+ZjIMAOwAanZKoWgI4ZBYXohKGi6IWgAaLQhG4kWDwLoWNvaktq5K2hhDrv5BYZExcVBKBgDyDL3G+QCmc4dHjc3ebR0I0D3e-Ufeurre-pOu1trZncAARix3SEkpdKXYAALXCN0g1jwf2KpQq1Vq9Qg4Q0eQwwSm2mkrmglWhf0SflgdDMAEYWHYADIsFojKwvEAOAA2FwgSgYhB2QwWIQiUVi8SUaHCXOgjxykPxrQ2e0SrOOkCZ6imCW80HEAGlvHYNJYALZAmG6EEybXAcFnDmi4ABeR0GFrYXW8XjKFnGXRBl3RpKs6qnHATXa3XWC1G0GmnLmnzszkBgKpbEwhJOgMuhC5KUIJQbYIYeWHH3K1r+jJBnK6gIAZwdwwjZrDrSt8b8lFrKZFaZ8mfdwT8XoVvpVBfVWoreA0dlrxsj9mjlrjGXkkAAVu2hZ2MumID2phtQCza0W-SPA2P7Bo8AYBg6Zw2Y82lxoAuvU1vu5L3XQNQPC4ri9mpbAuWF54JU0TTvWUaNtmj7AvIaB6lycwds6PgGJ+e4pFm3r-ieTxnsGYEQbeUFzjBEDuIu8F2LQDqoV2EJunuoBmAWczHsOBEgRml7XpBJr3t4VHWvIhCVK+m7AtuIAYcx0qgGQv4cXhXHzIR46TgJs4ZvOrxwfENp+H4kloUxOEgDmwQAF7sUMnElgWWg8TulY1qRgnQT4InxgAnCgpmMa4ckWcouaUMp9mqY53HnrxNgUYcd5ecJBn8AE5RsIF77me6ex4HZgwOYBTkaRe+qGn8yXkd5aXGAEeS+euWJqnW2pNMhOaKZFRWQDgv5KEBhl4kRXCJXMuhdDeNVnDMrWKAAHs1SbSR+pwsQtPVFI0-X4QGI3jokHxVcAU1CZiswBvItHLa1MnAA463SnQXSFdtfUDUN-AHaBGCXTCXDAJQBZyQN+6VAUPiA8D7XWGDjCQ940Mg5CYOgAArojrjI7DaOY4Uk3Tbp43TP98HAEt9HTCthn3Y9nW5v2R4fXtGQ-fFqQkeGZ0pRdrUBGYXy3UF4xPdmub5szu1qWzoU6pY1lE0cU4IJQlRYAE6MUKSTIgsQbAYGg2jWCCXR+AAbsZVtW1AfjlNb1uSBbDs24kZiSFWvRTholSVOjXx6tooQglgSigOEABMdB0OIaCVHbLvGZMwRmInfi+QnifWBoJCpAY7liCApKVAHAR0F8WCVLAqjaJQeBkF0iop2nQIMM7ifN4nQJKKohDKJRQPq5r2u6-rhvG6b7cu7b9uJ07luJ8AhIYNYFwqD7fsB0HIdh5H0ex-Hs8u8nqeJxnR8O9YhCktE6NGP3jzF6X5eV9Xtf143TKdy7rdTw738O27r3fuMBwBqw1lrLAOs9aQANkbE2ZsF7TxgJnF28804PV8qkOiEABgb39oHYOodw5RxjnHVBl8QAAOtufNO2c-B6gCPfFQyon6MJflXGudcG5N1Pj-EAbckH-z4YA4oqQzDo0ZMAQgKhwHDygaPWB48EF-2tjPNO6DF6UA0CgT2JhoT4K3kQ3epCD4UOtifNOtCs45zzu5FQlIi4l3YRXTh78eFfxEdbX+QjrbUKtukPI5sNCOIepoEAcjIHQLHvAyevibYoIvo7VRNsNiUmsAAT1sMgCChjCE7xIfvchSSraWLPuY0ptj86WWABsJxz9XFv24Z-fxxkfFp1aX4QJwTQne1sJEkeMC4ET0QRgxJGiUnGVqekrJxhkB5O3sQveZDD50KoV4q21jj5VPscAX4wA2Fl0aVwj+vCW4CMmX4Tp3SQlSLsGAoeUTFHDJUfEqZ4y56XOmZk7JMAjALOMYUlZFSk7rKsSC-sOyakWkORwpppzPHnOAIIjpGy2nACCbcsJ2hZGPMGTEkZXyPloK+Wkn5cy4gAoKcssxJTQXAE6Vsy+UL+5dHqS41+JyPHXIuW8q5aKukYp6VIpEAyFFDOUXEsZkAIWaOnmS2Z0A4CaF9gQxZJiimrKzmC8pdLIW52qf3S6sLjnuJaQK9pHcLVCqxVONA-S8XioJa86VsrSUzN+ZCFVm98lLNMcUtZDKBVMosf4UI5RlQqD4Ac5xRzOVmrOV3XlqLzl2z2BkqR2xB4QPxUo2JozF7EodnKh2S93Z6KVekKlfrNUQrKS7ENlS-DhsjWAdlca3HNMTfw5FlyeVpozWE1QuKc1OrzYSvl6jPmTrdh7fQ0j1DVo1cCvV9aHaNqTmGiNNS1wxoafGrtiKk29r5f28o6apGA2zfI6J46XWFplXqktajZ0VukeCJdQLaWBsZXWrdra9TtrhVy81SKUVWtTeewdU4uAOtHbel5UqH1upneW+dcZP00oDdqoN4LV3-pqQFPdHLO0Ip5SelNSaB1SI1A8+DzzJUFuQY+iZqG53GEIDWTD-qtXHx1Q2v9zbt393ciag9ZHrUUYg1RqDUjKQjpvQx-NRKWPTowa+9DBRuO1tXfx9dgmI5VhVioc2QHTWHvI+Bl2-bfLUGQFOe+YqEOMZUyh9TfgV4qGgFpbTK6f3BoM0Zmpg6xOke5ZJqzwjU22fs8AAwcHFMSuU5OotySZ0edXsYdo3q1WAqw7xyhuHdV0P8IZ4zByzPifC2Bvt1r052akZQOjiXnVIeY25rRvkqzpKy3g1VRjqU8brXpmhgn0X90hqF+F1Xj2Rb8da+QlBST4inBsBTTyksTtdU+oldg+7zsvDlgbNa-M4d-fhvwZWanlEq2F0Ds3avRYa2ExIETHXOeS9t1j7nPNZdyf131y7v1nYCxdq7-czC3em-dntc2rY2ee1ORICWNutaY6W1LVtn2uwy15kAFosA1iaCCFA4hLCUC5gRW0ig7huyKJbQofhojWQMCztn8WihX1rNznncxjMOGUALwgDJkADBkcAMcXGIkgC07YLzU57nACyqqHFwAsAwAGEiEEMBoT2sDDACCWaMR92AMO4AJBpFGCvUyaRcRYPAGhIQeAtHgC0GF8AeTwAI6aAGHUm0OhshVxDtoaIZNhJoG97z1wlImZnHF1Hw40AVYJ5TyYVtNSTfqFVJAFewA0DiAjpUFcXwI4BFgG8MPIAtAC0p3MOnhQGc+CZ+z9nPUuep477Wfn0AlAC+QG4U30iCg9dsFpAw4BrKaFkSoRQGgayveAE1VES9sniFsBqMggcVwYAjjgDJXxJB+2153qvfhkKn5QHqEEV+b8YESL5Vnj-2cn5f6n+zPeBd45AaHGAUDzY4D1EqEHVf3pxMlalGC2hAKgLuBVnnTnEgHAFUGsDQFCU+DIALg72sE-wQEqDYFjixC+CrA6jOBQJfwwkFwQG0HCEkEgF4FL2AHQIhBIEgJhD7l737xgEqAigbhwHRlJlakYJP1AGwIgFwPwMkEIOINeDsGOlTzIA-0oOoNoJwAjhu0EPGCvU73qHYMuC4OsB4L4LmnUhkDeiphEJADEKNgkNgAmDOBkJf0aAoIgCoJoLoMhhYSUAjmNhrhQHNgDgkhXGsnPyRFgPCRfyUBBGCC6BwCRCj3ZCagDDBEKDsHGyKEMG50JGJDJApGpHP152gElgdDblj0GAAF4gA');
        Z55['grappleMapStrings']['push']('2,Orbiting Grapple Points,The 9th Doctor,54848,ILDmJAhZIawhjqQCYAUDGBbAUgBxQHEAbAVwC0BPSACWwDEB3DQgD2IEl7IA3AQwDqAVgAMGRsADyANUIALTgBFiIvgGFIAUQBGAJgByI7QGYOIAIpTZCjstUadBo6ZAA7fROCKBlzQjUgnhLQwGYQAPYg9MAAmgDOiCB+kYmpaekZIGrmkOCJisAAqgmZ6dm5pYkAspAAyp5p2fR4la2I2dmpBYVVqTXmDakdlonQPX2QAxnDqWO9iZqTg4kz+UXziItTZeado2Albf67I4gFoIdHWSezwAAqYYg1VXmNN2t3pwjPr0PvZ-dHghFi9pv8ENAHqkQb8VuZCAAzK5tbI0ACcyNaTSRmNKqwBACU0jUCV84XskPcySAfmCKRDAdDIKCdvSIAUoQtmbD2uCINBpLjrmyoMAiRNSXTqV4xcTIJLWdKCoKhfiEAVxVyFW8RTBZUztX96HwhZk1ezgCrcebRZqnvLpRAbXq7cCHWDjaapbcrZjndBXRASY7hUr9dV3YqupbTc6NWlFobydKAwnI296IQvTtM9m0ikQIppNJSNosPQAC7kHygQq6ORyFjSAD0AHZmx3Ox3PAiANRdrtotsDzsSQqEWqXEIARmkZaEcm0AmksC4+nCMQAGpBiH2Rx2ABwgGjNnj75t7-dH7iwABOSRA4H00mEpBiAmnxHIGjufEITHITdT3PKBh33YxgP3GBzHIABpYIaS8YtS3LKsazrBsmzAkce37fch3bfcJAAR0kacUl8JJKEvEcj2AE8z33GiB2vOB735SxIH0BiQJgbCBwgxiR2guDBhiEA7nIfiu1w88CPPMcJ0uGgkgAFmYrs6J4pi8No4Ab3YrIQGfV930-b9IF-f9GEAyDhL4wiR0EkC1HCVsBF+eAixLMtK2rcxa3rRtCBbRyB1k-DpNHYBSPIhBYKojTOy0uyBySw99LY-xgm41Ku1AsKu2cqDJlEhBPEkqLuxAdLm3koiiiUhB9DU2qUqEtLdJYzK73VJ8XyEN8Py-H8-wAoCOvyhzz2K4S1BiXRCk4kAj28lC-PQoKsMK6LgFq+qcL2gAZWB5ksEZZ3nRdl1Xeh1y3Hc2uPPLOyenAACtyHFPxNE4qpXBejsCpmwHmxE+D+TCO4CSq5sIpHA7wsaycEDuJJdCe+jQaegyEGiGBJG0+zIFh2aB3BhpIEKCT6Fh+GB0RmTkcuAREq6zTnsm172eSnrDP04IqjJqaSZ2jthc7Cn+TyaG6ZqnmO0Z6LxxRiByCSadMaJzrz1Y3qIEIcAuIBrmgem8DQalqASlgHAaC17GFebI9YPeisTWAPwVJgKoJt40WQdNsHSohqARAk-Q5b2p2leqlXLgAUw1h2g5xrKIBoCRslgFAo-2uXYoosAklYFPzzT-WQA4P6Tf90nLZDho1ChyOxbh+W5Ll+OEHepIRDLnTdb5hAcCgfQ-ag82nIbmDQ+ANRqfuKS2-pwcu6aiAsBAHA1AJCWzYDi2g-nhalr1NQMBAW37ad9ry9v4APq+h9gGCdXgEIcxdGISgFvYPNUhoF7BkIBWByBgIgeQcIzZVIAC8qjwMQVUZYADUFpEYIoEMGQ-DAEdOJAIj8VpeHAAUEIwAfDz3oDgHgRB6AiHILUOojB6DwDQUAkBvZIGQOgSvNBrQ0Cti4eAqBlQMFYPSDgx04BCASFcDAam9BwCbhgNIywHsWEgDkLUEwBI5BEEKKAO4ix36oMUM2Hk7Jmx4CEVgPgQCh58NKIoXsQgbEe0yL0cOyIQg4MSGYSAR4cDgHAGoPwHBwC906DgSwHBGCEBaPsPg4jUiMBoJuCx0FFi4IQNIO4LB6DGG0HESAABLFBuDCCsKODUacql0iFGgOYXx+lCjGEgHo3QrZLQFjdAko4BQUBJzSNEJpZCYDSA8FuFApAMF1MSckxIqT0lpEmFkr4uT8mFPgMA1I8IqltBqXM1IDTcHNPoK09pKBdBCG6UyPpbQBlDNSCMrJ-IJmMCmaQeER1bhJOREsjJqzGk5Lyf+LZkBiLSj2ciQ59TGlnIuR0o5MpPaOLRWkDKrRmnovRWMrFOKCXzyOEAA');
        Z55['grappleMapStrings']['push']('2,Gridian,Shunk,73697,ILDmJAhZIawhjrACYAkDGBbANrAhgOoBiAriAGoAq+aFp+A7jJTXQ8xAKIBmALAEUuCAMIgADMDHAA4onAAREMMgDgw4BmBo1IofESGjxxHpn4TlqyD1cD1h0gFoAnEegA5cI4ciA9ACeAFIAspBoAF4yAJoAMt7AAKqQfmqGAgrRPo4ACgAcAJZUwABKeQAeWCJ8EMTAXkZckABaxgIybtk+qpnuwIRpiGEAboNd1rCQWAnjVsmpRhlZsybDhcVlldW1wDyShsIATCsmCn4AkrCMvCHNoORQS30DjZCjJ3PAx4vE9ghKACN9h9jEFgDkZo4BOdOiYwRDxgIANIoTjGOr4MbcYDAkFdPQKGpdLgiHJY0wZInZEkAOy0JgJVJ8tPpxlsfzxogyuM5ED0xAALiEIsLRTzZqpLn09ryupMIstZRB5uTgAJfuMwowmV06jwOcoWm00BYumcAKznHgCxIlETiRWqGQGlgeJXZRIiMGLNAPd3WPXi9RGrrQDAAeROqjQ5ueqrCh0hDj8AGoAMpoADsFC4AgFchAOgQAEYKACsOaABYAwgUWDnYgeAD20QAGpAcDwU34e72e3lC35hn2+12R72B1QAMwBADOiDUHgohHNpGihGLOGaIkgNBkxEYzVbQ-HPagfkzp78U5Pp-ULjyACdEOdgAoKPRy4LmgNQIlDpWlYYDIFAXlenBjqeLhgaejCQDkPBImib4gKW5ZVjWdYNs2bYdpB44Dtot7jvhI6TjO84QMgS4rmuG5bjue4HkexEjuel6njew53lwD7PggiRvh+pBfgKP4CH+AFASBMHjhB3ZQbJI5wQhSEIAWaEVtWtb1o2Lbtp2CkEYO3EkUZZHANOc4IJAzA0au66btuu74Puh7HqZbEwEpfZcVe95PvIQmflg36-v+gHAaBHFySApF9tBMXKfBiHId6mkYTp2H6Xh5l9oRaCsaOeUTpZFGiOA9l0U5jGucxHn+d5SW+UVvYBfxEDzu+IVhRJEXSdF4FxSVPaJeBKVqRAISoWWWmYbpOEGfFpVEZ5xVXuR1kQAoi7Lg59HOUx7mtWeTVXn5PF8YgNTdSJoVieFUlRT5vacMOxgpM1r2QCEVBcMhOQzeh2lYXpuGGRtJlXst-ZlVtyggFVjkMS5bksWtbVnZxJ1+O1NnCLdoniZJkUyV9PbyVeY2wRNyFpkDc1ZWDS0jX4BU4zDbNw5Ryh2Xt1Uo0d6ONZ9504+o5S-TZaiE-dxP9c95N+JTilK8wABs4YAFZNiAagUAzmWg4tuWQ6t0OswO2tNurCPEJV-PI4ddXHRjp2i9jbu4zt4huiwkBaLLvUkwNL0U8NVNh8rwCazrevAMsGUgwtOUQ6e7Ne5zVs67b6iyLttFO7VaMNXeUhc0YhVexLUtUbrQcPX1T1k0Nuys9TsW+zt8cAobyfZeDWdQ6eQ-W7nwhoIjjsHcX9Xi1j44XeOb42+G4DIN4LzhCUwzRIcArAPgLoklgTZJlYfg6qIFcHAoCiVlf-pP0qajQEIb8aGMGrAM04hEB4j5zgKA0MYFk4xL4MhvogLgd8H7P3gf6V+aomjIJgEg4A01kB1ATiALeaASgAAc94HyPo0EQIRpDZAgWyKBCAYH30fggphswkHv1QWqKQIBv6-3-oA4BlgSRknAYw8uhFb4MOYZIj4rCUFCDQdoEA4A9DACRCASiW8NzDBQFgCgARGAyAIe6HIKZLDGKwM0cxljmiGO9FIqw0I8giPgZ-WRKCMEoXqCAIkW9DjFi0TogIQCwSkKVNQ4wfh1YWKiZY+ALo7E2WAFrCI58mEyI-iAZggNkAyFfhgZgMRDj0BQCBAIz9jGWHeuE8QIoamimQvEhp2JkEf2QK+Lg4BijAGIBEEAKBZpGziXicpJgzHRKiU2Pw1TRS1PqY0hpLiWmKK6WoCwkAsjYNbDAcAMhmD0i1poSMhgwiQBSR8OobCqIUA8IwNsKBSD6J6YYJQAhFSylULIhA1BgLECnACWckAaSzOANcAs7pkjsK4YkKckBKwoEOJmBOPMEDHNOScc5bioBXJua2O5zgFBJmea83k7y36fKoN835kxZxApBU-cFcjahQphXC2MzQxHIsgCc-06LkCYuubc0g7RYhGEJf6ElHCIBfP3L89eIBKyZE2aAQgWAXCkGaIJU07hXwcOkCAhpvKVgpFoX0POcyDWzDOMawwkAgA');
        Z55['grappleMapStrings']['push']('2,h_22,h_bar,52172,ILDGJAhZIawhjrAEoHsAaAvAkgTxADVMAmAKQAtQBzGI0ymhAEQBktgBRYAYQEVgAeRABZXgJwg0IAaxDhIAgOIyQtCAAZgzEACMQZYBgAsiM+YtnDhy7bsGjp+86vAbZzs2YBLF+et+gQ7uiJ4+QQgBES5RHl6+0W5JifaxofEpaSkWWRBhCdG52YhFXBmJpcXBFvmZyVX+9enhFU0NkW155YWoAJrtZgBiwAC2ZADuHjyCPAPaAPSwAK4AcgAOS8YArADMAFoQimQAJlpIwACGAnPzW6wAVhe6S4LHJNfAsJB4k3MQXwA3D5-L5rP4IL7eX5-JTQ4AARkIuhGWwougA6oRYDhBis0L0MJAADYAMwA1PNKVTKQAOEAACXmAOp1PJLKpdIAKjs8ABnRACFaEdFbJa9dHwol7HiQTkXJSDcZ7DBM9mUqDzADsavmO1VauArHmJOM6hAkmYhEIS2RgwALnt0XxqABVEgUKhKQhanW-NlqgCcPrV40gAAUSQBpOE6BH3XQ7a3HL14N6ENZ7d0af3sunARnMtU5llcnn8w4gIUisUSqUyuUKpUqwvsjXatV6lssw3G00IF3adErAHHEUaZVkfbookAOwu9JQwfZfopgaXLNDEejCBUCKRKLRmOxuPxhNJq9zDP17OL1LpAKDBRgkxWvRIAfhuhnKCJoBnxyJC50WONBjgLHU2x1TsIM4AMaQAJ0QWhLWtW0HSdV13U9b122XEBbypINcI3HhdTJSQIBseF40TJZk0IVMSHTTMKGzC8SyvLtWXYu9gG5PkEB4Wgq1FcVJWlWV5UVZVr27GB12paCDSNE0zWAflmCHEcxwnKdZ3nRdiOpFcdSI31wyjOExD3ZFUQxLEcTxAliQI2lOJ1Vz5nvR8WEFN8Py-H8-wAoCQLA2TqUgjsIqpLg4MQhBTBQm0RntR1nTdD1QC9BSqRMtcjLy0idnIhAwxAaiEyTFM0wzLNPLzcCix4jk+LLBBuGAESa3E+spKbGL1XkwrKSU1sVL7KBuE04dRy2ccMEnR19IXXLKXy9kzJDCztwgABlCr9zso9HNPFyWrc-NBuNC6vOAB95ifTgX38z9v1-f9AOA0CmtbYaoOuuKEIQRRtCtFK0owzLsLW+YNpZLbl2YVqIEIQ7bMPByT2c88dUa66GpAcY+FmLhgEGYThVE2sJIbaTmwg-7oq42LIBEEYcEmaBIHAZK0PSzCspyka4fw27EY3YAlB0X4BH6GyD3s48nLPQmrpZylCZ4Cg+AHMmlEFKmerrSTGxkjX5ii9kxu7SAXQAR0jWhuekPnUvQjKsOynDfTF0zYcme2XXha4BGEcn4HJyBxkEQQKL8ZgADZ6V0QQSV6UBvETtYwzJWxc5GPZC+LvY0HmJYi8r4u1PBWvgHGZhgT8Tqm7yEGDmASM9npMg1mOEZCHGXQSCJOjOB5iuS5GC5xgpqvK+kSxkZrlh5jWKei4uMMAxELBd-3ve69sTxjAuElzFbxAxDOIJkE6sxSc6rmO8UFeED4WP44QMkKBILAZxIPSHASx7acnmG-EAyN17z2nmGTUG9C6LyPrXa+0Q74WGQBRJ0vARgoDwBcDAexfxKADGsL8nJgAunLFfSA1AwwH13isOw8wnAWHmInGBRd7jzE5AwveHBkHmGgGSJQM44QgHvhYHQTDogCGQOYWgnU9bYJ4Lg-BhDiGkPIcAXoFxzAiEgL3BBzDWHmHYZwkY3DeH8IPoIoRwARFiI8HYaRiQ5GWFoLucAwAVFqIIUQ7KWiZwUKoeYcedC+EyMsCw2w5iEFWL4bvOxZhhGiPEWTWwrjZF0AsLQCikdfF4P8ZoshwSdF6I8IY6BU8TGxI4fEnhiSBHJIrI49JkjzBZIiO43JncQDlkKeogJJDSkoCEG-ce3h+4wNqdE+pMCEk2P4S0kGDi0nOMyV1NxOSFHAGsmcQZxTAmjKMKwBBXxehKBgRU6JpizBxIWY0pZSSVlQDWU40ILitnZPkWYWg4c8yHI0ccwKOjqHtBiXMixiy+GvLeW0jZS9vndJ2X84AcjOpAuGUEsZgg34GKmcY2JdzEAPKnjCpZcK6AIs+ZsqJQQem7IOmzEA6J+SQBGMcXkw9KD6FrsvJea8EFbx3s8w+iQ4EINLlSlw6D7GgyMGISAiIIboQoZyElezgCamiJCth8zyVPNhTKk16K6B8HHuiluwA0bkwEccI6mNYBhktvYjpLhc75zJFKsuGgxUiHSaa5JLdLUWuQAIRUOiYDwCULQayGDLiarsOMekcgMFhrNajTk2VBg7F0F8EI78lBLAiAYn4lgXTQAtQgQYLodiQAoG8LYPjL7j3ghApFoBwWIGGBmw4hAVjjAJMcJYfAlBpvOBcJNtgU0TpSRm4EhBs0KjzaCCwY6S1BDLYGkAlarU1rrQ2t4OqrhhMgO2oIOgu2WF7Za-tg7h1LHGCQ+xU6IizssIoUNCAl05tXZAIEF9i2lu+DuyhVbJG1vrY2kgzbejdokeejtUiwAIYgLe35kAB1DowCO2ekdJ3TssB+9N36s1-t0LySAUIgObsCNuitEGD3QePcAParakOXtQzeq1mHsOPprSAUmrzoAYDOTAqjlzrkSIiMhuufBBh4C2BvRC6JbCYL8F-FpBi9qBufcAGkzyzhgYsMJlZOhQlmAMREpZMjrJyYQA58Ez7Y1mB0HtC4nDFERC08kgxFAkEIHGJwEYCD+jIDM3YSLySLNofCfQ2zu7ZNUtnnOisvRmBiojeaTTVL-OBYgBa0LMDwtOcElSnQuiz1GJmVG4AZX6tUr4MwArbzegzi8-mHzVLuCJ3XUoMgJASvPl4H4aLdjRPianhcq5U8KkNYgAt9oCmlMbzBOiDlMC8k5ZcL5uxkyTOWH4EEcbgjoDwcSJHBrS2GjNda9oHRHWN60EjN1uFvWLDPsG8NoSo3ZVBuKLQNL67UUA8SMDi+ABeSHQA');
        Z55['grappleMapStrings']['push']('2,Photon Tube,The 9th Doctor,79473,ILDWJAhZPD4cAisAMgVQOIAsBuATTATgFcBJAMQCUBGATQFt1gARAGyoHsAtAZWACshAObCqxAFaEiATxABRVhx78hmUeKJTic4ACkAXgGMoAOQYAOaPGHAAsiAAM8B8ADOwAMK29IW5AB3YEwQZmtrV1tuEApgCWdEeUgAehREAIAJfCCEFmAjABVENGSABzIAMwAXdCpPRzoISCQyImLoCoSEO0gANjgETKo0+E9k3t4MgHYANXkkKpCIdE8ABRH4JAy2xDyAUw2IHpkchFwAalBsc5oqeVQqWxBfAGkn4o-PxFj44qTU4pbbKIaCFYqoMqVGp1BpNFo7BAdLrwJIAZhMiC28lOEDGE2mcwWS1Ca0OIC2CPg0AOf0gJ2KFyuNzuD3eP2REH+ZOQGQAjmToPhYogIeVqrV6o0oEhPNzoAB1bk9AScYoBCgDBDjSazeaLeDMTWbDXFfYAQ1p0QZl2ut3ujwgsV8lo+WwY7wgeUV4Mh4phUpgMrlwG9iUgKsBJuK2oJeuJwHQkCtmNaXzTH1WNuZ9rZwE6f1J6aLnt90MluJlquL1ZAss8VZrxbrDcb6ebrablY7Rfb3bTvb7n2aqZBedRtPRgIy2MQeJ1hP1y0LmO2OJAeXw48QPQAHq4zlm7ayIK8PYPEKfzx9YPAMgUKEhhEYcAIjKjkrhkl-v1+oMkpj+P7vp+gG-pA8h3BsiieOgO7oGQmACLgz7YK+wGgb+MD-hhyToRhMAQfMMAgGQXiwfBiHIS+b4fjhf4ARheGgV4ZAAJZkP4IAOCwMwzCQABGDAUFU3CKsI6AAEzYNgz4zNhGE5BU5w4UQ8mgQE4FsMmCggGwdgzJ4kACaikCcHsAAaphqYBinKRhqkMepwDsex5LAMK+D6YZARmhkbAGEpOEWCAGS0RhgUYcFhFUFSPj3o+glED5fkBXZoHBcAoUgaBEXpcAbFsTpgT6PFwiJcl-m5YBGVZThVU-lFdwxcA0EgKYMzygIJB0PKNBaYZBRmpgFABNw5lhcxWGOYBTGAS1RAWAATgg4A8XxgnCaJj6SdJsnWT+tkqft34aasFQvDiLwgDQMyCQI2D8fKMygJQpicHQ5mQGw9XfjVE2AT9X7BQUqIyB4uJBO1nXdb1-WQINw2jeN2VzVNOGzT+81LYMSjrUJIliegqJUDIZqfd9aXVSF-0-oDyTBVQjjyooLWsCgUNdT1fXcANQ0jWNNPfvR6OC7+LBGDQ+BQCAAAsrC8QJ+NbeJUkyZgcnTQdIB0w5OEafIWkIKs123Qw92Pc9r3veTdN-SjtOUw1wBUHooY6cAHMw9zvOIwL9tC2jjGi8kLW8M9VKKGtiubYTqt7ZrJ3a47366wpmnacA-DADdd0PU9L0UG9H1fbb1P+1+pcu27LWQx1nOwzz8N80jwfC0H5ch-IYeas08t4zH21x+rx1fod9kj8k+uG-AMy6V5Rn8SZZmWRPY+ganTlNSzKDynPBkL0vFlWQno9J0dJ+T87hFueZJu5xbBdFzbydA2XdUv-TzuuxsSye1zcMI35sjOigdQIYyFl3cO8AEjmQcJAGYpg3CLy+leDM5wvifk+MkRwBg7C4PwXg84AgGDcBIWQs0qwphkNITQlsqD6Hpm3oiPw8Bd75TcrESAYRbAZBiHANgGQjBCQCM+HcbAyAsBZh8HoGdizJDllgjKiQWAyzNBUTEvcGHnikR8PIphuwoGsBAEYKA8juQMCAHmi8+J0AkswLR1ZP6mmSAUPBbj8GUOodQzgyQSA0K8WeBxQTjGswFCREA4BvBoBiBY4ApRPA9VMItbgqI9AEE6kaBhmYviZi8bQ7BBCCFrmCSU7s28kjIAqewlgKBXBRgEUIkaojxEsF8NwPYxQZEdnkV8JxyjVHqIQEgTRpSaw6NNB7AxxFNghIAPJ8N0oI4RzSJH6PwB07cSZukKI+H0hA8gVFqI0dyUZXxxm7EmR2QxQyQnG3cvwpZTTMBiIkTFdZLpWw9MUR8A5Az0gjNOUWc5uRLmtmuTMtyaR6mPJEc8lps92kfMbF83ZSj9mHMGfADSJzAV-DTHoqZRi3JuWatCxpsKXksADEimsKLoxopRBi-5OLcX7PxaCxs4KQluSzmS5ZcKJHqMRWGWRRY6WID2Yyv5gwAWss+MC+ABKrnTO5cgYARR7mLPJSslgEhgDvJFds3pDLORMplSyuV7tPhKrBSq4lar7F8qeZSgAdvqjZ3QtmfJ2fSn5ZrNiystYkdl+jlVErVTfBZcSYU6uxAETA5lAlegtcUbJnxVgh3aMAc4mAXVrkUPYoN150wBBqR2JhnJK1LDIPG0oWazQpvSBkVAQ4kAVI2AIcyZMuAIWwGwfivDhDcBdWk-iRhICsWKcgTAmT0w9AMNShAiZKnwFmTMHALS2CODNIZeQ-EJKmEcIvFtMw6EKEgHWxsG4vixDbeGhw6DAQztbD0RwZ7ljQDbUMlR9bG2DAyLPa8d6I3S1PbSbAgT2X4ELd8Sp4akiTsjH+lwkAaA4uXV+zYmBL3MNDY2TIgH2jAe5LYMgSAJIjUoKUXAglZ4SAMJB9yoQvDyFMDJQyZp90CDYC0CwPrijCmAAAXiAA');
        Z55['grappleMapStrings']['push']('2,Whel2,kklkkj,73345,ILDmJAhZIawhjrAGoA0CGBxFBnAsuFhgEwAuupZAjiAKIwC2ZATgEZasbgDCAxgGYIAJQBs0AIoIAksAAi9ELOAB3BAwByUnhJ4B7RCAWhchs+Z37z14HR4811ywcPQApgAcz+SKPhPdF0QFTzM6X38LQLNoExt453iw+0coq0MQr0MfPxtE12BQw3DcgPSk9UgAeikyoIRjUwqzfOb6FLzogqLEHMiWruDCrMQS-tcJaWpahFiAM3A2pZtYHmA1pcb42EgAaj5lrZXgWjMVAAk6VOXgAFUeADsDwwlIGbafFXflgCkwf6WF3Ghj+cweNyB8QAYsAPEJindzBJznMbnIqgBWaRzMi3YQ8AAMAE0IG8ANIAE2uUGAMO8kAE1IqVV2AGVzgB2FB0CRkLAIeCnF7nACcNwFJxu0DmBO2krO5yJiwawApAEs5ULEMilQV1ZqkaLxRBBVLgDKDQqiSShhSABbKsymsw6m2zVUO45ahASLBi7oAD0thhUfpihSDXsNuG+MGAbFlUYVMYKCeD2qNxuAzpDmeNOYzKaGaaTuaLKpL1gLPrDGQj6YQof9Qzckar8s25sT7e9FWl3fM1Ygvub7tbDYgTfD49Lhdj0Erg47iAu5dJ8YHTuXPrz4qHIAuo5u++AyLXRg3E4P53P8kvs5rR4vM575indZfS97SQUFusWgQABGFA2EYDE7TYAB1FBYGkKEND0Ik0EgAAbOZdiqTCsMwgAOEBziqAA3bDsPQkisLwgAVAQAE8mmHYANBQSCMQAVyJSDAJQgAtHhIEo7AoRUbi0CI8jMKgKoOXEqoBDE8TbBFHCWEQWQ5BQFBWNAqEyG4yCJFAW4SDtO0+BwKSZMcMjxJFCzxJUSAAAU5jJa4FGAYDQPAqCYLghCkNQ6zyLw4ACOI8SgpIqjaPouNGOYtiOK43j+ME4TRPC8jJOk8S5MykjFOUxBbnkDStMYHS9IMoyTLMlA7PIqyMJshqSIc5zXIQfkPJAsCIOg2D4MQ5C0Oa4L8Pk8jIuw6K6NmNQmJY9jOJ4viBKwISRMmgqYFa7C8pkwqVIQcB1M07TdP0wzjNM8ycsakBpqw2z7rayB8A8DE3WAP4eq8-rfKGgLRpkkKwpkp7cOASiyTcSCEB4cBFsSlaUvWzaMsO3bXv27bsNsGiHhQx1TDO8rKqumrbvqnGsKamSXss97Pu+-AQE8vqfMG-yRshqowbxrC+ao2H4YgOQpGR5bkrWtKtvy-HsZkg6FMgXAyEcmlgAAFlK86Ksu6qbrqva6cesaSMZ+zgDVAB5W4XCkTW-s5ga-OGwKLZmiaFaFr2KOALAaIJEKGAYeKlqS1bUo29LBYkpXcvjqpbFEFAtUgBgyYuqrrtqu7LPNhnTcw9qXOuVl2d67y3aB3n-ah0Lk+F4BpAAKxQslFCuCOUZlmOMeT7LlaHtWNZpN49fJw28+pkuqnplradLpzy4QFAq-+rn3eBlum99zCW+ouaIChJGEul6P0bjg+U8T8iVayuhCeJ0kDmzg3c6pk3l4Xoul6Zh9L6CAbQcxroDHmntQY+whg3fm0NRZdUlhfKOaM5aYwUvfEij8CrPyJsqSABgP4UyNvnGmhdzRwKto1ZmwCIBsE3q7CBHsQbiQFrfI+iCIDnBAFLVBstY7yyxtUX+OD8Z4NflAWUxCZ7fwLtbShxdf4OSAd9NwjDwHcxYXvcGEU4Eizhggc4C0UGowEYPW+w8k6WIkcqDYMiv7G3kQ9RRAD7K0O+naDRAMtG730TAvR0CYaGIgNIc+kczEDxvsI+eYisIE3wRAHgbMHGUyceQhRfNqFvVURKF2mid712gfvWBQSuEgB+MgiJ-dr5CMwSIkeNiX52JJKk0hc9lH-3Itk7CKiWYIHBPknxhSoFsICVNfxwSxYgC7r3S+aDBEYKylg3GTTEkgB4PANps8f4UKyfPPpdCQCnDAcMuuozxolMCWMqZCBOp8MibUpZO0GnWMOrYpJahtlyIyS4-ZyiPEIDIN47e5zWGXN0RMspISQAABlwl9yvugoeKysJxIkh8jZeFvnpIOV0y2BzAWThBbXSB4KorjJIpwmFwB8BVMRQsixMTRFD0xfINSZUc5pLIXi1x3TCW5IgAALxJcwvxxTIVUsmeUxivDTE1ORZY1FmF0UpzZaeEA+kQBoGeOYfAHRlhVF1hYeBYQ5ByDtMarMDQqg-EYNxe1jqMDWpdUkKQyA6ytxgLrYx-weAMDCcANu6wpCVOAIwdYBxZmQD4GoHgRJGC6tdYgI1NgqiiAdZmx1bcqiUXwEK-NhaRXJpLaWmw7rTzhErTASWMBZA91tiAEKaA2bAEgq2stIBU0moxI6rN3EhW5qLUWzto7R0VtGAeYAwga20nddxKAVIbCQkOFUR0iBYV-xdPgW25x13WsIiKYdBaC1juTcgcO2R1jwDJOAFSDhgCwqkKxdYeFW1BjkLIfAahExeJnfSFCVrS0wgkFW0kKANAqCQhSViKgeRmAUNxdRna3hVveCgSiZkoQCDYDsZDIYsConHZIS9tJbgCEgHaCkJAOTADQPu2lkAHhMldQwUDHqYAQag2gGDvpgR3gwM60dcHJDr0wxtHDuBIAjBXFgRgDGXU+GrafcjlHqMYmAHwb6EAfAsAU9atY7HZhceg7B843UhgYCA6W0AaGxNYZw6dEAdo5BITAJBRgIpWLcRKvxqADBkDSAkCQIScEPCEVAhvX65gSqIn9RoUyfEMBsBIBiFCuhYynykHSZQmWz2dvRFumw4c8v5dLY5UuSQ6AAF4gA');
        Z55['grappleMapStrings']['push']('2,Running out of time,kklkkj,73430,ILDmJAhZIawhjqQHIGUAmB1ArAVwENcA7ASQHEBOARgwGFIA3ALQEtIAGI6gGxGYBOBAEwAPIcID2IAIrByIgC4BnJQEcQAKQBeAYygAJRQE1oCcKRABVGCDogAsrIgARcMCuQARhwDSi4isAW0pNAAUAekQIaDRRABYAK0UcK0VSDkgVAGpgVgAxOi9sxgAOAE8cA1EMZgAlHAB3CHzgLEo6AR4DZgcBbQjm6OAZcgAZbIBmfOpE1nJmYGZKAwA1ZRd2qy8InlZFDEVdTUVVmJl8xhk1eMmHAFFG+IjS4eB7yAFdRqDQTWpNFYLgAHRr5ABmdQApnQOAA2F7ggDy2lAeES8jk1m8fkUoAIkzUrEib2gXmIGGUxlWpDUXiGb0isAAFtlqHV7mM6u5gK12p1Et8ACouRKDN6jRTaOgEYCBHhCtrEYCrSj5eJjIVi0SlADsSLocKciygFyuahwdWEQt8pRebw+rAiihqxnizKCjXIkOoXmA1EYq3uERwxgEAA0vOGiqssR4cf5AiFwlFhrEEslUulSlllLkCkVsmEKlUavUmi02h0BMwAYw0ELxcNGvdlFDSLqoasxmgwsAvF4wqBSMyZEEIgIIg48HVSuGsFYofpTZdrpbrbb7cMHJAnS6MG6PV6fX6A6tyCGw5Ho15YxBPD5fHgUNpIA4kSThi5gASHJpJHQGBoKsO4ELokDhhw4agIoSKMBEBjaMoGqSI0cCVvyAjGOQihwpIYoMogXo4JMXjkPkaC+EErxvMAYwhqQ4KKFYdSwsY5yrjcdyPM8NHRDuXw-H8AJAvkoIQtCsK8ciqLopi94JngVgYLA5SMJ+0TfsYjC6ro85IqQzCwJAxAcNgjQoF47JhNkWC+NQwjUD81A2CAfLVrWmj1o2hEIC2bYdl2PYoP2g7DqO45itOs7zouy7AHQoyTL5tGpWmMikPA0TQKA4I8mlBWFQpERxggMiQKVRVValrSgMowwfDg1VQD+5DNQgiV0PlRU7mgKUdTIXXtR8fWpZ13UtVY9XtXYg0TcA35TTNs2Je1O5ZbRnWVYVHwbW8W1pksy0rdtC1HcdB3ZcA4b3NukC6KdECXUg123dEHwPWNg2nd+N0Nfdj0nV+r13Z9m0XOGx1pYl9y5FD4PkGc8P7aMYzI6SMj3HxCDQK07VevE-VFZ4eDSNE5U-ddGj8e8UOaMADiA-DpBbuj0StEip23a51Xfl48TDPROCMcxrEcOxs3kHC83IxVUsTbjDqQFCZNESMUM2E1wwU8NTDzfBLJshyXI8hzXMeBK5Bw2zOMyC4e0xLybw7owMvI5rEoVYd4YC-xnynXILiQFYiQwbowg82bDUW82+TWzjP4cNHwCNDSGrhigfCmvbh14+9-ux-HjuQGE5BBKIiSJDIYQMh72te5pif-Xl2vAEKojAlS8QcC4fFR+9Mfkzh3u+4gThYwQZFIiFqYwHbDstXnY8F9EYJFyA34l2XFdVzX97AFr5MNy9Pv-QIp3NEHIdhxHlac9HPNEXHwMEEnNMp2nYwZ1nc9Y7nzuQESBLIi5BdATToCGHguhjBoDwBge4zJa4l09pTLwso-ZLwQPBZg4ZyD3AEMQOopB4qtCFP1bmlthATW-HUH6ERhCrFEMyXwOAOBoAMOcP+V1MEQA+EA5soD5qQOgbA+BiCQBIkQPA5gWBjCgDqEEHg8RwTZAiGo9RaiaIGAiPBDR6iVF6PUdjZwzgDB1ERkEUg9xmDAihNo3RhioARF1IYtRkwdGuNnrwiAlhOB1B4GwSAChwzMmcZ4oYBjXGUDCa43yZgzrAGkbI+RijlGqNcVojxrjImGOMerWwwAzEWKsTYuxWTHEwBiYY9xDi9ED2sDADg-jAnBNCS42JIAcl6Oie0wxcSIBtUSdY5JCilFdI0Zk2pGjxlGPJlAZoRTViWOsbY+xninG9L0TU9ZiA3pgEac09grSql6IiekwxPTwkvS0CAJJcjRlpM8ZMzxMzNFzISuARZyzSlrNcRszx2y-m7IgPVPxASjkEBCScjRZzPGXI6QnRwtzhn3NSa8rcvzDHoryViFwcgvklNWeUuplTNkaMBRUhAeyBYuFWKsPAXggj5EUDImQoArDCGZMyXQiNoXqNhVEvlajmjMgcBwdwcg+z+lWIynAzIvBYFWLAUg+QUCSGMOGSAPBsUgExXonV5A6iwBNLdN6kBmB6o0f81xFK6n3EoKUAQtMYC3VpfSxlzLWXss5dy3lZL+WdPOd0oV4pmCGqynINAIBqAyqCHKhVSqVVqo1VqnVhTiXTKDRM4AaBNDlEhrw5oKBVi4DwMYLAvBmAMCFAQcijQcEZvUda6pja1HvFYLoHgPIvZuoZUyllWA2Ucq5Ty1YIaBUXPHZAUgxBNDAJVNG2N8bFXKtVeqzV2qs2zPTVM-RW63m5vKFgBA+RwDFtLeWyt1ba35HreGVtqZIAhttVa+4UIxi-BiPoXtHqB1Dp9aO8dga4VToMKwHAqtgASxjbK+VK6k3rtTfujFD6dV1HiIQBA5A5DnvwJegJ1660Nt3W20lAKH3vHfZ+qA0gf39q9cO31Y7-XCuA4KljgxIBgYgwgP00rYMJtXcmjdabLV7qecAdDmGIAcOALhstFaCOQBrUR+9JHH3Poo2+j93ak50c9YO71I6-VXOAOi+FfSuPgcg1CRdAn4NrpTZuiTO6XnIdeJoIUwIsS3QMEWkteHFNVuUzeu9FGyM2oo3Qe42go22HsAtOlfaDP-uM8x0z5mgM8CRD-OQzI7Nxrg4mxzIn3O6tQ2V0gQoUCWFpqQM9AWFNXpC6p8LT6OMvqbZoUQlA4t2CcPpv9RmmNAbM8hizpy6DECFFYIYcgsowcK4JhDTnRMVYk1CWA9xJgIE0Dhxr+HgsqdvcRnZ7XyPqeAL4DASJFRPXYoNhjAGTMIsyxxxoLht1yGVPxpbDnhNIZc2JtRBquraBALdXwIB5OHcIydtTZ3NOXcgKASQDhmjQDoPAR7hnGOAfe2xyd73PtvPVtTRby7isA+cxk8r6mdVWtpr4fzF6gtw7C5diLLbLuRFY5jy+SXf1PbS6Nt74SSdbjkIoArlOhOIZp7kunbmJOM9umMBrrPmvHY54jjrFHefikx68HHqWRsE7GyB4nX2U4y6K3L1bZXXPZLK6rhm+3NdKe16doF53Is84DdAFwlgTfDfxxl8b46Jc0TkOD37suVulaB+t2nruQpyYO2zlr8O2tI-Wd13rCAXA2BD3jl7fTCfBve3QXQ4IrD5WELb5bJXAe06d1isrxADDUFq9DlngWtehe9xU333O889b6w066ThgAhAxDbBAYRKAOG0Mv1fK-gDwVohEDgK-d+r6JvPw-8M3qY2gKfkAo8Cm1eaG9GwKPCkgHAKtKHwB6rfjk25WPmhWDMAP1DT7bsn2wIQQzAIBYBBAi+a+UBR+MBNsZgHwIwCB+KIAHmzQkiCWpAcgtmkANEWA004Y0+R+EQl+0QEQcIoBFBYBYoQoUBu+x0Lg2QcI8Qi4eA+QBgAg+WsByMcgZ+SBt0Q0PBt0pAzQ0gq09WwAemNgKA4AO2vIset6sBNkqUm+bw2+e+e+f+XBWhaUJ+fBZgN+4AioXs+Qcgx6908g-AMA0g5AzQ+gnAIABBIAWAb8RBJBiAZBlBlB1BtBy+2hfh7UPBiBvBCSQQCU8Avg4ATqdAzQYwcgeACUrw0+ogC0lg6OFhtE34g6R+FUSBCAqwQoPK+QpExkYMICPC6MngiBJ6VgkwkAzIGAwgTUJoNMh88+rQ5+MQqwKAjQGqGAeAFwaMjc98h+ORZ+eRBR5EpEbsKc5AUI0xy0lRmM1RtR9RwguoIMfszI8xM07RCBnR3RvR8RwArw0WKA3KDAk8jRPA30BUeMzILgGqYAWAIQeAzANgC8VKc8wAmBwgt6KqwIjAjKZw9Mm0DSpx5xkAlxOA1xq0tEzQdxDxkMoAzxlArx7xqUPBcgPxfxYkgJQQwJNUYJ9wZxugFxXgVxNxpI4ACJjxyJLxbxwAHxEAdhWJMgvxjQ-xeJBJtEtWNg4JpJkJ5J0JlJwwq0NJSJKJaJjJqU0gXs2JHJuJQJwAIJbwgxfJxJEJUJMJgM7+4pTx9J6JtESccpbJOJAJSpKprcg8AAvNaUAA');
        Z55['grappleMapStrings']['push']('2,Team Grapple Warzone #2,OldGrappler,18005,ILCqJAhYGEHMKKdSATUAtA6gMQC4CSAoqgJ4CaAGpAO4BGA4qHAGoBMOpApgLYCcAVwwBlYACsAsggAyAFTYAPANYAlAMwApABYBjABKQAzhkoEQARWBzFqzboPHTIAHYA5GlAYtLGkAAZgWmAGCxAPX2AzeGAcEENQiRAECFcQWJ0QpGAiMCy8-ILCiEhzHDY86Fii6pq80DRkpHMS2tba2MpyPJzwNr6CkoJyAHss6BV+ybqGvObLKYXgX3NGxbzl1bWkdMykHq3JkrKKmIPJ+tRNixazto6urP3b1qPysdPn2oAReZAARhYdB4AFYtHQsCwlAQcK5hlRIAAbABmAGoAPQYzEYgAcID0aIAblisajiZjccA4OYcr9LK4WFhgQJyFg-giMDBILIAIYMHA0EyEskYqBogDswrRaiFwpAxGgOTlwC+LBYAiB+GwK1AbC0ui84slHmApOFfENwo8nOAzQgX3+gJBYIhUJhcOoyPRwop+KJwtNZIpVJpUBA9MZzNZ7M5PL5AsoMrJoolwulfqTkSICog4BVao1eC1cB1eoyLAtZONAeJ5pTldg0FtIEyAKBoPBkOhsPhnslPsTxOrWNxwgwAGloMUPOGmSy2Ryubz+YL08Tk5K05LsjxhFTEAg8+qeJqsNrdfry3XiVWvWTa0bIBolMNFSAIq2nR3Xd2PUPyXiBxJW9iRHcdJxAaIZ0jecYyXeNAMxddUwQkUiB3PcIHiQ8CyLEsLwra8QD-DF70tR9n1fYBEmAD92xdLt3URYi0X7VcgL7YBRwnRAfkCHQPAYWQsARJQMAYBQEU+CAAAUUUKWSeAwRTlIwYY0T8AAvCQtJ0iRjSkgyDkValGyzEBKMgfjgDHUBxK0VAGAwAkdB4Pw4FcLMaGopAaAYCI2i+NErjtNEAAcVOU7lpL4bTYt0wyErWSczJMm1AnMkBKESGAESMKgVB4OhNEIL5fB0e1HkgABLX5WjRAAWQo0QANiUtrlLENFZDiuLEr6qZLFM0zQhgNINJAULzEYHA-CUvhSDoUQFBoPRgH04pgHIJR+lk+SUQitq1M0nqtPW-rzqKYyUrM7Iwj4jwxxYBg+BoYg8FCxgJJ0eICl8vhgsKQKAeVMKDp4KKYt0+KLphwpkqGtLJ3mLLYFywx8sK4qCC+aTgHKvIJGq2ragaprWrBzruqh7TYdp-JBpta7QiqHBxuABRZBZDAEWIbRGBoOACA01bRu6SAkUmUmCha9r2spk6abppWIAZ1LqVCTJWZADmuZ5og+YYAWhekWB8kJiX+il-IZYprqFbZ5WldVpm0tWmI2eBVxuSwFQlEYZhzB4BQCXINg8ARHRgZtG4AqCgpAvC2Xwei+3vMd2H4cZxt0spTLEiINGMaKjQSqIKkg5DsOI8MWg05VhhpCjvIgfj0Gk4h1P07pzO1Zz7bgBRgu8soAri5Kghy+D0Pw50JRa9mBum6yFv8gTsGO+prSu9pnuUpz0YB-zwuR8xkvsakQOp6r7756yXyGCXpAV+btuIo3hXt4z8yEYZ4AfsH4+o8sY-EnpXGec8vJ5Hvo-HicdV6v3au-amn8Ya72zpODwRhqrBV8noGBbR6hpUQDgUAahID2TYMCAejUsiEyqvg1oVQbpQBYO4KgqABC+Qnu8LANDnglGYRAFgsgMg4DUHQOeSIzoWBwAIAyvR1YQBIWQihYo8Ym1oZAbkBlYiKOKKwmg7CBDmAYHJZewAsAMNqC0bOQiRF8nEZsAAvEAA');
        Z55['grappleMapStrings']['push']('2,Sunburst,God_Of_Bonk,80021,ILDWJAhZPD4cAisAkgVQMwDUCuBNAO2wE8BjTFAYQAYATANwC0AxATgAUmAbNqgIwBMAVgBOIAKLBajVpx58hYkACkAXmSgB5FemjwA5sADSII5ADuwFiBTBz8SEYAi0qWGABTRCAvsfAT7oVCoBSBK4gYEAspAMdlGBNkj4PhIhARYAEgCGifmBkEgscAjQWgkFtgDiABpGCFQA9ADUAMpZAOzYEkgALtXwek4+SKiljsB0APZVcxA2AOqVEFLC81DA+ADOPs5NwqgAZn3oAEq0qVDFExDlKwVIdQ3wze1dPf2DEKBUVFYbKp6I4PZDOW6AxAcJqgAAWLQAjGcJAAZM4vGy1GhpYDrDbQJgBfaHE7nS53YpsHz3QEWaqg4CtDrdXoDIaQEGjcGAiSwAIMGHwpGo9ELYBYnF4+YEokHY6nC40K4wSnU4AVQFILIMpkfVnfEDA0FIbkbWLYnzQuGI5FojHii0INaAmV7OWkxXKor+RA0jZanXvFlfIYZUa9SGR+CYx3wZ344CEt0khXk64+srqhlRAMBXXBtkQI1ciFRkBWoW20UgGOSl2J2UpslKikZyYajZ0wPMz6Fw0c42m+a82PwCs2kX2iWIePzVx0Rvy5vKqhIVc8yAASwBASKzlB0AAcpCnii8wA2Hv6obAUcQE0Hra7DYcFrW4V2sXHnF33zVM8bPsAAOS6ehS1QACxqvwLxloCejxKM1RUnBCCvu+Vb2t+M63oCrg7G6IEemm0jQru9iLD45roFEsLwM42B4PwAC2LB9EwywGOggiwrCZDVNgTSdE0ImiSJAJHC0YliWwQnSaJFjOBBnSeM+mzAAi2AscIsL8Is2CgKgLCHtM+C1JA3CSfJIkABwgFkTQCtZVnWXZ9i8sgEBGIe2CLMIBCLAi3BMFQkAACo5NULAWEwtSOdZTRQHJ1mYPF1kgKg0DhBA0TAAxTGsexnHcbx-GCcJ1kSVJ1myRV8kWJAVAGAAjpU7iadpun6YZxmmeZlnVfJbkOU58kuUNZgeXYRTAD5fkBUFIXhZF0WxWl8lJXV0mpaN0nABIbA2eI8CpPluAsWxHFIFxPF8QJyX1SA43SbVCUNU1rXwFkIAdcxOl6QZRkmWZFnPWJw3rdJYOiXZTTbMxeT7dIIBzf5+CBcFoURVFMVxbtYmbQlO0JcAr6CEBO4eGdF1FddJV3eVb1PYNL0PdJilNH0zWaBApgaVpf1dYDvUgwNCUQ-jonQ7ZjKdDkhCvFYqMLZjy042tksiYTKWQwTB1HQgVjU4VV03aV91bWJVUJa9lWQBwRzGJT36-f93VA31oMs+D9m61L3sw7L8v0d5vloxjS3Y6teMkzAbNicT6VkxT8B2cbl3FbdZXxwpzM2zn4mQKgzU5Mqnn851AM9cD-XS00EsJXXdltMYzHMXGKDK+ji1YytuN+1rceW6JicbYebQ0AYVjQEXeWMedJuZ+bjOVXnNUF00inMVo6A8yAYU-QLbvCzXXvi77mtNE3uIAFbcN9YqzWHKuR33Gux5AG+j3tyc7pANHp1pmbBmG9rbr2HuJfYXM97AEohXQWVcPai2vsAEajcA4yyEsHBYStn7d1VlHful9tbyW-gTX+dwXDzxpqbem2cIGbzXvJW29UoHc3gEmV2Qtq6ezFq5C+6Dz7uSyiAaood5r4NfurGO6Uh5EwHolDgN8+jnj-rsQBtCs4WyZsAOuLD2ZKRUmpYAPMuGIJFrXDB9cBHOSsXZFoWhMDHXsp3PBEde7SIUSQ7aXiOCEDIAAD02JAKCGil4gIYWA5hoDnDCEwNEOwKAjiH0ru7CxZ9+GoIUdfBxTj4CoBRm4nuato5eLkTrYh+tnFmBALUXKVBQBnG4GZM40wjIqAYEIMuqF4BNCgoEJo54mDMWGaM5iN8mhhWiGoaZsy1A9IWYsxIKApDhCyu4FA+gWDzOAGwaIHEmA0FQBIJpLS2ksDoLpao8ybBLMZP0i8YyxkTKmTMt50y7mfM+Ss5AU0NnI2sPMyAkA2g5EWDMOgoUJAcRYDQHIoVajowCdsJAM0lmviiK+EZ2LRnTCaDQd57zKZfJJVGKQ0A-n6HJVAMgVhVygBgUsvpURBlPOxS8uZczSXcrLJs356zbCoJrHAPo+zFiHOOR0ugfkb5MDIJAQQuVFn7FeZy+ZYUmhARxdinIYwUI8oNcAXKv58hUoFZ5W5Rh1x82xM4cwSZojoGYtwQgORtQGCQMxNgCIWKHm4FqfAxK4IcD2YS2Z9sWjatGUBYAN8TWGruYpbMUQNlTRgIaawIBsAwFSNFLYNZjp0BSLUM4NBYoqEiF8jFgQsVsqYHiglarohBrmPihNizU3mqNaglA3gqAQGWDAE5DA6BZCVZ85lAyhlRvGZMptOz20FHcCSvlazy76DyJAXYD9knAH4MAXVVEQUtqiK4No2ZkgeTuNgQ8FgzJ0FwHSUs0B0DGKqH4Us1w00QGwGFfiLBMD8FAJAGNPg-AAXmLEUIgQ9C-OjFgSAsI6AiAPaCXkbQT2BFcIOgIl79BQBvXe2oD6SUfsKGuyov7-2AdgogJ4u7INbkw7B7KCwENIcEA8vKIBx2AnHB+M4sILJsDoC2VC0BD0zkgMunwGrGHvqjPmXs1QJB1ARJgascFeSgboxGXcRxB4FHwzyJSOQGMQBDcsssn9DOJAALx2aAA');
        Z55['grappleMapStrings']['push']('2,Grapple Gears 3,The 9th Doctor,81063,ILDWJAhZPD4cAisACgJQMwCkAWBjACUgGcAtAZUkLIHUAxAT30eAC8QBWAVQEMBxbgHMA8gA10AewCSAUXQA3AJqZF+ITC59BoiTPnLVC9cADC+TBAAqjAHbJ40sxoAyIDZADuweiACymvCSZij8ILLukNDA2MAAagAciMkpqSCxcdxp2dmxSko5hcm+uAAuybKQAPQoRXU5ACKoValVAGwUhADscbJIpWH1iA1+kACmKZ4NtQgNwAByKQEADJPTyXNiGogRq8me9AAsydCLySspSEcbCymVE8lI64ind8B7iE8z8NBb5++Xa7DW4VAH7IEIV6pUxXaJDQow-hw+HZRGDFGoq5wDFpJotFLtTo9PoDHEgEbjNbfCBzM6IC77Z6zYB-HZgxAHY4vEH09kIK5c5l0hD3S5Mn48kV8+BfE4s7YIBmfCHwWlvD4ITly4WIGH0ZFk4bNVodbq9frojEUh4c8U0yXwJWau3k+WgjXwLXcnUQJ0ylX2n3hSmPF2aIPAXZi6lQN28j0QAU3CNR8GCiURkB67GGo0AagA0oduGMAK70QgAJwVueGoxtzpjwDV-wTICmTc2NYgqY5AdjEb9if7zYdPZDnzDULZbeQU7jiulw-TgfVkxH042qELxbLFerhLNJMtKOtVOTSyX7bDXfd65XA8vs6TwJTE-585TV7nTd+3f834vkKa5ptqaQwrIpa1skEEGtBzbGgSprEhahpnoynZjgBs4djcrJSjhG5YcAQ4gEBqrEaKoa-pRgHzvhjqASOLYzveYHQrC8EIHqcHQTCN7AOgTZFPxwm5jCpjeMCQk4pASCyDmEDQCevrAJwayKVmVR5kS5qkhA4AkFxCDgM+shZDihmXOZZLcJAESPDCcpWE4QwKFUoC4HmACM6CyC46AKr4+BJDskAAGbGUUeImrpx5ofW56vk+SXMgxPbfl6kLEaRyDMZR74yp+IGTjR6XYYCD6jl+hFVZuuqcVFCE7iW5ZVv+8HobamGDplAnlZGmVEb1z75W+DZFTRNXRnKA25eRq53qB3q4tuRatfuQiHih+k4l1jYXq2qUUQNvaasNKWPGNdyFYmxVLaVs0dfN10PeddXEVm8lQU1sFNSE9CRb9VxxP9TQtXu7X-c2iUYYd8bHfap1DR9I2VfDIq3WR92sdRT1HVdVUsQRbErak4PrZDB7IXpKlDPtnoCWjcPAsjtXsQjhMY-AVGPWTuN89lc1MUTtHs-zMHff9f1NRTu5tdW0MMxAuHJQT3V4R1Z2ehd6v8q9YUTXdU0lR+ZXPSL3MZeL2WZs1lMK1tNPxWSyvXj1l0a6zWsoxzi6jaL40zRLPN0ebev+oHps66j4FS8DlTS1cQNRXqoPA4DSf0OnUVyfQoXZSF0NpOAACOkz8AAnDcvBiSAZeXFXNd12AwDl-shB09AtAtw3jyd3KPfZOAmntk3wK18PrePOPzKTyX08cgP3JDwvo-IMv2Wr6k4D4BX1cT73wB7zPB9z0fJ9L13wDbyku+XJvEq38koCQHETaeLIebOVV8Cv+-jwv4-2Hm-Js8lv7AisL-Mi3xvJxAAEYAFtOC4HgbQOIoBpD0HmJIJQYhIAABtwp5iqKQshpDQqECqO5chZDiG0LIUkAAHkoJACh+QLDiLQTgpYlC0G8gQsgphIBWAEPQTwZAxDUIYaQqAVQugyKqJgaRMjIzeXmFYFA0QnANDiHEUsSD6ClDoEgIQ3AABMuACD8DiPIxRUl6EyMrnYmR3hK6oCsHsFAcxgBwKQSgtBGCsE4LwYQxxDDKEqIYeE2hSRsAUG4AQ8IgR5hcJ4XwgRQiRFiIkVImhDC5EKJkco-JtC1EaK0SALIuj9GGOMT3MxljrG2KKQwhxJCnEuLacAdxnj4CDD8cg1B6DMHYNwfgohHSIkgCoaU8hMTyFJA8csA+EQvCcO4bw-hgjhGiP4OIyRUSykwC6bQkpijmwrNQJU4AGgakGMQUYkxjSrH4Bsac8h7TFHONabQtxyyyIxBAIMgJIzgnjLCVM2JMyjnzKhYskiAAraQrBBqmA0KkzZGSdnZP2bk2FZDCmKPOaohoVzvhGXuXU55FjXnvN+Z8kACyyE-PscARgfhkWAoCL4hBQzAmjJCRM5lFCYVzLofCxhwArDcHUck9YmL0nbKyXsg5eSLknIZWQklBSGgor8B4EAxwqWPPqaY2lzSPlkK+Z0rVpDvAcq5Q4VAwK+WgqCWM0JkzFGRPFaQkVVQkicpRckhyiqtmZN2Tkw5fr8TVDtUoglsjZDqM0UpCIJqnkNItW8lpbLgABtZa49lwbAUUFdf44ZHqhWQp9WKxRAalmeLPpGbw4bsUqujeq1RmriVJpaGS9xMw5LNj0Q8rN5qmm5qtfaplkrSFFu6b0rx8QK38rBZ64V87A31pkY2tAzbkn0AxWkiNOLVX4tjUS4p-bylpugJAPemazUvMtQmm1DDF1-J6QChwBReWVoFeCr1+7gCzIbdupIMq5WDX4Cgdtyqo14pjRq+Nfar2DuuZoSAwRn00qnfS-NhaZ1VE8JADR3AV3wLXe6wVELvUyN9RBut0GzgREICABDkbcVqtvb2m9V6U0VKUqsPD2aCN5uLQW7dX7GWOtcigB4IKq10ZA5B3d0T1OsfgIQNtp6O1Id41e-jDCdVlL1Ryw1phyRjupeJulknunSe+SRh1paHC4Boyp4DW661gf7fu4NqKIjSBPVixDPHL2oZI2Z8hd6ZimACGJydDnXNzpc++ho9BcCmALtPZTQHN21sYxp2h+7tODWwPB-TEWL0oZ7WhgTFyLMGs0KYAoyXX3Tvfel21bL5OAvsAB9d1b6OgfA3u9TQXkkFk4zV7jdXu0FJM2c29Qm01ZnAJ1nNhGpPEZ6wNhw7cCsbprQx6Z-nY2BeRcF4ABY9PhYW12vjjXTO3pa1Z7w22JNpec311x5GZUanKMN2jPnisXYm5putLC2HwBcGFpVT3kNLeOa91bgnU2VNy6O2ppr8OpZ639z9rmss5by1JE7o21N+ah2VrTsq2MkWq4989z3jPo-IbFwl62Zh6tx+Ol9O3HPfuJ7Q2T1rAeUfgBwUH3mivnehZd5jJWKucbm6zztKOXsxbW1jmk1TbP4-s2+ojMnXNS41OYrzhWzvjYC+p+JiTknzAe0jtn2uOe66vaYRJVXNANDuUbidXXdtOf22yghTvAXqTl7bsb6nleTbrU7pJg0RCI7PVroz0WE3c9kZhypDRKXB6Fz9onEfi3LsBaFKnqnfMlaT9DkryzVloBZ+77PUWGve+a+SgPxrS8E9N3t8377LeAvxHX8HiuEVN-pyxxnyTahcY9znnvee9fCeiEZFkAQ34ABNUH8CYbLqK240juVaMsNgfhb-378FJYuz+hgOWpNELIHHgBMObMcVAZGIB6BKwQBSg-A8F9ElBLECF8AABLSAbgKwUYVADqT+CBRAKocxOKVCbIeBUjS4VAXAAABzy0NGaEQTIHIMoLIGCBfxSFQEOHQDaHlgrBIGiAchlDMA4UfW8EICQFAHUGwDgMIAsiigaCqA6nJCqEIKoMoN4FQErjv0UIf1oJUMKDYJSDOACFaw4AVRQGtwaD3hEC4GbGCBEG8CSDJRAFoEpVAAPwITwVCziEQQITYAPwYBICwXQEfyAUgWgQxEgCvzlDzH4FsCf1zG0goMiMoIkNoKqFwCrFwEYN3E-kBUeGbBQCMOACSAcm4ObAsQIVsCQBHW5EQUIPhAv1SG3BkMiMkCqBvyUMULCNUOaKlGQETnkmiA0HEWACyEgAKHoBQAKFgGAH4A0Gox8GALUhoAYEYCwTIEIIsDiFQWEVMEQMgGQMATQIQAwKwN2lSFwKaMTAIOIPgncmqPIJoJaJAAUAYKYI2kIFYOSVBEgCSFck81MFcmsLMGWCYVwDcM4ERQEDiFmNkGwG8K2KUmlSJiqDIGkHClKG4HQFMGWH-VSACPxG5GCNCPggiPOJiJfziISKSJLBSIcAlGACcGkG8DgCAK4GmKYDmIWMwCWPgWEW4G4Ffg2I5B8PQMwKPGwLSAOPwKIJILJDOKiJqKuIgBuOJMhkeMGlBF9xiA0HsHRSsJsLsIcKECcJcLcPoA8NBIoHAWAS4nRJSGgCxMOJxFxIlMQXxOf0JMrESLuLGFJOEhQALBQHLlMCMjcBgF4G8BcCsH2W8iQRwUkUcPoFiCgXOHWI6nkM8h8j8gCntP4B3QqAaEOF4BTlzBcCqE4HON4ClJABcDzFkCpkSK6AcDggcg0HKFMC5C+ORN+P+MBJsRBPiWNO5BjOGBhLhIRKRJROyDNKCJCKtJRFMBtJkPtOhknPiKdNlLdOygpOABcG8CkkRWPnYJ5kgDKPpmAAP1RRuA6J+DiFdzwQP1LE8H4CLO5HnnqE8EIFvLlHaPgDiCsDeXoEwHgVYIoCtOvPXkNDsjaPgHoG4EwEgD+PMSrJECbFGD3OMl8BPKUjPM8AvNLCeFHjmHvPgjklfIgHfM-O-Nfj-P2H4EAtsmgHklAvAsgoP3MXUmoIqF3PhDmAP0uLZGQqgFQvQqQGIDlBwqKEfJMEmHwpAEIv2W-O7AAF4gA');
        Z55['grappleMapStrings']['push']('2,Grapple Gears 2,The 9th Doctor,70521,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC9yARc4d0gJQHsAWgGVgAVmqFQoXoRQArSSgCeIStz5DREqTLmK5q4KwxRKAZhiJwAaRD9gAYRBoQAVStOQ8SOGQQ8SBwQYIwAZ0Q1SABGABZI4Dw0eEj2YAB1AEUEnMjITLQAGQToagBTBMpIMRy8HBTcxuA3SAB6bMjMwmKmyIBZSAAHXsamYDoIkamEYIBDDsQqwVq0RwWINLo6BMLWlnl2ADVIAEtSADcAJgh8wgaEaCyEgbx7gMJCBMdW6NIMOmEAFdqJQABZ4CAtYYJLr+BBpDBjfqQUHgSLnADUsFBGOivEohV4aOAc3WECWOQKa1S422qT2B2OZyuNy6byg43UkSqrwSeA+OVaADZhGgAOyHSiZAAun0hQ0p9RKwERzxRxIQAAUUIIGIRKAAnAB2vHIphAYxsGogA2W00ilutUTt9oQYy2rum7rpnt6wVB0sqbTJvs9a0cDldtqaayVNImz3EMcycaQ40miD6Sca7E1rVDjTwlFmuRwYUg5xDiXY8RpGAA8omMSs5Yg0occgNlBDInVAQk0tQ7MjQFWkhgnZsMwgBuYuL3CCWadRO3BanIBxkq1VK3zUw8VSc1aiYZhJ8BBJHFpA53zusrqB5kSfOmgAHLnhhO4BVZTzxB1EuaYNmqSKvnCGzAJq347mONbKgARgADGqjYwhuNJPMiu69vukQsK0PYFr6LDAF+iYoXy7BVmkb6dsAlG4bWaZ0WqFQwtRm6sdykDsb2nF5GRMEMZSAksTk6iMYgKbMfCwDcdefEAWJB4KTOvGiVWEAEURiCaliOJ4gSRLEcApHkf0IlUTR8n0VJCB1LJNy2WxmlcRJGnWcqFmLFZnQqc5ankn50k4E5IC0R5SkOQFHJBSAAzRRAmSxQgsCQAwummYg6WZFp2U6dlvlPjkCHAMhapcguNl0FVCBVOyID8hBHIVcidUIF0KDKm4PrqThoWtgkhUJPp2K4vihLfva5nflm9kBKlkUUbUYXKvFwCJW5NIbVUSVNal0A+fVIWdYdLncqdyVrTtUW1OdG1bRx+XALlL3Eelo5FQk6Uvt9aWQC6-3aYRwNTLNK1ebdkNMetq77cAKU2btnn8VWR3CQtIBI3DlRXdjN1thdin3ejxPqQjOO5CNkRjYZk0mcREOWVj1bI3Zq3hVYj2o9JS3k+SvMxWTx3BazVPiXj4uE3JKMI3gD3w9tOTpZlYMQG96sgDTWs5Mzmb42z7kwwBMuBUrz3Gzx8vnaLaiGxLqkSQ7ZsRQLUQ22TPOU6lINZRAdMTcZ03TPrM6Gwr7Mmw5rvcxb-lR9bpPeZjytO1Lipc8tSdQ5LyI+y9qv+996UnMXRW-SHpk67r+FCdHi2JwbrOObj+dp5BcvJ4Jds-g7isZzCsfZyTufp+3lvU6Do0GUHU3V-XLPd0Tj0R7H0Dex3btd2Pzm95JW9x4PnTD+7P5C43beZhf2O+94GXl9lmtazXtcIGHNoR-zq8t+vZ9PQnK2o80Yp2PnzL2ztpZZzPntZe49r4F0aK-EAgcjLzyZovZucDO4cz3FzDe8dwFAPqjfI2PdU6Tzzr5KBxDBaeyvhTQ+GsH662furZBb8zKYPDi3b+uDYaCU3pQ2Wd1d4cn3v3CBYDOqnx3iAwRhCzovQ4aghmVcRgfwSl-JuPDOYMJtKQx2OCgz0PIdI5KA9Lo0OhjneRVDGHCMiEXVh+R3oFjYWDFoA1OqEF7o0AYYFfRjHIHNQGxE+itAABy+jqI1R4+U+h4EcNA9IQFw79j3H9SCLUEqQA9L2RGm5DglROh1AIOAOyCRyZtPJfVkrJM3OkIawUMm4SwE6aA1TbRXk6oUmkDAsyWTKU1HApEaRdMBj0xAYxghqiBp6YJ6i9yNRnFEnI7BWiDHIAAM2lG4XgjgkJ0DqK4GkmoElJJSWkz+rTTZZLdhM-JAE+lE2KXjYZiQKnKkeXU7GDTMLNPtrcmO7SqmrkvDCF5ckBmJg+XUMZRMJkQpyDMmJeEHTABCUGeZUY1mehTHErcuREn-KJqkxMwLyn3O4J4ZETyHJQsgm8y6cKvlgrVPS+pKTAV90pSM0FaYkVTOxoyt2MKhmrQRXJIVuRUXYuImMHmgSFlnyKmMHoyJlWumCMIbc4xaiUGcDSesVZdhiB2Xsg5RyIDhkfqZNY51dUFltcqJ1oZ8hSmVFqqIeVXTfAxKKCUUpZQQF4OsHA5htkYlaDG2NMbonADQK0c4ca41RtTbG6JmoAAqSFuq9MgNQcwyaM0xqgK0MUpbWjFpTaW7gebzkIHnAwXgFaq09nTaWlAbbS0QhQDmqSaRgDREOAhLAYhQQIXSIcWA5AcBvn4IwSApBO0ZoTUm2tGbV2puicQOgmRzgHh-HQFglBAR9AYCWutMAe0ZprVW+t-b1geEgIQPoxBCjyDfLe1NHbo1dp-XGvtA6EByl4PIPowhYjKG3XG9dV6t3-rXVBXN+aoAQkoCe8g57L2btTeWytpb711vYA29Yfg33KE-UwQDsa-1Vu7YRjNwHc1uhAOBvoJxYgsFg5mlwCHU28fjShvNCBHDgHYLIFASEhN4o3VW2T0Ts1uGiApRwEJJNyBk0hnd-G8Npp03B4AynVNyXkocdIYhAR0HSL8QQjhIDZtmIQfAuoBNxoI1W4jGbH2NuQChI4hxARjpwNKQQWRQBuEuKCUERBDi0ZjfRgDTHf2oBA4UtCI6x0TqnTOudC6l0rsM3xxN7nY2KeMMINwpB7bsA01J7TVb4P6fK8V4TJmFJcjQJkS4KBLi6hCdm+T162gpbjd5-DjhqtMGyJ09QkAkJvnONQLAhw-w4Bo2NujIBZOMfbcAUgTAqsitEMAQ47AELmEEH8I0ZWy03q2zGibHnSNPqsJALMgXgu4DCxFqLMW4sJenrtoHEJlB9HkPObIT4svjsndO2d87F0MGXRV0rLWY0VYh+QIw6gcDZDfBZqzNm7MOacy5vAbmMf5ge15u7+ZODg78DAbYX2Qu-cyJF6LsXCDxce8DtrrQ9u9rS6xwpDAQDEHJ-US7E46C9f68wUHO3BfC+Ywdo7T5sh0lhzlhH+Xkeo8F81hTxvjMqdYuoQgBOifWds6QezjnnOudww+2nRH6e+YWJABwbOfvhc5-9nnfP9vABB-zljlFshlWHaOuHuXEcFZR0VprenTep4Hfm9QpzCeWbt6Tp3FOqdu9G3T6nXv3sBcOEF9nAeucA958rsPqvlfg8hyK9iuv4d5aR4VtHw3EOp+x7jxNEJc-E-t476XlPXcjaB892N3Acd9GZ0av3oW69B8BxHlXDHlf9rFyAUEIAu8J4N33s36P0+luicP+2WLx-54d2T53M-Pfu7vZ7xnK+rCOE+9X77DfP7bnbfUPcPfbNvKHV6E-OPPXHvJPI3VPK-UtCrPdA9N0G3PPEnZ-QvF3d-UvD3cvV7PzJwVnAA2vYAhvEPEXZvPfHfSAkVI0GA7LbvRPQ3FPG-NPFAs3O-PuYcR-bAqfV-YvOffnBfMtb-VfeAdfDnevYPJvcAkXA-KPYAAAR2YPj31172T373pyx0hxHxsDH1t0EJfyL1nx8w-1TXEIZ2X1Xw03IP90oPkJ31oOSwgOxxFUDFjxYLP20MQM4OQMH04MzwQEKHAAEMnzMLwPLysPGy-zsN-2iRkM3xAMb1cMUPVwYMKR7FPy0IQI4OQyCMEx4IMPtj6EwInwL2nxEMsIIM-yILIw2C4BSOcNAJoMyNS2UPfhAEGEoEu14DYEoCWxWzW10Opwq01xqz7lYj6GzQc1gEu052cxQDCAQjkEjUvwHxKNTymPtjfGyEKHmLgCWNABWLCF1G-QyJbx30O2O0KWuGAGlD6HIEIF4GWwc0GGyxu3wPn090oFU2zVm24FMB4HeIwAWNOPOPWJQE2KQO2IM12Kq2mPUDQkJzkDwFePeOoAc34AQkuDIAwBsM80IIfSm0O2BPYGkMOHBMhPMGWLz11E2zAJuPbUgDfGUxUKFEl2ECxI+J93xOIDWPMGoAUNZJFzuK12ADFBAGlF5LeP5LxIJL+GJLiNjWJPJJmysDqycGiBCUEC01eNIG+zGK2L0LNw63tkbUiOqOEIsPwzVKe3+MBMpPiFaMDzSOoPVzcIzTV1-XZM5JFRpzyPgPYPGOv2Q1CL7g6BtJwJqPtI80dOrWdI5OBMoHUHdLkPaO9M6KA1Fyj0gCNRDLYIv3hPNNT0tOjOMKwKiNwLf1iPqOsK-yaOgE9UzK33SJZLoP226MKWHFGRAEOAYBsyFIwDtQVhWRzFaBDl2HLm1D6BYAXKXMXM4VXNdGQDKWyEGWSi8EKV8BJBAFMCNTGA3OyAlxJANBPz6EYCC3l1BD+BOA+3C0ECQiSEJSgzBgrBp0EgxEICNDtXtH9UECwGAtAoFTXMQG+FBDQANFBF4CFFiDcDKCLBFSPTpAhCzA+wPLOxZxABhXYEoGxLQBXyYEfIuyuz+CrhTDQ2mA2RDg2UGBAqYuAtmHnMXPYqXIgq4qaA3JyEbHYCzHEyghAAiEoHAACw8A-GAEsHYHABNWAG5PYAiE1CgDHKcEyFgHNHVlaC5ggGFDArAvkFaGzWXOXO4vMspCsEyCqERi5GyDQhwEvKCDQHCxwD-DePoF62UEYF4C+MuFiFABMuqHXGEG-FaEuCYAGDQBYEIDoHCKaAQmnk6E1FBEGATSKjzGYuYuFS4s1FiHgsQrKEBBwDQHLHtjxgW0TXAG2V3IyFErcFoEYH1N53kEuyYFBEkAuAQkfMSUICFHPBXE-JTRyGgF-P-O+iAqyuAqWV1igpgrgoQqQpQtFRFXIGyCPD-02lm1mAhHrGzRc2iDHQXQG0iywFICNFmDQF4GADKG3EgHiuBkIDxW5BrFmBqu+g2TECmqwGuW4vYAxEoCKpKtgt4BlOBN8n3PgCm2MHACYKEpsG2ohF4F4EuEOFi0fNgHCyW2wBwCQlmHSBQEBDnTGFurVFgByu1BOGzWAF4EiWICwFJRyCevSsWFeveqKjNW+t+q4sKABqBvmtBr3JGpAHUMcAiB6G8McpgBKtcvct4E8pUB8r8oCrcHSkBByqSDcU9ESvLkyBSrSv+kyoMpApyogryoKqQuKtKt4rxgaUKAhA02bUGVU0GBfOaHXG5qaDotyAYq5rYtMpXIsqDo5HPlsugGyC4C5EbQZ3iDykLJ-CzGusxX5GhDTHmE9CSD8Q9XDoQEOGzSIAjQQnLDLnQknOJRiF0uaHDrqhwDcHMBRGoEuBlMOByqqFTtouAHKFLDDoeEODfDwEYGoEBAVnwWAHTtdEzummzqhTzoLvMAQngGbFLs9AGDiFyBaFspmDrobsuBqBbqDHbqmEHARgPOsrhEgD7oHoYCHq6A1QPHHvtEnpGrPpnvzpc3nvSlUKrDZBXorvXurq3vro6v8tA3KuDuIjaGet6A+XAemEoGEymBgdgZGBwAQZGCQeQaaCeqgaaAwcwdyCTRwcaDwfwYSHIDQcaCAA');
        Z55['grappleMapStrings']['push']('2,Grapple Gears,The 9th Doctor,63418,ILDmJAhZIawhjrAIwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC8QBWAVQENDPQA8gwBKAeyrCAbnQDMUjOGRde-IWInS5khcADCGGRAAKuycACKCcsAAiIa8Awg8wSiDeRwORKEi6Q3qAALOCIlJAAWojRMdAARgAMMcnRkOaE8KnATCm5efkgnJAADsnmupYFVdXe1IbR4ShB1VDAiS1I5uQCDgjQAOqVLXiEAJwdiEUyTtHmaAyh1QCykJJDEzkMSRMF3nH+DcDbOydQXT1ZAGbH1XhULidFUTHl66cbwAvvuZuL39HeAAWABcYuEAPRvf4FNKEPB-VoAOWhiHBADYAMpoADsADVKOZgYQEJxgJlZhkUR09gcwkcqSAbOD2ORLsDOMJdAk6BBYfCssiGchgaQAByXFhLQEJRawSC45oMiBFADOvQQ5hsUKVyRpYPpDKZLLZHK5PJAFRwXx1FUo4x1MHMlHJfWAaGSKxYpOiI350XBAGosXiCUSSWlta8YnYMABHGIrSQIkCScEAFWIxRVdCCCRsoogtXqdJdVTsuPeaWdsTdyXCXpivuTwEDwfxhOJEDll210LlAFMHYVIGqXlqh3k9YcbtCmcVWezOdzeek-a7BQzWzj22HlSP1RBNb3TpYADIRS5oUUscjUXo5XGDh05NMzqneThuQ6lw9oADSyZ2HEiqIEyCSitwcSEAIyLghAlr2ja5g4CBSp8sm0AbhOySqgeIBHkqRgBrAgIBigwiUKewiLFOdJvt8RoLqay5nHCGHAFh0LCmKEpSjKXbyqhDJykYx7fN2YnvAOE64WOklDrRCBuPR7xzkxS7mo6bECjqW4hh24ajrM44MmeF5Xjed4QA+T46i+Kn-N4GLam4Mw+mgiJQvEtIIIxJoaSuODIEg2QepAACeogvIQAbJOCoxGIQWDEAAVil5hGA8wBFDkLyQFlroYCgYL7jERjgiRZEUVRNHZV+JZlP+7HATEp7guBkHQbBK5oNQBWtLlHTIfJuRFAIZRpNGwBGM2KwAJZ4dNFWkeRlHUdZwACNqKx-tqeD4M2G2cRAO17QdPybSNiD7WuMQ5MdBQ3YdIA5FtJW7Y250pPddaQB9PpfbqwDOfqACuZQ4J2oGfD5EB+YuZpw+V2F1iqkBYIt+3anYdB-gmkB0M2N1TQwYWaddhDBb52X9SAKywFFANQ9T3DjdEKwYkTJBTbi3qICseD1RqVpTRgVMQOEGK08AIwAEw1pw5MnZAsZK-hODutEdgRLFDSQGme2EIi7G4oz-OeNLyFmFrwD9AWeugETOBzTWERC8ruLNuknM2xWKQ2MjNa6G2obMzslBoxjn3Y8AuP44Tn3S3YpPx8kIzi4yNP4wzn1h5nrP4z7Prc77fMIAL7vqyn0NiyVUuNoQ8tZIr+Oqy8GtTTrJUGw3xtZKb+OgJbODW9DdslY7n0u1kbv4570VF9TfuxD5Ni4rioNxLgwIRIMoCcLLgKAkQuLgti4IX5fF8PJcAZX1foxn-fl94JAgJ0P0QvICguJb+wgJxH6LiWA5AcCIlEIwSApBb7PwvvbNA4JUywJgbAgsxA6AZ3AIiXE-R2Cgw-igUgERdD614PgCIDBEGwLgjAJ+sCZBUNgcAJY-QLD81sOvTe29d7mH3ofY+hBT7n1gTfO+sDH7COfq-d+n8lIgB-n-ABQCQFgIgQwKBKDn7wMYc-TR98CwfxwICPolhsG4Pwf0QhxDSGEHIZQpBz8oB0Ofgwhx99gC2PfusHka8N5bxwDvPeB8j4n2cffUR1CJHULwDYHAoB3aawUVgf+gDgGgPAZA6BYitEgAQW4q+eir4Fk4LiHAwh3B6BAGYvBBCiEkLTGQvAFCdHuNoZI++rjqEgFgMCSw9V4C+K4QEnhfCQmCLCVfCJ4iJkv1ifExAeNUC-2SUotJqjMmFMvto-Jl9NlwNjv0IxFTdAuGqRYqx9TGnNJ2RfJx7Sr6dKYZAREuhl7OA4X47hQT+GhPuS-EAez4ozOvsAUgTAMTelMfI5ZKTlHpLURo7J+jcktIKUiop2VSnlNcLYLBOCamWLqTYuxqLL53OoY8xxLC2EIALIM-xgTeHBIEUI6JAL0WXyiSIyAwgSlfksJUJJsK1kZPUVk6h2zqGAuKViipBIOL4vOUShptimn2K6W0ilpLbk4DKZwSw0BIDWHpV8plPzxl-JBcAQFXKpFzPqpYNM0LFGpJUaKxFEqUU3PBNK4A6DgpuG8Aq8xtTrEqpJd68l9DtVwWpZUQ1pITXDO+WM1lIj2WROBeCaRH9+W2xAMUBIcRDCgCgriLA1B-DEF9W6GNvrDHGJxfgYAf5qBjDuCQIhAA7XhSwu0xqjS4gdni6AGpgOAGwWgMAkOBNwfowhYBQX4NgXEKVqB5I1ZALNlL3EjrHXAPQU6SHhTndQUQla-U1o3cgjl+yG0VMIHikNhKw1XPVUwzV0bI1xr6CqD5QzGWjJZVmqZz9bXhLfrm-CjhnUrNdfCjZt7wSSpvZ6kpZSKloFMYq0NlzVXXM3dugdureX7uaEmwDzLflsutUh8DkyeV8ug5cWDwq3UIvFagr1UqkMyowzihwZzcPErVQOz9Q7I0kf1TAPQbgKMjKoxamjNqQOQdkWw6ewIi0luwKQLt3AsOgD7WJrdlrwQ7qvh4oxo6ZO6CWP+hlCnzVpqkRm6ZZmYlxPdpkIVqz2OIc9bW719bDmNrcEwbDz6LkiYIx+0zWrJN6rHboHxnDHMpuAx5tzYHVO8vxNBrtrG-MIbFVeutvHMX8bcIsoTL68MRsI2ZizZKpPJYGWl01QHqPpto5mjzjH8tsPjEsl1cL1mlYq0Fnjnr704r-KcnDdWYvvsceJjpA6f3wRcPJjL3XXO9fc9EtTebQQjbg2N91nGclTdQ1x9D2K3CnifQS6L4bRORrWw84jSXbN0o68ms1qaQPZfvvRl+A280PF8-B8bHquM3d0RV+7FSliRZe8qt9JmiOJdIzJmwxr-uUec8Dg7OX+syLzWwP1Kpi20AwHNEcu8IgJHILEknKnydQbYdsYgNOZB04ZyqJnLObBMHZ3R1TFPoPFVQHzgXEVT3nqrWV4LFXZtuD7oiKCowZAUPIKAXT+nDPGY+-Fr9XS9146cJQfoxBJDUFlricK5BCAoGKBEQgwghcYgirvRECQVfTa4+rzaVTFuvcx6b7HFuUDAjiGOmw7XPkA660pnrHOjtx-6NsSwaIisw8u4H27OSQ8CAW1FjH+GVutLNxJmPceE-bcJ05oHWXSeg8l1zyw9pocXY40XxHnrAGx4qTNYN6PX1V6x014d1mE9-eT0T1vymJec-U+YYKveRX98m9ewfwfQsVPMGjpVk+Gtxej0wy3yBQgMHs5ATgEQaey1GOFIcRFciphSO1SUv+liSmlhRiANyDzVdGympjYUmgcBwEyFGCWGF1AXkHqSIFIE3i7UKwiGLHLhKBtGQzrBsCCG4BYxRDagcmANagDE4H7FBg1gACdARhBsRIDDgDhOwop8oOIQACwvxykH8QA789BYAmB35ZZgQu1sBRgUAt4roJhwQhJUQ0QIgsAlCVCsAUp0x-9NDf9yCdD8gx0yhmEAgqdAQbBi0IhSBdNQYIhACGJwRno5xlDHClDuAjA4C-8-9dDPCawcUEwYAeRm0ohdBrBOw2BxxPJgB5YbAnADVkAYCYBIAMRFdK0H9i0wBOAZASg-52B0g+obZuAZDqgv8awAxCAu0bDZDEIvDv9SA0B6DhA0QggqDBZoMwDwBH02gYAXAsNgBBxIACwHBG04jgA4CEDKA7dqBwp9YUC0CMCsCJYcClRdA8CwQCCiCqQwIqjcgbBKDqC6CGCmD9C5EDgUo9BLAItgAsA9AnBFlShdBGZBhXAcAmB3dD4WcyltBkDCBUC4gu1SBgBMCSpShFjliGhVjiDoRSDNiUhTwdiaDaj9jmC6QDhaC9AXBTxLBwZdACx7M-VbAHABDUBER3dyjTgmR7DwRignDHCXC3CtDNCoSqjkBK57BcVLpgA88bA-0jAQBxgCDpoXByARhrRXQ3o0InRoB1hcQ0wiAcAZA4g0YewxwfxoQigLAhYcB0i34HcmDOA-1Dh2AHRvBxS+hcREQ8BGBqBQYYllToBRShRjTJTpTbE5T4ADSlSHRVSnQEANSMjAQHcDTdT9Q3SlQjTwgTSzSLTQZkJKjeQ2SxSwzHSZSXSoF5CLBE8PSJT1TNS-TZZUIvxmSGTqgt0QT8gCzCyChKB9kqgyzyzJwqyKzaydhCB6zcggA');
        Z55['grappleMapStrings']['push']('2,Blu,Blubsquid,92387,ILD2JAhZIawhiQEVgBFkFsAeBGEANgMIBGAEgGoCWAxgMwBiuAhgOqoQBKiA5jIaUq1GLdiAB2AOQDuIBqAAs0gKIIiIWWhBkQfaMADSIAM4pg64AE1zqLcACqESOLnAAZgAYkwZUTI1vQKCEABkAegBWAEk3ABd7TiIPayhkAHEATm9oBkCAWWc+JGkGLO8wgGoAZTIAdgplZFi0hHtIOgCkZEgORGgALQVvArde4MDcki8kVUdvdIBTbOAADWnENEiY+MTkp2QyABNZPuBc4ecUxGRS8fG2jvm0kO8tfoAmb2VIAAc74NyhzoX0gVBO1zShyKCC0zDG-wQPUyy36AA4LthoQgSmUkJUavVGs1WpAAG7wlBpNzLGhXBDfUbeAAKYVgAAsKrhOMoQpxobkeGksSBfAApQLIKI8IYIkDhaJxBJJK49BgvJDQELCkB5YAAV1lCHxdQaTRaEDaVXBCGQRBlpy1hpALPZnO5vP5DlMM31TvQwEdftSauWgcNtvtQfgS280jty2Q3qC0Yl8Y1wET4xT8zTGwzScC2eKuZh+azwBjXR5rwD2sQReu1fTYcLFcCKnVDrrCAb2KbeZb3nsRHF8zIkHApyoaG1BTZuqDZ2Agu1qngsaO1v+mwVO2V+yix3To6d0jIK27-2H-hzFLu31wkaduTZwJmRAYT8XTp6UQnx8Cb5HidY1CTNVp1GYeYonXPNp0vQJSVZDkuR5PkIFyKg72+aQoOKKUvy0SwTz9X8j1ONlK2-IMABUwi3CAWUCLQACt1llF0UPddCRTCdFXnoiUolxWUd22JU9igJjAj4oNJREv06IY50wiDPIiCZO9OLdNDPRWfjEFmP03nYiAxMVXYVRuVT03OJ10kOGTqhNIlzRANo-nmHoaxoKFqKCXI4S+BwJTIMg6X8tRbU6PNMyQXUDWCVUAHllhkYZfT9UDTWJC1IBoutkDQGLZQS6jxVFZSCiIZSI3GCrlO+Gqcy-RAGpBZri1ahBcnsVrVDfLoSwRcy90kmwiBKszaw65SICIaLQzrJq5uDVL03S+zhqdeAXBams4uTYA9q6g6CyHSAhX2pAtEHHVMsXXJOEnQyHsQONWtuutRokqzlFgxElwuK1YxDb9HAiCVvJur0LiZQJtNQj0MNWUyRRC2NlAM0sqjvBEejQAGnCB+LgEhzGjHKZywNy9zIBBrpobzSnSfJx7YZ9OZigYVb-IJomoBJxACn6VMXsQbLXJJBnriZ0sKCm9G2aDXrzvRrnrgYCLBbWb9+eWOzDPp2q0kNo1qZytyHGNry72gGj+tBXnxlyXHgo1m1bnTILF312zAMgRkujSABHOtJfAvLRdt5ZdZmSBjCib9Vfd9seeWew1dlP3TjNiARjvG5tZACPaetmWbTl6bLCqEFo-ZzPU43SBtWgZK8f+HPAbznVIGwBdGwHiWLalvKSMru8tBoGiQXH58Odej2IDPewKWgRvfaKgX+B74ACkfeYtacglLZJOeUCrkAtEOKiIG+euVYX+kMaG8XiY3oMu+J3fVGVm1lAqMfFykc6ZB1lnbYADtZ7UVyO3JuXQGDb2gMgZSP1LL7H+gbAOD8bSE2om0HBEBuiT1RhcMEydgBwM5u2Z4NZ+iqBulsCy+5UiYP9mQ5S0g0gXnBmTKGJD6EXE8uzMQ1DMbby0CQCwn8t5YIyn-ZeocgE0ytm0c+GZL7+iocLX4MDgCiMXhKRBNYDGkVkew+OhCNAMBWMo0+Ud+GxzRnvG2IjsIv01gpK+lCO53C-oLH+TtYxEG7KXVRrjwEoitpFHqT874eJtGkQaONfHjH8TvAO5IKZ2NHqAwumjoA0DrLqBRhpXbuKXpSaQ2otCmJ-OY3OAdE6gzmmE6WtUCnABoKUgoFd57aOfpUjMZBOAUi0ArASu5fr7DBo0kEuAk7c23rKCGjj0yHB7rqN+jFkI6WRsANIU03AVDCKcs5pz+JkDCEhc5Zzjm3LOeiXwHhyYMI4Pch5slgBXJuQ8j5Dz0RhCZHQfiDCij-NuZc65nywgQvOYC4FoKNAgDhY87Q0LPmooucAIFIL0b6HcCcz5ULfm3KxbJXFSLobkpJTCmlBzcAZEck4cFRKAXotJec+lZA0icCHpAE49LvkYr+WyyF3zeVD2kUKn5dKxXwoZUyqKKL5VouFZyu5qrsVpEZY5DgISVUwtpZirVslnmvPMIK01xrRVGp8EkC1dhCV2vVXKu15r0YYENcSjlbqfUep8OgVlLrZUmvdQ6z1VqQ0irJda+1Lz0YMOdT611Yb-URsDY0b17LU22p9SEUUABPeGmbg0ptDXm9lAbVDKCjeWmNXK43VpJjKhtmrw0JsDQwd5cbc2xrtQW4t6MGBlpzRW-tPqeV8uHXWsdbbTn0rQFUSwAAndGblW0aoXXGpdq7109ujVu2FTblB5FJOu0d4q+2NrtVO3UHA0izqveOm9-rT3nsDTobNz753HrtTqpVHAyAHvrUe7lkr0ZkEvQq697afUAb1doJ9MGX1warRmkAizk1zrA02jDwAoggZw369DnbMPQbVah7dHblZRGQ5R399LKXoxPJukj4rmOBtFERn9uG7WcdUKKCj2LYPUZ9QJ4AlVv0ocY3GiTLM2NpvZfJnjMm+PicRejAwwmvlUb-RpvFgaDD0ZE3ppjmnA2dkU5WjjFnVAhFUwx9Tym7MzWw7x9jCqJMhBM7p2T-HXMD2sxOlzhnVB5Ec6Z-zBmkV5B0zakLtmwt718wl197LB0ltUJICAwX0visy+jSQkW-POfFQwDwkBuCBskPF31SnyuVeq9l1L9WbMKoq1V9G613Nqc82izrzWfHSac-17Fg3ut1dE-p9lE3A3JVa9N+lc3VAlt66NhrHWmvo00iNqLZWttdcDUyKbZm40reAEyRbZ27UXd6HltDjWjuqGQCVtLj3DtDeQKd6Ls3tuBpQXt0rY3ZIXeq+t-bIP0Rg7e21xLn30Y8Qe2Jv7z3gCcGu79p7Q3a5A-eyj7H6M3YQ+B5tgb-3VBVB+wd8naOGbI5m4TwNM88dw-ywj5nsOlvnYp5A6nUOzi85opjmn43edcwZ8t8XXObs+ou-YfnZOxdo-sCLgXF2KC5d7bL1HQ2KAy6xxz1QFBFftdp3rtXSvQe89YFrw96ubcG9F9btHrBTfw-N+jVgluzfK6G7Y1n3Pbu85WE7h3aOeEk-x4zo3qwfce79+jK4kuedo8sGHq30PeeWHd+zz3gbLDx7z4nwN9cU-B7R-0DPvuXdDf6Lnj7+fVB2EgDQZ2-kmSAKCEhIIYQPAAC88iD+H3kdvMTx8xLed8DM0+0BD3wGgaw6Uhh4OSnwWo6BZC7cAWgdEqBIDQGUEnFBkAa2OD5JAHQyg+C40gEYZQpgZ6QBy8oIYwvvIMFmDwfKZxUD68gLbgwAELbpAKLPIPotIK3oLqsN-tSOaOnqCAcrqKLJAAQAcikCsEPBPmZGEJeJsD8JgP0IQcQcwEyBkEPhQSPtgdQTQfwD4MgtPqgIsmCv6BmARrIPAEQI4EJjAG3rQYxF3gjBUMQUQaIaAH3iPiPmPvwTIcEFPgwfoPvqgOaAEBYJAMwJoFUPYAQOopFJ3sEJ3iISIeIQPpQZQYJLIZYYaG8qcARmcLINSGcGurIWEN1CXAAGyiFGEsRhA0RmHD495WFBH-D74z4MG6CSYwApCsDeiwAEC25BDQA8CFqpJID6FBCGFeFiESH+Gj7BCBHBFWE2GAx2HmhUByDOEMC6H+jJGpGIDpFCFGHZGmGSF5EZE2SFGWHFHEylGoBshyD94igsQHDAbpj9AswcSCHMjCFZGEEmGtGD7SGdGyHyFhEwDgDqhrpEDgBSbgBEDwAOa+hEDogLjYDoBJwGrqiaCoDrRPIgC1yQC6jnDcCQCOB5HTAMDOHjDqRoDVEyRuE4qeFNGYA+F+ELHjBfLLEyGhHICME2F4SfEgCiiijE7UGbB4FhAEGzGkHkELHJSQlQnLH6BJpELmAwCmCLLqFLFBgNHTHAn9DzG5H94WGEnLGrGwn6BJxfrMqIn3hEC-FZQAlhBAmzGglMnBBEAEmsnYEwlwlmAxgzwfwxKwgdy5Ackz4wAUAyCWArCHB6jpBeL+iokT49Bwn6AUA0Q0Cmx0AkDGB9xYEoCzKlSQDVFtBrGoAMD2B0CQBsiHDvCQxKmRQqkBTumqCQBanSA6l6lIAAC8MZQAA');
        Z55['grappleMapStrings']['push']('1,Bad Platform,RoctorDush,-1,ILD2JAhZIawhiQEVgFlkFsBisCS2kAzgJoAaASpgEYDMAUgC4gAOAytQEwByADHfQCiAEzLdwSSQgCqjAGyoE0MCADuwAMIhBCYSGzAAdgC8A5kkEaAZgHkp9h44QbkAcQrnE0AFqKnkl3dPBAARYF9-KUhkAAlpSWhhV0iUyNg4KTd41MR0+ElVV2yciGlIAEZMmL8S2oh6cOS6xwbvZqcGg3aHAz1JHRrIsIAZYJLo6oTgHRLkDQAWdrKACzGIZBDFpGgANQluyQMSEn7gAGopVWwAQwOo2MGoYAAFNbv-Ysk5x5hgEgBLd5INAAegAHFIdGx6EQbGDOGcAKYAVzceEkYXR9hCyEg6hyaHQmWUSDCYUkhJ+EFBEIxIIA7PTuABWYSgCgAdRYaKmWKkOLxJUJhK+JMQZKklJ6Dh0+SQhTwbzuIWeIKi03mqnKyBILGoAE4iJBAQUtA5eMAAMYlCWnKnqfHi6YOFVqqQg-UAG0tJDYyOEgmWYONmTN9gt1pytoswHtwEdoWd9miGgTEGgM2BGjQfIQqkFzXiRGJ-OAACswwgdJG6gZM4gdMWCngAG77IEwXHq4aS7McjsIeAAD0ueFUSsi8QtotLFYH1PBtVUeGRWyjc1qUtFPzC9YQhM+wMXp3oeCsjGkFA0vBIy4AnrmUjjKykt0hcTuk8DgIelNOIFYZwgsBIHAbSMQgi2oGgYB0EgRCIQUEQEgzIosFwceEFQRh6FwRCwy8NwiLaCAni4dB4GQRhILkaB+GEcRSb4rR8EgFh1EsWBwAEURJEkpxmFUThQEYRClh4COzrRCAAmUdhcGydMGgSXxZEiXhbFCQp6kUUpKlScxOl0Zp8nQYpPGMToYaKcA7HCdRELYBosByCRLgyUZrG2VpZmeVxNjzNcTQgBoakOSZHF+YuAVBc4hnhd5pkwVFEIxcFwDksANl2dp4VpaEaEpRF9micA+UQCEYWlYlkV5YFTQ6CE8XVTlvnhSCzLlGwJGZtlPnJe1zJDt1zqCIVCWtQNpUdYwI06IIVUaTVJUaTNc3TM1S2TSBilrSRXRZUVy25dNzKzft40tf1O1FeV+iLbpx1taVd3ANgm2PdtwGKa9wV9UlN11bFECuJdW3Xd9t31SRrgPcZT1TatZ3ra4H3w19NFFXtzoxABR0Y7tyMkfGMCWuoADS0iuEOyxJN4LaWpgvCmGgabvCEIIThlIIsJg3h8wL1zPPqaDGKL4ti-OUtAsogjQMgcuxrZiCoGahLKF0JzAByquesQ5BUAIjB4CEe5AiCa6SCCcj87bAtliCAAqEsS9LbsHKg8uKwrGXmLjwDmO55MgMW5LcCAixNUrkDzeYjudiAOuaHrpCUDQDDGyEDRzh2Ft1Do-7u0Xdye7G3tWSAOwwCc71-DA8Cw8A1AwOoBaXLgUtYoM2DSLQkC05wzIvEqaCQG085hD7oTYNwqjkMIyJ4BoyxlnQkDMpTkB2AUHfzl2gyO73-fCJw8ymOTrjcAzMSwCwS8r2vG9lBySpXHKHZlErCDXEfA9nxfV9LQ3zvsvVefcN7dVACQTg+pVCIjYIYYeFIx5S3JIrdMOxZ7z2RKoQQlsKraypO0ZQ8sEBDkdpaVw2BaDUEBFAmBcCEHAD2Mg8eA4ujoO0OULBZAF73zAevcmkDoGwPge-ZQIpaioFgMsM45QKCCGGBQZYkBPT6mEDeO4Pgfg6AuPYYYwE2YWAALxAA');
        Z55['grappleMapStrings']['push']('1,Spinnies,GayfishDeluxe,-1,ILD2JAhZIawhiQEVgEkCqBmSAHARgLYCsuAWgBoCywAIhgCYAWApgOpm4DGATEwKJk2ADwCMLAOIYIAJwBuEAMKQA5kloA5AFYUk-YIrX7gNYGuhKQi5NaQxgGAM52XSa7fUPnrnwZuokaCdfH3cAxFovENcwuyDvaLd-O0jgxKSPRHj0jPCEVISckDREAAkAejly6prqqHKAdlrarErmmuAAaXxkAEM1CGMKqvby+qbR1pH24AApUtgABkQS4GHRsZhGjamNudolxFN10fGdttPuvoGUEBOZrYn23cue-oRpNYuHyG3J7+a+0OCAAmncAbUzv9poDZgdlgguOCYZDHucUR0ru8IAE2KhFAAbSCOEEUABKhHwWFmABc0LQADLAEGFCBUSCzIogcoAFh85QAHC59MYuWLxRKiqhoMh+DLjDdgMY8UqAGrE0kUqm0+loFSdCQaORcBa4ZASJmeADKeUSAAUANQ+O2bQL2SUez1ekDGWXyiyrNSRYAAMXgkCYyHwEhDizIhAAnABPfBW4BJtCKJhaKmQYidNOgEE8BMAdxYVoJwHwCMQcrIYt5-KFdhF3vbHZy0uAfp7CqVIE+KsgolVAFciCGaUIACrV2sIeuNvmuQXCgedzdbpDd3uykBqCQgJGKOUElfbuwYeUIUDYCMMHg8-WG42mzPZ3P5wvFssV2AvkaJqwLgH45jg+ZcJA56Xi4159ggcj3kwj7PgaQHvlm4F5gWYC-uWVoAehb4gWBX64UWJYEVWDAhrBdh0b2EAaASGilqSDBjmREEUfh-6ASRoFYeRP5UfxxHAUJn48VBiyfPRHw3hAIbIY+xDVoodjsg2m6MXKCAsWxHFccJPGiX+hECZJ3E4eZBFEa+1mmThUGOKsiClmGW7wfuymqTw6lpEckA6Z2ekWFAqpGRQnGeZaETACqnaQHuCCqjOXAxlg+CKgEtrpNAZISqK4q0NUpYhL64qFcVHoVOUFW+FVYo1eKJVigy5WVbcLXAEVbUei6DWVQAvEAA');
        Z55['grappleMapStrings']['push']('1,Rotam,V3NOM13,-1,ILD2JAhZIawhiQEVgDECqBbAnABgE0B1PGARgIC8AVWHAOQFlrGIB2ABwgGE0BzJABFBANyJIAosG4DBIAJIoIkAMYgM3AGYB5JMGQApABwAWPeYuXzaYADtKAxBMhFHV9xEEB6DvM0AXDAAlbkJlQ1MkaAA1cElIAEsAdw9ELwA2AGUACTZoiWR-AHEEWESU1MqQMqw3Ko94AGpzZCKuetLgZr0kto7O7qroAEN4SyaOuVGrCb1WgGk9OQIAZxmu817FoWBV9cHEBb1oPfGNnqLtxBO1s7GqqfvzeCeEVvb+4BeOkdekb4uH36AKQRyiu1uFhBh0uSwh6z+IC2x3hd02sJ2pwsGEgAC0WtxUDtYp93DYiESnF8WmhhqSrAANRDZLwiLzsjnsqBeNiczkAZlZfI50mQZAwqGgwCkwBZbOFXm5vIVgvlwuAggAHioAFaShQgOUKxUwHnG1XGjX+ABGepgIFYsqFCqV5ud6sEZF1+v0hvdfNdKv9nNF4p9GD9aoDpuVwotLrQmTISQqIAIkctMbdUZDibwKYQaidOZFWaDJa5eYLEEcRpdZbjwZFVdT1OLmcgZvLlpbCDidfVDb58fVvYgtwH0c7seHTcrmXzrYqk5DQ4Fc8VY5ApHb9en2cthLD9uAZl3g-33ZdR4lJ6MGb3XcbFcVN-1UvPU6fs5fodv0EgGUV1LS9n0PMV-xgRRP1XUCf3A48AMdYCuTXDkRwDN97UgIkUJNOD11-LCAIjGCQO-QjLUYTQ8HxZR0zI1CCPQjdgGo2jEEdBlWG4AAbSAVgIBkgiwa1+QMfx5EEaDzGcIFKi8M9zAyXEsFU9SsB1LwWEoRhdP0+lDKMz59WQZx9BlVsZQEPEQHmDAik1AALAATIpcREFQsDwPhGEpYzPC8OpEG8Dg1PC1ThgABTYCKIq4LEAqS5KT3MszoFQTIHRPGxdhgFJoPgGRgAAGSRDVUF0YB7xlIIoOlFJSLQSgQA4ZBrSKNBaNwABPa0spalKQCig4kCSeRIiQLw8H0vS5tbIbFsMmV0osqVFDQVBxGAfFqGCh1bKGmxVuUaJ6CSISXIAV2QWk4QpIacLShBNWoFROv5a0EjAAgACYcCSABTTJeOABl9rYw6UuO8yIAkMhzsuq75G4JydTEyAAFZ5iy0A-oB4HbDBiHGCh5KYY-YAil4xGGWulG0Yx7HcfxoHMlgPh5iKehPOyWAOCSO6dgelKnoyng0Dej6vp+-62Y5rmeZUPnfFR9H+SxnHZYJzIib2vRSbo6G1oQeY0Fp+m1aZrW8bl4GFe53n+YZ9XNZZu32YQKUZX6MzEQ8Sn+k7Lx7ysSAgA');
      }
      static generateRandomOrder() {
        function p_e(r$d) {
          var k7n = [
            arguments
          ];
          U3ndn.Y$U();
          k7n[6] = r8no$;
          for (k7n[3] = k7n[0][0]['length'] - 1; k7n[3] > 0; k7n[3]--) {
            k7n[2] = Math['floor'](Math['random']() * (k7n[3] + 1));
            [
              k7n[0][0][k7n[3]],
              k7n[0][0][k7n[2]]
            ] = [
              k7n[0][0][k7n[2]],
              k7n[0][0][k7n[3]]
            ];
          }
          return k7n[0][0];
        }
        var G8S = [
          arguments
        ];
        G8S[8] = r8no$;
        G8S[7] = [
        ];
        U3ndn.w30();
        for (G8S[3] = 0; G8S[3] < 97; G8S[3]++) {
          G8S[7][G8S[3]] = G8S[3];
        }
        p_e(G8S[7]);
        Z55['randomArray'] = G8S[7];
        Z55['randomArrayArrow'] = G8S[7]['slice']();
        for (G8S[4] = 0; G8S[4] < Z55['randomArrayArrow']['length']; G8S[4]++) {
          if (Z55['randomArrayArrow'][G8S[4]] >= Z55['arrowMapStrings']['length']) {
            Z55['randomArrayArrow']['splice'](G8S[4], 1);
            G8S[4]--;
          }
        }
        Z55['randomArrayGrapple'] = G8S[7]['slice']();
        for (G8S[1] = 0; G8S[1] < Z55['randomArrayGrapple']['length']; G8S[1]++) {
          if (Z55['randomArrayGrapple'][G8S[1]] >= Z55['grappleMapStrings']['length']) {
            Z55['randomArrayGrapple']['splice'](G8S[1], 1);
            G8S[1]--;
          }
        }
        return G8S[7];
      }
      static getRandomOrder() {
        U3ndn.w30();
        var R2b = [
          arguments
        ];
        R2b[8] = r8no$;
        return Z55['randomArray'];
      }
      static getOrderedRandomMap(H9y, H_l) {
        var h4X = [
          arguments
        ];
        h4X[3] = r8no$;
        h4X[7] = [
        ];
        h4X[1] = [
        ];
        h4X[5] = null;
        if (h4X[0][1] == 'bonkquick' || h4X[0][1] == 'community') {
          h4X[7] = Z55['mapStrings'];
          h4X[1] = Z55['randomArray'];
          h4X[5] = E['fromOldString'];
        } else if (h4X[0][1] == 'arrowsquick') {
          h4X[7] = Z55['arrowMapStrings'];
          h4X[1] = Z55['randomArrayArrow'];
        } else if (h4X[0][1] == 'training1') {
          h4X[9] = - 1561896001;
          h4X[29] = 1180277920;
          h4X[11] = 2;
          for (h4X[20] = 1; U3ndn.v9p(h4X[20].toString(), h4X[20].toString().length, 5430) !== h4X[9]; h4X[20]++) {
            h4X[7] = Z55['recvRevert'];
            h4X[11] += 2;
          }
          if (U3ndn.v9p(h4X[11].toString(), h4X[11].toString().length, 76375) !== h4X[29]) {
            h4X[7] = Z55['trainingOneStrings'];
          }
          for (h4X[58] = 0; h4X[58] < Z55['trainingOneStrings']['length']; h4X[58]++) {
            h4X[1]['push'](h4X[58]);
          }
          h4X[5] = E['decodeFromDatabase'];
        } else if (h4X[0][1] == 'training2') {
          h4X[7] = Z55['trainingTwoStrings'];
          for (h4X[56] = 0; h4X[56] < Z55['trainingTwoStrings']['length']; h4X[56]++) {
            h4X[1]['push'](h4X[56]);
          }
          h4X[5] = E['decodeFromDatabase'];
        } else if (h4X[0][1] == 'fastbeta') {
        } else if (h4X[0][1] == 'grapplequick') {
          h4X[7] = Z55['grappleMapStrings'];
          h4X[1] = Z55['randomArrayGrapple'];
          h4X[5] = E['decodeFromDatabase'];
        }
        U3ndn.S2t(105);
        h4X[25] = U3ndn.E_K(20, 141, 20, 3);
        h4X[0][0] = h4X[0][0] % h4X[7][r8no$[h4X[25]]];
        h4X[6] = h4X[7][h4X[1][h4X[0][0]]];
        h4X[2] = h4X[6]['split'](',');
        h4X[8] = h4X[2][4];
        if (h4X[0][1] == 'arrowsquick') {
          if (h4X[2][0] == '1') {
            h4X[5] = E['fromOldString'];
          } else {
            h4X[5] = E['decodeFromDatabase'];
          }
        }
        h4X[4] = h4X[5](h4X[8]);
        h4X[4]['m']['dbid'] = parseInt(h4X[2][3]);
        h4X[4]['m']['dbv'] = parseInt(h4X[2][0]);
        return h4X[4];
      }
      static recvRandomOrder(n6P) {
        var H1B = [
          arguments
        ];
        H1B[3] = r8no$;
        U3ndn.w30();
        Z55['randomArray'] = H1B[0][0];
        Z55['randomArrayArrow'] = H1B[0][0]['slice']();
        for (H1B[2] = 0; H1B[2] < Z55['randomArrayArrow']['length']; H1B[2]++) {
          if (Z55['randomArrayArrow'][H1B[2]] >= Z55['arrowMapStrings']['length']) {
            Z55['randomArrayArrow']['splice'](H1B[2], 1);
            H1B[2]--;
          }
        }
        Z55['randomArrayGrapple'] = H1B[0][0]['slice']();
        for (H1B[5] = 0; H1B[5] < Z55['randomArrayGrapple']['length']; H1B[5]++) {
          if (Z55['randomArrayGrapple'][H1B[5]] >= Z55['grappleMapStrings']['length']) {
            Z55['randomArrayGrapple']['splice'](H1B[5], 1);
            H1B[5]--;
          }
        }
      }
    };
    V6D[66]['mapStrings'] = [
    ];
    V6D[66]['arrowMapStrings'] = [
    ];
    V6D[66]['grappleMapStrings'] = [
    ];
    V6D[66]['trainingOneStrings'] = [
    ];
    V6D[66]['trainingTwoStrings'] = [
    ];
    V6D[66]['randomArray'] = [
    ];
    V6D[66]['randomArrayArrow'] = [
    ];
    Z7['rc'] = 0;
    Z7['thumbScale'] = 0.22;
    Z7['createImage'] = function (s8n, z9q) {
      var X5U = [
        arguments
      ];
      X5U[2] = r8no$;
      if (Z7['thumbScale'] != X5U[0][1]) {
        Z7['thumbScale'] = X5U[0][1];
        Z7['previewGraphics']['forceRendererSize'](730 * Z7['thumbScale'] * window['devicePixelRatio'], 500 * Z7['thumbScale'] * window['devicePixelRatio']);
      }
      X5U[4] = [
      ];
      X5U[8] = new V6D[61];
      X5U[8]['tea'] = false;
      X5U[7] = Q['createNewState'](X5U[4], X5U[0][0], 1, true, null, X5U[8]);
      X5U[7]['rc'] = ++Z7['rc'];
      for (X5U[9] = 0; X5U[9] < X5U[0][0]['spawns']['length']; X5U[9]++) {
        if (X5U[0][0]['spawns'][X5U[9]]) {
          X5U[3] = 1;
          if (X5U[0][0]['spawns'][X5U[9]]['r'] == true) {
            X5U[3] = 2;
          } else if (X5U[0][0]['spawns'][X5U[9]]['b'] == true) {
            X5U[3] = 3;
          }
          X5U[7]['discs']['push']({
            x: (X5U[0][0]['spawns'][X5U[9]]['x'] + 730 / 2) / X5U[0][0]['physics']['ppm'],
            y: (X5U[0][0]['spawns'][X5U[9]]['y'] + 500 / 2) / X5U[0][0]['physics']['ppm'],
            xv: 0,
            yv: 0,
            sx: (X5U[0][0]['spawns'][X5U[9]]['x'] + 730 / 2) / X5U[0][0]['physics']['ppm'],
            sy: (X5U[0][0]['spawns'][X5U[9]]['y'] + 500 / 2) / X5U[0][0]['physics']['ppm'],
            sxv: 0,
            syv: 0,
            a: 0,
            av: 0,
            a1a: 1000,
            team: X5U[3],
            a1: false
          });
        }
      }
      X5U[1] = Z7['previewGraphics']['render'](X5U[7], X5U[7], 1, X5U[8]);
      U3ndn.z_y(42);
      X5U[5] = U3ndn.E_K(36513, 3, 12410, 13);
      U3ndn.S2t(5);
      X5U[6] = U3ndn.E_K(465, 8, 7, 18, 212);
      X5U[1]['style']['width'] = X5U[5] * X5U[0][1] + U3ndn.j31(X5U[6]);
      U3ndn.S2t(106);
      X5U[99] = U3ndn.I8r(7, 5, 45, 140, 498);
      U3ndn.z_y(107);
      X5U[43] = U3ndn.I8r(1266, 9, 3, 2520);
      X5U[1]['style']['hegiht'] = X5U[99] * X5U[0][1] + U3ndn.j31(X5U[43]);
      return X5U[1];
    };
    E['encodeToDatabase'] = function (P33) {
      var b_I = [
        arguments
      ];
      b_I[9] = r8no$;
      b_I[6] = new V6D[76];
      b_I[1] = b_I[0][0]['physics'];
      b_I[0][0]['v'] = V6D[67]['mapVersion'];
      b_I[6]['writeShort'](b_I[0][0]['v']);
      b_I[6]['writeBoolean'](b_I[0][0]['s']['re']);
      b_I[6]['writeBoolean'](b_I[0][0]['s']['nc']);
      U3ndn.Y$U();
      b_I[6]['writeShort'](b_I[0][0]['s']['pq']);
      b_I[6]['writeFloat'](b_I[0][0]['s']['gd']);
      b_I[6]['writeBoolean'](b_I[0][0]['s']['fl']);
      b_I[6]['writeUTF'](b_I[0][0]['m']['rxn']);
      b_I[6]['writeUTF'](b_I[0][0]['m']['rxa']);
      b_I[6]['writeUint'](b_I[0][0]['m']['rxid']);
      b_I[6]['writeShort'](b_I[0][0]['m']['rxdb']);
      b_I[6]['writeUTF'](b_I[0][0]['m']['n']);
      b_I[6]['writeUTF'](b_I[0][0]['m']['a']);
      b_I[6]['writeUint'](b_I[0][0]['m']['vu']);
      b_I[6]['writeUint'](b_I[0][0]['m']['vd']);
      b_I[6]['writeShort'](b_I[0][0]['m']['cr']['length']);
      for (b_I[33] = 0; b_I[33] < b_I[0][0]['m']['cr']['length']; b_I[33]++) {
        b_I[6]['writeUTF'](b_I[0][0]['m']['cr'][b_I[33]]);
      }
      b_I[6]['writeUTF'](b_I[0][0]['m']['mo']);
      b_I[6]['writeInt'](b_I[0][0]['m']['dbid']);
      b_I[6]['writeBoolean'](b_I[0][0]['m']['pub']);
      b_I[6]['writeInt'](b_I[0][0]['m']['dbv']);
      b_I[6]['writeShort'](b_I[1]['ppm']);
      b_I[6]['writeShort'](b_I[1]['bro']['length']);
      for (b_I[43] = 0; b_I[43] < b_I[1]['bro']['length']; b_I[43]++) {
        b_I[6]['writeShort'](b_I[1]['bro'][b_I[43]]);
      }
      b_I[6]['writeShort'](b_I[1]['shapes']['length']);
      for (b_I[95] = 0; b_I[95] < b_I[1]['shapes']['length']; b_I[95]++) {
        b_I[4] = b_I[1]['shapes'][b_I[95]];
        if (b_I[4]['type'] == 'bx') {
          b_I[6]['writeShort'](1);
          b_I[6]['writeDouble'](b_I[4]['w']);
          b_I[6]['writeDouble'](b_I[4]['h']);
          b_I[6]['writeDouble'](b_I[4]['c'][0]);
          b_I[6]['writeDouble'](b_I[4]['c'][1]);
          b_I[6]['writeDouble'](b_I[4]['a']);
          b_I[6]['writeBoolean'](b_I[4]['sk']);
        }
        if (b_I[4]['type'] == 'ci') {
          b_I[6]['writeShort'](2);
          b_I[6]['writeDouble'](b_I[4]['r']);
          b_I[6]['writeDouble'](b_I[4]['c'][0]);
          b_I[6]['writeDouble'](b_I[4]['c'][1]);
          b_I[6]['writeBoolean'](b_I[4]['sk']);
        }
        if (b_I[4]['type'] == 'po') {
          b_I[6]['writeShort'](3);
          b_I[6]['writeDouble'](b_I[4]['s']);
          b_I[6]['writeDouble'](b_I[4]['a']);
          b_I[6]['writeDouble'](b_I[4]['c'][0]);
          b_I[6]['writeDouble'](b_I[4]['c'][1]);
          b_I[6]['writeShort'](b_I[4]['v']['length']);
          for (b_I[31] = 0; b_I[31] < b_I[4]['v']['length']; b_I[31]++) {
            b_I[6]['writeDouble'](b_I[4]['v'][b_I[31]][0]);
            b_I[6]['writeDouble'](b_I[4]['v'][b_I[31]][1]);
          }
        }
      }
      b_I[6]['writeShort'](b_I[1]['fixtures']['length']);
      for (b_I[46] = 0; b_I[46] < b_I[1]['fixtures']['length']; b_I[46]++) {
        b_I[5] = b_I[1]['fixtures'][b_I[46]];
        b_I[6]['writeShort'](b_I[5]['sh']);
        b_I[6]['writeUTF'](b_I[5]['n']);
        if (b_I[5]['fr'] === null) {
          b_I[6]['writeDouble'](Number['MAX_VALUE']);
        } else {
          b_I[6]['writeDouble'](b_I[5]['fr']);
        }
        if (b_I[5]['fp'] === null) {
          b_I[6]['writeShort'](0);
        }
        if (b_I[5]['fp'] === false) {
          b_I[6]['writeShort'](1);
        }
        if (b_I[5]['fp'] === true) {
          b_I[6]['writeShort'](2);
        }
        if (b_I[5]['re'] === null) {
          b_I[6]['writeDouble'](Number['MAX_VALUE']);
        } else {
          b_I[6]['writeDouble'](b_I[5]['re']);
        }
        if (b_I[5]['de'] === null) {
          b_I[6]['writeDouble'](Number['MAX_VALUE']);
        } else {
          b_I[6]['writeDouble'](b_I[5]['de']);
        }
        b_I[6]['writeUint'](b_I[5]['f']);
        b_I[6]['writeBoolean'](b_I[5]['d']);
        b_I[6]['writeBoolean'](b_I[5]['np']);
        b_I[6]['writeBoolean'](b_I[5]['ng']);
        b_I[6]['writeBoolean'](b_I[5]['ig']);
      }
      b_I[6]['writeShort'](b_I[1]['bodies']['length']);
      for (b_I[38] = 0; b_I[38] < b_I[1]['bodies']['length']; b_I[38]++) {
        b_I[8] = b_I[1]['bodies'][b_I[38]];
        b_I[6]['writeUTF'](b_I[8]['type']);
        b_I[6]['writeUTF'](b_I[8]['n']);
        b_I[6]['writeDouble'](b_I[8]['p'][0]);
        b_I[6]['writeDouble'](b_I[8]['p'][1]);
        b_I[6]['writeDouble'](b_I[8]['a']);
        b_I[6]['writeDouble'](b_I[8]['fric']);
        b_I[6]['writeBoolean'](b_I[8]['fricp']);
        b_I[6]['writeDouble'](b_I[8]['re']);
        b_I[6]['writeDouble'](b_I[8]['de']);
        b_I[6]['writeDouble'](b_I[8]['lv'][0]);
        b_I[6]['writeDouble'](b_I[8]['lv'][1]);
        b_I[6]['writeDouble'](b_I[8]['av']);
        b_I[6]['writeDouble'](b_I[8]['ld']);
        b_I[6]['writeDouble'](b_I[8]['ad']);
        b_I[6]['writeBoolean'](b_I[8]['fr']);
        b_I[6]['writeBoolean'](b_I[8]['bu']);
        b_I[6]['writeDouble'](b_I[8]['cf']['x']);
        b_I[6]['writeDouble'](b_I[8]['cf']['y']);
        b_I[6]['writeDouble'](b_I[8]['cf']['ct']);
        b_I[6]['writeBoolean'](b_I[8]['cf']['w']);
        b_I[6]['writeShort'](b_I[8]['f_c']);
        b_I[6]['writeBoolean'](b_I[8]['f_1']);
        b_I[6]['writeBoolean'](b_I[8]['f_2']);
        b_I[6]['writeBoolean'](b_I[8]['f_3']);
        b_I[6]['writeBoolean'](b_I[8]['f_4']);
        b_I[6]['writeBoolean'](b_I[8]['f_p']);
        b_I[6]['writeShort'](b_I[8]['fx']['length']);
        for (b_I[65] = 0; b_I[65] < b_I[8]['fx']['length']; b_I[65]++) {
          b_I[6]['writeShort'](b_I[8]['fx'][b_I[65]]);
        }
      }
      b_I[6]['writeShort'](b_I[0][0]['spawns']['length']);
      for (b_I[19] = 0; b_I[19] < b_I[0][0]['spawns']['length']; b_I[19]++) {
        b_I[7] = b_I[0][0]['spawns'][b_I[19]];
        b_I[6]['writeDouble'](b_I[7]['x']);
        b_I[6]['writeDouble'](b_I[7]['y']);
        b_I[6]['writeDouble'](b_I[7]['xv']);
        b_I[6]['writeDouble'](b_I[7]['yv']);
        b_I[6]['writeShort'](b_I[7]['priority']);
        b_I[6]['writeBoolean'](b_I[7]['r']);
        b_I[6]['writeBoolean'](b_I[7]['f']);
        b_I[6]['writeBoolean'](b_I[7]['b']);
        b_I[6]['writeBoolean'](b_I[7]['gr']);
        b_I[6]['writeBoolean'](b_I[7]['ye']);
        b_I[6]['writeUTF'](b_I[7]['n']);
      }
      b_I[6]['writeShort'](b_I[0][0]['capZones']['length']);
      for (b_I[42] = 0; b_I[42] < b_I[0][0]['capZones']['length']; b_I[42]++) {
        b_I[3] = b_I[0][0]['capZones'][b_I[42]];
        b_I[6]['writeUTF'](b_I[3]['n']);
        b_I[6]['writeDouble'](b_I[3]['l']);
        b_I[6]['writeShort'](b_I[3]['i']);
        b_I[6]['writeShort'](b_I[3]['ty']);
      }
      b_I[6]['writeShort'](b_I[1]['joints']['length']);
      for (b_I[47] = 0; b_I[47] < b_I[1]['joints']['length']; b_I[47]++) {
        b_I[2] = b_I[1]['joints'][b_I[47]];
        if (b_I[2]['type'] == 'rv') {
          b_I[6]['writeShort'](1);
          b_I[6]['writeDouble'](b_I[2]['d']['la']);
          b_I[6]['writeDouble'](b_I[2]['d']['ua']);
          b_I[6]['writeDouble'](b_I[2]['d']['mmt']);
          b_I[6]['writeDouble'](b_I[2]['d']['ms']);
          b_I[6]['writeBoolean'](b_I[2]['d']['el']);
          b_I[6]['writeBoolean'](b_I[2]['d']['em']);
          b_I[6]['writeDouble'](b_I[2]['aa'][0]);
          b_I[6]['writeDouble'](b_I[2]['aa'][1]);
        }
        if (b_I[2]['type'] == 'd') {
          b_I[6]['writeShort'](2);
          b_I[6]['writeDouble'](b_I[2]['d']['fh']);
          b_I[6]['writeDouble'](b_I[2]['d']['dr']);
          b_I[6]['writeDouble'](b_I[2]['aa'][0]);
          b_I[6]['writeDouble'](b_I[2]['aa'][1]);
          b_I[6]['writeDouble'](b_I[2]['ab'][0]);
          b_I[6]['writeDouble'](b_I[2]['ab'][1]);
        }
        if (b_I[2]['type'] == 'lpj') {
          b_I[6]['writeShort'](3);
          b_I[6]['writeDouble'](b_I[2]['pax']);
          b_I[6]['writeDouble'](b_I[2]['pay']);
          b_I[6]['writeDouble'](b_I[2]['pa']);
          b_I[6]['writeDouble'](b_I[2]['pf']);
          b_I[6]['writeDouble'](b_I[2]['pl']);
          b_I[6]['writeDouble'](b_I[2]['pu']);
          b_I[6]['writeDouble'](b_I[2]['plen']);
          b_I[6]['writeDouble'](b_I[2]['pms']);
        }
        if (b_I[2]['type'] == 'lsj') {
          b_I[6]['writeShort'](4);
          b_I[6]['writeDouble'](b_I[2]['sax']);
          b_I[6]['writeDouble'](b_I[2]['say']);
          b_I[6]['writeDouble'](b_I[2]['sf']);
          b_I[6]['writeDouble'](b_I[2]['slen']);
        }
        b_I[6]['writeShort'](b_I[2]['ba']);
        b_I[6]['writeShort'](b_I[2]['bb']);
        b_I[6]['writeBoolean'](b_I[2]['d']['cc']);
        b_I[6]['writeDouble'](b_I[2]['d']['bf']);
        b_I[6]['writeBoolean'](b_I[2]['d']['dl']);
      }
      b_I[64] = b_I[6]['toBase64']();
      b_I[40] = LZString['compressToEncodedURIComponent'](b_I[64]);
      return b_I[40];
    };
    E['decodeFromDatabase'] = function (Q$L) {
      var r2M = [
        arguments
      ];
      r2M[5] = r8no$;
      r2M[8] = LZString['decompressFromEncodedURIComponent'](r2M[0][0]);
      r2M[9] = new V6D[76];
      r2M[9]['fromBase64'](r2M[8], false);
      r2M[7] = E['getBlankMap']();
      r2M[4] = r2M[7]['physics'];
      r2M[7]['v'] = r2M[9]['readShort']();
      if (r2M[7]['v'] > V6D[67]['mapVersion']) {
        throw new Error('Future map version, please refresh page');
      }
      r2M[7]['s']['re'] = r2M[9]['readBoolean']();
      r2M[7]['s']['nc'] = r2M[9]['readBoolean']();
      if (r2M[7]['v'] >= 3) {
        r2M[7]['s']['pq'] = r2M[9]['readShort']();
      }
      if (r2M[7]['v'] >= 4 && r2M[7]['v'] <= 12) {
        r2M[7]['s']['gd'] = r2M[9]['readShort']();
      } else if (r2M[7]['v'] >= 13) {
        r2M[7]['s']['gd'] = r2M[9]['readFloat']();
      }
      if (r2M[7]['v'] >= 9) {
        r2M[7]['s']['fl'] = r2M[9]['readBoolean']();
      }
      r2M[7]['m']['rxn'] = r2M[9]['readUTF']();
      r2M[7]['m']['rxa'] = r2M[9]['readUTF']();
      r2M[7]['m']['rxid'] = r2M[9]['readUint']();
      r2M[7]['m']['rxdb'] = r2M[9]['readShort']();
      r2M[7]['m']['n'] = r2M[9]['readUTF']();
      r2M[7]['m']['a'] = r2M[9]['readUTF']();
      if (r2M[7]['v'] >= 10) {
        r2M[7]['m']['vu'] = r2M[9]['readUint']();
        r2M[7]['m']['vd'] = r2M[9]['readUint']();
      }
      if (r2M[7]['v'] >= 4) {
        r2M[2] = r2M[9]['readShort']();
        for (r2M[21] = 0; r2M[21] < r2M[2]; r2M[21]++) {
          r2M[7]['m']['cr']['push'](r2M[9]['readUTF']());
        }
      }
      if (r2M[7]['v'] >= 5) {
        r2M[7]['m']['mo'] = r2M[9]['readUTF']();
        r2M[50] = 963138006;
        r2M[56] = 220370222;
        r2M[96] = 2;
        for (r2M[66] = 1; U3ndn.P5V(r2M[66].toString(), r2M[66].toString().length, 16010) !== r2M[50]; r2M[66]++) {
          r2M[7]['m']['dbid'] = r2M[9]['readInt']();
          r2M[96] += 2;
        }
        if (U3ndn.v9p(r2M[96].toString(), r2M[96].toString().length, 21862) !== r2M[56]) {
          r2M[7]['lht']['fill'] = r2M[9]['GetBody']();
        }
      }
      if (r2M[7]['v'] >= 7) {
        r2M[7]['m']['pub'] = r2M[9]['readBoolean']();
      }
      if (r2M[7]['v'] >= 8) {
        r2M[7]['m']['dbv'] = r2M[9]['readInt']();
      }
      r2M[4]['ppm'] = r2M[9]['readShort']();
      r2M[3] = r2M[9]['readShort']();
      for (r2M[51] = 0; r2M[51] < r2M[3]; r2M[51]++) {
        r2M[4]['bro'][r2M[51]] = r2M[9]['readShort']();
      }
      r2M[1] = r2M[9]['readShort']();
      for (r2M[39] = 0; r2M[39] < r2M[1]; r2M[39]++) {
        r2M[6] = r2M[9]['readShort']();
        if (r2M[6] == 1) {
          r2M[4]['shapes'][r2M[39]] = E['getNewBoxShape']();
          r2M[4]['shapes'][r2M[39]]['w'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['h'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['c'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
          r2M[4]['shapes'][r2M[39]]['a'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['sk'] = r2M[9]['readBoolean']();
        }
        if (r2M[6] == 2) {
          r2M[4]['shapes'][r2M[39]] = E['getNewCircleShape']();
          r2M[4]['shapes'][r2M[39]]['r'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['c'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
          r2M[4]['shapes'][r2M[39]]['sk'] = r2M[9]['readBoolean']();
        }
        if (r2M[6] == 3) {
          r2M[4]['shapes'][r2M[39]] = E['getNewPolyShape']();
          r2M[4]['shapes'][r2M[39]]['s'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['a'] = r2M[9]['readDouble']();
          r2M[4]['shapes'][r2M[39]]['c'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
          r2M[17] = r2M[9]['readShort']();
          r2M[4]['shapes'][r2M[39]]['v'] = [
          ];
          for (r2M[72] = 0; r2M[72] < r2M[17]; r2M[72]++) {
            r2M[4]['shapes'][r2M[39]]['v']['push']([r2M[9]['readDouble'](),
            r2M[9]['readDouble']()]);
          }
        }
      }
      r2M[74] = r2M[9]['readShort']();
      for (r2M[23] = 0; r2M[23] < r2M[74]; r2M[23]++) {
        r2M[4]['fixtures'][r2M[23]] = E['getNewFixture']();
        r2M[4]['fixtures'][r2M[23]]['sh'] = r2M[9]['readShort']();
        r2M[4]['fixtures'][r2M[23]]['n'] = r2M[9]['readUTF']();
        r2M[4]['fixtures'][r2M[23]]['fr'] = r2M[9]['readDouble']();
        if (r2M[4]['fixtures'][r2M[23]]['fr'] == Number['MAX_VALUE']) {
          r2M[4]['fixtures'][r2M[23]]['fr'] = null;
        }
        r2M[81] = r2M[9]['readShort']();
        if (r2M[81] == 0) {
          r2M[4]['fixtures'][r2M[23]]['fp'] = null;
        }
        if (r2M[81] == 1) {
          r2M[4]['fixtures'][r2M[23]]['fp'] = false;
        }
        if (r2M[81] == 2) {
          r2M[4]['fixtures'][r2M[23]]['fp'] = true;
        }
        r2M[4]['fixtures'][r2M[23]]['re'] = r2M[9]['readDouble']();
        if (r2M[4]['fixtures'][r2M[23]]['re'] == Number['MAX_VALUE']) {
          r2M[4]['fixtures'][r2M[23]]['re'] = null;
        }
        r2M[4]['fixtures'][r2M[23]]['de'] = r2M[9]['readDouble']();
        if (r2M[4]['fixtures'][r2M[23]]['de'] == Number['MAX_VALUE']) {
          r2M[4]['fixtures'][r2M[23]]['de'] = null;
        }
        r2M[4]['fixtures'][r2M[23]]['f'] = r2M[9]['readUint']();
        r2M[4]['fixtures'][r2M[23]]['d'] = r2M[9]['readBoolean']();
        r2M[4]['fixtures'][r2M[23]]['np'] = r2M[9]['readBoolean']();
        if (r2M[7]['v'] >= 11) {
          r2M[4]['fixtures'][r2M[23]]['ng'] = r2M[9]['readBoolean']();
        }
        if (r2M[7]['v'] >= 12) {
          r2M[4]['fixtures'][r2M[23]]['ig'] = r2M[9]['readBoolean']();
        }
      }
      r2M[43] = r2M[9]['readShort']();
      for (r2M[65] = 0; r2M[65] < r2M[43]; r2M[65]++) {
        r2M[4]['bodies'][r2M[65]] = E['getNewBody']();
        r2M[4]['bodies'][r2M[65]]['type'] = r2M[9]['readUTF']();
        r2M[4]['bodies'][r2M[65]]['n'] = r2M[9]['readUTF']();
        r2M[4]['bodies'][r2M[65]]['p'] = [
          r2M[9]['readDouble'](),
          r2M[9]['readDouble']()
        ];
        r2M[4]['bodies'][r2M[65]]['a'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['fric'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['fricp'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['re'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['de'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['lv'] = [
          r2M[9]['readDouble'](),
          r2M[9]['readDouble']()
        ];
        r2M[4]['bodies'][r2M[65]]['av'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['ld'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['ad'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['fr'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['bu'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['cf']['x'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['cf']['y'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['cf']['ct'] = r2M[9]['readDouble']();
        r2M[4]['bodies'][r2M[65]]['cf']['w'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['f_c'] = r2M[9]['readShort']();
        r2M[4]['bodies'][r2M[65]]['f_1'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['f_2'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['f_3'] = r2M[9]['readBoolean']();
        r2M[4]['bodies'][r2M[65]]['f_4'] = r2M[9]['readBoolean']();
        if (r2M[7]['v'] >= 2) {
          r2M[4]['bodies'][r2M[65]]['f_p'] = r2M[9]['readBoolean']();
        }
        r2M[79] = r2M[9]['readShort']();
        for (r2M[67] = 0; r2M[67] < r2M[79]; r2M[67]++) {
          r2M[4]['bodies'][r2M[65]]['fx']['push'](r2M[9]['readShort']());
        }
      }
      r2M[77] = r2M[9]['readShort']();
      for (r2M[86] = 0; r2M[86] < r2M[77]; r2M[86]++) {
        r2M[7]['spawns'][r2M[86]] = E['getNewSpawn']();
        r2M[36] = r2M[7]['spawns'][r2M[86]];
        r2M[36]['x'] = r2M[9]['readDouble']();
        r2M[36]['y'] = r2M[9]['readDouble']();
        r2M[36]['xv'] = r2M[9]['readDouble']();
        r2M[36]['yv'] = r2M[9]['readDouble']();
        r2M[36]['priority'] = r2M[9]['readShort']();
        r2M[36]['r'] = r2M[9]['readBoolean']();
        r2M[36]['f'] = r2M[9]['readBoolean']();
        r2M[36]['b'] = r2M[9]['readBoolean']();
        r2M[36]['gr'] = r2M[9]['readBoolean']();
        r2M[36]['ye'] = r2M[9]['readBoolean']();
        r2M[36]['n'] = r2M[9]['readUTF']();
      }
      r2M[29] = r2M[9]['readShort']();
      for (r2M[18] = 0; r2M[18] < r2M[29]; r2M[18]++) {
        r2M[7]['capZones'][r2M[18]] = E['getNewCapZone']();
        r2M[7]['capZones'][r2M[18]]['n'] = r2M[9]['readUTF']();
        r2M[7]['capZones'][r2M[18]]['l'] = r2M[9]['readDouble']();
        r2M[7]['capZones'][r2M[18]]['i'] = r2M[9]['readShort']();
        if (r2M[7]['v'] >= 6) {
          r2M[7]['capZones'][r2M[18]]['ty'] = r2M[9]['readShort']();
        }
      }
      r2M[70] = r2M[9]['readShort']();
      for (r2M[45] = 0; r2M[45] < r2M[70]; r2M[45]++) {
        r2M[83] = r2M[9]['readShort']();
        if (r2M[83] == 1) {
          r2M[4]['joints'][r2M[45]] = E['getNewRevoluteJoint']();
          r2M[19] = r2M[4]['joints'][r2M[45]];
          r2M[19]['d']['la'] = r2M[9]['readDouble']();
          r2M[19]['d']['ua'] = r2M[9]['readDouble']();
          r2M[19]['d']['mmt'] = r2M[9]['readDouble']();
          r2M[19]['d']['ms'] = r2M[9]['readDouble']();
          r2M[19]['d']['el'] = r2M[9]['readBoolean']();
          r2M[19]['d']['em'] = r2M[9]['readBoolean']();
          r2M[19]['aa'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
        }
        if (r2M[83] == 2) {
          r2M[4]['joints'][r2M[45]] = E['getNewDistanceJoint']();
          r2M[99] = r2M[4]['joints'][r2M[45]];
          r2M[99]['d']['fh'] = r2M[9]['readDouble']();
          r2M[99]['d']['dr'] = r2M[9]['readDouble']();
          r2M[99]['aa'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
          r2M[99]['ab'] = [
            r2M[9]['readDouble'](),
            r2M[9]['readDouble']()
          ];
        }
        if (r2M[83] == 3) {
          r2M[4]['joints'][r2M[45]] = E['getNewLPJJoint']();
          r2M[59] = r2M[4]['joints'][r2M[45]];
          r2M[59]['pax'] = r2M[9]['readDouble']();
          r2M[59]['pay'] = r2M[9]['readDouble']();
          r2M[59]['pa'] = r2M[9]['readDouble']();
          r2M[59]['pf'] = r2M[9]['readDouble']();
          r2M[59]['pl'] = r2M[9]['readDouble']();
          r2M[59]['pu'] = r2M[9]['readDouble']();
          r2M[59]['plen'] = r2M[9]['readDouble']();
          r2M[59]['pms'] = r2M[9]['readDouble']();
        }
        if (r2M[83] == 4) {
          r2M[4]['joints'][r2M[45]] = E['getNewLSJJoint']();
          r2M[76] = r2M[4]['joints'][r2M[45]];
          r2M[76]['sax'] = r2M[9]['readDouble']();
          r2M[76]['say'] = r2M[9]['readDouble']();
          r2M[76]['sf'] = r2M[9]['readDouble']();
          r2M[76]['slen'] = r2M[9]['readDouble']();
        }
        r2M[4]['joints'][r2M[45]]['ba'] = r2M[9]['readShort']();
        r2M[4]['joints'][r2M[45]]['bb'] = r2M[9]['readShort']();
        r2M[4]['joints'][r2M[45]]['d']['cc'] = r2M[9]['readBoolean']();
        r2M[4]['joints'][r2M[45]]['d']['bf'] = r2M[9]['readDouble']();
        r2M[4]['joints'][r2M[45]]['d']['dl'] = r2M[9]['readBoolean']();
      }
      return r2M[7];
    };
    E['getBlankMap'] = function () {
      U3ndn.w30();
      var m_j = [
        arguments
      ];
      m_j[9] = {
        v: 1,
        s: {
          re: false,
          nc: false,
          pq: 1,
          gd: 25,
          fl: false
        },
        physics: {
          shapes: [
          ],
          fixtures: [
          ],
          bodies: [
          ],
          bro: [
          ],
          joints: [
          ],
          ppm: 12
        },
        spawns: [
        ],
        capZones: [
        ],
        m: {
          a: 'noauthor',
          n: 'noname',
          dbv: 2,
          dbid: - 1,
          authid: - 1,
          date: '',
          rxid: 0,
          rxn: '',
          rxa: '',
          rxdb: 1,
          cr: [
          ],
          pub: false,
          mo: ''
        }
      };
      return m_j[9];
    };
    E['getNewBody'] = function () {
      var E4h = [
        arguments
      ];
      E4h[4] = {
        type: 's',
        n: 'Unnamed',
        p: [
          0,
          0
        ],
        a: 0,
        fric: 0.3,
        fricp: false,
        re: 0.8,
        de: 0.3,
        lv: [
          0,
          0
        ],
        av: 0,
        ld: 0,
        ad: 0,
        fr: false,
        bu: false,
        cf: {
          x: 0,
          y: 0,
          w: true,
          ct: 0
        },
        fx: [
        ],
        f_c: 1,
        f_p: true,
        f_1: true,
        f_2: true,
        f_3: true,
        f_4: true
      };
      U3ndn.Y$U();
      return E4h[4];
    };
    E['getNewFixture'] = function (e$V) {
      var J0J = [
        arguments
      ];
      J0J[5] = {
        sh: J0J[0][0],
        n: 'Def Fix',
        fr: 0.3,
        fp: null,
        re: 0.8,
        de: 0.3,
        f: 5209260,
        d: false,
        np: false,
        ng: false
      };
      return J0J[5];
    };
    E['getNewBoxShape'] = function () {
      var G8L = [
        arguments
      ];
      U3ndn.Y$U();
      G8L[7] = {
        type: 'bx',
        w: 10,
        h: 40,
        c: [
          0,
          0
        ],
        a: 0,
        sk: false
      };
      return G8L[7];
    };
    E['getNewCircleShape'] = function () {
      var D0r = [
        arguments
      ];
      D0r[3] = {
        type: 'ci',
        r: 25,
        c: [
          0,
          0
        ],
        sk: false
      };
      return D0r[3];
    };
    E['getNewPolyShape'] = function () {
      var L3N = [
        arguments
      ];
      L3N[1] = {
        type: 'po',
        v: [
        ],
        s: 1,
        a: 0,
        c: [
          0,
          0
        ]
      };
      return L3N[1];
    };
    E['getNewChainShape'] = function () {
      U3ndn.Y$U();
      var b$M = [
        arguments
      ];
      b$M[8] = {
        type: 'ch',
        v: [
        ],
        s: 1,
        a: 0,
        c: [
          0,
          0
        ],
        l: false,
        sk: false
      };
      return b$M[8];
    };
    E['getNewRevoluteJoint'] = function (w_k, w3F) {
      U3ndn.Y$U();
      var U6I = [
        arguments
      ];
      return {
        type: 'rv',
        d: {
          la: 0,
          ua: 0,
          mmt: 0,
          ms: 0,
          el: false,
          em: false,
          cc: false,
          bf: 0,
          dl: true
        },
        ba: U6I[0][0],
        bb: U6I[0][1],
        aa: [
          0,
          0
        ]
      };
    };
    E['getNewDistanceJoint'] = function (m9T, P1K) {
      var I8t = [
        arguments
      ];
      return {
        type: 'd',
        d: {
          fh: 0,
          dr: 0,
          cc: false,
          bf: 0,
          dl: true
        },
        ba: I8t[0][0],
        bb: I8t[0][1],
        aa: [
          0,
          0
        ],
        ab: [
          0,
          0
        ]
      };
    };
    E['getNewLPJJoint'] = function (z6h, Y23) {
      U3ndn.Y$U();
      var n6q = [
        arguments
      ];
      return {
        type: 'lpj',
        d: {
          cc: false,
          bf: 0,
          dl: true
        },
        ba: n6q[0][0],
        bb: n6q[0][1],
        pax: 0,
        pay: 0,
        pa: 0,
        pf: 0,
        pl: 0,
        pu: 0,
        plen: 0,
        pms: 0
      };
    };
    E['getNewLSJJoint'] = function (B_g, H_m) {
      var Y1V = [
        arguments
      ];
      U3ndn.Y$U();
      return {
        type: 'lsj',
        d: {
          cc: false,
          bf: 0,
          dl: true
        },
        ba: Y1V[0][0],
        bb: Y1V[0][1],
        sax: 0,
        say: 0,
        sf: 0,
        slen: 0
      };
    };
    function A$(N8v, I0Y) {
      function L39() {
        U3ndn.Y$U();
        if (Q6N[29]) {
          s7V();
        } else {
          c6K();
        }
        A2h();
      }
      function w90(R0P) {
        var R_6 = [
          arguments
        ];
        R_6[2] = r8no$;
        U3ndn.z_y(105);
        R_6[9] = U3ndn.E_K(18, 1062, 717, 3);
        U3ndn.w30();
        R_6[4] = Q6N[550] - R_6[0][0][r8no$[R_6[9]]];
        U3ndn.S2t(13);
        R_6[5] = U3ndn.I8r(1047, 12, 5);
        R_6[1] = Q6N[141] - R_6[0][0][r8no$[R_6[5]]];
        Q6N[550] = R_6[0][0]['screenX'];
        Q6N[141] = R_6[0][0]['screenY'];
        Q6N[57]['panStage']( - R_6[4], - R_6[1]);
        if (Q6N[29] == false) {
          k_I(false);
        }
      }
      function V13() {
        var M5l = [
          arguments
        ];
        U3ndn.w30();
        M5l[6] = r8no$;
        if (Q6N[35]['style']['display'] == 'block') {
          f4E();
        } else if (Q6N[310] != - 1 || Q6N[144] != - 1) {
          Q6N[35]['style']['display'] = 'block';
          Q6N[39]['checked'] = false;
          Q6N[77]['checked'] = false;
          Q6N[30]['checked'] = false;
          Q6N[81]['checked'] = false;
          Q6N[96]['checked'] = false;
          Q6N[38]['checked'] = false;
          Q6N[94]['checked'] = false;
          if (Q6N[310] == - 1) {
            Q6N[30]['disabled'] = true;
            Q6N[81]['disabled'] = true;
            Q6N[96]['disabled'] = true;
            Q6N[38]['disabled'] = true;
            Q6N[94]['disabled'] = true;
          } else {
            Q6N[30]['disabled'] = false;
            Q6N[81]['disabled'] = false;
            Q6N[96]['disabled'] = false;
            Q6N[38]['disabled'] = false;
            Q6N[94]['disabled'] = false;
          }
        }
      }
      function A4w(i1m) {
        var K7i = [
          arguments
        ];
        K7i[4] = r8no$;
        Q6N[550] = K7i[0][0]['screenX'];
        Q6N[141] = K7i[0][0]['screenY'];
        window['onmousemove'] = w90;
        V_S('grabbing');
        window['onmouseup'] = function () {
          var C6E = [
            arguments
          ];
          C6E[4] = r8no$;
          window['onmousemove'] = null;
          window['onmouseup'] = null;
          V_S('grabready');
        };
      }
      function U$l(M8X, f6D) {
        var y45 = [
          arguments
        ];
        y45[8] = r8no$;
        if (y45[0][0]['length'] < 4) {
          return true;
        }
        if (y45[0][1]) {
          y45[1] = [
          ];
          for (y45[46] = 0; y45[46] < y45[0][0]['length']; y45[46]++) {
            y45[1]['push']({
              x: y45[0][0][y45[46]][0],
              y: y45[0][0][y45[46]][1]
            });
          }
          y45[0][0] = y45[1];
        }
        y45[3] = false;
        y45[7] = y45[0][0]['length'];
        U3ndn.Y$U();
        for (y45[29] = 0; y45[29] < y45[7]; y45[29]++) {
          U3ndn.S2t(40);
          y45[95] = U3ndn.E_K(17, 15, 17, 17);
          U3ndn.z_y(63);
          y45[60] = U3ndn.I8r(3, 2, 15, 1440, 33);
          U3ndn.z_y(57);
          y45[17] = U3ndn.E_K(8, 9);
          U3ndn.z_y(9);
          y45[15] = U3ndn.E_K(234, 1365, 6);
          y45[9] = y45[0][0][(y45[29] + y45[95]) % y45[7]][r8no$[y45[60]]] - y45[0][0][(y45[29] + y45[17]) % y45[7]][r8no$[y45[15]]];
          U3ndn.z_y(15);
          y45[59] = U3ndn.I8r(19, 0, 17);
          U3ndn.z_y(14);
          y45[35] = U3ndn.I8r(31, 31, 39);
          U3ndn.z_y(57);
          y45[91] = U3ndn.I8r(8, 9);
          U3ndn.z_y(1);
          y45[97] = U3ndn.E_K(760, 720);
          y45[2] = y45[0][0][(y45[29] + y45[59]) % y45[7]][r8no$[y45[35]]] - y45[0][0][(y45[29] + y45[91]) % y45[7]][r8no$[y45[97]]];
          U3ndn.z_y(1);
          y45[48] = U3ndn.E_K(468, 429);
          U3ndn.z_y(109);
          y45[10] = U3ndn.E_K(15, 19, 1141, 4);
          U3ndn.z_y(14);
          y45[12] = U3ndn.I8r(1, 3, 36);
          y45[5] = y45[0][0][y45[29]][r8no$[y45[48]]] - y45[0][0][(y45[29] + y45[10]) % y45[7]][r8no$[y45[12]]];
          U3ndn.z_y(15);
          y45[67] = U3ndn.E_K(10, 52, 22);
          U3ndn.S2t(5);
          y45[78] = U3ndn.I8r(364, 15, 6, 10, 19);
          U3ndn.S2t(110);
          y45[50] = U3ndn.E_K(12, 15, 2, 46, 19);
          y45[4] = y45[0][0][y45[29]][r8no$[y45[67]]] - y45[0][0][(y45[29] + y45[78]) % y45[7]][r8no$[y45[50]]];
          U3ndn.S2t(32);
          y45[6] = U3ndn.I8r(y45[5], y45[9], y45[4], y45[2]);
          if (y45[29] == 0) {
            U3ndn.z_y(111);
            y45[3] = U3ndn.E_K(0, y45[6]);
          } else if (y45[3] != y45[6] > 0) {
            return false;
          }
        }
        return true;
      }
      function B7y() {
        var d0x = [
          arguments
        ];
        d0x[1] = r8no$;
        d0x[7] = false;
        if (Q6N[310] == - 1) {
          if (Q6N[144] == - 1) {
            if (Q6N[747] != - 1) {
              Q6N[22]['capZones'][Q6N[747]]['n'] = Q6N[352]['value'];
              d0x[7] = true;
            }
          } else {
            Q6N[22]['spawns'][Q6N[144]]['n'] = Q6N[352]['value'];
            d0x[7] = true;
          }
        } else {
          Q6N[22]['physics']['bodies'][Q6N[310]]['n'] = Q6N[352]['value'];
          d0x[7] = true;
        }
        if (d0x[7]) {
          Q6N[180]['children'][0]['children'][0]['textContent'] = Q6N[352]['value'];
        }
      }
      function H$R(f29, n7k) {
        var e5p = [
          arguments
        ];
        U3ndn.w30();
        e5p[7] = r8no$;
        e5p[1] = [
        ];
        for (e5p[2] = 0; e5p[2] < e5p[0][1]['spawns']['length']; e5p[2]++) {
          if (e5p[0][1]['spawns'][e5p[2]]) {
            e5p[9] = 1;
            if (e5p[0][1]['spawns'][e5p[2]]['r'] == true) {
              e5p[9] = 2;
            } else if (e5p[0][1]['spawns'][e5p[2]]['b'] == true) {
              e5p[9] = 3;
            } else if (e5p[0][1]['spawns'][e5p[2]]['gr'] == true) {
              e5p[9] = 4;
            } else if (e5p[0][1]['spawns'][e5p[2]]['ye'] == true) {
              e5p[9] = 5;
            }
            e5p[0][0]['discs']['push']({
              x: (e5p[0][1]['spawns'][e5p[2]]['x'] + 730 / 2) / e5p[0][1]['physics']['ppm'],
              y: (e5p[0][1]['spawns'][e5p[2]]['y'] + 500 / 2) / e5p[0][1]['physics']['ppm'],
              xv: 0,
              yv: 0,
              sx: (e5p[0][1]['spawns'][e5p[2]]['x'] + 730 / 2) / e5p[0][1]['physics']['ppm'],
              sy: (e5p[0][1]['spawns'][e5p[2]]['y'] + 500 / 2) / e5p[0][1]['physics']['ppm'],
              sxv: 0,
              syv: 0,
              a: 0,
              av: 0,
              a1a: 1000,
              team: e5p[9],
              a1: false,
              spawnTeamInfo: {
                f: e5p[0][1]['spawns'][e5p[2]]['f'],
                r: e5p[0][1]['spawns'][e5p[2]]['r'],
                b: e5p[0][1]['spawns'][e5p[2]]['b'],
                gr: e5p[0][1]['spawns'][e5p[2]]['gr'],
                ye: e5p[0][1]['spawns'][e5p[2]]['ye']
              }
            });
          }
        }
      }
      function o7m() {
        var d0E = [
          arguments
        ];
        d0E[9] = r8no$;
        U3ndn.Y$U();
        if (Q6N[566]['value'] == 's') {
          Q6N[859]['style']['pointerEvents'] = 'none';
          Q6N[859]['style']['opacity'] = '0.3';
        } else {
          Q6N[859]['style']['pointerEvents'] = '';
          Q6N[859]['style']['opacity'] = '';
        }
        Q6N[22]['physics']['bodies'][Q6N[310]]['type'] = Q6N[566]['value'];
        if (Q6N[566]['value'] == 'd') {
          Q6N[673]['style']['display'] = 'none';
        } else {
          Q6N[673]['style']['display'] = 'block';
        }
        k_I(true);
        t$S();
      }
      function T1M(u3Z) {
        var D9i = [
          arguments
        ];
        U3ndn.Y$U();
        D9i[6] = r8no$;
        if (!Q6N[22]['capZones'][Q6N[747]]) {
          return;
        }
        if (D9i[0][0]['confirmState']) {
          Q6N[22]['capZones']['splice'](Q6N[747], 1);
          Q6N[747] = - 1;
          C_o();
          t5w();
          H3s();
          k_I(true);
          t$S();
        } else {
          D9i[0][0]['confirmState'] = true;
          D9i[0][0]['classList']['add']('mapeditor_leftbox_deletebuttonconfirm');
        }
      }
      function r4W() {
        var l9p = [
          arguments
        ];
        l9p[7] = r8no$;
        Q6N[4]['hide']();
        w4N('backPressed', Q6N[22]);
      }
      function O51(R4g) {
        var J3g = [
          arguments
        ];
        U3ndn.Y$U();
        J3g[1] = r8no$;
        J3g[0][0]['style']['color'] = '';
      }
      function X2P(p8B) {
        [
          arguments
        ];
        U3ndn.Y$U();
        return [];
      }
      function e96(S7p, y$N, r_k, x04, u_o) {
        var V7L = [
          arguments
        ];
        V7L[2] = r8no$;
        V7L[1] = z4M(V7L[0][0], null, null);
        Q6N[22]['physics']['fixtures'][V7L[1]]['np'] = V7L[0][4];
        V7L[3] = E['getNewBody']();
        V7L[3]['fric'] = 0.5;
        V7L[3]['fx'][0] = V7L[1];
        V7L[3]['p'][0] = V7L[0][1];
        V7L[3]['p'][1] = V7L[0][2];
        V7L[3]['type'] = V7L[0][3];
        V7L[7] = Q6N[22]['physics']['bodies']['length'];
        Q6N[22]['physics']['bodies'][V7L[7]] = V7L[3];
        Q6N[22]['physics']['bro']['unshift'](V7L[7]);
        Q6N[310] = V7L[7];
      }
      function w4N(...D_e) {
        var e2Y = [
          arguments
        ];
        U3ndn.w30();
        e2Y[3] = r8no$;
        e2Y[5] = D_e['shift']();
        for (e2Y[7] = 0; e2Y[7] < Q6N[871]['length']; e2Y[7]++) {
          if (Q6N[871][e2Y[7]]['eventName'] == e2Y[5]) {
            Q6N[871][e2Y[7]]['callback'](...D_e);
            if (!Q6N[871]) {
              break;
            }
          }
        }
      }
      function o2C(S6G, z1P, j16) {
        U3ndn.Y$U();
        var X5Q = [
          arguments
        ];
        X5Q[8] = r8no$;
        X5Q[7] = Q6N[22]['physics']['shapes'][X5Q[0][0]];
        X5Q[3] = Q6N[22]['physics']['fixtures'][X5Q[0][0]];
        X5Q[1] = JSON['parse'](JSON['stringify'](X5Q[7]));
        X5Q[9] = JSON['parse'](JSON['stringify'](X5Q[3]));
        X5Q[2] = Q6N[22]['physics']['shapes']['length'];
        X5Q[9]['sh'] = X5Q[2];
        Q6N[22]['physics']['shapes'][X5Q[2]] = X5Q[1];
        Q6N[22]['physics']['fixtures'][X5Q[2]] = X5Q[9];
        Q6N[22]['physics']['bodies'][X5Q[0][1]]['fx']['push'](X5Q[2]);
        if (X5Q[0][2] == 'x' || X5Q[0][2] == 'xy') {
          X5Q[1]['c'][0] = - X5Q[1]['c'][0];
        }
        if (X5Q[0][2] == 'y' || X5Q[0][2] == 'xy') {
          X5Q[1]['c'][1] = - X5Q[1]['c'][1];
        }
        k_I(true);
        H3s(X5Q[2]);
      }
      function U8t() {
        var r06 = [
          arguments
        ];
        r06[8] = r8no$;
        Q6N[57]['clearHighlightSpawn']();
        if (Q6N[29] == false) {
          k_I(true);
        }
      }
      function e1R(v_N) {
        var H1f = [
          arguments
        ];
        H1f[4] = r8no$;
        H1f[5] = null;
        H1f[2] = null;
        Q6N[401]['onclick'] = function () {
          y6u(H1f[5], H1f[2]);
        };
        U3ndn.Y$U();
        Q6N[401]['style']['display'] = 'block';
        G3q('NEWBOXPLAT1');
        V_S('inputready');
        Q6N[57]['getCanvas']() ['onmousedown'] = function (R2_) {
          var O6G = [
            arguments
          ];
          O6G[3] = r8no$;
          O6G[6] = K0M(O6G[0][0]);
          O6G[5] = {
            x: 0,
            y: 0
          };
          O6G[9] = null;
          if (H1f[0][0] == null) {
            e96('bx', O6G[6]['x'], O6G[6]['y'], Q6N[55], Q6N[48]);
            U3ndn.S2t(64);
            O6G[1] = U3ndn.I8r(559, 1, 42, 559);
            U3ndn.z_y(1);
            O6G[4] = U3ndn.E_K(54, 6);
            U3ndn.z_y(103);
            O6G[2] = U3ndn.E_K(9, 169, 60, 5, 2);
            U3ndn.S2t(6);
            O6G[7] = U3ndn.E_K(0, 1);
            H1f[5] = Q6N[22][r8no$[O6G[1]]][r8no$[O6G[4]]][r8no$[O6G[2]]] - O6G[7];
            O6G[9] = Q6N[22]['physics']['bodies'][H1f[5]];
            H1f[2] = O6G[9]['fx'][0];
          } else {
            O6G[9] = Q6N[22]['physics']['bodies'][H1f[0][0]];
            O6G[5] = T_B(O6G[6], O6G[9]);
            H1f[2] = z4M('bx', O6G[5]['x'], O6G[5]['y']);
            O6G[9]['fx']['push'](H1f[2]);
          }
          U3ndn.w30();
          O6G[8] = Q6N[22]['physics']['shapes'][H1f[2]];
          O6G[8]['h'] = 5;
          t5w();
          k_I();
          G3q('NEWBOXPLAT2');
          Q6N[57]['getCanvas']() ['onmousemove'] = function (Z3W) {
            var O1t = [
              arguments
            ];
            O1t[3] = r8no$;
            O1t[7] = K0M(O1t[0][0]);
            O1t[6] = T_B(O1t[7], O6G[9]);
            if (H1f[5] == null) {
              O1t[8] = O1t[6];
              O1t[2] = O6G[5];
            } else {
              O1t[8] = O6G[6];
              O1t[2] = O1t[7];
            }
            U3ndn.z_y(6);
            O1t[55] = U3ndn.I8r(27, 12);
            U3ndn.z_y(50);
            O1t[99] = U3ndn.I8r(20, 9, 15, 146, 2);
            U3ndn.z_y(97);
            O1t[54] = U3ndn.E_K(5, 11, 0, 8);
            O1t[4] = (O1t[2][r8no$[O1t[55]]] + O1t[8][r8no$[O1t[99]]]) / O1t[54];
            U3ndn.z_y(112);
            O1t[38] = U3ndn.E_K(16, 1, 24, 43, 5);
            U3ndn.S2t(6);
            O1t[65] = U3ndn.I8r(30, 10);
            U3ndn.S2t(113);
            U3ndn.w30();
            O1t[64] = U3ndn.E_K(14, 17, 5, 1);
            O1t[1] = (O1t[2][r8no$[O1t[38]]] + O1t[8][r8no$[O1t[65]]]) / O1t[64];
            U3ndn.S2t(6);
            O1t[57] = U3ndn.I8r(2, 37);
            O1t[9] = O1t[8][r8no$[O1t[57]]] - O1t[2]['x'];
            U3ndn.z_y(15);
            O1t[10] = U3ndn.I8r(7, 33, 0);
            U3ndn.S2t(6);
            O1t[44] = U3ndn.I8r(4, 36);
            O1t[5] = O1t[8][r8no$[O1t[10]]] - O1t[2][r8no$[O1t[44]]];
            U3ndn.z_y(33);
            O1t[60] = Math['sqrt'](U3ndn.I8r(O1t[9], O1t[5], O1t[9], O1t[5]));
            U3ndn.z_y(0);
            O1t[11] = Math['atan'](U3ndn.I8r(O1t[5], O1t[9]));
            if (H1f[5] == null) {
              O6G[8]['c'][0] = Math['round'](O1t[4]);
              O6G[8]['c'][1] = Math['round'](O1t[1]);
              O6G[8]['a'] = O1t[11];
            } else {
              O6G[9]['p'][0] = Math['round'](O1t[4]);
              O6G[9]['p'][1] = Math['round'](O1t[1]);
              O6G[8]['a'] = O1t[11];
            }
            Q6N[22]['physics']['shapes'][H1f[2]]['w'] = Math['round'](O1t[60]);
            k_I(true);
          };
          Q6N[57]['getCanvas']() ['onmousedown'] = function (O5r) {
            var C09 = [
              arguments
            ];
            C09[7] = r8no$;
            C09[5] = K0M(C09[0][0]);
            G3q('NEWBOXPLAT3');
            Q6N[57]['getCanvas']() ['onmousemove'] = function (o1B) {
              var q$T = [
                arguments
              ];
              q$T[7] = r8no$;
              q$T[1] = K0M(q$T[0][0], true);
              U3ndn.S2t(1);
              q$T[6] = U3ndn.E_K(41, 2);
              U3ndn.z_y(114);
              q$T[9] = U3ndn.E_K(9, 16, 18, 468, 37);
              q$T[5] = q$T[1][r8no$[q$T[6]]] - C09[5][r8no$[q$T[9]]];
              U3ndn.z_y(115);
              q$T[3] = U3ndn.I8r(260, 13, 39, 20);
              U3ndn.S2t(41);
              q$T[8] = U3ndn.E_K(17, 9, 272, 320);
              q$T[4] = q$T[1][r8no$[q$T[3]]] - C09[5][r8no$[q$T[8]]];
              U3ndn.z_y(33);
              q$T[2] = Math['sqrt'](U3ndn.E_K(q$T[5], q$T[4], q$T[5], q$T[4]));
              q$T[2] *= 2;
              if (Q6N[281]) {
                U3ndn.z_y(14);
                q$T[65] = U3ndn.E_K(1, 61, 2);
                U3ndn.S2t(6);
                q$T[73] = U3ndn.I8r(308, 924);
                U3ndn.S2t(1);
                q$T[42] = U3ndn.E_K(81, 18);
                U3ndn.z_y(42);
                q$T[38] = U3ndn.E_K(162630, 7, 23408, 6);
                q$T[2] = Math['round'](q$T[2] / Q6N[22][r8no$[q$T[65]]][r8no$[q$T[73]]]) * Q6N[22][r8no$[q$T[42]]][r8no$[q$T[38]]];
                q$T[2] = Math['max'](5, q$T[2]);
              } else {
                q$T[2] = Math['round'](q$T[2]);
              }
              q$T[2] = Math['max'](q$T[2], 1);
              Q6N[22]['physics']['shapes'][H1f[2]]['h'] = q$T[2];
              k_I(true);
            };
            Q6N[57]['getCanvas']() ['onmousedown'] = function () {
              var E3M = [
                arguments
              ];
              E3M[1] = r8no$;
              Q6N[57]['getCanvas']() ['onmousedown'] = null;
              Q6N[57]['getCanvas']() ['onmousemove'] = null;
              U3ndn.w30();
              H3s(H1f[2]);
              O8$();
              O7O();
              Q6N[401]['onclick'] = null;
              Q6N[401]['style']['display'] = 'none';
              c0S();
              t$S();
              G3q('NEWBOXPLAT4');
            };
          };
        };
      }
      function w1N(I1g) {
        var s4O = [
          arguments
        ];
        U3ndn.w30();
        s4O[2] = r8no$;
        b8l();
        Q6N[180] = s4O[0][0];
        Q6N[180]['classList']['remove']('HOVERUNSELECTED');
        Q6N[180]['classList']['add']('HOVERSELECTED');
      }
      function i5o() {
        var L9Z = [
          arguments
        ];
        L9Z[3] = r8no$;
        window['addEventListener']('wheel', Y57, {
          passive: false
        });
      }
      function s9W(B9M, A5W, v6R, d7y) {
        var q$f = [
          arguments
        ];
        q$f[6] = r8no$;
        q$f[1] = document['createElement']('div');
        q$f[1]['classList']['add']('brownButton');
        q$f[1]['classList']['add']('brownButton_classic');
        q$f[1]['classList']['add']('buttonShadow');
        q$f[1]['classList']['add'](q$f[0][1]);
        q$f[1]['textContent'] = q$f[0][2];
        q$f[0][0]['appendChild'](q$f[1]);
        q$f[1]['onclick'] = q$f[0][3];
        V6D[67]['setButtonSounds']([q$f[1]]);
      }
      function r7W() {
        U3ndn.Y$U();
        var M1Z = [
          arguments
        ];
        M1Z[3] = r8no$;
        Q6N[225] = this;
        p1D();
        clearTimeout(Q6N[741]);
        Q6N[741] = setTimeout(u2s, 400);
        window['onmouseup'] = function () {
          var c1x = [
            arguments
          ];
          c1x[6] = r8no$;
          clearTimeout(Q6N[741]);
          window['onmouseup'] = null;
          U3ndn.w30();
          t$S();
        };
      }
      function y6u(U8o, i2c) {
        var g$L = [
          arguments
        ];
        g$L[1] = r8no$;
        Q6N[57]['getCanvas']() ['onmousedown'] = null;
        Q6N[57]['getCanvas']() ['onmousemove'] = null;
        Q6N[57]['clearPolygonPreview']();
        Q6N[401]['onclick'] = null;
        O7O();
        if (g$L[0][0] == null) {
          if (g$L[0][1] != null) {
            O69(g$L[0][1]);
          }
        } else {
          v95(g$L[0][0]);
        }
        k_I(true);
        t5w();
        H3s();
        Q6N[401]['style']['display'] = 'none';
        U3ndn.Y$U();
        G3q('CANCELDRAWING');
      }
      function i$w(u3P) {
        var l0N = [
          arguments
        ];
        l0N[2] = r8no$;
        U3ndn.w30();
        if (!Q6N[22]['spawns'][Q6N[144]]) {
          return;
        }
        if (l0N[0][0]['confirmState']) {
          Q6N[22]['spawns']['splice'](Q6N[144], 1);
          if (Q6N[22]['spawns'][Q6N[144]]) {
          } else if (Q6N[144] > 0) {
            Q6N[144]--;
          } else {
            Q6N[144] = - 1;
          }
          C_o();
          t5w();
          H3s();
          k_I(true);
          t$S();
        } else {
          l0N[0][0]['confirmState'] = true;
          l0N[0][0]['classList']['add']('mapeditor_leftbox_deletebuttonconfirm');
        }
      }
      function Z1p() {
        var K0F = [
          arguments
        ];
        K0F[5] = r8no$;
        U3ndn.w30();
        Q6N[57]['scaleStage'](0.8);
        if (Q6N[29] == false) {
          k_I(false);
        }
      }
      function H1L() {
        var w9r = [
          arguments
        ];
        w9r[6] = r8no$;
        Q6N[22]['physics']['bodies'][Q6N[310]]['bu'] = Q6N[826]['checked'];
        t$S();
      }
      function A2h() {
        var q1L = [
          arguments
        ];
        q1L[5] = r8no$;
        Q6N[525]['classList']['remove']('mapeditor_midbox_playbutton_play');
        Q6N[525]['classList']['remove']('mapeditor_midbox_playbutton_stop');
        if (Q6N[29]) {
          Q6N[525]['classList']['add']('mapeditor_midbox_playbutton_stop');
        } else {
          Q6N[525]['classList']['add']('mapeditor_midbox_playbutton_play');
        }
      }
      function M6K() {
        var a$z = [
          arguments
        ];
        a$z[2] = r8no$;
        Q6N[782]['style']['display'] = 'none';
        Q6N[381]['style']['display'] = 'none';
        Q6N[644]['style']['display'] = 'none';
        a$z[1] = Q6N[22]['spawns'][Q6N[144]];
        if (a$z[1]) {
          Q6N[556]['style']['display'] = 'block';
          Q6N[352]['value'] = a$z[1]['n'];
        } else {
          Q6N[556]['style']['display'] = 'none';
          Q6N[352]['value'] = '';
          return;
        }
        a$z[8] = document['getElementById']('mapeditor_rightbox_table_spawn');
        while (a$z[8]['rows']['length'] > 0) {
          a$z[8]['deleteRow'](0);
        }
        j84(a$z[8], 'X', {
          type: 'number',
          max: 10000,
          min: - 10000,
          target: a$z[1],
          key: 'x',
          allowNull: false,
          crementAmount: 1,
          advice: 'SPAWNX'
        }, a$z[1]['x']);
        j84(a$z[8], 'Y', {
          type: 'number',
          max: 10000,
          min: - 10000,
          target: a$z[1],
          key: 'y',
          allowNull: false,
          crementAmount: 1,
          advice: 'SPAWNY'
        }, a$z[1]['y']);
        j84(a$z[8], 'Start Speed X', {
          type: 'number',
          max: 10000,
          min: - 10000,
          target: a$z[1],
          key: 'xv',
          allowNull: false,
          crementAmount: 1,
          advice: 'SPAWNXV'
        }, a$z[1]['xv']);
        j84(a$z[8], 'Start Speed Y', {
          type: 'number',
          max: 10000,
          min: - 10000,
          target: a$z[1],
          key: 'yv',
          allowNull: false,
          crementAmount: 1,
          advice: 'SPAWNYV'
        }, a$z[1]['yv']);
        U3ndn.Y$U();
        j84(a$z[8], 'Free For All Uses', {
          type: 'checkbox',
          target: a$z[1],
          key: 'f',
          advice: 'SPAWNBOXES'
        }, a$z[1]['f']);
        j84(a$z[8], 'Red Uses', {
          type: 'checkbox',
          target: a$z[1],
          key: 'r',
          advice: 'SPAWNBOXES'
        }, a$z[1]['r']);
        j84(a$z[8], 'Blue Uses', {
          type: 'checkbox',
          target: a$z[1],
          key: 'b',
          advice: 'SPAWNBOXES'
        }, a$z[1]['b']);
        j84(a$z[8], 'Green Uses', {
          type: 'checkbox',
          target: a$z[1],
          key: 'gr',
          advice: 'SPAWNBOXES'
        }, a$z[1]['gr']);
        j84(a$z[8], 'Yellow Uses', {
          type: 'checkbox',
          target: a$z[1],
          key: 'ye',
          advice: 'SPAWNBOXES'
        }, a$z[1]['ye']);
        j84(a$z[8], 'Priority', {
          type: 'number',
          max: 10000,
          min: 0,
          target: a$z[1],
          key: 'priority',
          allowNull: false,
          crementAmount: 1,
          advice: 'SPAWNPRIORITY'
        }, a$z[1]['priority']);
      }
      function o$b() {
        var V4E = [
          arguments
        ];
        V4E[5] = r8no$;
        for (V4E[7] = 0; V4E[7] < Q6N[88]['options']['length']; V4E[7]++) {
          if (Q6N[88]['options'][V4E[7]]['value'] == Q6N[22]['m']['mo']) {
            Q6N[88]['selectedIndex'] = V4E[7];
            break;
          }
        }
      }
      function O69(n8f) {
        var E8X = [
          arguments
        ];
        E8X[2] = r8no$;
        for (E8X[1] = 0; E8X[1] < Q6N[22]['physics']['bodies']['length']; E8X[1]++) {
          E8X[4] = Q6N[22]['physics']['bodies'][E8X[1]];
          for (E8X[7] = 0; E8X[7] < E8X[4]['fx']['length']; E8X[7]++) {
            if (E8X[4]['fx'][E8X[7]] == E8X[0][0]) {
              E8X[4]['fx']['splice'](E8X[7], 1);
              E8X[7]--;
              continue;
            }
            if (E8X[4]['fx'][E8X[7]] > E8X[0][0]) {
              E8X[4]['fx'][E8X[7]]--;
            }
          }
        }
        for (E8X[5] = 0; E8X[5] < Q6N[22]['physics']['fixtures']['length']; E8X[5]++) {
          E8X[9] = Q6N[22]['physics']['fixtures'][E8X[5]];
          if (E8X[9]['sh'] > E8X[0][0]) {
            E8X[9]['sh']--;
          }
        }
        Q6N[22]['physics']['fixtures']['splice'](E8X[0][0], 1);
        Q6N[22]['physics']['shapes']['splice'](E8X[0][0], 1);
        for (E8X[6] = 0; E8X[6] < Q6N[22]['capZones']['length']; E8X[6]++) {
          if (Q6N[22]['capZones'][E8X[6]]['i'] == E8X[0][0]) {
            Q6N[22]['capZones']['splice'](E8X[6], 1);
            E8X[6]--;
          }
        }
        for (E8X[8] = 0; E8X[8] < Q6N[22]['capZones']['length']; E8X[8]++) {
          if (Q6N[22]['capZones'][E8X[8]]['i'] > E8X[0][0]) {
            Q6N[22]['capZones'][E8X[8]]['i']--;
          }
        }
      }
      function O7O() {
        var m19 = [
          arguments
        ];
        m19[8] = r8no$;
        Q6N[57]['getCanvas']() ['onmousedown'] = A4w;
        V_S('grabready');
      }
      function d1x(B2h) {
        var Q7j = [
          arguments
        ];
        Q7j[6] = r8no$;
        Q7j[9] = Q7j[0][0]['target'];
        if (!Q6N[22]['spawns'][Q7j[9]]) {
          return;
        }
        Q7j[7] = Q6N[22]['spawns'][Q7j[9]];
        Q7j[3] = JSON['parse'](JSON['stringify'](Q7j[7]));
        Q6N[22]['spawns']['push'](Q7j[3]);
        if (Q7j[0][0]['invertXPos']) {
          Q7j[3]['x'] = - Q7j[3]['x'];
        }
        if (Q7j[0][0]['invertYPos']) {
          Q7j[3]['y'] = - Q7j[3]['y'];
        }
      }
      function n3v(c3F) {
        var L0w = [
          arguments
        ];
        L0w[3] = r8no$;
        Q6N[57]['highlightPlatform'](L0w[0][0]);
        U3ndn.w30();
        if (Q6N[29] == false) {
          k_I(true);
        }
      }
      function P46() {
        var Z3g = [
          arguments
        ];
        Z3g[3] = r8no$;
        Q6N[57]['clearHighlightPlatform']();
        if (Q6N[29] == false) {
          k_I(true);
        }
      }
      function L0U() {
        var r7k = [
          arguments
        ];
        r7k[4] = r8no$;
        U3ndn.Y$U();
        if (Q6N[310] == - 1) {
          return;
        }
        r7k[3] = Q6N[22]['physics']['bro']['indexOf'](Q6N[310]);
        if (r7k[3] == - 1) {
          return;
        }
        if (this == Q6N[65]) {
          if (Q6N[22]['physics']['bro'][r7k[3] - 1] != undefined) {
            U3ndn.z_y(1);
            r7k[9] = Q6N[22]['physics']['bro'][U3ndn.E_K(r7k[3], 1)];
            U3ndn.z_y(1);
            Q6N[22]['physics']['bro'][U3ndn.I8r(r7k[3], 1)] = Q6N[22]['physics']['bro'][r7k[3]];
            Q6N[22]['physics']['bro'][r7k[3]] = r7k[9];
          }
        } else if (this == Q6N[845]) {
          if (Q6N[22]['physics']['bro'][r7k[3] + 1] != undefined) {
            U3ndn.S2t(6);
            r7k[6] = Q6N[22]['physics']['bro'][U3ndn.E_K(r7k[3], 1)];
            U3ndn.S2t(6);
            Q6N[22]['physics']['bro'][U3ndn.E_K(r7k[3], 1)] = Q6N[22]['physics']['bro'][r7k[3]];
            Q6N[22]['physics']['bro'][r7k[3]] = r7k[6];
          }
        }
        t5w();
        k_I(true);
      }
      function p6a() {
        var C48 = [
          arguments
        ];
        C48[2] = r8no$;
        Q6N[57]['checkAndResizeRenderer']();
      }
      function F9U() {
        var B$P = [
          arguments
        ];
        B$P[5] = r8no$;
        U3ndn.z_y(0);
        Q6N[57]['scaleStage'](U3ndn.E_K(1, 0.8));
        if (Q6N[29] == false) {
          k_I(false);
        }
      }
      function i2W(s6C) {
        var u7D = [
          arguments
        ];
        u7D[5] = r8no$;
        u7D[8] = u7D[0][0]['target'];
        if (!Q6N[22]['physics']['bodies'][u7D[8]]) {
          return;
        }
        u7D[9] = Q6N[22]['physics']['bro']['indexOf'](u7D[8]);
        u7D[3] = Q6N[22]['physics']['bodies'][u7D[8]];
        u7D[1] = JSON['parse'](JSON['stringify'](u7D[3]));
        Q6N[22]['physics']['bodies']['push'](u7D[1]);
        U3ndn.z_y(6);
        u7D[57] = U3ndn.E_K(27, 16);
        U3ndn.S2t(6);
        u7D[80] = U3ndn.I8r(46, 2);
        U3ndn.z_y(6);
        u7D[88] = U3ndn.I8r(32, 15);
        U3ndn.S2t(89);
        u7D[73] = U3ndn.E_K(0, 19, 39, 2, 1);
        u7D[4] = Q6N[22][r8no$[u7D[57]]][r8no$[u7D[80]]][r8no$[u7D[88]]] - u7D[73];
        Q6N[22]['physics']['bro']['splice'](u7D[9], 0, u7D[4]);
        for (u7D[91] = 0; u7D[91] < u7D[1]['fx']['length']; u7D[91]++) {
          u7D[6] = u7D[1]['fx'][u7D[91]];
          u7D[7] = Q6N[22]['physics']['fixtures'][u7D[6]];
          u7D[2] = JSON['parse'](JSON['stringify'](u7D[7]));
          Q6N[22]['physics']['fixtures']['push'](u7D[2]);
          U3ndn.z_y(116);
          u7D[40] = U3ndn.E_K(38, 2, 37, 3, 42);
          U3ndn.z_y(6);
          u7D[92] = U3ndn.I8r(35, 20);
          U3ndn.S2t(13);
          u7D[62] = U3ndn.E_K(51, 4, 8);
          u7D[22] = Q6N[22][r8no$[u7D[40]]][r8no$[u7D[92]]][r8no$[u7D[62]]] - 1;
          u7D[51] = u7D[7]['sh'];
          u7D[69] = Q6N[22]['physics']['shapes'][u7D[51]];
          u7D[75] = JSON['parse'](JSON['stringify'](u7D[69]));
          Q6N[22]['physics']['shapes']['push'](u7D[75]);
          U3ndn.z_y(105);
          u7D[39] = U3ndn.I8r(6, 33, 46, 11);
          U3ndn.S2t(14);
          u7D[95] = U3ndn.E_K(456, 912, 55);
          U3ndn.S2t(70);
          u7D[65] = U3ndn.I8r(11, 940, 14027, 15, 15);
          U3ndn.z_y(18);
          u7D[59] = U3ndn.E_K(12, 11, 17, 17);
          u7D[15] = Q6N[22][r8no$[u7D[39]]][r8no$[u7D[95]]][r8no$[u7D[65]]] - u7D[59];
          u7D[2]['sh'] = u7D[15];
          u7D[1]['fx'][u7D[91]] = u7D[22];
          if (u7D[75]['type'] == 'ci') {
            if (u7D[0][0]['mirrorX']) {
              u7D[75]['c'][0] = - u7D[75]['c'][0];
            }
            if (u7D[0][0]['mirrorY']) {
              u7D[75]['c'][1] = - u7D[75]['c'][1];
            }
          }
          if (u7D[75]['type'] == 'bx') {
            if (u7D[0][0]['mirrorX']) {
              u7D[75]['c'][0] = - u7D[75]['c'][0];
              u7D[75]['a'] = - u7D[75]['a'];
            }
            if (u7D[0][0]['mirrorY']) {
              u7D[75]['c'][1] = - u7D[75]['c'][1];
              u7D[75]['a'] = - u7D[75]['a'];
            }
          }
          if (u7D[75]['type'] == 'po') {
            u7D[78] = false;
            if (u7D[0][0]['mirrorX']) {
              u7D[75]['c'][0] = - u7D[75]['c'][0];
              for (u7D[38] = 0; u7D[38] < u7D[75]['v']['length']; u7D[38]++) {
                u7D[75]['v'][u7D[38]][0] = - u7D[75]['v'][u7D[38]][0];
              }
              u7D[75]['a'] = - u7D[75]['a'];
              u7D[78] = true;
            }
            if (u7D[0][0]['mirrorY']) {
              u7D[75]['c'][1] = - u7D[75]['c'][1];
              for (u7D[46] = 0; u7D[46] < u7D[75]['v']['length']; u7D[46]++) {
                u7D[75]['v'][u7D[46]][1] = - u7D[75]['v'][u7D[46]][1];
              }
              u7D[75]['a'] = - u7D[75]['a'];
              u7D[78] = true;
            }
            if (u7D[78]) {
              J7P(u7D[75]);
            }
          }
        }
        if (u7D[0][0]['invertXPos']) {
          u7D[1]['p'][0] = - u7D[1]['p'][0];
        }
        if (u7D[0][0]['invertYPos']) {
          u7D[1]['p'][1] = - u7D[1]['p'][1];
        }
        if (u7D[0][0]['mirrorX']) {
          u7D[1]['a'] = - u7D[1]['a'];
        }
        if (u7D[0][0]['mirrorY']) {
          u7D[1]['a'] = - u7D[1]['a'];
        }
        if (u7D[0][0]['rotate'] != 0) {
          U3ndn.z_y(6);
          u7D[34] = U3ndn.I8r(82, 1388);
          U3ndn.z_y(1);
          u7D[11] = U3ndn.E_K(200, 18);
          U3ndn.S2t(117);
          u7D[60] = U3ndn.E_K(8, 1, 19, 2252, 16);
          u7D[1]['a'] += u7D[0][0][r8no$[u7D[34]]] * (Math[r8no$[u7D[11]]] / u7D[60]);
        }
        for (u7D[94] = 0; u7D[94] < Q6N[22]['physics']['joints']['length']; u7D[94]++) {
          u7D[47] = Q6N[22]['physics']['joints'][u7D[94]];
          if (u7D[47]['ba'] == u7D[8]) {
            u7D[66] = JSON['parse'](JSON['stringify'](u7D[47]));
            u7D[66]['ba'] = u7D[4];
            Q6N[22]['physics']['joints']['push'](u7D[66]);
            if (u7D[66]['type'] == 'd') {
              U3ndn.S2t(6);
              u7D[86] = U3ndn.E_K(47, 2);
              U3ndn.S2t(78);
              u7D[93] = U3ndn.I8r(13, 40, 13, 63);
              u7D[90] = u7D[1][r8no$[u7D[86]]][0] - u7D[3][r8no$[u7D[93]]][0];
              U3ndn.z_y(65);
              u7D[50] = U3ndn.E_K(12, 66, 66, 36);
              U3ndn.z_y(15);
              u7D[32] = U3ndn.I8r(8, 0, 7);
              U3ndn.z_y(1);
              u7D[24] = U3ndn.I8r(147, 98);
              U3ndn.S2t(118);
              u7D[56] = U3ndn.E_K(14, 13, 10, 16, 99);
              u7D[96] = u7D[1][r8no$[u7D[50]]][u7D[32]] - u7D[3][r8no$[u7D[24]]][u7D[56]];
              u7D[66]['ab'][0] += u7D[90];
              u7D[66]['ab'][1] += u7D[96];
              if (u7D[0][0]['mirrorX']) {
              }
              if (u7D[0][0]['mirrorY']) {
              }
            }
            if (u7D[66]['type'] == 'rv') {
              if (u7D[0][0]['mirrorX']) {
                u7D[66]['aa'][0] = - u7D[66]['aa'][0];
              }
              if (u7D[0][0]['mirrorY']) {
                u7D[66]['aa'][1] = - u7D[66]['aa'][1];
              }
            }
            if (u7D[66]['type'] == 'lpj') {
              if (u7D[0][0]['mirrorX']) {
                u7D[66]['pa'] = - u7D[66]['pa'];
              }
              if (u7D[0][0]['mirrorY']) {
                u7D[66]['pa'] = - u7D[66]['pa'];
              }
            }
          }
        }
      }
      function s7V() {
        U3ndn.Y$U();
        Q6N[29] = false;
        k_I(true);
      }
      function X$l(v1F) {
        var Q5f = [
          arguments
        ];
        Q5f[4] = r8no$;
        switch (this) {
          case Q6N[351]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['p'][0] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[746]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['p'][1] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[437]:
            if (i0K(this, - 9999, 9999)) {
              U3ndn.z_y(26);
              Q5f[7] = U3ndn.E_K(7, 762, 13094, 18);
              U3ndn.z_y(6);
              Q5f[9] = U3ndn.I8r(0, 1);
              Q6N[22]['physics']['bodies'][Q6N[310]]['a'] = Q6N[8] * Z77(this[r8no$[Q5f[7]]], Q5f[9], false);
            }
            break;
          case Q6N[940]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['re'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[946]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['de'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[949]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['fric'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[249]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['lv'][0] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[305]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['lv'][1] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[976]:
            if (i0K(this, - 9999, 9999)) {
              Q5f[3] = - 1254108150;
              Q5f[6] = 534749394;
              Q5f[2] = 2;
              for (Q5f[8] = 1; U3ndn.v9p(Q5f[8].toString(), Q5f[8].toString().length, 5578) !== Q5f[3]; Q5f[8]++) {
                Q6N[22]['physics']['bodies'][Q6N[310]]['av'] = Z77(this['value'], 1, false);
                Q5f[2] += 2;
              }
              if (U3ndn.v9p(Q5f[2].toString(), Q5f[2].toString().length, 5207) !== Q5f[6]) {
                Q6N[22]['sax']['Joints'][Q6N[310]]['pay'] = Z77(this['readBoolean'], 2, true);
              }
            }
            break;
          case Q6N[108]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['ld'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[435]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['ad'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[585]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['cf']['x'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[813]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['cf']['y'] = Z77(this['value'], 1, false);
            }
            break;
          case Q6N[653]:
            if (i0K(this, - 99999, 99999)) {
              Q6N[22]['physics']['bodies'][Q6N[310]]['cf']['ct'] = Z77(this['value'], 1, false);
            }
            break;
          default:
            throw new Error;
            break;
        }
        k_I(true);
        t$S();
      }
      function n88() {
        var s2A = [
          arguments
        ];
        s2A[1] = r8no$;
        if (Q6N[87]['style']['display'] == 'block' || Q6N[28]['style']['display'] == 'block') {
          d0O();
        } else {
          Q6N[87]['style']['display'] = 'block';
        }
      }
      function t$S() {
        var H$l = [
          arguments
        ];
        H$l[7] = r8no$;
        while (Q6N[84] > 0) {
          Q6N[45]['shift']();
          Q6N[84]--;
        }
        U3ndn.Y$U();
        Q6N[45]['unshift'](JSON['stringify'](Q6N[22]));
        while (Q6N[45]['length'] > Q6N[61]) {
          Q6N[45]['pop']();
        }
        s7e();
      }
      function w93() {
        var v7c = [
          arguments
        ];
        v7c[7] = r8no$;
        switch (this) {
          case Q6N[632]:
            if (Q6N[885]['style']['display'] == 'none') {
              Q6N[885]['style']['display'] = '';
              this['children'][1]['textContent'] = '-';
            } else {
              Q6N[885]['style']['display'] = 'none';
              this['children'][1]['textContent'] = '+';
            }
            break;
          case Q6N[868]:
            if (Q6N[859]['style']['display'] == 'none') {
              Q6N[859]['style']['display'] = '';
              this['children'][1]['textContent'] = '-';
            } else {
              Q6N[859]['style']['display'] = 'none';
              this['children'][1]['textContent'] = '+';
            }
            break;
          case Q6N[680]:
            if (Q6N[377]['style']['display'] == 'none') {
              Q6N[377]['style']['display'] = '';
              this['children'][1]['textContent'] = '-';
            } else {
              Q6N[377]['style']['display'] = 'none';
              this['children'][1]['textContent'] = '+';
            }
            break;
          case Q6N[873]:
            if (Q6N[948]['style']['display'] == 'none') {
              Q6N[948]['style']['display'] = '';
              this['children'][1]['textContent'] = '-';
            } else {
              Q6N[948]['style']['display'] = 'none';
              this['children'][1]['textContent'] = '+';
            }
            break;
        }
      }
      function H3s(r4J) {
        var S3C = [
          arguments
        ];
        S3C[3] = r8no$;
        S3C[7] = Q6N[22]['physics']['bodies'][Q6N[310]];
        Q6N[556]['style']['display'] = 'none';
        Q6N[381]['style']['display'] = 'none';
        Q6N[644]['style']['display'] = 'none';
        if (S3C[7]) {
          Q6N[782]['style']['display'] = 'block';
          Q6N[352]['value'] = S3C[7]['n'];
        } else {
          Q6N[782]['style']['display'] = 'none';
          Q6N[352]['value'] = '';
          return;
        }
        V1M(Q6N[351], S3C[7]['p'][0]);
        V1M(Q6N[746], S3C[7]['p'][1]);
        V1M(Q6N[437], i84(S3C[7]['a'] * Q6N[7]));
        V1M(Q6N[940], i84(S3C[7]['re']));
        V1M(Q6N[946], i84(S3C[7]['de']));
        V1M(Q6N[949], i84(S3C[7]['fric']));
        Q6N[596]['selectedIndex'] = S3C[7]['fricp'] == true ? 0 : 1;
        Q6N[826]['checked'] = S3C[7]['bu'];
        Q6N[566]['selectedIndex'] = S3C[7]['type'] == 's' ? 0 : S3C[7]['type'] == 'd' ? 1 : 2;
        if (S3C[7]['type'] == 's') {
          Q6N[859]['style']['pointerEvents'] = 'none';
          Q6N[859]['style']['opacity'] = '0.3';
        } else {
          Q6N[859]['style']['pointerEvents'] = '';
          Q6N[859]['style']['opacity'] = '';
        }
        U3ndn.z_y(119);
        S3C[1] = U3ndn.I8r(392, 4, 226, 248, 14);
        U3ndn.S2t(19);
        S3C[6] = U3ndn.I8r(29, 4, 8, 19, 7);
        Q6N[981]['selectedIndex'] = S3C[7][r8no$[S3C[1]]] - S3C[6];
        Q6N[364]['checked'] = S3C[7]['f_p'];
        Q6N[966]['checked'] = S3C[7]['f_1'];
        Q6N[447]['checked'] = S3C[7]['f_2'];
        Q6N[864]['checked'] = S3C[7]['f_3'];
        Q6N[932]['checked'] = S3C[7]['f_4'];
        V1M(Q6N[249], S3C[7]['lv'][0]);
        V1M(Q6N[305], S3C[7]['lv'][1]);
        U3ndn.Y$U();
        V1M(Q6N[976], i84(S3C[7]['av']));
        V1M(Q6N[108], i84(S3C[7]['ld']));
        V1M(Q6N[435], i84(S3C[7]['ad']));
        Q6N[127]['selectedIndex'] = S3C[7]['fr'] ? 0 : 1;
        V1M(Q6N[585], S3C[7]['cf']['x']);
        V1M(Q6N[813], S3C[7]['cf']['y']);
        V1M(Q6N[653], S3C[7]['cf']['ct']);
        Q6N[961]['selectedIndex'] = S3C[7]['cf']['w'] ? 1 : 0;
        for (S3C[8] = 0; S3C[8] < Q6N[993]['length']; S3C[8]++) {
          Q6N[948]['removeChild'](Q6N[993][S3C[8]]);
        }
        Q6N[993] = [
        ];
        if (S3C[7]['type'] == 'd') {
          Q6N[673]['style']['display'] = 'none';
        } else {
          Q6N[673]['style']['display'] = 'block';
        }
        S3C[5] = function (m_5) {
          var E$l = [
            arguments
          ];
          E$l[1] = r8no$;
          E$l[8] = Q6N[22]['physics']['joints'][E$l[0][0]];
          U3ndn.Y$U();
          if (E$l[8]['ba'] == Q6N[310]) {
            E$l[2] = - 1;
            if (E$l[8]['ba'] == Q6N[310]) {
              E$l[2] = E$l[8]['bb'];
            } else {
              E$l[2] = E$l[8]['ba'];
            }
            E$l[3] = document['createElement']('div');
            E$l[6] = document['createElement']('table');
            Q6N[993]['push'](E$l[3]);
            E$l[3]['appendChild'](E$l[6]);
            Q6N[948]['appendChild'](E$l[3]);
            E$l[3]['classList']['add']('mapeditor_rightbox_table_shape_container');
            E$l[6]['classList']['add']('mapeditor_rightbox_table_shape');
            E$l[3]['onmouseover'] = function () {
              var E6G = [
                arguments
              ];
              U3ndn.Y$U();
              E6G[4] = r8no$;
              Q6N[57]['highlightJoint'](E$l[0][0]);
              k_I(true);
            };
            E$l[3]['onmouseout'] = function () {
              var r35 = [
                arguments
              ];
              U3ndn.w30();
              r35[5] = r8no$;
              Q6N[57]['clearHighlightJoint']();
              k_I(true);
            };
            if (E$l[8]['type'] == 'rv') {
              j84(E$l[6], 'Type', {
                type: 'status'
              }, 'Rotating');
              E$l[4] = [
                {
                  value: - 1,
                  text: 'Nothing'
                }
              ];
              for (E$l[97] = 0; E$l[97] < Q6N[22]['physics']['bro']['length']; E$l[97]++) {
                E$l[7] = Q6N[22]['physics']['bro'][E$l[97]];
                E$l[5] = Q6N[22]['physics']['bodies'][E$l[7]]['n'];
                if (E$l[7] == E$l[8]['ba']) {
                  continue;
                }
                E$l[4]['push']({
                  value: E$l[7],
                  text: E$l[5]
                });
              }
              j84(E$l[6], 'Attach To', {
                type: 'select',
                variableType: 'int',
                target: E$l[8],
                key: 'bb',
                options: E$l[4],
                advice: 'RVATTATCHTO'
              }, E$l[8]['bb']);
              j84(E$l[6], 'Pivot X', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_green',
                max: 99999,
                min: - 99999,
                target: E$l[8]['aa'],
                key: 0,
                allowNull: false,
                crementAmount: 1,
                advice: 'RVPIVOTX'
              }, E$l[8]['aa'][0]);
              j84(E$l[6], 'Pivot Y', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_green',
                max: 99999,
                min: - 99999,
                target: E$l[8]['aa'],
                key: 1,
                allowNull: false,
                crementAmount: 1,
                advice: 'RVPIVOTY'
              }, E$l[8]['aa'][1]);
              j84(E$l[6], 'Enable Motor', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'em',
                advice: 'RVENABLEMOTOR'
              }, E$l[8]['d']['em']);
              j84(E$l[6], '-Max Speed', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8]['d'],
                key: 'ms',
                allowNull: false,
                crementAmount: 1,
                advice: 'RVTURNSPEED'
              }, E$l[8]['d']['ms']);
              j84(E$l[6], '-Turn Force', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8]['d'],
                key: 'mmt',
                allowNull: false,
                crementAmount: 1,
                advice: 'RVTURNFORCE'
              }, E$l[8]['d']['mmt']);
              j84(E$l[6], 'Angle Limit', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'el',
                advice: 'RVANGLELIMIT'
              }, E$l[8]['d']['el']);
              j84(E$l[6], '-From (angle)', {
                type: 'number',
                max: 999,
                min: - 999,
                target: E$l[8]['d'],
                key: 'la',
                allowNull: false,
                crementAmount: 1,
                degRad: true,
                advice: 'RVANGLEFROM'
              }, i84(E$l[8]['d']['la'] * Q6N[7]));
              j84(E$l[6], '-To (angle)', {
                type: 'number',
                max: 999,
                min: - 999,
                target: E$l[8]['d'],
                key: 'ua',
                allowNull: false,
                crementAmount: 1,
                degRad: true,
                advice: 'RVANGLETO'
              }, i84(E$l[8]['d']['ua'] * Q6N[7]));
              j84(E$l[6], 'Break force', {
                type: 'number',
                max: 99999999,
                min: 0,
                target: E$l[8]['d'],
                key: 'bf',
                allowNull: false,
                crementAmount: 50,
                advice: 'JOINTBREAKFORCE'
              }, i84(E$l[8]['d']['bf']));
              j84(E$l[6], 'Col attached', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'cc',
                advice: 'JOINTCC'
              }, E$l[8]['d']['cc']);
              j84(E$l[6], 'Draw line', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'dl',
                advice: 'JOINTDRAWLINE'
              }, E$l[8]['d']['dl']);
            }
            if (E$l[8]['type'] == 'p') {
            }
            if (E$l[8]['type'] == 'd') {
              j84(E$l[6], 'Type', {
                type: 'status'
              }, 'Soft Rod');
              E$l[9] = [
                {
                  value: - 1,
                  text: 'Nothing'
                }
              ];
              for (E$l[99] = 0; E$l[99] < Q6N[22]['physics']['bro']['length']; E$l[99]++) {
                E$l[73] = Q6N[22]['physics']['bro'][E$l[99]];
                E$l[82] = Q6N[22]['physics']['bodies'][E$l[73]]['n'];
                if (E$l[73] == E$l[8]['ba']) {
                  continue;
                }
                E$l[9]['push']({
                  value: E$l[73],
                  text: E$l[82]
                });
              }
              j84(E$l[6], 'Attach To', {
                type: 'select',
                variableType: 'int',
                target: E$l[8],
                key: 'bb',
                options: E$l[9],
                advice: 'RODATTACHTO'
              }, E$l[8]['bb']);
              j84(E$l[6], 'Local X', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_green',
                max: 99999,
                min: - 99999,
                target: E$l[8]['aa'],
                key: 0,
                allowNull: false,
                crementAmount: 1,
                advice: 'RODLOCALX'
              }, E$l[8]['aa'][0]);
              j84(E$l[6], 'Local Y', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_green',
                max: 99999,
                min: - 99999,
                target: E$l[8]['aa'],
                key: 1,
                allowNull: false,
                crementAmount: 1,
                advice: 'RODLOCALY'
              }, E$l[8]['aa'][1]);
              j84(E$l[6], 'Attach X', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_red',
                max: 99999,
                min: - 99999,
                target: E$l[8]['ab'],
                key: 0,
                allowNull: false,
                crementAmount: 1,
                advice: 'RODATTATCHX'
              }, E$l[8]['ab'][0]);
              j84(E$l[6], 'Attach Y', {
                type: 'number',
                labelClass: 'mapeditor_tablefont_red',
                max: 99999,
                min: - 99999,
                target: E$l[8]['ab'],
                key: 1,
                allowNull: false,
                crementAmount: 1,
                advice: 'RODATTATCHY'
              }, E$l[8]['ab'][1]);
              j84(E$l[6], 'Softness', {
                type: 'number',
                max: 999,
                min: 0,
                target: E$l[8]['d'],
                key: 'fh',
                allowNull: false,
                crementAmount: 0.1,
                advice: 'RODSOFTNESS'
              }, i84(E$l[8]['d']['fh']));
              j84(E$l[6], 'Damping', {
                type: 'number',
                max: 999,
                min: 0,
                target: E$l[8]['d'],
                key: 'dr',
                allowNull: false,
                crementAmount: 0.1,
                advice: 'RODDAMPING'
              }, i84(E$l[8]['d']['dr']));
              j84(E$l[6], 'Break force', {
                type: 'number',
                max: 99999999,
                min: 0,
                target: E$l[8]['d'],
                key: 'bf',
                allowNull: false,
                crementAmount: 50,
                advice: 'JOINTBREAKFORCE'
              }, i84(E$l[8]['d']['bf']));
              j84(E$l[6], 'Col attached', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'cc',
                advice: 'JOINTCC'
              }, E$l[8]['d']['cc']);
              j84(E$l[6], 'Draw line', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'dl',
                advice: 'JOINTDRAWLINE'
              }, E$l[8]['d']['dl']);
            }
            if (E$l[8]['type'] == 'lsj') {
              j84(E$l[6], 'Type', {
                type: 'status'
              }, 'Springy');
              j84(E$l[6], 'Spring Force', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'sf',
                allowNull: false,
                crementAmount: 1,
                valueMult: 1000,
                advice: 'LSJSPRINGFORCE'
              }, E$l[8]['sf'] / 1000);
              j84(E$l[6], 'Spring Length', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'slen',
                allowNull: false,
                crementAmount: 1,
                advice: 'LSJSPRINGLENGTH'
              }, E$l[8]['slen']);
              j84(E$l[6], 'Break force', {
                type: 'number',
                max: 99999999,
                min: 0,
                target: E$l[8]['d'],
                key: 'bf',
                allowNull: false,
                crementAmount: 50,
                advice: 'JOINTBREAKFORCE'
              }, i84(E$l[8]['d']['bf']));
              j84(E$l[6], 'Draw line', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'dl',
                advice: 'JOINTDRAWLINE'
              }, E$l[8]['d']['dl']);
            }
            if (E$l[8]['type'] == 'lpj') {
              j84(E$l[6], 'Type', {
                type: 'status'
              }, 'Follows Path');
              j84(E$l[6], 'Path Angle', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'pa',
                allowNull: false,
                crementAmount: 1,
                degRad: true,
                advice: 'LPJPATHANGLE'
              }, i84(E$l[8]['pa'] * Q6N[7]));
              j84(E$l[6], 'Path Length', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'plen',
                allowNull: false,
                crementAmount: 1,
                advice: 'LPJPATHLENGTH'
              }, E$l[8]['plen']);
              j84(E$l[6], 'Move Speed', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'pms',
                allowNull: false,
                crementAmount: 1,
                advice: 'LPJMOVESPEED'
              }, E$l[8]['pms']);
              j84(E$l[6], 'Move Force', {
                type: 'number',
                max: 99999999,
                min: - 99999999,
                target: E$l[8],
                key: 'pf',
                allowNull: false,
                crementAmount: 1,
                valueMult: 1000,
                advice: 'LPJMOVEFORCE'
              }, E$l[8]['pf'] / 1000);
              j84(E$l[6], 'Break force', {
                type: 'number',
                max: 99999999,
                min: 0,
                target: E$l[8]['d'],
                key: 'bf',
                allowNull: false,
                crementAmount: 50,
                advice: 'JOINTBREAKFORCE'
              }, i84(E$l[8]['d']['bf']));
              j84(E$l[6], 'Draw line', {
                type: 'checkbox',
                target: E$l[8]['d'],
                key: 'dl',
                advice: 'JOINTDRAWLINE'
              }, E$l[8]['d']['dl']);
            }
            s9W(E$l[3], 'mapeditor_rightbox_shapebutton', 'DELETE JOINT', function () {
              U3ndn.w30();
              var T3u = [
                arguments
              ];
              T3u[7] = r8no$;
              if (this['textContent'] == 'SURE?') {
                Q6N[22]['physics']['joints']['splice'](E$l[0][0], 1);
                k_I(true);
                H3s();
                t$S();
              } else {
                this['textContent'] = 'SURE?';
              }
            });
          }
        };
        for (S3C[2] = 0; S3C[2] < Q6N[22]['physics']['joints']['length']; S3C[2]++) {
          S3C[5](S3C[2]);
        }
        Q6N[948]['appendChild'](Q6N[68]);
        for (S3C[4] = 0; S3C[4] < Q6N[883]['length']; S3C[4]++) {
          Q6N[377]['removeChild'](Q6N[883][S3C[4]]);
        }
        Q6N[883] = [
        ];
        S3C[9] = function (X4t) {
          var X74 = [
            arguments
          ];
          X74[9] = r8no$;
          X74[4] = S3C[7]['fx'][X74[0][0]];
          X74[7] = Q6N[22]['physics']['fixtures'][X74[4]];
          X74[1] = Q6N[22]['physics']['shapes'][X74[7]['sh']];
          X74[5] = document['createElement']('div');
          X74[8] = document['createElement']('table');
          Q6N[883]['push'](X74[5]);
          Q6N[377]['appendChild'](X74[5]);
          X74[5]['classList']['add']('mapeditor_rightbox_table_shape_container');
          X74[5]['classList']['add']('mapeditor_rightbox_table_shape_container_collapsed');
          X74[8]['classList']['add']('mapeditor_rightbox_table_shape');
          X74[8]['style']['display'] = 'none';
          X74[3] = document['createElement']('input');
          X74[3]['type'] = 'text';
          X74[3]['value'] = X74[7]['n'] == undefined ? 'Unnamed Shape' : X74[7]['n'];
          X74[3]['classList']['add']('mapeditor_field');
          X74[3]['classList']['add']('mapeditor_rightbox_table_shape_headerfield');
          X74[3]['classList']['add']('fieldShadow');
          X74[3]['oninput'] = function () {
            var d5W = [
              arguments
            ];
            d5W[3] = r8no$;
            X74[7]['n'] = this['value']['substr'](0, 30);
          };
          X74[3]['onmouseover'] = function () {
            var d88 = [
              arguments
            ];
            d88[2] = r8no$;
            U3ndn.w30();
            Q6N[57]['highlightFixture'](X74[4]);
            if (Q6N[29] == false) {
              k_I(true);
            }
          };
          X74[3]['onmouseout'] = function () {
            var T$8 = [
              arguments
            ];
            T$8[1] = r8no$;
            Q6N[57]['clearHighlightFixture']();
            if (Q6N[29] == false) {
              k_I(true);
            }
          };
          X74[5]['appendChild'](X74[3]);
          X74[2] = X74[1]['type'] == 'po' && U$l(X74[1]['v'], true) == false;
          X74[6] = document['createElement']('div');
          X74[6]['classList']['add']('mapeditor_rightbox_table_shape_shapetype');
          X74[5]['appendChild'](X74[6]);
          X74[35] = '';
          if (X74[1]['type'] == 'bx') {
            X74[35] = 'R';
          }
          if (X74[1]['type'] == 'ci') {
            X74[35] = 'C';
          }
          if (X74[1]['type'] == 'po') {
            X74[35] = 'P';
          }
          X74[6]['textContent'] = X74[35];
          if (X74[7]['np'] || X74[2]) {
            X74[6]['style']['color'] = '#989898';
          }
          X74[16] = document['createElement']('div');
          X74[16]['classList']['add']('mapeditor_rightbox_table_shape_colorpreview');
          X74[16]['style']['backgroundColor'] = V6D[67]['numToHex'](X74[7]['f']);
          X74[5]['appendChild'](X74[16]);
          X74[16]['onclick'] = function () {
            U3ndn.Y$U();
            var C23 = [
              arguments
            ];
            C23[4] = r8no$;
            Q6N[24]['showColorPicker'](X74[7]['f'], Q6N[22]['physics']['fixtures'], function (x4E) {
              var H1a = [
                arguments
              ];
              H1a[4] = r8no$;
              X74[7]['f'] = H1a[0][0];
              k_I(true);
              X74[16]['style']['backgroundColor'] = V6D[67]['numToHex'](H1a[0][0]);
            }, function (Q8_) {
              U3ndn.w30();
              [
                arguments
              ];
              t$S();
            });
          };
          X74[25] = document['createElement']('div');
          X74[25]['classList']['add']('mapeditor_rightbox_table_shape_pm');
          X74[25]['textContent'] = '+';
          X74[5]['appendChild'](X74[25]);
          X74[25]['onclick'] = function () {
            var R3A = [
              arguments
            ];
            R3A[8] = r8no$;
            if (X74[25]['textContent'] == '-') {
              X74[5]['classList']['add']('mapeditor_rightbox_table_shape_container_collapsed');
              X74[25]['textContent'] = '+';
              X74[8]['style']['display'] = 'none';
            } else {
              X74[5]['classList']['remove']('mapeditor_rightbox_table_shape_container_collapsed');
              X74[25]['textContent'] = '-';
              X74[8]['style']['display'] = 'table';
            }
          };
          if (X74[4] == S3C[0][0]) {
            X74[5]['classList']['remove']('mapeditor_rightbox_table_shape_container_collapsed');
            X74[25]['textContent'] = '-';
            X74[8]['style']['display'] = 'table';
          }
          X74[5]['appendChild'](X74[8]);
          X74[84] = '';
          if (X74[1]['type'] == 'bx') {
            X74[84] = 'Rectangle';
          }
          if (X74[1]['type'] == 'ci') {
            X74[84] = 'Circle';
          }
          if (X74[1]['type'] == 'po') {
            X74[84] = 'Polygon';
          }
          j84(X74[8], 'Type', {
            type: 'status'
          }, X74[84]);
          if (X74[1]['type'] == 'bx') {
            j84(X74[8], 'X', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 0,
              allowNull: false,
              crementAmount: 1,
              advice: 'BXX'
            }, X74[1]['c'][0]);
            j84(X74[8], 'Y', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 1,
              allowNull: false,
              crementAmount: 1,
              advice: 'BXY'
            }, X74[1]['c'][1]);
            j84(X74[8], 'Width', {
              type: 'number',
              max: 99999,
              min: 1,
              target: X74[1],
              key: 'w',
              allowNull: false,
              crementAmount: 1,
              advice: 'BXWIDTH'
            }, X74[1]['w']);
            j84(X74[8], 'Height', {
              type: 'number',
              max: 99999,
              min: 1,
              target: X74[1],
              key: 'h',
              allowNull: false,
              crementAmount: 1,
              advice: 'BXHEIGHT'
            }, X74[1]['h']);
            j84(X74[8], 'Angle', {
              type: 'number',
              max: 999,
              min: - 999,
              target: X74[1],
              key: 'a',
              allowNull: false,
              crementAmount: 1,
              degRad: true,
              advice: 'BXANGLE'
            }, i84(X74[1]['a'] * Q6N[7]));
          } else if (X74[1]['type'] == 'ci') {
            j84(X74[8], 'X', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 0,
              allowNull: false,
              crementAmount: 1,
              advice: 'CIRCLEX'
            }, X74[1]['c'][0]);
            j84(X74[8], 'Y', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 1,
              allowNull: false,
              crementAmount: 1,
              advice: 'CIRCLEY'
            }, X74[1]['c'][1]);
            j84(X74[8], 'Radius', {
              type: 'number',
              max: 2000,
              min: 1,
              target: X74[1],
              key: 'r',
              allowNull: false,
              crementAmount: 1,
              advice: 'CIRCLERADIUS'
            }, X74[1]['r']);
          } else if (X74[1]['type'] == 'po') {
            X74[99] = 'Yes';
            if (X74[2]) {
              X74[99] = 'No';
            }
            j84(X74[8], 'Convex', {
              type: 'status',
              advice: 'POLYCONVEX',
              conditionalFormatting: {
                No: '#CC0000'
              }
            }, X74[99]);
            j84(X74[8], 'X', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 0,
              allowNull: false,
              crementAmount: 1,
              advice: 'POLYX'
            }, X74[1]['c'][0]);
            j84(X74[8], 'Y', {
              type: 'number',
              max: 99999,
              min: - 99999,
              target: X74[1]['c'],
              key: 1,
              allowNull: false,
              crementAmount: 1,
              advice: 'POLYY'
            }, X74[1]['c'][1]);
            j84(X74[8], 'Angle', {
              type: 'number',
              max: 999,
              min: - 999,
              target: X74[1],
              key: 'a',
              allowNull: false,
              crementAmount: 1,
              degRad: true,
              advice: 'POLYANGLE'
            }, i84(X74[1]['a'] * Q6N[7]));
            j84(X74[8], 'Scale', {
              type: 'number',
              max: 999,
              min: - 999,
              target: X74[1],
              key: 's',
              allowNull: false,
              crementAmount: 0.1,
              degRad: false,
              advice: 'POLYSCALE'
            }, i84(X74[1]['s']));
          }
          U3ndn.S2t(81);
          X74[26] = U3ndn.I8r(13, 51, 6, 19);
          U3ndn.z_y(1);
          X74[85] = U3ndn.I8r(1749, 17);
          X74[98] = X74[1][r8no$[X74[26]]] == U3ndn.j31(X74[85]);
          j84(X74[8], 'Shrink', {
            type: 'checkbox',
            disabled: X74[98],
            target: X74[1],
            key: 'sk',
            advice: 'SHAPESHRINK'
          }, X74[1]['sk']);
          j84(X74[8], 'No physics', {
            type: 'checkbox',
            disabled: X74[2],
            target: X74[7],
            key: 'np',
            advice: 'SHAPENOPHYSICS',
            changeCallback: function (V_e) {
              var s91 = [
                arguments
              ];
              s91[3] = r8no$;
              if (s91[0][0]) {
                X74[6]['style']['color'] = '#989898';
              } else {
                X74[6]['style']['removeProperty']('color');
              }
            }
          }, X74[7]['np']);
          j84(X74[8], 'No grapple', {
            type: 'checkbox',
            target: X74[7],
            key: 'ng',
            advice: 'SHAPENOGRAPPLE'
          }, X74[7]['ng']);
          j84(X74[8], 'Inner grapple', {
            type: 'checkbox',
            target: X74[7],
            key: 'ig',
            advice: 'SHAPEINNERGRAPPLE'
          }, X74[7]['ig']);
          j84(X74[8], 'Death', {
            type: 'checkbox',
            target: X74[7],
            key: 'd',
            advice: 'SHAPEDEATH'
          }, X74[7]['d']);
          j84(X74[8], 'Bounciness', {
            type: 'number',
            max: 99999,
            min: - 99999,
            target: X74[7],
            key: 're',
            allowNull: true,
            crementAmount: 0.1,
            advice: 'SHAPEBOUNCINESS'
          }, X74[7]['re']);
          j84(X74[8], 'Density', {
            type: 'number',
            max: 99999,
            min: 0,
            target: X74[7],
            key: 'de',
            allowNull: true,
            crementAmount: 0.1,
            advice: 'SHAPEDENSITY'
          }, X74[7]['de']);
          j84(X74[8], 'Friction', {
            type: 'number',
            max: 99999,
            min: 0,
            target: X74[7],
            key: 'fr',
            allowNull: true,
            crementAmount: 0.1,
            advice: 'SHAPEFRIC'
          }, X74[7]['fr']);
          j84(X74[8], 'Fric players', {
            type: 'select',
            target: X74[7],
            key: 'fp',
            variableType: 'boolean',
            options: [
              {
                value: null,
                text: ''
              },
              {
                value: true,
                text: 'Yes'
              },
              {
                value: false,
                text: 'No'
              }
            ],
            advice: 'SHAPEFRICPLAYERS'
          }, X74[7]['fp']);
          s9W(X74[5], 'mapeditor_rightbox_moveshapebuttonleft', 'UP', function () {
            var X36 = [
              arguments
            ];
            X36[3] = r8no$;
            if (X74[0][0] == S3C[7]['fx']['length'] - 1) {
              return;
            }
            U3ndn.S2t(6);
            X36[6] = S3C[7]['fx'][U3ndn.E_K(X74[0][0], 1)];
            U3ndn.z_y(6);
            S3C[7]['fx'][U3ndn.I8r(X74[0][0], 1)] = X74[4];
            S3C[7]['fx'][X74[0][0]] = X36[6];
            k_I(true);
            H3s(X74[4]);
          });
          s9W(X74[5], 'mapeditor_rightbox_moveshapebuttonright', 'DOWN', function () {
            var M3a = [
              arguments
            ];
            M3a[6] = r8no$;
            if (X74[0][0] == 0) {
              return;
            }
            U3ndn.z_y(1);
            M3a[7] = S3C[7]['fx'][U3ndn.I8r(X74[0][0], 1)];
            U3ndn.z_y(1);
            U3ndn.w30();
            S3C[7]['fx'][U3ndn.E_K(X74[0][0], 1)] = X74[4];
            S3C[7]['fx'][X74[0][0]] = M3a[7];
            k_I(true);
            H3s(X74[4]);
          });
          s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DELETE SHAPE', function () {
            var a5Y = [
              arguments
            ];
            a5Y[5] = r8no$;
            if (this['textContent'] == 'SURE?') {
              O69(X74[4]);
              k_I(true);
              H3s();
              c0S();
            } else {
              this['textContent'] = 'SURE?';
            }
          });
          s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DUPLICATE SHAPE', function () {
            var r49 = [
              arguments
            ];
            r49[5] = r8no$;
            this['onclick'] = null;
            s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DUP IDENTICAL', function () {
              o2C(X74[4], Q6N[310], 'none');
              c0S();
            });
            s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DUP INVERT X', function () {
              o2C(X74[4], Q6N[310], 'x');
              U3ndn.Y$U();
              c0S();
            });
            U3ndn.Y$U();
            s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DUP INVERT Y', function () {
              o2C(X74[4], Q6N[310], 'y');
              c0S();
            });
            s9W(X74[5], 'mapeditor_rightbox_shapebutton', 'DUP INVERT X+Y', function () {
              o2C(X74[4], Q6N[310], 'xy');
              U3ndn.w30();
              c0S();
            });
          });
        };
        for (S3C[67] = S3C[7]['fx']['length'] - 1; S3C[67] >= 0; S3C[67]--) {
          S3C[9](S3C[67]);
        }
      }
      function h7z() {
        var b1g = [
          arguments
        ];
        b1g[1] = r8no$;
        Q6N[782]['style']['display'] = 'none';
        Q6N[556]['style']['display'] = 'none';
        Q6N[644]['style']['display'] = 'none';
        b1g[6] = Q6N[22]['capZones'][Q6N[747]];
        if (b1g[6]) {
          Q6N[381]['style']['display'] = 'block';
          Q6N[352]['value'] = b1g[6]['n'];
        } else {
          Q6N[381]['style']['display'] = 'none';
          Q6N[352]['value'] = '';
          return;
        }
        b1g[3] = document['getElementById']('mapeditor_rightbox_table_capzone');
        while (b1g[3]['rows']['length'] > 0) {
          b1g[3]['deleteRow'](0);
        }
        b1g[4] = [
        ];
        b1g[4]['push']({
          value: 1,
          text: 'Normal Cap Zone'
        });
        b1g[4]['push']({
          value: 2,
          text: 'Instant Red Win'
        });
        b1g[4]['push']({
          value: 3,
          text: 'Instant Blue Win'
        });
        b1g[4]['push']({
          value: 4,
          text: 'Instant Green Win'
        });
        b1g[4]['push']({
          value: 5,
          text: 'Instant Yellow Win'
        });
        j84(b1g[3], 'Type', {
          type: 'select',
          variableType: 'int',
          target: b1g[6],
          key: 'ty',
          options: b1g[4],
          advice: 'CAPTYPE'
        }, b1g[6]['ty']);
        j84(b1g[3], 'Capture Time', {
          type: 'number',
          max: 999,
          min: 0.01,
          target: b1g[6],
          key: 'l',
          allowNull: false,
          crementAmount: 1,
          advice: 'CAPTIME'
        }, b1g[6]['l']);
        b1g[5] = [
        ];
        b1g[5]['push']({
          value: - 1,
          text: 'Not set'
        });
        for (b1g[22] = 0; b1g[22] < Q6N[22]['physics']['bro']['length']; b1g[22]++) {
          b1g[2] = Q6N[22]['physics']['bro'][b1g[22]];
          b1g[7] = Q6N[22]['physics']['bodies'][b1g[2]]['n'];
          for (b1g[20] = 0; b1g[20] < Q6N[22]['physics']['bodies'][b1g[2]]['fx']['length']; b1g[20]++) {
            b1g[9] = Q6N[22]['physics']['bodies'][b1g[2]]['fx'][b1g[20]];
            b1g[8] = Q6N[22]['physics']['fixtures'][b1g[9]]['n'];
            if (b1g[8] == undefined) {
              b1g[8] = 'Unnamed Shape';
            }
            b1g[5]['push']({
              value: b1g[9],
              text: b1g[7] + ': ' + b1g[8]
            });
          }
        }
        j84(b1g[3], 'Shape to use', {
          type: 'select',
          variableType: 'int',
          target: b1g[6],
          key: 'i',
          options: b1g[5],
          advice: 'CAPSHAPE'
        }, b1g[6]['i']);
      }
      function u2s() {
        p1D();
        Q6N[741] = setTimeout(u2s, 30);
      }
      function l0D() {
        var Y01 = [
          arguments
        ];
        Y01[5] = r8no$;
        Q6N[989] = !Q6N[989];
        if (Q6N[989]) {
          Q6N[60]['style']['display'] = 'none';
          Q6N[450]['textContent'] = '+';
        } else {
          Q6N[60]['style']['display'] = '';
          Q6N[450]['textContent'] = '-';
        }
      }
      function a7v(R4s) {
        U3ndn.w30();
        var v6i = [
          arguments
        ];
        Q6N[144] = v6i[0][0];
        Q6N[310] = - 1;
        Q6N[747] = - 1;
        M6K();
        C_o();
      }
      function p22(N_v) {
        U3ndn.w30();
        var P37 = [
          arguments
        ];
        P37[8] = - 1585866288;
        P37[5] = 1343953330;
        P37[3] = 2;
        for (P37[1] = 1; U3ndn.P5V(P37[1].toString(), P37[1].toString().length, 1994) !== P37[8]; P37[1]++) {
          P37[9] = r8no$;
          P37[3] += 2;
        }
        if (U3ndn.P5V(P37[3].toString(), P37[3].toString().length, 8043) !== P37[5]) {
          P37[9] = r8no$;
        }
        if (!Q6N[22]['physics']['bodies'][Q6N[310]]) {
          return;
        }
        if (P37[0][0]['confirmState']) {
          P37[6] = Q6N[310];
          P37[7] = Q6N[22]['physics']['bro']['indexOf'](Q6N[310]);
          v95(P37[6]);
          C_o();
          c0S();
          if (Q6N[22]['physics']['bro'][P37[7]] == undefined) {
            if (Q6N[22]['physics']['bro'][P37[7] - 1] == undefined) {
              Q6N[310] = - 1;
            } else {
              U3ndn.S2t(1);
              Q6N[310] = Q6N[22]['physics']['bro'][U3ndn.I8r(P37[7], 1)];
            }
          } else {
            Q6N[310] = Q6N[22]['physics']['bro'][P37[7]];
          }
          t$S();
          t5w();
          H3s();
          Q6N[57]['clearHighlightPlatform']();
          k_I(true);
        } else {
          P37[0][0]['confirmState'] = true;
          P37[0][0]['classList']['add']('mapeditor_leftbox_deletebuttonconfirm');
        }
      }
      function O8$() {
        U3ndn.w30();
        setTimeout(function () {
          var m4n = [
            arguments
          ];
          m4n[1] = r8no$;
          Q6N[352]['focus']();
          Q6N[352]['select']();
        }, 50);
      }
      function b8l() {
        var h6N = [
          arguments
        ];
        h6N[3] = r8no$;
        if (Q6N[180]) {
          Q6N[180]['classList']['remove']('HOVERSELECTED');
          Q6N[180]['classList']['add']('HOVERUNSELECTED');
        }
      }
      function d0O() {
        var f6F = [
          arguments
        ];
        f6F[2] = r8no$;
        U3ndn.w30();
        Q6N[87]['style']['display'] = '';
        Q6N[28]['style']['display'] = '';
      }
      function n47(z8i, J9n) {
        var T_V = [
          arguments
        ];
        U3ndn.w30();
        T_V[7] = r8no$;
        T_V[9] = null;
        if (T_V[0][1] == 'rotating') {
          T_V[9] = E['getNewRevoluteJoint'](T_V[0][0], - 1);
          T_V[9]['d']['cc'] = false;
        }
        if (T_V[0][1] == 'lpj') {
          T_V[9] = E['getNewLPJJoint'](T_V[0][0], - 1);
          T_V[9]['plen'] = 200;
        }
        if (T_V[0][1] == 'lsj') {
          T_V[9] = E['getNewLSJJoint'](T_V[0][0], - 1);
          T_V[9]['slen'] = 50;
          U3ndn.S2t(4);
          T_V[9]['sf'] = U3ndn.E_K(1000, 500);
        }
        if (T_V[0][1] == 'rod') {
          T_V[9] = E['getNewDistanceJoint'](T_V[0][0], - 1);
          T_V[9]['d']['fh'] = 0.1;
          T_V[9]['d']['cc'] = false;
        }
        Q6N[22]['physics']['joints']['push'](T_V[9]);
        H3s();
        k_I(true);
      }
      function m3$() {
        var c75 = [
          arguments
        ];
        U3ndn.Y$U();
        c75[4] = r8no$;
        U3ndn.S2t(14);
        c75[9] = U3ndn.I8r(751, 751, 747);
        U3ndn.z_y(78);
        c75[8] = U3ndn.E_K(3, 23, 14, 3526);
        Q6N[22]['physics']['bodies'][Q6N[310]]['fricp'] = Q6N[596][r8no$[c75[9]]] == U3ndn.j31(c75[8]);
        t$S();
      }
      function u0p() {
        Q6N[310] = - 1;
        Q6N[144] = - 1;
        Q6N[747] = - 1;
        t5w();
        H3s();
        k_I(true);
        c0S();
        s7e();
        o$b();
      }
      function Y57(W$d) {
        var c$c = [
          arguments
        ];
        c$c[3] = r8no$;
        c$c[0][0]['preventDefault']();
        if (c$c[0][0]['deltaY'] < 0) {
          F9U();
        }
        if (c$c[0][0]['deltaY'] > 0) {
          Z1p();
        }
      }
      function f4E() {
        var Z8I = [
          arguments
        ];
        Z8I[3] = r8no$;
        Q6N[35]['style']['display'] = 'none';
      }
      function R1q(u_N) {
        var V2_ = [
          arguments
        ];
        V2_[5] = r8no$;
        if (Q6N[3]) {
          Q6N[22] = JSON['parse'](JSON['stringify'](V2_[0][0]));
          if (Q6N[22]['m']['rxid'] == 0 && V6D[67]['userName'] != Q6N[22]['m']['a'] && Q6N[22]['m']['dbid'] != - 1) {
            Q6N[22]['m']['rxid'] = Q6N[22]['m']['dbid'];
            Q6N[22]['m']['rxn'] = Q6N[22]['m']['n'];
            Q6N[22]['m']['rxa'] = Q6N[22]['m']['a'];
            Q6N[22]['m']['n'] += ' (edit)';
            Q6N[22]['m']['a'] = V6D[67]['userName'];
            Q6N[22]['m']['rxdb'] = Q6N[22]['m']['dbv'];
          }
          j2V();
          v8Z();
          u0p();
          G3q('LOADEDMAP');
        }
      }
      function z_k() {
        var T6m = [
          arguments
        ];
        T6m[5] = r8no$;
        if (!Q6N[29]) {
          return;
        }
        T6m[2] = Date['now']();
        U3ndn.S2t(1);
        T6m[3] = U3ndn.I8r(T6m[2], Q6N[20]);
        T6m[3] = Math['min'](T6m[3], 50);
        Q6N[75] += T6m[3];
        Q6N[20] = T6m[2];
        T6m[1] = 30;
        U3ndn.Y$U();
        while (Q6N[75] > 1000 / T6m[1]) {
          T6m[4] = Date['now']();
          e2p(30);
          T6m[7] = Date['now']() - T6m[4];
          U3ndn.S2t(0);
          Q6N[75] -= U3ndn.I8r(1000, T6m[1]);
        }
        U3ndn.z_y(121);
        T6m[6] = U3ndn.I8r(T6m[1], Q6N[75], 1000);
        if (Q6N[23] > 0) {
          Q6N[57]['render'](Q6N[53][Q6N[23] - 1], Q6N[53][Q6N[23]], T6m[6], Q6N[27], X2P(Q6N[23]));
        }
      }
      function k7K() {
        if (Q6N[49]) {
          D$d();
        }
        Q6N[49] = setInterval(p6a, 100);
      }
      function v95(u0B) {
        var v8D = [
          arguments
        ];
        v8D[4] = r8no$;
        v8D[3] = Q6N[22]['physics']['bodies'][v8D[0][0]];
        v8D[7] = v8D[3]['fx'];
        for (v8D[5] = 0; v8D[5] < v8D[7]['length']; v8D[5]++) {
          O69(v8D[7][v8D[5]]);
          v8D[5]--;
        }
        Q6N[22]['physics']['bodies']['splice'](v8D[0][0], 1);
        v8D[8] = Q6N[22]['physics']['bro']['indexOf'](v8D[0][0]);
        Q6N[22]['physics']['bro']['splice'](v8D[8], 1);
        for (v8D[2] = 0; v8D[2] < Q6N[22]['physics']['bro']['length']; v8D[2]++) {
          if (Q6N[22]['physics']['bro'][v8D[2]] > v8D[0][0]) {
            Q6N[22]['physics']['bro'][v8D[2]]--;
          }
        }
        for (v8D[1] = 0; v8D[1] < Q6N[22]['physics']['joints']['length']; v8D[1]++) {
          if (Q6N[22]['physics']['joints'][v8D[1]]) {
            v8D[9] = Q6N[22]['physics']['joints'][v8D[1]];
            if (v8D[9]['ba'] == v8D[0][0] || v8D[9]['bb'] == v8D[0][0]) {
              Q6N[22]['physics']['joints']['splice'](v8D[1], 1);
              v8D[1]--;
            } else {
              if (v8D[9]['ba'] > v8D[0][0]) {
                v8D[9]['ba']--;
              }
              if (v8D[9]['bb'] > v8D[0][0]) {
                v8D[9]['bb']--;
              }
            }
          }
        }
      }
      function C_o() {
        var m$O = [
          arguments
        ];
        m$O[1] = r8no$;
        Q6N[43]['confirmState'] = false;
        U3ndn.Y$U();
        Q6N[43]['classList']['remove']('mapeditor_leftbox_deletebuttonconfirm');
      }
      function c0S() {
        var t11 = [
          arguments
        ];
        t11[5] = r8no$;
        t11[2] = 0;
        for (t11[1] = 0; t11[1] < Q6N[22]['physics']['fixtures']['length']; t11[1]++) {
          if (Q6N[22]['physics']['fixtures'][t11[1]]['np'] == false) {
            t11[2]++;
          }
        }
        t11[7] = '';
        if (Q6N[22]['spawns']['length'] == 0) {
          t11[7] = ' (Warning: No spawn points)';
        }
        if (t11[2] <= 10) {
          U3ndn.S2t(1);
          t11[8] = U3ndn.I8r(31136, 27244);
          Q6N[71]['textContent'] = t11[2] + U3ndn.j31(t11[8]) + t11[7];
        } else if (t11[2] <= 30) {
          U3ndn.S2t(61);
          t11[6] = U3ndn.E_K(1, 20, 4, 3323, 3);
          Q6N[71]['textContent'] = t11[2] + U3ndn.j31(t11[6]) + t11[7];
        } else if (t11[2] <= 50) {
          U3ndn.S2t(123);
          t11[3] = U3ndn.E_K(2, 12, 10, 12416, 60516);
          Q6N[71]['textContent'] = t11[2] + U3ndn.j31(t11[3]) + t11[7];
        } else if (t11[2] <= 80) {
          U3ndn.z_y(14);
          t11[4] = U3ndn.E_K(6, 2796, 2315);
          Q6N[71]['textContent'] = t11[2] + U3ndn.j31(t11[4]) + t11[7];
        } else {
          U3ndn.z_y(124);
          t11[9] = U3ndn.E_K(2, 24816, 10859, 4, 8);
          Q6N[71]['textContent'] = t11[2] + U3ndn.j31(t11[9]) + t11[7];
        }
      }
      function r13() {
        var e$z = [
          arguments
        ];
        e$z[9] = r8no$;
        Q6N[782]['style']['display'] = 'none';
        Q6N[556]['style']['display'] = 'none';
        Q6N[381]['style']['display'] = 'none';
        Q6N[644]['style']['display'] = 'block';
        e$z[1] = document['getElementById']('mapeditor_rightbox_table_mapparams');
        while (e$z[1]['rows']['length'] > 0) {
          e$z[1]['deleteRow'](0);
        }
        Q6N[352]['value'] = 'Map Properties';
        j84(e$z[1], 'Grid Size', {
          type: 'number',
          max: 100,
          min: 2,
          target: Q6N[22]['s'],
          key: 'gd',
          allowNull: false,
          crementAmount: 1,
          advice: 'GRIDSIZE',
          changeCallback: function () {
            var f25 = [
              arguments
            ];
            U3ndn.w30();
            f25[3] = r8no$;
            if (Q6N[281]) {
              Q6N[57]['showSnapGrid'](Q6N[22]['s']['gd']);
            }
          }
        }, Q6N[22]['s']['gd']);
        e$z[3] = [
        ];
        e$z[3]['push']({
          value: 30,
          text: '1 - Smallest'
        });
        e$z[3]['push']({
          value: 25,
          text: '2'
        });
        e$z[3]['push']({
          value: 20,
          text: '3'
        });
        e$z[3]['push']({
          value: 17,
          text: '4'
        });
        e$z[3]['push']({
          value: 15,
          text: '5'
        });
        e$z[3]['push']({
          value: 13,
          text: '6'
        });
        e$z[3]['push']({
          value: 12,
          text: '7 - Regular'
        });
        e$z[3]['push']({
          value: 10,
          text: '8'
        });
        e$z[3]['push']({
          value: 9,
          text: '9'
        });
        e$z[3]['push']({
          value: 8,
          text: '10'
        });
        e$z[3]['push']({
          value: 7,
          text: '11'
        });
        e$z[3]['push']({
          value: 6,
          text: '12'
        });
        e$z[3]['push']({
          value: 5,
          text: '13 - Biggest'
        });
        j84(e$z[1], 'Map size', {
          type: 'select',
          variableType: 'int',
          target: Q6N[22]['physics'],
          key: 'ppm',
          options: e$z[3],
          advice: 'MSMAPSIZE'
        }, Q6N[22]['physics']['ppm']);
        j84(e$z[1], 'Players don\'t collide', {
          type: 'checkbox',
          target: Q6N[22]['s'],
          key: 'nc',
          advice: 'MSPLAYERSDONTCOLLIDE'
        }, Q6N[22]['s']['nc']);
        j84(e$z[1], 'Respawn on death', {
          type: 'checkbox',
          target: Q6N[22]['s'],
          key: 're',
          advice: 'MSRESPAWN'
        }, Q6N[22]['s']['re']);
        j84(e$z[1], 'Players can fly', {
          type: 'checkbox',
          target: Q6N[22]['s'],
          key: 'fl',
          advice: 'MSFLY'
        }, Q6N[22]['s']['fl']);
        e$z[5] = [
        ];
        e$z[5]['push']({
          value: 1,
          text: 'No'
        });
        e$z[5]['push']({
          value: 2,
          text: 'Yes'
        });
        j84(e$z[1], 'Complex Physics', {
          type: 'select',
          variableType: 'int',
          options: e$z[5],
          target: Q6N[22]['s'],
          key: 'pq',
          advice: 'MSCOMPLEXPHYSICS'
        }, Q6N[22]['s']['pq']);
        e$z[2] = [
        ];
        e$z[2]['push']({
          value: '',
          text: 'Any'
        });
        for (e$z[4] = 0; e$z[4] < V6D[61]['lobbyModes']['length']; e$z[4]++) {
          e$z[7] = V6D[61]['lobbyModes'][e$z[4]];
          if (V6D[61]['modes'][e$z[7]]['editorCanTarget'] == false) {
            continue;
          }
          e$z[6] = V6D[61]['modes'][e$z[7]]['lobbyName'];
          e$z[2]['push']({
            value: e$z[7],
            text: e$z[6]
          });
        }
        j84(e$z[1], 'Original Map', {
          type: 'status'
        }, Q6N[22]['m']['rxn']);
        j84(e$z[1], 'Original Author', {
          type: 'status'
        }, Q6N[22]['m']['rxa']);
        if (Q6N[22]['m']['cr']['length'] > 1) {
          j84(e$z[1], 'Contributors', {
            type: 'status'
          }, Q6N[22]['m']['cr'][1]);
          for (e$z[8] = 2; e$z[8] < Q6N[22]['m']['cr']['length']; e$z[8]++) {
            j84(e$z[1], '', {
              type: 'status'
            }, Q6N[22]['m']['cr'][e$z[8]]);
          }
        }
      }
      function g3O() {
        var k1I = [
          arguments
        ];
        U3ndn.Y$U();
        k1I[1] = r8no$;
        Q6N[922] = !Q6N[922];
        if (Q6N[922]) {
          Q6N[98]['style']['display'] = 'none';
          Q6N[939]['textContent'] = '+';
        } else {
          Q6N[98]['style']['display'] = '';
          Q6N[939]['textContent'] = '-';
        }
      }
      function O02() {
        var U9X = [
          arguments
        ];
        U9X[1] = r8no$;
        U3ndn.w30();
        if (Q6N[961]['value'] == 'true') {
          Q6N[22]['physics']['bodies'][Q6N[310]]['cf']['w'] = true;
        } else {
          Q6N[22]['physics']['bodies'][Q6N[310]]['cf']['w'] = false;
        }
      }
      function o2b(v7h, I5q, v91) {
        var o5a = [
          arguments
        ];
        o5a[8] = r8no$;
        o5a[4] = {
          x: 0,
          y: 0
        };
        o5a[4]['x'] = o5a[0][0] * Math['cos'](o5a[0][2]) - o5a[0][1] * Math['sin'](o5a[0][2]);
        U3ndn.w30();
        o5a[4]['y'] = o5a[0][0] * Math['sin'](o5a[0][2]) + o5a[0][1] * Math['cos'](o5a[0][2]);
        return o5a[4];
      }
      function j2V() {
        U3ndn.w30();
        var v$8 = [
          arguments
        ];
        v$8[6] = r8no$;
        Q6N[45] = [
          JSON['stringify'](Q6N[22])
        ];
        Q6N[84] = 0;
      }
      function M6d(L8x) {
        var E3g = [
          arguments
        ];
        E3g[7] = r8no$;
        E3g[6] = null;
        E3g[5] = null;
        Q6N[401]['onclick'] = function () {
          y6u(E3g[6], E3g[5]);
        };
        Q6N[401]['style']['display'] = 'block';
        G3q('NEWCIRCLEPLAT1');
        U3ndn.w30();
        V_S('inputready');
        Q6N[57]['getCanvas']() ['onmousedown'] = function (W0H) {
          var b9i = [
            arguments
          ];
          b9i[7] = r8no$;
          b9i[8] = K0M(b9i[0][0]);
          b9i[3] = null;
          if (E3g[0][0] == null) {
            e96('ci', b9i[8]['x'], b9i[8]['y'], Q6N[55], Q6N[48]);
            U3ndn.S2t(13);
            b9i[6] = U3ndn.I8r(5, 43, 5);
            U3ndn.z_y(125);
            b9i[5] = U3ndn.I8r(13, 11, 700, 55, 1);
            U3ndn.z_y(1);
            b9i[4] = U3ndn.I8r(423, 376);
            U3ndn.S2t(105);
            b9i[9] = U3ndn.I8r(12, 8, 5, 1);
            E3g[6] = Q6N[22][r8no$[b9i[6]]][r8no$[b9i[5]]][r8no$[b9i[4]]] - b9i[9];
            b9i[3] = Q6N[22]['physics']['bodies'][E3g[6]];
            b9i[3]['type'] = Q6N[55];
            E3g[5] = b9i[3]['fx'][0];
          } else {
            b9i[3] = Q6N[22]['physics']['bodies'][E3g[0][0]];
            b9i[2] = o2b(b9i[8]['x'] - b9i[3]['p'][0], b9i[8]['y'] - b9i[3]['p'][1], - b9i[3]['a']);
            E3g[5] = z4M('ci', b9i[2]['x'], b9i[2]['y']);
            b9i[3]['fx']['push'](E3g[5]);
          }
          b9i[1] = Q6N[22]['physics']['shapes'][E3g[5]];
          b9i[1]['r'] = 5;
          t5w();
          k_I();
          G3q('NEWCIRCLEPLAT2');
          Q6N[57]['getCanvas']() ['onmousemove'] = function (m74) {
            var W6Y = [
              arguments
            ];
            W6Y[4] = r8no$;
            W6Y[7] = K0M(W6Y[0][0], true);
            U3ndn.S2t(126);
            W6Y[6] = U3ndn.I8r(12, 122, 29, 7, 15);
            U3ndn.z_y(6);
            W6Y[9] = U3ndn.I8r(2, 37);
            W6Y[3] = W6Y[7][r8no$[W6Y[6]]] - b9i[8][r8no$[W6Y[9]]];
            U3ndn.z_y(127);
            W6Y[8] = U3ndn.E_K(58, 156560, 10, 18, 15);
            U3ndn.S2t(128);
            W6Y[1] = U3ndn.E_K(34, 19, 4, 3, 5);
            W6Y[2] = W6Y[7][r8no$[W6Y[8]]] - b9i[8][r8no$[W6Y[1]]];
            U3ndn.S2t(33);
            W6Y[5] = Math['sqrt'](U3ndn.I8r(W6Y[3], W6Y[2], W6Y[3], W6Y[2]));
            if (Q6N[281]) {
              U3ndn.z_y(29);
              W6Y[24] = U3ndn.I8r(36, 9, 3);
              U3ndn.S2t(6);
              W6Y[97] = U3ndn.E_K(1212, 20);
              U3ndn.z_y(6);
              W6Y[79] = U3ndn.E_K(0, 2);
              U3ndn.z_y(6);
              W6Y[74] = U3ndn.E_K(59, 4);
              U3ndn.S2t(14);
              W6Y[62] = U3ndn.I8r(19, 95, 1227);
              U3ndn.z_y(5);
              W6Y[52] = U3ndn.E_K(221, 5, 5, 2, 40);
              W6Y[5] = Math['round'](W6Y[5] / (Q6N[22][r8no$[W6Y[24]]][r8no$[W6Y[97]]] / W6Y[79])) * (Q6N[22][r8no$[W6Y[74]]][r8no$[W6Y[62]]] / W6Y[52]);
              W6Y[5] = Math['max'](W6Y[5], 5);
            }
            W6Y[5] = Math['min'](W6Y[5], 2000);
            Q6N[22]['physics']['shapes'][E3g[5]]['r'] = Math['round'](W6Y[5]);
            k_I(true);
          };
          Q6N[57]['getCanvas']() ['onmousedown'] = function () {
            var H6h = [
              arguments
            ];
            H6h[3] = r8no$;
            Q6N[57]['getCanvas']() ['onmousedown'] = null;
            Q6N[57]['getCanvas']() ['onmousemove'] = null;
            Q6N[401]['onclick'] = null;
            Q6N[401]['style']['display'] = 'none';
            H3s(E3g[5]);
            O8$();
            O7O();
            c0S();
            U3ndn.w30();
            t$S();
            G3q('NEWCIRCLEPLAT3');
          };
        };
      }
      function K73() {
        var Z9I = [
          arguments
        ];
        Z9I[3] = r8no$;
        U3ndn.w30();
        Q6N[87]['style']['display'] = '';
        Q6N[28]['style']['display'] = 'block';
        Q6N[78]['style']['display'] = 'block';
      }
      function f7w() {
        U3ndn.w30();
        var Q_E = [
          arguments
        ];
        Q_E[6] = r8no$;
        Q6N[603] = !Q6N[603];
        if (Q6N[603]) {
          Q6N[82]['style']['display'] = 'none';
          Q6N[867]['textContent'] = '+';
        } else {
          Q6N[82]['style']['display'] = '';
          Q6N[867]['textContent'] = '-';
        }
      }
      function i84(m9Q) {
        var S82 = [
          arguments
        ];
        S82[1] = r8no$;
        S82[0][0] *= 10000;
        S82[0][0] = Math['round'](S82[0][0]);
        S82[0][0] /= 10000;
        return S82[0][0];
      }
      function K0M(p71, T65) {
        var C4x = [
          arguments
        ];
        C4x[5] = r8no$;
        C4x[3] = C4x[0][0]['target']['getBoundingClientRect']();
        U3ndn.z_y(9);
        C4x[1] = U3ndn.I8r(1026, 7195, 8);
        U3ndn.S2t(42);
        C4x[7] = U3ndn.I8r(16183, 4, 4116, 13);
        C4x[2] = C4x[0][0][r8no$[C4x[1]]] - C4x[3][r8no$[C4x[7]]];
        U3ndn.S2t(9);
        C4x[44] = U3ndn.E_K(92, 826, 20);
        U3ndn.S2t(6);
        C4x[53] = U3ndn.I8r(545, 2);
        U3ndn.w30();
        C4x[8] = C4x[0][0][r8no$[C4x[44]]] - C4x[3][r8no$[C4x[53]]];
        U3ndn.z_y(7);
        C4x[82] = U3ndn.E_K(485, 2843, 12, 7);
        C4x[6] = C4x[2] / C4x[3][r8no$[C4x[82]]];
        U3ndn.S2t(6);
        C4x[20] = U3ndn.E_K(23, 446);
        C4x[4] = C4x[8] / C4x[3][r8no$[C4x[20]]];
        C4x[9] = Q6N[57]['screenRatioToPhysicsCoordinate'](C4x[6], C4x[4]);
        C4x[9]['x'] = Math['round'](C4x[9]['x']);
        C4x[9]['y'] = Math['round'](C4x[9]['y']);
        if (!C4x[0][1] && Q6N[281]) {
          U3ndn.z_y(17);
          C4x[42] = U3ndn.I8r(12, 10, 17);
          U3ndn.S2t(14);
          C4x[66] = U3ndn.E_K(77, 693, 54);
          U3ndn.z_y(40);
          C4x[21] = U3ndn.E_K(1, 12342, 11, 1234);
          U3ndn.z_y(14);
          C4x[25] = U3ndn.I8r(8, 16, 61);
          U3ndn.z_y(73);
          C4x[84] = U3ndn.I8r(1, 12320, 11088);
          C4x[9]['x'] = Math['round'](C4x[9][r8no$[C4x[42]]] / Q6N[22][r8no$[C4x[66]]][r8no$[C4x[21]]]) * Q6N[22][r8no$[C4x[25]]][r8no$[C4x[84]]];
          U3ndn.S2t(15);
          C4x[77] = U3ndn.E_K(9, 43, 12);
          U3ndn.z_y(1);
          C4x[65] = U3ndn.E_K(78, 15);
          U3ndn.z_y(119);
          C4x[58] = U3ndn.E_K(131, 19, 1222, 112, 10);
          U3ndn.S2t(45);
          C4x[38] = U3ndn.I8r(19, 12, 12021, 53);
          U3ndn.z_y(1);
          C4x[61] = U3ndn.E_K(1237, 5);
          C4x[9]['y'] = Math['round'](C4x[9][r8no$[C4x[77]]] / Q6N[22][r8no$[C4x[65]]][r8no$[C4x[58]]]) * Q6N[22][r8no$[C4x[38]]][r8no$[C4x[61]]];
        }
        return C4x[9];
      }
      function p4N(S6J) {
        var L24 = [
          arguments
        ];
        Q6N[747] = L24[0][0];
        Q6N[310] = - 1;
        Q6N[144] = - 1;
        h7z();
        C_o();
      }
      function f9e(N9J) {
        var y1H = [
          arguments
        ];
        y1H[3] = r8no$;
        y1H[4] = (y1H[0][0] & 16777215) ['toString'](16) ['toUpperCase']();
        U3ndn.z_y(129);
        y1H[8] = U3ndn.E_K(1, 17, 23, 5, 5);
        U3ndn.S2t(13);
        y1H[5] = U3ndn.E_K(45, 18, 16);
        return '00000'['substring'](0, y1H[8] - y1H[4][r8no$[y1H[5]]]) + y1H[4];
      }
      function k_I(k9a) {
        var P9j = [
          arguments
        ];
        P9j[3] = r8no$;
        if (Q6N[29]) {
          c6K();
        }
        P9j[7] = Q['createNewState']([], Q6N[22], Math['floor'](Math['random']() * 999), true, null, Q6N[27]);
        if (P9j[0][0]) {
          P9j[7]['rc'] = ++Q6N[59];
        }
        H$R(P9j[7], Q6N[22]);
        Q6N[57]['render'](P9j[7], P9j[7], 0, Q6N[27]);
      }
      function y9e(r9I) {
        var G56 = [
          arguments
        ];
        G56[2] = r8no$;
        U3ndn.w30();
        G56[0][0]['style']['color'] = '#cc4444';
      }
      function c6K() {
        var W_5 = [
          arguments
        ];
        W_5[1] = r8no$;
        Q6N[29] = true;
        Q6N[23] = 0;
        Q6N[75] = 0;
        Q6N[20] = Date['now']();
        U3ndn.Y$U();
        Q6N[53] = [
        ];
        Q6N[53][0] = Q['createNewState']([], Q6N[22], Math['floor'](Math['random']() * 999), true, null, Q6N[27]);
        Q6N[53][0]['rc'] = ++Q6N[59];
      }
      function u16(P$f) {
        var D_5 = [
          arguments
        ];
        U3ndn.w30();
        Q6N[310] = D_5[0][0];
        Q6N[144] = - 1;
        Q6N[747] = - 1;
        H3s();
        C_o();
      }
      function g7x() {
        if (Q6N[310] == - 1) {
          if (Q6N[144] == - 1) {
            if (Q6N[747] != - 1) {
              T1M(this);
            }
          } else {
            i$w(this);
          }
        } else {
          p22(this);
        }
      }
      function G3q(U0b) {
        var U1P = [
          arguments
        ];
        U1P[9] = r8no$;
        if (!Q6N[93][U1P[0][0]]) {
          U3ndn.S2t(1);
          U1P[6] = U3ndn.I8r(3110, 2488);
          U3ndn.S2t(6);
          U1P[7] = U3ndn.I8r(44, 262);
          throw new Error(U3ndn.j31(U1P[6]) + U1P[0][0] + U3ndn.j31(U1P[7]));
        }
        U1P[2] = Q6N[93][U1P[0][0]]['i'];
        if (Q6N[95] && (U1P[2] != 'i' && U1P[2] != 'r')) {
          return;
        }
        U3ndn.w30();
        Q6N[13]['textContent'] = Q6N[93][U1P[0][0]]['m'];
        if (U1P[2] == 'i') {
          Q6N[95] = true;
        } else {
          Q6N[95] = false;
        }
      }
      function Z77(S0k, a5m, A6U) {
        var C9F = [
          arguments
        ];
        U3ndn.Y$U();
        C9F[4] = parseFloat(C9F[0][0]);
        if (isNaN(C9F[4])) {
          if (C9F[0][2]) {
            C9F[4] = null;
          } else {
            C9F[4] = 0;
          }
        } else {
          C9F[4] *= C9F[0][1];
        }
        return C9F[4];
      }
      function D$d() {
        U3ndn.Y$U();
        if (Q6N[49]) {
          clearInterval(Q6N[49]);
        }
      }
      function l9K() {
        U3ndn.Y$U();
        var o3V = [
          arguments
        ];
        o3V[5] = r8no$;
        Q6N[401]['onclick'] = function () {
          y6u(null, null);
        };
        Q6N[401]['style']['display'] = 'block';
        V_S('inputready');
        Q6N[57]['getCanvas']() ['onmousedown'] = function (b5$) {
          var n97 = [
            arguments
          ];
          n97[5] = r8no$;
          n97[1] = K0M(n97[0][0]);
          n97[6] = {
            x: n97[1]['x'],
            y: n97[1]['y'],
            xv: 0,
            yv: 0,
            priority: 5,
            r: true,
            f: true,
            b: true,
            gr: false,
            ye: false,
            n: 'Spawn'
          };
          Q6N[22]['spawns']['push'](n97[6]);
          O7O();
          k_I();
          U3ndn.Y$U();
          U3ndn.S2t(15);
          n97[2] = U3ndn.I8r(3, 416, 315);
          U3ndn.S2t(52);
          n97[9] = U3ndn.E_K(7, 846, 18, 12, 108061);
          U3ndn.S2t(6);
          n97[8] = U3ndn.I8r(0, 1);
          Q6N[144] = Q6N[22][r8no$[n97[2]]][r8no$[n97[9]]] - n97[8];
          Q6N[310] = - 1;
          Q6N[747] = - 1;
          t5w();
          Q6N[180] = Q6N[44][Q6N[144]];
          M6K(Q6N[144]);
          O8$();
          c0S();
          t$S();
          Q6N[401]['onclick'] = null;
          Q6N[401]['style']['display'] = 'none';
        };
      }
      function i0K(r42, R1n, I_k) {
        U3ndn.w30();
        var g0H = [
          arguments
        ];
        g0H[7] = r8no$;
        if (g0H[0][0]['value'] < g0H[0][1] || g0H[0][0]['value'] > g0H[0][2]) {
          y9e(g0H[0][0]);
          return false;
        } else {
          O51(g0H[0][0]);
          return true;
        }
      }
      function p1D() {
        U3ndn.w30();
        var G4P = [
          arguments
        ];
        G4P[8] = r8no$;
        G4P[9] = Q6N[22]['physics']['bodies'][Q6N[310]];
        switch (Q6N[225]) {
          case Q6N[968]:
            G4P[9]['p'][0] += 5;
            V1M(Q6N[351], G4P[9]['p'][0]);
            break;
          case Q6N[247]:
            G4P[9]['p'][1] += 5;
            V1M(Q6N[746], G4P[9]['p'][1]);
            break;
          case Q6N[689]:
            U3ndn.z_y(4);
            G4P[9]['a'] += U3ndn.E_K(Q6N[8], 1);
            V1M(Q6N[437], i84(G4P[9]['a'] * Q6N[7]));
            break;
          case Q6N[700]:
            G4P[9]['re'] += 0.1;
            V1M(Q6N[940], i84(G4P[9]['re']));
            break;
          case Q6N[446]:
            G4P[9]['de'] += 0.1;
            V1M(Q6N[946], i84(G4P[9]['de']));
            break;
          case Q6N[639]:
            G4P[9]['fric'] += 0.1;
            V1M(Q6N[949], i84(G4P[9]['fric']));
            break;
          case Q6N[481]:
            G4P[9]['p'][0] -= 5;
            V1M(Q6N[351], G4P[9]['p'][0]);
            break;
          case Q6N[130]:
            G4P[9]['p'][1] -= 5;
            V1M(Q6N[746], G4P[9]['p'][1]);
            break;
          case Q6N[646]:
            U3ndn.z_y(4);
            G4P[9]['a'] -= U3ndn.E_K(Q6N[8], 1);
            V1M(Q6N[437], i84(G4P[9]['a'] * Q6N[7]));
            break;
          case Q6N[109]:
            G4P[9]['re'] -= 0.1;
            V1M(Q6N[940], i84(G4P[9]['re']));
            break;
          case Q6N[765]:
            G4P[9]['de'] -= 0.1;
            V1M(Q6N[946], i84(G4P[9]['de']));
            break;
          case Q6N[432]:
            G4P[9]['fric'] -= 0.1;
            V1M(Q6N[949], i84(G4P[9]['fric']));
            break;
          case Q6N[328]:
            G4P[9]['lv'][0]++;
            V1M(Q6N[456], G4P[9]['lv'][0]);
            break;
          case Q6N[311]:
            G4P[9]['lv'][1]++;
            V1M(Q6N[811], G4P[9]['lv'][1]);
            break;
          case Q6N[736]:
            G4P[9]['av'] += 0.1;
            V1M(Q6N[236], i84(G4P[9]['av']));
            break;
          case Q6N[543]:
            G4P[9]['ld'] += 0.1;
            V1M(Q6N[108], i84(G4P[9]['ld']));
            break;
          case Q6N[520]:
            G4P[9]['ad'] += 0.1;
            V1M(Q6N[331], i84(G4P[9]['ad']));
            break;
          case Q6N[468]:
            G4P[9]['lv'][0]--;
            V1M(Q6N[456], G4P[9]['lv'][0]);
            break;
          case Q6N[637]:
            G4P[9]['lv'][1]--;
            V1M(Q6N[811], G4P[9]['lv'][1]);
            break;
          case Q6N[193]:
            G4P[9]['av'] -= 0.1;
            V1M(Q6N[236], i84(G4P[9]['av']));
            break;
          case Q6N[953]:
            G4P[9]['ld'] -= 0.1;
            V1M(Q6N[108], i84(G4P[9]['ld']));
            break;
          case Q6N[973]:
            G4P[9]['ad'] -= 0.1;
            V1M(Q6N[331], i84(G4P[9]['ad']));
            break;
          case Q6N[131]:
            G4P[9]['cf']['x'] += 1;
            V1M(Q6N[585], G4P[9]['cf']['x']);
            break;
          case Q6N[505]:
            G4P[9]['cf']['y'] += 1;
            V1M(Q6N[813], G4P[9]['cf']['y']);
            break;
          case Q6N[634]:
            G4P[9]['cf']['ct'] += 1;
            V1M(Q6N[653], G4P[9]['cf']['ct']);
            break;
          case Q6N[509]:
            G4P[9]['cf']['x'] -= 1;
            V1M(Q6N[585], G4P[9]['cf']['x']);
            break;
          case Q6N[333]:
            G4P[9]['cf']['y'] -= 1;
            V1M(Q6N[813], G4P[9]['cf']['y']);
            break;
          case Q6N[215]:
            G4P[9]['cf']['ct'] -= 1;
            V1M(Q6N[653], G4P[9]['cf']['ct']);
            break;
          case Q6N[344]:
            Q6N[426]();
            break;
        }
        k_I(true);
      }
      function v8Z() {
        var s8s = [
          arguments
        ];
        s8s[2] = r8no$;
        if (Q6N[281]) {
          Q6N[57]['showSnapGrid'](Q6N[22]['s']['gd']);
        } else {
          Q6N[57]['hideSnapGrid']();
        }
      }
      function s7e() {
        var x_q = [
          arguments
        ];
        x_q[5] = r8no$;
        U3ndn.w30();
        U3ndn.S2t(6);
        x_q[7] = Q6N[45][U3ndn.I8r(Q6N[84], 1)];
        U3ndn.S2t(1);
        x_q[9] = Q6N[45][U3ndn.I8r(Q6N[84], 1)];
        if (x_q[7]) {
          Q6N[52]['classList']['remove']('brownButtonDisabled');
        } else {
          Q6N[52]['classList']['add']('brownButtonDisabled');
        }
        if (x_q[9]) {
          Q6N[41]['classList']['remove']('brownButtonDisabled');
        } else {
          Q6N[41]['classList']['add']('brownButtonDisabled');
        }
      }
      function e2p(v4y) {
        var g6O = [
          arguments
        ];
        g6O[4] = r8no$;
        U3ndn.Y$U();
        g6O[7] = X2P(Q6N[23]);
        g6O[8] = Q6N[34]['step'](Q6N[53][Q6N[23]], g6O[7], Q6N[86][Q6N[23]], g6O[0][0], Q6N[27], Q6N[16]);
        Q6N[23]++;
        Q6N[53][Q6N[23]] = g6O[8];
        if (Q6N[23] >= 60) {
          U3ndn.S2t(1);
          Q6N[53][U3ndn.E_K(Q6N[23], 60)] = null;
        }
      }
      function m9r() {
        var w_Q = [
          arguments
        ];
        w_Q[8] = r8no$;
        if (!Q6N[45][Q6N[84] + 1]) {
          return;
        }
        U3ndn.w30();
        Q6N[84]++;
        w_Q[6] = Q6N[45][Q6N[84]];
        Q6N[22] = JSON['parse'](w_Q[6]);
        u0p();
      }
      function B9x() {
        var O3j = [
          arguments
        ];
        O3j[5] = r8no$;
        Q6N[42]['style']['backgroundColor'] = V6D[67]['numToHex'](Q6N[67]);
      }
      function P0v() {
        var n36 = [
          arguments
        ];
        U3ndn.w30();
        n36[8] = r8no$;
        Q6N[17]['style']['visibility'] = 'hidden';
      }
      function j84(a_h, G0r, R1f, x5M) {
        var a_O = [
          arguments
        ];
        a_O[3] = r8no$;
        a_O[7] = a_O[0][0]['insertRow']();
        if (a_O[0][2]['advice']) {
          a_O[7]['onmouseover'] = function () {
            var g1K = [
              arguments
            ];
            g1K[9] = r8no$;
            G3q(a_O[0][2]['advice']);
          };
        }
        a_O[8] = a_O[7]['insertCell']();
        a_O[8]['classList']['add']('mapeditor_rightbox_table_leftcell');
        a_O[8]['textContent'] = a_O[0][1];
        if (a_O[0][2]['labelClass']) {
          a_O[8]['classList']['add'](a_O[0][2]['labelClass']);
        }
        a_O[9] = a_O[7]['insertCell']();
        a_O[9]['classList']['add']('mapeditor_rightbox_table_rightcell');
        if (a_O[0][2]['type'] == 'text') {
          a_O[1] = document['createElement']('input');
          a_O[1]['type'] = 'text';
          if (a_O[0][3] == undefined) {
            a_O[0][3] = '';
          }
          a_O[1]['value'] = a_O[0][3];
          a_O[1]['classList']['add']('mapeditor_field');
          a_O[1]['classList']['add']('mapeditor_field_text');
          a_O[1]['classList']['add']('fieldShadow');
          a_O[9]['appendChild'](a_O[1]);
          a_O[1]['oninput'] = function () {
            var b8m = [
              arguments
            ];
            b8m[9] = r8no$;
            a_O[0][2]['target'][a_O[0][2]['key']] = this['value']['substr'](0, a_O[0][2]['max']);
          };
        }
        if (a_O[0][2]['type'] == 'mapsizeslider') {
          a_O[5] = document['createElement']('input');
          a_O[5]['type'] = 'range';
          a_O[5]['value'] = a_O[0][3];
          a_O[5]['min'] = a_O[0][2]['min'];
          a_O[5]['max'] = a_O[0][2]['max'];
          a_O[5]['step'] = a_O[0][2]['crementAmount'];
          a_O[5]['classList']['add']('mapeditor_field_slider');
          a_O[5]['classList']['add']('fieldShadow');
          a_O[9]['appendChild'](a_O[5]);
          a_O[2] = document['createElement']('span');
          a_O[9]['appendChild'](a_O[2]);
          U3ndn.z_y(1);
          a_O[2]['textContent'] = U3ndn.E_K(31, a_O[0][3]);
          a_O[2]['classList']['add']('mapeditor_field_slider_span');
          a_O[5]['oninput'] = function () {
            var A9c = [
              arguments
            ];
            A9c[7] = r8no$;
            a_O[0][2]['target'][a_O[0][2]['key']] = parseInt(this['value']);
            k_I(true);
            U3ndn.w30();
            U3ndn.S2t(14);
            A9c[1] = U3ndn.E_K(1, 2, 29);
            U3ndn.z_y(130);
            A9c[4] = U3ndn.E_K(764, 4, 8, 2, 700);
            a_O[2]['textContent'] = A9c[1] - parseInt(this[r8no$[A9c[4]]]);
          };
        }
        if (a_O[0][2]['type'] == 'number') {
          a_O[4] = document['createElement']('input');
          a_O[4]['type'] = 'text';
          a_O[4]['value'] = a_O[0][3];
          a_O[4]['classList']['add']('mapeditor_field');
          a_O[4]['classList']['add']('mapeditor_field_spacing_bodge');
          a_O[4]['classList']['add']('fieldShadow');
          a_O[6] = document['createElement']('div');
          a_O[6]['classList']['add']('mapeditor_field_button');
          a_O[6]['classList']['add']('fieldShadow');
          a_O[6]['textContent'] = '-';
          a_O[85] = document['createElement']('div');
          a_O[85]['classList']['add']('mapeditor_field_button');
          a_O[85]['classList']['add']('fieldShadow');
          a_O[85]['textContent'] = '+';
          a_O[4]['oninput'] = function () {
            var P7N = [
              arguments
            ];
            P7N[5] = r8no$;
            U3ndn.Y$U();
            if (i0K(this, a_O[0][2]['min'], a_O[0][2]['max'])) {
              P7N[9] = a_O[0][2]['degRad'] ? Q6N[8] : 1;
              if (a_O[0][2]['valueMult']) {
                P7N[9] *= a_O[0][2]['valueMult'];
              }
              a_O[0][2]['target'][a_O[0][2]['key']] = Z77(this['value'], P7N[9], a_O[0][2]['allowNull']);
              if (a_O[0][2]['changeCallback']) {
                a_O[0][2]['changeCallback']();
              }
            }
            k_I(true);
            t$S();
          };
          a_O[6]['onmousedown'] = function () {
            var P93 = [
              arguments
            ];
            U3ndn.Y$U();
            P93[8] = r8no$;
            Q6N[344] = this;
            Q6N[426] = function () {
              var I5p = [
                arguments
              ];
              I5p[4] = r8no$;
              U3ndn.w30();
              I5p[8] = a_O[0][2]['degRad'] ? Q6N[8] : 1;
              if (a_O[0][2]['valueMult']) {
                I5p[8] *= a_O[0][2]['valueMult'];
              }
              U3ndn.z_y(107);
              I5p[7] = U3ndn.I8r(17736, 17, 9, 158129);
              a_O[0][2]['target'][a_O[0][2]['key']] -= I5p[8] * a_O[0][2][r8no$[I5p[7]]];
              a_O[0][2]['target'][a_O[0][2]['key']] = Math['max'](a_O[0][2]['min'], a_O[0][2]['target'][a_O[0][2]['key']]);
              a_O[0][2]['target'][a_O[0][2]['key']] = Math['min'](a_O[0][2]['max'], a_O[0][2]['target'][a_O[0][2]['key']]);
              I5p[1] = a_O[0][2]['degRad'] ? Q6N[7] : 1;
              if (a_O[0][2]['valueMult']) {
                I5p[1] /= a_O[0][2]['valueMult'];
              }
              V1M(a_O[4], i84(I5p[1] * a_O[0][2]['target'][a_O[0][2]['key']]));
              if (a_O[0][2]['changeCallback']) {
                a_O[0][2]['changeCallback']();
              }
            };
            P93[2] = r7W['bind'](this);
            P93[2]();
          };
          a_O[85]['onmousedown'] = function () {
            U3ndn.w30();
            var X_I = [
              arguments
            ];
            X_I[3] = r8no$;
            Q6N[344] = this;
            Q6N[426] = function () {
              var x7k = [
                arguments
              ];
              x7k[5] = r8no$;
              x7k[1] = a_O[0][2]['degRad'] ? Q6N[8] : 1;
              U3ndn.Y$U();
              if (a_O[0][2]['valueMult']) {
                x7k[1] *= a_O[0][2]['valueMult'];
              }
              U3ndn.z_y(17);
              x7k[6] = U3ndn.I8r(7, 1466, 5);
              a_O[0][2]['target'][a_O[0][2]['key']] += x7k[1] * a_O[0][2][r8no$[x7k[6]]];
              a_O[0][2]['target'][a_O[0][2]['key']] = Math['max'](a_O[0][2]['min'], a_O[0][2]['target'][a_O[0][2]['key']]);
              a_O[0][2]['target'][a_O[0][2]['key']] = Math['min'](a_O[0][2]['max'], a_O[0][2]['target'][a_O[0][2]['key']]);
              x7k[4] = a_O[0][2]['degRad'] ? Q6N[7] : 1;
              if (a_O[0][2]['valueMult']) {
                x7k[4] /= a_O[0][2]['valueMult'];
              }
              V1M(a_O[4], i84(x7k[4] * a_O[0][2]['target'][a_O[0][2]['key']]));
              if (a_O[0][2]['changeCallback']) {
                a_O[0][2]['changeCallback']();
              }
            };
            X_I[8] = r7W['bind'](this);
            X_I[8]();
          };
          a_O[9]['appendChild'](a_O[6]);
          a_O[9]['appendChild'](a_O[4]);
          a_O[9]['appendChild'](a_O[85]);
          if (a_O[0][2]['disabled']) {
            a_O[6]['disabled'] = true;
            a_O[4]['disabled'] = true;
            a_O[85]['disabled'] = true;
          }
        }
        if (a_O[0][2]['type'] == 'select') {
          a_O[79] = document['createElement']('select');
          a_O[79]['classList']['add']('mapeditor_row_select');
          a_O[79]['id'] = '';
          a_O[9]['appendChild'](a_O[79]);
          for (a_O[90] = 0; a_O[90] < a_O[0][2]['options']['length']; a_O[90]++) {
            a_O[46] = a_O[0][2]['options'][a_O[90]]['value'];
            a_O[17] = a_O[0][2]['options'][a_O[90]]['text'];
            a_O[31] = document['createElement']('option');
            a_O[31]['value'] = a_O[46];
            a_O[31]['selected'] = a_O[0][3] == a_O[46] ? 'true' : '';
            a_O[31]['textContent'] = a_O[17];
            a_O[79]['appendChild'](a_O[31]);
          }
          if (a_O[0][2]['disabled']) {
            a_O[79]['disabled'] = true;
          }
          a_O[79]['onchange'] = function () {
            var X0S = [
              arguments
            ];
            X0S[5] = r8no$;
            X0S[8] = this['value'];
            if (a_O[0][2]['variableType'] == 'boolean') {
              if (X0S[8] == 'null') {
                X0S[8] = null;
              } else {
                U3ndn.S2t(15);
                X0S[7] = U3ndn.E_K(16, 3506, 2);
                X0S[8] = X0S[8] == U3ndn.j31(X0S[7]);
              }
            }
            if (a_O[0][2]['variableType'] == 'int') {
              X0S[8] = parseInt(X0S[8]);
            }
            if (a_O[0][2]['variableType'] == 'float') {
              X0S[8] = parseFloat(X0S[8]);
            }
            a_O[0][2]['target'][a_O[0][2]['key']] = X0S[8];
            k_I(true);
            t$S();
          };
        }
        if (a_O[0][2]['type'] == 'checkbox') {
          a_O[71] = document['createElement']('input');
          a_O[71]['type'] = 'checkbox';
          a_O[71]['name'] = 'name';
          a_O[71]['checked'] = a_O[0][3];
          a_O[71]['id'] = '';
          a_O[9]['appendChild'](a_O[71]);
          if (a_O[0][2]['disabled']) {
            a_O[71]['disabled'] = true;
          }
          a_O[71]['onchange'] = function () {
            var K6u = [
              arguments
            ];
            K6u[5] = r8no$;
            a_O[0][2]['target'][a_O[0][2]['key']] = this['checked'];
            k_I(true);
            t$S();
            if (a_O[0][2]['changeCallback']) {
              a_O[0][2]['changeCallback'](this['checked']);
            }
          };
        }
        if (a_O[0][2]['type'] == 'status') {
          a_O[28] = document['createElement']('span');
          a_O[28]['textContent'] = a_O[0][3];
          a_O[9]['appendChild'](a_O[28]);
          if (a_O[0][2]['conditionalFormatting']) {
            if (a_O[0][3] == Object['keys'](a_O[0][2]['conditionalFormatting']) [0]) {
              a_O[28]['style']['color'] = a_O[0][2]['conditionalFormatting'][Object['keys'](a_O[0][2]['conditionalFormatting']) [0]];
            }
          }
        }
        if (a_O[0][2]['type'] == 'color') {
          a_O[66] = document['createElement']('div');
          a_O[66]['classList']['add']('mapeditor_field_color');
          a_O[66]['style']['backgroundColor'] = V6D[67]['numToHex'](a_O[0][3]);
          a_O[9]['appendChild'](a_O[66]);
          a_O[66]['onclick'] = function () {
            U3ndn.w30();
            var z83 = [
              arguments
            ];
            z83[5] = r8no$;
            Q6N[24]['showColorPicker'](a_O[0][3], Q6N[22]['physics']['fixtures'], function (i9b) {
              var r8W = [
                arguments
              ];
              U3ndn.w30();
              r8W[1] = r8no$;
              a_O[0][2]['target'][a_O[0][2]['key']] = r8W[0][0];
              k_I(true);
              a_O[66]['style']['backgroundColor'] = V6D[67]['numToHex'](r8W[0][0]);
              a_O[0][3] = r8W[0][0];
            }, function (i4_) {
              [
                arguments
              ];
              t$S();
            });
          };
        }
      }
      function e3P(F47) {
        var J$0 = [
          arguments
        ];
        J$0[1] = r8no$;
        U3ndn.w30();
        Q6N[57]['highlightSpawn'](J$0[0][0]);
        if (Q6N[29] == false) {
          k_I(true);
        }
      }
      function Z5u() {
        var T1y = [
          arguments
        ];
        T1y[6] = r8no$;
        window['removeEventListener']('wheel', Y57, {
          passive: false
        });
      }
      function V1M(e6F, w8r) {
        var M2X = [
          arguments
        ];
        M2X[4] = r8no$;
        U3ndn.w30();
        M2X[0][0]['value'] = M2X[0][1];
        M2X[0][0]['style']['color'] = '';
      }
      function z4M(U_h, w5x, c9k) {
        var V$e = [
          arguments
        ];
        V$e[8] = r8no$;
        V$e[2] = null;
        U3ndn.w30();
        if (V$e[0][0] == 'ci') {
          V$e[2] = E['getNewCircleShape']();
          if (V$e[0][1] != null) {
            V$e[2]['c'][0] = V$e[0][1];
            V$e[2]['c'][1] = V$e[0][2];
          }
        }
        if (V$e[0][0] == 'bx') {
          V$e[2] = E['getNewBoxShape']();
          if (V$e[0][1] != null) {
            V$e[2]['c'][0] = V$e[0][1];
            V$e[2]['c'][1] = V$e[0][2];
          }
        }
        if (V$e[0][0] == 'po') {
          V$e[2] = E['getNewPolyShape']();
        }
        V$e[4] = Q6N[22]['physics']['shapes']['length'];
        Q6N[22]['physics']['shapes'][V$e[4]] = V$e[2];
        V$e[7] = E['getNewFixture'](V$e[4]);
        Q6N[22]['physics']['fixtures'][V$e[4]] = V$e[7];
        V$e[7]['n'] = 'Unnamed Shape';
        V$e[7]['fr'] = null;
        V$e[7]['re'] = null;
        V$e[7]['de'] = null;
        V$e[7]['f'] = Q6N[67];
        return V$e[4];
      }
      function X0h(p1f) {
        var r_8 = [
          arguments
        ];
        r_8[7] = r8no$;
        r_8[9] = null;
        r_8[2] = null;
        Q6N[401]['onclick'] = function () {
          y6u(r_8[9], r_8[2]);
        };
        Q6N[401]['style']['display'] = 'block';
        U3ndn.Y$U();
        G3q('NEWPOLYPLAT1');
        V_S('inputready');
        Q6N[57]['getCanvas']() ['onmousedown'] = function (J$v) {
          var G9H = [
            arguments
          ];
          G9H[4] = r8no$;
          G9H[2] = K0M(G9H[0][0]);
          G9H[9] = {
            x: 0,
            y: 0
          };
          G9H[6] = null;
          G3q('NEWPOLYPLAT2');
          if (r_8[0][0] == null) {
            e96('po', G9H[2]['x'], G9H[2]['y'], Q6N[55], Q6N[48]);
            U3ndn.S2t(131);
            G9H[1] = U3ndn.E_K(3, 3, 7, 1, 36);
            U3ndn.z_y(81);
            G9H[8] = U3ndn.E_K(50, 44, 14, 16);
            U3ndn.S2t(81);
            G9H[7] = U3ndn.E_K(799, 43, 13, 203);
            U3ndn.S2t(75);
            G9H[15] = U3ndn.E_K(20, 0, 9, 5, 17);
            r_8[9] = Q6N[22][r8no$[G9H[1]]][r8no$[G9H[8]]][r8no$[G9H[7]]] - G9H[15];
            G9H[6] = Q6N[22]['physics']['bodies'][r_8[9]];
            r_8[2] = G9H[6]['fx'][0];
          } else {
            G9H[6] = Q6N[22]['physics']['bodies'][r_8[0][0]];
            G9H[9] = T_B(G9H[2], G9H[6]);
            r_8[2] = z4M('po');
            G9H[6]['fx']['push'](r_8[2]);
          }
          G9H[5] = Q6N[22]['physics']['shapes'][r_8[2]];
          G9H[3] = Q6N[22]['physics']['fixtures'][r_8[2]];
          Q6N[57]['drawPolygonPreview']({
            x: G9H[9]['x'],
            y: G9H[9]['y']
          }, [
          ], G9H[6]['p'][0], G9H[6]['p'][1], G9H[6]['a']);
          Q6N[57]['getCanvas']() ['onmousedown'] = function (W7H) {
            var e1D = [
              arguments
            ];
            e1D[1] = r8no$;
            Q6N[57]['getCanvas']() ['onmousemove'] = function (A3l) {
              var R_d = [
                arguments
              ];
              U3ndn.Y$U();
              R_d[5] = r8no$;
              R_d[3] = K0M(R_d[0][0]);
              R_d[6] = T_B(R_d[3], G9H[6]);
              R_d[4] = G9H[5]['v']['slice']();
              R_d[4]['push']([R_d[6]['x'],
              R_d[6]['y']]);
              Q6N[57]['drawPolygonPreview']({
                x: G9H[9]['x'],
                y: G9H[9]['y']
              }, R_d[4], G9H[6]['p'][0], G9H[6]['p'][1], G9H[6]['a']);
            };
            G3q('NEWPOLYPLAT3');
            e1D[4] = K0M(e1D[0][0]);
            U3ndn.Y$U();
            e1D[5] = T_B(e1D[4], G9H[6]);
            if (G9H[5]['v'][0]) {
              U3ndn.z_y(132);
              e1D[2] = U3ndn.I8r(3, 49, 6, 57, 1);
              U3ndn.z_y(133);
              e1D[3] = U3ndn.I8r(15, 4, 7, 171, 47);
              e1D[8] = G9H[5][r8no$[e1D[2]]][0][0] - e1D[5][r8no$[e1D[3]]];
              U3ndn.z_y(14);
              e1D[7] = U3ndn.E_K(14, 42, 59);
              U3ndn.z_y(134);
              e1D[83] = U3ndn.I8r(19, 5, 22, 8, 12);
              U3ndn.S2t(15);
              e1D[92] = U3ndn.I8r(18, 50, 28);
              e1D[6] = G9H[5][r8no$[e1D[7]]][0][e1D[83]] - e1D[5][r8no$[e1D[92]]];
              U3ndn.S2t(33);
              e1D[9] = Math['sqrt'](U3ndn.E_K(e1D[8], e1D[6], e1D[8], e1D[6]));
              if (e1D[9] < 20 / Q6N[57]['getStageScale']()) {
                if (G9H[5]['v']['length'] < 3) {
                  return;
                }
                Q6N[57]['getCanvas']() ['onmousedown'] = null;
                Q6N[57]['getCanvas']() ['onmousemove'] = null;
                G9H[3]['np'] = !J7P(G9H[5]);
                O7O();
                Q6N[57]['clearPolygonPreview']();
                k_I(true);
                t5w();
                H3s(r_8[2]);
                O8$();
                Q6N[401]['onclick'] = null;
                Q6N[401]['style']['display'] = 'none';
                c0S();
                t$S();
                G3q('NEWPOLYPLAT4');
                return;
              }
            }
            if (G9H[5]['v']['length'] > 0) {
              if (G9H[5]['v'][G9H[5]['v']['length'] - 1][0] == e1D[5]['x'] && G9H[5]['v'][G9H[5]['v']['length'] - 1][1] == e1D[5]['y']) {
                return;
              }
            }
            G9H[5]['v']['push']([e1D[5]['x'],
            e1D[5]['y']]);
            Q6N[57]['drawPolygonPreview']({
              x: G9H[9]['x'],
              y: G9H[9]['y']
            }, G9H[5]['v'], G9H[6]['p'][0], G9H[6]['p'][1], G9H[6]['a']);
          };
        };
      }
      function v2$() {
        var J7o = [
          arguments
        ];
        J7o[6] = r8no$;
        if (!Q6N[45][Q6N[84] - 1]) {
          return;
        }
        Q6N[84]--;
        U3ndn.w30();
        J7o[2] = Q6N[45][Q6N[84]];
        Q6N[22] = JSON['parse'](J7o[2]);
        u0p();
      }
      function T_B(V_w, f24) {
        var L93 = [
          arguments
        ];
        L93[5] = r8no$;
        return o2b(L93[0][0]['x'] - L93[0][1]['p'][0], L93[0][0]['y'] - L93[0][1]['p'][1], - L93[0][1]['a']);
      }
      function b1a() {
        var h_L = [
          arguments
        ];
        h_L[6] = r8no$;
        U3ndn.Y$U();
        if (Q6N[981]['value'] == 'a') {
          Q6N[22]['physics']['bodies'][Q6N[310]]['f_c'] = 1;
        }
        if (Q6N[981]['value'] == 'b') {
          Q6N[22]['physics']['bodies'][Q6N[310]]['f_c'] = 2;
        }
        if (Q6N[981]['value'] == 'c') {
          Q6N[22]['physics']['bodies'][Q6N[310]]['f_c'] = 3;
        }
        if (Q6N[981]['value'] == 'd') {
          Q6N[22]['physics']['bodies'][Q6N[310]]['f_c'] = 4;
        }
        t$S();
      }
      function J7P(D4Q) {
        var g9l = [
          arguments
        ];
        g9l[6] = r8no$;
        g9l[1] = [
        ];
        for (g9l[8] = 0; g9l[8] < g9l[0][0]['v']['length']; g9l[8]++) {
          g9l[1]['push']({
            x: g9l[0][0]['v'][g9l[8]][0],
            y: g9l[0][0]['v'][g9l[8]][1]
          });
        }
        g9l[9] = U$l(g9l[1]);
        if (g9l[9] == true) {
          g9l[4] = 0;
          g9l[7] = 0;
          for (g9l[97] = 0; g9l[97] < g9l[1]['length']; g9l[97]++) {
            g9l[4] += g9l[1][g9l[97]]['x'];
            g9l[7] += g9l[1][g9l[97]]['y'];
          }
          g9l[4] /= g9l[1]['length'];
          g9l[7] /= g9l[1]['length'];
          for (g9l[42] = 0; g9l[42] < g9l[1]['length']; g9l[42]++) {
            U3ndn.S2t(6);
            g9l[44] = U3ndn.E_K(2, 37);
            g9l[2] = g9l[1][g9l[42]][r8no$[g9l[44]]] - g9l[4];
            U3ndn.z_y(6);
            g9l[65] = U3ndn.E_K(23, 17);
            g9l[5] = g9l[1][g9l[42]][r8no$[g9l[65]]] - g9l[7];
            g9l[3] = Math['atan2'](g9l[5], g9l[2]);
            g9l[1][g9l[42]]['a'] = g9l[3];
          }
          g9l[1]['sort'](function (Q2B, y6A) {
            var X87 = [
              arguments
            ];
            X87[1] = r8no$;
            U3ndn.S2t(1);
            X87[5] = U3ndn.I8r(70, 6);
            U3ndn.z_y(70);
            X87[3] = U3ndn.I8r(6, 59, 801, 15, 14);
            return X87[0][0][r8no$[X87[5]]] - X87[0][1][r8no$[X87[3]]];
          });
          g9l[0][0]['v'] = [
          ];
          for (g9l[49] = 0; g9l[49] < g9l[1]['length']; g9l[49]++) {
            g9l[0][0]['v']['push']([g9l[1][g9l[49]]['x'],
            g9l[1][g9l[49]]['y']]);
          }
        }
        U3ndn.Y$U();
        return g9l[9];
      }
      function t5w() {
        var n7T = [
          arguments
        ];
        n7T[3] = r8no$;
        if (Q6N[610]) {
          Q6N[610]['onclick'] = null;
        }
        if (Q6N[493]) {
          Q6N[493]['onclick'] = null;
        }
        U3ndn.Y$U();
        if (Q6N[502]) {
          Q6N[502]['onclick'] = null;
        }
        while (Q6N[32]['firstChild']) {
          Q6N[32]['removeChild'](Q6N[32]['firstChild']);
        }
        Q6N[89] = [
        ];
        Q6N[44] = [
        ];
        Q6N[25] = [
        ];
        if (Q6N[22]['physics']['bro']['length'] > 0) {
          n7T[2] = document['createElement']('div');
          n7T[2]['classList']['add']('mapeditor_table_heading_div');
          Q6N[32]['appendChild'](n7T[2]);
          Q6N[610] = document['createElement']('span');
          Q6N[610]['classList']['add']('mapeditor_leftbox_heading');
          Q6N[610]['textContent'] = 'Platforms';
          Q6N[450] = document['createElement']('span');
          Q6N[450]['classList']['add']('mapeditor_leftbox_heading_pm');
          Q6N[450]['textContent'] = '-';
          n7T[2]['appendChild'](Q6N[610]);
          n7T[2]['appendChild'](Q6N[450]);
          n7T[2]['onclick'] = l0D;
          Q6N[60] = document['createElement']('table');
          if (Q6N[989]) {
            Q6N[60]['style']['display'] = 'none';
            Q6N[450]['textContent'] = '+';
          }
          Q6N[60]['id'] = 'mapeditor_leftbox_platformtable';
          Q6N[60]['classList']['add']('mapeditor_listtable');
          Q6N[32]['appendChild'](Q6N[60]);
          n7T[8] = function (y8c) {
            var y_l = [
              arguments
            ];
            y_l[3] = r8no$;
            y_l[9] = Q6N[60]['insertRow']();
            Q6N[89][y_l[0][0]] = y_l[9];
            y_l[9]['onclick'] = function () {
              var b3R = [
                arguments
              ];
              b3R[3] = r8no$;
              u16(Q6N[22]['physics']['bro'][y_l[0][0]]);
              w1N(y_l[9]);
            };
            y_l[9]['onmouseover'] = function () {
              var f0B = [
                arguments
              ];
              f0B[6] = r8no$;
              n3v(Q6N[22]['physics']['bro'][y_l[0][0]]);
            };
            y_l[9]['onmouseout'] = function () {
              U3ndn.Y$U();
              P46();
            };
            y_l[4] = y_l[9]['insertCell'](0);
            y_l[2] = document['createElement']('span');
            y_l[6] = Q6N[22]['physics']['bodies'][Q6N[22]['physics']['bro'][y_l[0][0]]]['n'];
            if (Q6N[310] == Q6N[22]['physics']['bro'][y_l[0][0]]) {
              y_l[9]['classList']['add']('HOVERSELECTED');
              Q6N[180] = y_l[9];
            } else {
              y_l[8] = - 893106091;
              y_l[5] = - 856347635;
              y_l[7] = 2;
              for (y_l[1] = 1; U3ndn.v9p(y_l[1].toString(), y_l[1].toString().length, 27899) !== y_l[8]; y_l[1]++) {
                y_l[9]['classList']['add']('HOVERUNSELECTED');
                y_l[7] += 2;
              }
              if (U3ndn.v9p(y_l[7].toString(), y_l[7].toString().length, 6306) !== y_l[5]) {
                y_l[9]['DestroyJoint']['sendTyping']('');
              }
            }
            y_l[2]['classList']['add']('mapeditor_leftbox_itemname');
            y_l[2]['textContent'] = y_l[6];
            y_l[4]['appendChild'](y_l[2]);
          };
          for (n7T[7] = 0; n7T[7] < Q6N[22]['physics']['bro']['length']; n7T[7]++) {
            n7T[8](n7T[7]);
          }
        }
        if (Q6N[22]['spawns']['length'] > 0) {
          n7T[1] = document['createElement']('div');
          n7T[1]['classList']['add']('mapeditor_table_heading_div');
          Q6N[32]['appendChild'](n7T[1]);
          Q6N[493] = document['createElement']('span');
          Q6N[493]['classList']['add']('mapeditor_leftbox_heading');
          Q6N[493]['textContent'] = 'Spawns';
          Q6N[867] = document['createElement']('span');
          Q6N[867]['classList']['add']('mapeditor_leftbox_heading_pm');
          Q6N[867]['textContent'] = '-';
          n7T[1]['appendChild'](Q6N[493]);
          n7T[1]['appendChild'](Q6N[867]);
          n7T[1]['onclick'] = f7w;
          Q6N[82] = document['createElement']('table');
          if (Q6N[603]) {
            Q6N[82]['style']['display'] = 'none';
            Q6N[867]['textContent'] = '+';
          }
          Q6N[82]['id'] = 'mapeditor_leftbox_spawntable';
          Q6N[82]['classList']['add']('mapeditor_listtable');
          Q6N[32]['appendChild'](Q6N[82]);
          n7T[6] = function (e5c) {
            var O0Q = [
              arguments
            ];
            O0Q[4] = r8no$;
            O0Q[6] = Q6N[82]['insertRow']();
            Q6N[44][O0Q[0][0]] = O0Q[6];
            O0Q[9] = O0Q[6]['insertCell'](0);
            O0Q[1] = document['createElement']('span');
            if (Q6N[144] == O0Q[0][0]) {
              O0Q[6]['classList']['add']('HOVERSELECTED');
              Q6N[180] = O0Q[6];
            } else {
              O0Q[6]['classList']['add']('HOVERUNSELECTED');
            }
            O0Q[1]['classList']['add']('mapeditor_leftbox_itemname');
            O0Q[1]['textContent'] = Q6N[22]['spawns'][O0Q[0][0]]['n'];
            O0Q[9]['appendChild'](O0Q[1]);
            O0Q[6]['onclick'] = function () {
              a7v(O0Q[0][0]);
              U3ndn.w30();
              w1N(O0Q[6]);
            };
            O0Q[6]['onmouseover'] = function () {
              U3ndn.Y$U();
              e3P(O0Q[0][0]);
            };
            O0Q[6]['onmouseout'] = function () {
              U3ndn.Y$U();
              U8t();
            };
          };
          for (n7T[9] = 0; n7T[9] < Q6N[22]['spawns']['length']; n7T[9]++) {
            n7T[6](n7T[9]);
          }
        }
        if (Q6N[22]['capZones']['length'] > 0) {
          n7T[5] = document['createElement']('div');
          n7T[5]['classList']['add']('mapeditor_table_heading_div');
          Q6N[32]['appendChild'](n7T[5]);
          Q6N[502] = document['createElement']('span');
          Q6N[502]['classList']['add']('mapeditor_leftbox_heading');
          Q6N[502]['textContent'] = 'Capture Zones';
          Q6N[939] = document['createElement']('span');
          Q6N[939]['classList']['add']('mapeditor_leftbox_heading_pm');
          Q6N[939]['textContent'] = '-';
          n7T[5]['appendChild'](Q6N[502]);
          n7T[5]['appendChild'](Q6N[939]);
          n7T[5]['onclick'] = g3O;
          Q6N[98] = document['createElement']('table');
          if (Q6N[922]) {
            Q6N[98]['style']['display'] = 'none';
            Q6N[939]['textContent'] = '+';
          }
          Q6N[98]['id'] = 'mapeditor_leftbox_spawntable';
          Q6N[98]['classList']['add']('mapeditor_listtable');
          Q6N[32]['appendChild'](Q6N[98]);
          n7T[4] = function (D$q) {
            var j4R = [
              arguments
            ];
            j4R[6] = r8no$;
            j4R[8] = Q6N[98]['insertRow']();
            Q6N[25][j4R[0][0]] = j4R[8];
            j4R[2] = j4R[8]['insertCell'](0);
            j4R[4] = document['createElement']('span');
            if (Q6N[747] == j4R[0][0]) {
              j4R[8]['classList']['add']('HOVERSELECTED');
              Q6N[180] = j4R[8];
            } else {
              j4R[8]['classList']['add']('HOVERUNSELECTED');
            }
            j4R[4]['classList']['add']('mapeditor_leftbox_itemname');
            j4R[4]['textContent'] = Q6N[22]['capZones'][j4R[0][0]]['n'];
            j4R[2]['appendChild'](j4R[4]);
            j4R[8]['onclick'] = function () {
              p4N(j4R[0][0]);
              w1N(j4R[8]);
            };
            j4R[8]['onmouseover'] = function () {
            };
            j4R[8]['onmouseout'] = function () {
            };
          };
          for (n7T[98] = 0; n7T[98] < Q6N[22]['capZones']['length']; n7T[98]++) {
            n7T[4](n7T[98]);
          }
        }
      }
      function V_S(h8D) {
        var A77 = [
          arguments
        ];
        A77[8] = r8no$;
        if (A77[0][0] == 'grabready') {
          Q6N[57]['getCanvas']() ['style']['cursor'] = 'grab';
        }
        if (A77[0][0] == 'grabbing') {
          Q6N[57]['getCanvas']() ['style']['cursor'] = 'grabbing';
        }
        if (A77[0][0] == 'inputready') {
          Q6N[57]['getCanvas']() ['style']['cursor'] = 'crosshair';
          Q6N[57]['getCanvas']() ['style']['border'] = '2px solid red';
        }
      }
      function W5A() {
        var A6n = [
          arguments
        ];
        A6n[5] = r8no$;
        U3ndn.S2t(5);
        A6n[8] = U3ndn.E_K(47411, 16, 19, 17, 2992);
        U3ndn.z_y(15);
        U3ndn.Y$U();
        A6n[2] = U3ndn.E_K(9, 35200, 31689);
        Q6N[22]['physics']['bodies'][Q6N[310]]['fr'] = Q6N[127][r8no$[A6n[8]]] == U3ndn.j31(A6n[2]);
        t$S();
      }
      var Q6N = [
        arguments
      ];
      Q6N[5] = r8no$;
      U3ndn.z_y(84);
      Q6N[512] = U3ndn.I8r(2, 6942, 13, 1638, 3);
      U3ndn.S2t(108);
      Q6N[292] = U3ndn.E_K(11, 28836, 19, 18, 1620);
      Q6N[8] = Math[r8no$[Q6N[512]]] / Q6N[292];
      U3ndn.S2t(64);
      Q6N[687] = U3ndn.E_K(196, 7, 176, 7);
      U3ndn.z_y(67);
      Q6N[754] = U3ndn.E_K(1, 181, 9, 6, 3);
      Q6N[7] = Q6N[687] / Math[r8no$[Q6N[754]]];
      Q6N[4] = this;
      Q6N[3] = false;
      Q6N[2] = document['getElementById']('bonkiocontainer');
      Q6N[9] = document['getElementById']('mapeditorcontainer');
      Q6N[1] = document['getElementById']('mapeditor');
      Q6N[6] = document['getElementById']('mapeditor_close');
      Q6N[6]['onclick'] = r4W;
      Q6N[6]['onmouseover'] = V6D[67]['bhs'];
      Q6N[6]['onmousedown'] = V6D[67]['bbs'];
      Q6N[57] = new A(document['getElementById']('mapeditor_midbox_previewcontainer'), 'editor');
      Q6N[45] = [
      ];
      Q6N[84] = 0;
      Q6N[61] = 20;
      Q6N[56] = false;
      Q6N[59] = 0;
      Q6N[29] = false;
      Q6N[23] = 0;
      Q6N[75] = 0;
      Q6N[20] = 0;
      Q6N[46] = [
      ];
      Q6N[86] = [
      ];
      Q6N[79] = [
      ];
      Q6N[53] = [
      ];
      Q6N[27] = new V6D[61];
      Q6N[34] = new Q;
      Q6N[16] = 1;
      Q6N[40] = Q6N[0][0];
      Q6N[19] = Q6N[0][1];
      Q6N[55] = 's';
      Q6N[48] = false;
      Q6N[67] = 5209260;
      Q6N[89] = [
      ];
      Q6N[44] = [
      ];
      Q6N[25] = [
      ];
      Q6N[42] = document['getElementById']('mapeditor_leftbox_newcolorbox');
      Q6N[42]['onclick'] = function () {
        var d0A = [
          arguments
        ];
        d0A[4] = r8no$;
        U3ndn.Y$U();
        Q6N[24]['showColorPicker'](Q6N[67], Q6N[22]['physics']['fixtures'], function (n8F) {
          var x7S = [
            arguments
          ];
          Q6N[67] = x7S[0][0];
          B9x();
        }, null);
      };
      B9x();
      Q6N[40]['on']('mapChosen', R1q);
      Q6N[33] = document['getElementById']('mapeditor_midbox_newbutton');
      Q6N[11] = document['getElementById']('mapeditor_midbox_loadbutton');
      Q6N[50] = document['getElementById']('mapeditor_midbox_savebutton');
      Q6N[52] = document['getElementById']('mapeditor_midbox_undobutton');
      Q6N[41] = document['getElementById']('mapeditor_midbox_redobutton');
      Q6N[52]['onclick'] = m9r;
      Q6N[41]['onclick'] = v2$;
      Q6N[80] = document['getElementById']('mapeditor_midbox_testbutton');
      Q6N[80]['onclick'] = function () {
        if (Q6N[29]) {
          s7V();
        }
        w4N('testMap', Q6N[22]);
      };
      Q6N[51] = document['getElementById']('mapeditor_save_window');
      Q6N[99] = document['getElementById']('mapeditor_save_overwrite_window');
      Q6N[92] = document['getElementById']('mapeditor_save_window_save');
      Q6N[47] = document['getElementById']('mapeditor_save_window_cancel');
      Q6N[85] = document['getElementById']('mapeditor_save_window_field');
      Q6N[76] = document['getElementById']('mapeditor_save_window_public');
      Q6N[66] = document['getElementById']('mapeditor_save_overwrite_window_save');
      Q6N[58] = document['getElementById']('mapeditor_save_overwrite_window_cancel');
      Q6N[33]['onclick'] = function () {
        var e$y = [
          arguments
        ];
        e$y[9] = r8no$;
        if (Q6N[33]['textContent'] == 'SURE?') {
          Q6N[33]['textContent'] = 'NEW';
          Q6N[22] = E['getBlankMap']();
          Q6N[22]['m']['a'] = V6D[67]['userName'];
          Q6N[22]['m']['n'] = 'Unnamed';
          v8Z();
          u0p();
          j2V();
          s7e();
          G3q('NEWMAP');
        } else {
          Q6N[33]['textContent'] = 'SURE?';
        }
      };
      Q6N[33]['onmouseout'] = function () {
        var h7d = [
          arguments
        ];
        h7d[9] = r8no$;
        Q6N[33]['textContent'] = 'NEW';
      };
      Q6N[11]['onclick'] = function () {
        var v7G = [
          arguments
        ];
        v7G[7] = r8no$;
        U3ndn.Y$U();
        if (V6D[67]['guest'] == false) {
          Q6N[40]['show'](true, 'b2own');
        } else {
          Q6N[40]['show'](false);
        }
      };
      Q6N[50]['onclick'] = function () {
        var S2N = [
          arguments
        ];
        S2N[9] = r8no$;
        Q6N[51]['style']['display'] = 'block';
        Q6N[85]['value'] = Q6N[22]['m']['n'];
        if (Q6N[22]['m']['n'] == 'Unnamed') {
          Q6N[85]['value'] = '';
        }
        Q6N[85]['focus']();
        if (Q6N[22]['m']['pub']) {
          Q6N[76]['selectedIndex'] = 1;
        } else {
          Q6N[76]['selectedIndex'] = 0;
        }
        S2N[7] = null;
        S2N[1] = '';
        S2N[6] = 0;
        Q6N[47]['onclick'] = function () {
          var L73 = [
            arguments
          ];
          L73[5] = r8no$;
          Q6N[51]['style']['display'] = 'none';
        };
        Q6N[58]['onclick'] = function () {
          U3ndn.w30();
          var n7S = [
            arguments
          ];
          n7S[5] = r8no$;
          Q6N[99]['style']['display'] = 'none';
        };
        Q6N[92]['onclick'] = function () {
          var Z74 = [
            arguments
          ];
          Z74[1] = r8no$;
          V6D[67]['activateButtonSpinner'](Q6N[92]);
          S2N[1] = Q6N[85]['value'];
          S2N[6] = Q6N[76]['value'];
          Q6N[22]['m']['n'] = S2N[1];
          Q6N[22]['m']['a'] = V6D[67]['userName'];
          U3ndn.S2t(95);
          Q6N[22]['m']['pub'] = U3ndn.E_K(1, S2N[6]);
          if (Q6N[22]['m']['cr']['indexOf'](V6D[67]['userName']) == - 1) {
            Q6N[22]['m']['cr']['push'](V6D[67]['userName']);
          }
          S2N[7] = E['encodeToDatabase'](Q6N[22]);
          $['post']('https://bonk2.io/scripts/map_save_pub.php', {
            mapname: S2N[1],
            overwriteok: 'false',
            leveldata: S2N[7],
            token: Q6N[19],
            rxid: Q6N[22]['m']['rxid'],
            rxdb: Q6N[22]['m']['rxdb'],
            rxn: Q6N[22]['m']['rxn'],
            rxa: Q6N[22]['m']['rxa'],
            public: S2N[6],
            mo: Q6N[22]['m']['mo']
          }) ['done']((s6v, E$5) =>{
            var m0U;
            var Q_V;
            var n$o;
            U3ndn.Y$U();
            var z4U = r8no$;
            V6D[67][z4U[1074]](Q6N[92]);
            if (s6v[z4U[61]] == 'overwrite_confirm') {
              Q6N[51][z4U[459]][z4U[1023]] = 'none';
              Q6N[99][z4U[459]][z4U[1023]] = 'block';
            } else if (s6v[z4U[61]] == 'success') {
              Q6N[51][z4U[459]][z4U[1023]] = 'none';
              Q6N[22][z4U[125]][z4U[655]] = parseInt(s6v[z4U[1465]]);
            } else {
              m0U = - 1362960612;
              Q_V = - 1011076991;
              n$o = 2;
              for (var U1t = 1; U3ndn.v9p(U1t.toString(), U1t.toString().length, 87033) !== m0U; U1t++) {
                throw new Error('');
                n$o += 2;
              }
              if (U3ndn.v9p(n$o.toString(), n$o.toString().length, 96518) !== Q_V) {
                throw new Error('');
              }
              throw new Error('Map save error');
            }
          }) ['fail'](function (p$3, m3f, n90) {
            var n5l = [
              arguments
            ];
            n5l[6] = r8no$;
            V6D[67]['deactivateButtonSpinner'](Q6N[92]);
          });
        };
        Q6N[66]['onclick'] = function () {
          var Y5x = [
            arguments
          ];
          Y5x[8] = r8no$;
          V6D[67]['activateButtonSpinner'](Q6N[66]);
          U3ndn.Y$U();
          $['post']('https://bonk2.io/scripts/map_save_pub.php', {
            mapname: S2N[1],
            overwriteok: 'true',
            leveldata: S2N[7],
            token: Q6N[19],
            rxid: Q6N[22]['m']['rxid'],
            rxdb: Q6N[22]['m']['rxdb'],
            rxn: Q6N[22]['m']['rxn'],
            rxa: Q6N[22]['m']['rxa'],
            public: S2N[6],
            mo: Q6N[22]['m']['mo']
          }) ['done']((N03, t$Z) =>{
            var H3o = r8no$;
            V6D[67][H3o[1074]](Q6N[66]);
            if (N03[H3o[61]] == 'success') {
              Q6N[99][H3o[459]][H3o[1023]] = 'none';
            } else {
              throw new Error('Map save error');
            }
          }) ['fail'](function (I7T, j0l, A3w) {
            var c82 = [
              arguments
            ];
            U3ndn.w30();
            c82[1] = r8no$;
            V6D[67]['deactivateButtonSpinner'](Q6N[66]);
          });
        };
      };
      document['getElementById']('mapeditor_bp_type') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('BPTYPE');
      };
      document['getElementById']('mapeditor_bp_x') ['onmouseover'] = function () {
        G3q('BPX');
      };
      document['getElementById']('mapeditor_bp_y') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('BPY');
      };
      document['getElementById']('mapeditor_bp_angle') ['onmouseover'] = function () {
        G3q('BPANGLE');
      };
      document['getElementById']('mapeditor_bp_bounciness') ['onmouseover'] = function () {
        var m_O = [
          arguments
        ];
        m_O[5] = - 925692389;
        m_O[3] = 1289232256;
        U3ndn.w30();
        m_O[7] = 2;
        for (m_O[1] = 1; U3ndn.P5V(m_O[1].toString(), m_O[1].toString().length, 52881) !== m_O[5]; m_O[1]++) {
          G3q('');
          m_O[7] += 2;
        }
        if (U3ndn.P5V(m_O[7].toString(), m_O[7].toString().length, 68592) !== m_O[3]) {
          G3q('');
        }
        G3q('BPBOUNCINESS');
      };
      document['getElementById']('mapeditor_bp_density') ['onmouseover'] = function () {
        G3q('BPDENSITY');
      };
      document['getElementById']('mapeditor_bp_friction') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('BPFRICTION');
      };
      document['getElementById']('mapeditor_bp_fricplayers') ['onmouseover'] = function () {
        G3q('BPFRICPLAYERS');
      };
      document['getElementById']('mapeditor_bp_bullet') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('BPBULLET');
      };
      document['getElementById']('mapeditor_bp_collidegroup') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('BPCOLLIDEGROUP');
      };
      document['getElementById']('mapeditor_bp_collidewith') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('BPCOLLIDEWITH');
      };
      document['getElementById']('mapeditor_mv_xv') ['onmouseover'] = function () {
        G3q('MVXV');
      };
      document['getElementById']('mapeditor_mv_yv') ['onmouseover'] = function () {
        G3q('MVYV');
      };
      document['getElementById']('mapeditor_mv_startspin') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('MVSTARTSPIN');
      };
      document['getElementById']('mapeditor_mv_lineardrag') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('MVLINEARDRAG');
      };
      document['getElementById']('mapeditor_mv_spindrag') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('MVANGULARDRAG');
      };
      document['getElementById']('mapeditor_mv_fixedrotation') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('MVFIXEDROTATION');
      };
      document['getElementById']('mapeditor_mv_xforce') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('MVXFORCE');
      };
      document['getElementById']('mapeditor_mv_yforce') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('MVYFORCE');
      };
      document['getElementById']('mapeditor_mv_fd') ['onmouseover'] = function () {
        U3ndn.w30();
        G3q('MVFORCEDIRECTION');
      };
      document['getElementById']('mapeditor_mv_at') ['onmouseover'] = function () {
        U3ndn.Y$U();
        G3q('MVAPPLYTORQUE');
      };
      Q6N[93] = {
      };
      Q6N[93]['NEWCIRCLEPLAT1'] = {
        i: 'y',
        m: 'Click on the stage to mark where you want the center of the circle to be. Click Cancel Drawing at the top to abort.'
      };
      Q6N[93]['NEWCIRCLEPLAT2'] = {
        i: 'y',
        m: 'Move the mouse to set the circle size, and click again when you\'re happy.'
      };
      Q6N[93]['NEWCIRCLEPLAT3'] = {
        i: 'r',
        m: 'Platform created. Give it a name to keep things organised.'
      };
      Q6N[93]['NEWBOXPLAT1'] = {
        i: 'y',
        m: 'Click on the stage where you want one end of the rectangle to be.'
      };
      Q6N[93]['NEWBOXPLAT2'] = {
        i: 'y',
        m: 'Click on the stage where you want the other end of the rectangle to be.'
      };
      Q6N[93]['NEWBOXPLAT3'] = {
        i: 'y',
        m: 'Move the mouse to set the rectangle height, and click again when you\'re happy.'
      };
      Q6N[93]['NEWBOXPLAT4'] = {
        i: 'r',
        m: 'Platform created. Give it a name to keep things organised.'
      };
      Q6N[93]['NEWPOLYPLAT1'] = {
        i: 'y',
        m: 'Click on the stage to set the center point of the polygon. When scaling or rotating the polygon, this is the point it will be done around. It should be in the center of all the points, but it doesn\'t need to be perfect.'
      };
      Q6N[93]['NEWPOLYPLAT2'] = {
        i: 'y',
        m: 'Click somewhere to place the first point of the polygon. You can place as many points as you like, but remember that only convex polygons can have physics.'
      };
      Q6N[93]['NEWPOLYPLAT3'] = {
        i: 'y',
        m: 'Continue clicking to keep placing more points of the polygon. Click the first point to complete the shape. You can place as many points as you like, but remember that only convex polygons can have physics.'
      };
      Q6N[93]['NEWPOLYPLAT4'] = {
        i: 'r',
        m: 'Platform created. Give it a name to keep things organised.'
      };
      Q6N[93]['NEWMAP'] = {
        i: 'y',
        m: ''
      };
      Q6N[93]['LOADEDMAP'] = {
        i: 'y',
        m: ''
      };
      Q6N[93]['SHAPEFRICPLAYERS'] = {
        i: 'n',
        m: U3ndn.j31(698) /*Whether or not this platforms friction value will also apply friction to players.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.*/
      };
      Q6N[93]['SHAPEFRIC'] = {
        i: 'n',
        m: U3ndn.j31(2391) /*How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.*/
      };
      Q6N[93]['SHAPEDENSITY'] = {
        i: 'n',
        m: U3ndn.j31(1494) /*How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.*/
      };
      Q6N[93]['SHAPEBOUNCINESS'] = {
        i: 'n',
        m: U3ndn.j31(1399) /*How fast this or another shape moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.*/
      };
      Q6N[93]['SHAPEDEATH'] = {
        i: 'n',
        m: 'Kills players if they touch it.'
      };
      Q6N[93]['SHAPENOPHYSICS'] = {
        i: 'n',
        m: 'If no physics is enabled, this shape will only be visual, it won\'t take part in any physics calculations. Use this for scenery and cosmetic details. You should set as many of your shapes as possible to be no-physics, to reduce the lag on your map. Non-convex polygon shapes must be no-physics.'
      };
      Q6N[93]['SHAPENOGRAPPLE'] = {
        i: 'n',
        m: 'If no grapple is enabled, players will not be able to grapple it when playing Grapple mode. If no physics is on, you don\'t need to turn on no grapple as well. If you want to be able to grapple this shape but you don\'t want players to collide with it, turn off \'Collide with: Players\' in Basic Properties and leave \'no grapple\' off.'
      };
      Q6N[93]['SHAPEINNERGRAPPLE'] = {
        i: 'n',
        m: 'If inner grapple is enabled, players passing through this shape (because its \'Collide with: players\' is off) will be able to initiate a grapple on the edge of the shape from inside it. If it\'s disabled, they wont.'
      };
      Q6N[93]['SHAPESHRINK'] = {
        i: 'n',
        m: 'If this shape is a rectangle or circle, it can shrink gradually.'
      };
      Q6N[93]['POLYSCALE'] = {
        i: 'n',
        m: 'Use this to shrink or grow the polygon shape. All the points in the polygon will be scaled from the center point, set when the shape was created.'
      };
      Q6N[93]['POLYANGLE'] = {
        i: 'n',
        m: 'Use this to rotate the polygon shape, around the center point, set when the shape was created.'
      };
      Q6N[93]['POLYY'] = {
        i: 'n',
        m: 'The Y position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['POLYX'] = {
        i: 'n',
        m: 'The X position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['POLYCONVEX'] = {
        i: 'n',
        m: 'Whether or not your polygon shape is convex. Polygon shapes must be convex if you want them to have physics. Google concave vs convex if you don\'t know the difference! The easiest way to remember is that concave shapes have \'caves\' in them, convex shapes don\'t!'
      };
      Q6N[93]['CIRCLERADIUS'] = {
        i: 'n',
        m: 'The radius of the circle shape.'
      };
      Q6N[93]['CIRCLEY'] = {
        i: 'n',
        m: 'The Y position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['CIRCLEX'] = {
        i: 'n',
        m: 'The X position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['BXANGLE'] = {
        i: 'n',
        m: 'The angle of the rectangle shape, relative to the angle of the platform.'
      };
      Q6N[93]['BXHEIGHT'] = {
        i: 'n',
        m: 'The height of the rectangle shape.'
      };
      Q6N[93]['BXWIDTH'] = {
        i: 'n',
        m: 'The width of the rectangle shape.'
      };
      Q6N[93]['BXY'] = {
        i: 'n',
        m: 'The Y position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['BXX'] = {
        i: 'n',
        m: 'The X position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.'
      };
      Q6N[93]['JOINTBREAKFORCE'] = {
        i: 'n',
        m: 'If this is set to 0, the joint will never break. If it is set higher than zero, the joint will break if more than that much force is put through it. This force can come from the weight of the platforms themselves, and from collisions.'
      };
      Q6N[93]['JOINTDRAWLINE'] = {
        i: 'n',
        m: 'Whether or not to draw a line for the joint in game. NOTE: lines are always drawn for joints inside the editor.'
      };
      Q6N[93]['LPJMOVEFORCE'] = {
        i: 'n',
        m: 'How much force is used to accelerate the platform along the path.'
      };
      Q6N[93]['LPJMOVESPEED'] = {
        i: 'n',
        m: 'The speed limit of the platform. If it moves faster than this speed, the move force will be applied to prevent it from moving faster than this speed limit.'
      };
      Q6N[93]['LPJPATHLENGTH'] = {
        i: 'n',
        m: 'How far the platform moves before changing direction.'
      };
      Q6N[93]['LPJPATHANGLE'] = {
        i: 'n',
        m: 'The angle of the path the platform moves along.'
      };
      Q6N[93]['LSJSPRINGLENGTH'] = {
        i: 'n',
        m: 'The default length of the spring. It will stretch longer than this length if the force is too weak to move the platform.'
      };
      Q6N[93]['LSJSPRINGFORCE'] = {
        i: 'n',
        m: 'The strength of the spring, how much force it applies to move the platform. If it is too weak it wont be able to hold the platform up.'
      };
      Q6N[93]['JOINTCC'] = {
        i: 'n',
        m: 'This checkbox will only do anything if the joints Attach To has been set to another platform. If it is checked, this platform will collide with that platform, if it\'s not then it wont.'
      };
      Q6N[93]['RODDAMPING'] = {
        i: 'n',
        m: 'This will only do anything if the Softness isn\'t set to zero. Increasing damping will mean that the platform doesn\'t bounce forever when the joint is soft.'
      };
      Q6N[93]['RODSOFTNESS'] = {
        i: 'n',
        m: 'How soft this joint is - how much the rod joint is allowed to stretch or compress from its original length. The default is set to 0.1 because some flexibility helps prevent glitches, but use 0 if you want it to be rigid.'
      };
      Q6N[93]['RODATTATCHY'] = {
        i: 'n',
        m: 'The Y co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.'
      };
      Q6N[93]['RODATTATCHX'] = {
        i: 'n',
        m: 'The X co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.'
      };
      Q6N[93]['RODLOCALY'] = {
        i: 'n',
        m: 'The Y co-ordinate of where on this platform the rod joint attaches to.'
      };
      Q6N[93]['RODLOCALX'] = {
        i: 'n',
        m: 'The X co-ordinate of where on this platform the rod joint attaches to.'
      };
      Q6N[93]['RVANGLETO'] = {
        i: 'n',
        m: 'This will only do anything if Angle Limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.'
      };
      Q6N[93]['RVANGLEFROM'] = {
        i: 'n',
        m: 'This will only do anything if angle limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.'
      };
      Q6N[93]['RVANGLELIMIT'] = {
        i: 'n',
        m: 'Prevent this joint from rotating outside of the specified angles. Make sure you set the from and to angles.'
      };
      Q6N[93]['RVTURNFORCE'] = {
        i: 'n',
        m: 'This will only do anything if Enable Motor is checked. The amount of force used to rotate the platform.'
      };
      Q6N[93]['RVTURNSPEED'] = {
        i: 'n',
        m: 'This will only do anything if Enable Motor is checked. The max speed the motor will accelerate the platform to.'
      };
      Q6N[93]['RVENABLEMOTOR'] = {
        i: 'n',
        m: 'Whether the joint will apply a force to turn the platform.'
      };
      Q6N[93]['RVPIVOTY'] = {
        i: 'n',
        m: 'The Y co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.'
      };
      Q6N[93]['RVPIVOTX'] = {
        i: 'n',
        m: 'The X co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.'
      };
      Q6N[93]['RVATTATCHTO'] = {
        i: 'n',
        m: 'Use this to select a platform to attach the pivot point to.'
      };
      Q6N[93]['RODATTACHTO'] = {
        i: 'n',
        m: 'Use this to select a platform to attach the far end of the rod joint to.'
      };
      Q6N[93]['BPTYPE'] = {
        i: 'n',
        m: U3ndn.j31(1048) /*How the physics of this platform behaves.
Stationary: Never moves.
Free moving: Moves and collides with other platforms.
Kinematic: Moves but will never be affected by anything else. They will pass through other kinematic or static bodies. Use the start speed/spin values to make them move.*/
      };
      Q6N[93]['BPX'] = {
        i: 'n',
        m: 'The X position of this body. 0,0 is the center of the stage.'
      };
      Q6N[93]['BPY'] = {
        i: 'n',
        m: 'The Y position of this body. 0,0 is the center of the stage.'
      };
      Q6N[93]['BPANGLE'] = {
        i: 'n',
        m: 'The angle of this platform, in degrees, clockwise.'
      };
      Q6N[93]['BPBOUNCINESS'] = {
        i: 'n',
        m: U3ndn.j31(3514) /*How fast this or another platform moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape*/
      };
      Q6N[93]['BPDENSITY'] = {
        i: 'n',
        m: U3ndn.j31(2519) /*How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape*/
      };
      Q6N[93]['BPFRICTION'] = {
        i: 'n',
        m: U3ndn.j31(4152) /*How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape*/
      };
      Q6N[93]['BPFRICPLAYERS'] = {
        i: 'n',
        m: U3ndn.j31(244) /*Whether or not this platforms friction value will also apply friction to players.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape*/
      };
      Q6N[93]['BPCOLLIDEGROUP'] = {
        i: 'n',
        m: 'The collision group this platform belongs to. You can put platforms into categories, and then set any platform not to collide with those categories.'
      };
      Q6N[93]['BPCOLLIDEWITH'] = {
        i: 'n',
        m: 'Which collision groups this platform will collide with.'
      };
      Q6N[93]['MVXV'] = {
        i: 'n',
        m: 'The X velocity this platform starts with.'
      };
      Q6N[93]['MVYV'] = {
        i: 'n',
        m: 'The Y velocity this platform starts with.'
      };
      Q6N[93]['MVSTARTSPIN'] = {
        i: 'n',
        m: 'The rotational velocity this platform starts with.'
      };
      Q6N[93]['MVLINEARDRAG'] = {
        i: 'n',
        m: 'How much this platforms movement slows down over time, even if it doesn\'t collide with anything.'
      };
      Q6N[93]['MVANGULARDRAG'] = {
        i: 'n',
        m: 'How much this platforms rotation slows down over time, even if it doesn\'t collide with anything.'
      };
      Q6N[93]['MVFIXEDROTATION'] = {
        i: 'n',
        m: 'Set this to Yes to force this platform to always stay at the same angle. If this platform is involved in a rotation joint, fixed rotation won\'t work.'
      };
      Q6N[93]['MVXFORCE'] = {
        i: 'n',
        m: 'How much force to constantly apply to this platform, in the X axis.'
      };
      Q6N[93]['MVYFORCE'] = {
        i: 'n',
        m: 'How much force to constantly apply to this platform, in the Y axis. Gravity is 20, so set this to -20 to make it float.'
      };
      Q6N[93]['MVFORCEDIRECTION'] = {
        i: 'n',
        m: U3ndn.j31(3063) /*Absolute: The Apply X and Y Force values are absolute, so X is always left/right and Y is always up/down.
Relative: X and Y are relative to the angle of the platform itself. You can use this to create objects that behave like rockets, accelerating in the direction they are facing. */
      };
      Q6N[93]['MVAPPLYTORQUE'] = {
        i: 'n',
        m: 'How much torque to constantly apply to this platform, to cause it to spin.'
      };
      Q6N[93]['CANCELDRAWING'] = {
        i: 'r',
        m: 'Drawing cancelled.'
      };
      Q6N[93]['CAPSHAPE'] = {
        i: 'n',
        m: 'Capture zones use pre existing shapes to set their boundaries. Select the shape that this capture zone will use. You can use any shape on your map, so it can be a single shape in a stationary body, or a shape that\'s part of a complex, moving platform.'
      };
      Q6N[93]['CAPTIME'] = {
        i: 'n',
        m: 'How long in seconds this spawn point will take to be captured.'
      };
      Q6N[93]['CAPTYPE'] = {
        i: 'n',
        m: 'When set to a normal cap zone, players will touch the cap zone to gradually capture it and win the game, either individually or as a team. Instantly win cap zones will instantly win the game for one team. These instant team cap zones aren\'t triggered by players, but by other platforms touching the cap zone. '
      };
      Q6N[93]['GRIDSIZE'] = {
        i: 'n',
        m: 'The size of the snap grid, make sure to turn it on with the grid button in the top left. '
      };
      Q6N[93]['SPAWNX'] = {
        i: 'n',
        m: 'The X position of the spawn point.'
      };
      Q6N[93]['SPAWNY'] = {
        i: 'n',
        m: 'The Y position of the spawn point.'
      };
      Q6N[93]['SPAWNXV'] = {
        i: 'n',
        m: 'Players spawning at this point will start with this X velocity'
      };
      Q6N[93]['SPAWNYV'] = {
        i: 'n',
        m: 'Players spawning at this point will start with this Y velocity'
      };
      Q6N[93]['SPAWNBOXES'] = {
        i: 'n',
        m: 'Choose which players will spawn at this point.'
      };
      Q6N[93]['SPAWNPRIORITY'] = {
        i: 'n',
        m: 'Higher priority spawn points will be used to spawn players before lower priority spawn points. For example if there are 3 red spawn points with priorities 100, 50 and 10, and there are two red players, they will randomly spawn at the points with priority 100 and 50.'
      };
      Q6N[93]['BPBULLET'] = {
        i: 'n',
        m: 'If you are having issues with this platform passing through other platforms at high speed, or other platforms moving at high speed passing through this one, turn on Anti Tunneling to prevent it from happening. This increases lag, so only use it where it\'s necessary.'
      };
      Q6N[93]['MSCOMPLEXPHYSICS'] = {
        i: 'n',
        m: 'Turn this on to increase the accuracy of the physics calculations. If you are stacking lots of free moving objects on top of each other, this will help to prevent them from collapsing inside each other, and it will help prevent objects from slowly moving through gaps they shouldn\'t fit through. This increases lag, so only use it if your map doesn\'t work without it.'
      };
      Q6N[93]['MSMAPSIZE'] = {
        i: 'n',
        m: 'The size of the map, relative to players. Place some spawns down before changing this to see the effect it\'s having.'
      };
      Q6N[93]['MSPLAYERSDONTCOLLIDE'] = {
        i: 'n',
        m: 'If this is checked, players won\'t collide.'
      };
      Q6N[93]['MSRESPAWN'] = {
        i: 'n',
        m: 'If this is checked, players will respawn when they die. Games must be won by capturing cap zones.'
      };
      Q6N[93]['FORMODE'] = {
        i: 'n',
        m: 'Indicate what mode this map has been designed for. This is just to indicate to players what mode you designed it for, it does not affect which hot list your map will be shown in.'
      };
      Q6N[93]['MSFLY'] = {
        i: 'n',
        m: 'If this is checked, players can fly.'
      };
      Q6N[71] = document['getElementById']('mapeditor_midbox_shapecount');
      Q6N[13] = document['getElementById']('mapeditor_midbox_explain');
      Q6N[95] = false;
      Q6N[70] = document['getElementById']('mapeditor_midbox_modebox');
      Q6N[88] = document['createElement']('select');
      Q6N[88]['classList']['add']('mapeditor_midbox_modebox_select');
      Q6N[88]['id'] = 'mapeditor_modeselect';
      Q6N[70]['appendChild'](Q6N[88]);
      Q6N[73] = [
      ];
      Q6N[73]['push']({
        value: '',
        text: 'Any'
      });
      for (Q6N[427] = 0; Q6N[427] < V6D[61]['lobbyModes']['length']; Q6N[427]++) {
        Q6N[54] = V6D[61]['lobbyModes'][Q6N[427]];
        if (V6D[61]['modes'][Q6N[54]]['editorCanTarget'] == false) {
          continue;
        }
        Q6N[31] = V6D[61]['modes'][Q6N[54]]['lobbyName'];
        Q6N[73]['push']({
          value: Q6N[54],
          text: Q6N[31]
        });
      }
      for (Q6N[198] = 0; Q6N[198] < Q6N[73]['length']; Q6N[198]++) {
        Q6N[21] = Q6N[73][Q6N[198]]['value'];
        Q6N[91] = Q6N[73][Q6N[198]]['text'];
        Q6N[14] = document['createElement']('option');
        Q6N[14]['value'] = Q6N[21];
        Q6N[14]['textContent'] = Q6N[91];
        Q6N[88]['appendChild'](Q6N[14]);
      }
      Q6N[88]['onchange'] = function () {
        var N63 = [
          arguments
        ];
        N63[3] = r8no$;
        N63[7] = this['value'];
        Q6N[22]['m']['mo'] = N63[7];
        t$S();
      };
      Q6N[70]['onmouseover'] = function () {
        U3ndn.w30();
        G3q('FORMODE');
      };
      Q6N[32] = document['getElementById']('mapeditor_leftbox_scrollcontainer');
      Q6N[18] = document['getElementById']('mapeditor_leftbox_addbutton');
      Q6N[43] = document['getElementById']('mapeditor_leftbox_deletebutton');
      Q6N[43]['onclick'] = g7x;
      Q6N[43]['onmouseover'] = function () {
        var P51 = [
          arguments
        ];
        P51[8] = r8no$;
        U3ndn.w30();
        if (Q6N[310] != - 1) {
          Q6N[57]['highlightPlatform'](Q6N[310]);
          if (Q6N[29] == false) {
            k_I(true);
          }
        }
      };
      Q6N[43]['onmouseout'] = function () {
        var r$j = [
          arguments
        ];
        r$j[2] = r8no$;
        U3ndn.Y$U();
        if (Q6N[310] != - 1) {
          Q6N[57]['clearHighlightPlatform']();
          if (Q6N[29] == false) {
            k_I(true);
          }
        }
      };
      Q6N[87] = document['getElementById']('mapeditor_leftbox_createmenucontainerleft');
      Q6N[28] = document['getElementById']('mapeditor_leftbox_createmenucontainerright');
      Q6N[78] = document['getElementById']('mapeditor_leftbox_createmenu_platformmenu');
      Q6N[37] = document['getElementById']('mapeditor_leftbox_createmenu_spawn');
      Q6N[26] = document['getElementById']('mapeditor_leftbox_createmenu_capzone');
      Q6N[12] = document['getElementById']('mapeditor_leftbox_createmenu_platform_s');
      Q6N[69] = document['getElementById']('mapeditor_leftbox_createmenu_platform_d');
      Q6N[36] = document['getElementById']('mapeditor_leftbox_createmenu_platform_np');
      Q6N[74] = document['getElementById']('mapeditor_leftbox_createmenu_platform_circle');
      Q6N[83] = document['getElementById']('mapeditor_leftbox_createmenu_platform_rectangle');
      Q6N[97] = document['getElementById']('mapeditor_leftbox_createmenu_platform_polygon');
      Q6N[35] = document['getElementById']('mapeditor_leftbox_copywindow');
      Q6N[62] = document['getElementById']('mapeditor_rightbox_newjointbutton');
      Q6N[68] = document['getElementById']('mapeditor_rightbox_newjointmenucontainer');
      Q6N[17] = document['getElementById']('mapeditor_rightbox_newjointmenu');
      Q6N[90] = document['getElementById']('mapeditor_rightbox_newjointmenu_rv');
      Q6N[63] = document['getElementById']('mapeditor_rightbox_newjointmenu_lpj');
      Q6N[64] = document['getElementById']('mapeditor_rightbox_newjointmenu_lsj');
      Q6N[72] = document['getElementById']('mapeditor_rightbox_newjointmenu_rod');
      Q6N[62]['onclick'] = function () {
        var O82 = [
          arguments
        ];
        O82[5] = r8no$;
        if (Q6N[17]['style']['visibility'] == 'inherit') {
          P0v();
        } else {
          Q6N[17]['style']['visibility'] = 'inherit';
        }
      };
      Q6N[90]['onclick'] = function () {
        n47(Q6N[310], 'rotating');
        U3ndn.Y$U();
        P0v();
        t$S();
      };
      Q6N[63]['onclick'] = function () {
        n47(Q6N[310], 'lpj');
        P0v();
        U3ndn.Y$U();
        t$S();
      };
      Q6N[64]['onclick'] = function () {
        n47(Q6N[310], 'lsj');
        P0v();
        t$S();
      };
      Q6N[72]['onclick'] = function () {
        n47(Q6N[310], 'rod');
        P0v();
        t$S();
      };
      Q6N[74]['onclick'] = function () {
        U3ndn.Y$U();
        M6d();
        d0O();
      };
      Q6N[83]['onclick'] = function () {
        e1R();
        U3ndn.Y$U();
        d0O();
      };
      Q6N[97]['onclick'] = function () {
        X0h();
        d0O();
      };
      Q6N[18]['onclick'] = n88;
      Q6N[37]['onclick'] = function () {
        U3ndn.w30();
        l9K();
        d0O();
      };
      Q6N[26]['onclick'] = function () {
        var R4Y = [
          arguments
        ];
        R4Y[1] = r8no$;
        Q6N[22]['capZones']['push'](E['getNewCapZone']());
        U3ndn.S2t(60);
        R4Y[4] = U3ndn.E_K(20, 176, 294);
        U3ndn.S2t(120);
        R4Y[7] = U3ndn.I8r(7, 10, 1088, 15, 752);
        U3ndn.z_y(57);
        R4Y[9] = U3ndn.E_K(10, 11);
        Q6N[747] = Q6N[22][r8no$[R4Y[4]]][r8no$[R4Y[7]]] - R4Y[9];
        Q6N[144] = - 1;
        U3ndn.Y$U();
        Q6N[310] = - 1;
        t5w();
        h7z();
        d0O();
        O8$();
      };
      Q6N[12]['onclick'] = function () {
        Q6N[55] = 's';
        Q6N[48] = false;
        U3ndn.w30();
        K73();
      };
      Q6N[69]['onclick'] = function () {
        Q6N[55] = 'd';
        Q6N[48] = false;
        K73();
      };
      Q6N[36]['onclick'] = function () {
        Q6N[55] = 's';
        Q6N[48] = true;
        K73();
      };
      Q6N[24] = new m5;
      Q6N[15] = document['getElementById']('mapeditor_leftbox_copybutton');
      Q6N[15]['onclick'] = V13;
      Q6N[39] = document['getElementById']('mapeditor_leftbox_copywindow_mvx');
      Q6N[77] = document['getElementById']('mapeditor_leftbox_copywindow_mvy');
      Q6N[30] = document['getElementById']('mapeditor_leftbox_copywindow_mix');
      Q6N[81] = document['getElementById']('mapeditor_leftbox_copywindow_miy');
      Q6N[96] = document['getElementById']('mapeditor_leftbox_copywindow_r-90');
      Q6N[38] = document['getElementById']('mapeditor_leftbox_copywindow_r180');
      Q6N[94] = document['getElementById']('mapeditor_leftbox_copywindow_r90');
      Q6N[10] = document['getElementById']('mapeditor_leftbox_copywindowbutton');
      Q6N[96]['onchange'] = function () {
        var R_p = [
          arguments
        ];
        R_p[1] = r8no$;
        Q6N[38]['checked'] = false;
        Q6N[94]['checked'] = false;
      };
      Q6N[38]['onchange'] = function () {
        var V45 = [
          arguments
        ];
        V45[3] = r8no$;
        Q6N[96]['checked'] = false;
        Q6N[94]['checked'] = false;
      };
      Q6N[94]['onchange'] = function () {
        var A_h = [
          arguments
        ];
        A_h[4] = r8no$;
        Q6N[38]['checked'] = false;
        Q6N[96]['checked'] = false;
      };
      Q6N[10]['onclick'] = function () {
        var j$K = [
          arguments
        ];
        j$K[5] = r8no$;
        j$K[3] = {
        };
        j$K[3]['invertXPos'] = Q6N[39]['checked'];
        j$K[3]['invertYPos'] = Q6N[77]['checked'];
        j$K[3]['mirrorX'] = Q6N[30]['checked'];
        j$K[3]['mirrorY'] = Q6N[81]['checked'];
        j$K[3]['rotate'] = 0;
        if (Q6N[96]['checked']) {
          j$K[3]['rotate'] = - 90;
        }
        if (Q6N[94]['checked']) {
          j$K[3]['rotate'] = 90;
        }
        if (Q6N[38]['checked']) {
          j$K[3]['rotate'] = 180;
        }
        f4E();
        U3ndn.Y$U();
        if (Q6N[310] == - 1) {
          if (Q6N[144] != - 1) {
            j$K[3]['target'] = Q6N[144];
            d1x(j$K[3]);
            U3ndn.S2t(122);
            j$K[6] = U3ndn.E_K(12, 1976, 72, 497, 8);
            U3ndn.S2t(19);
            j$K[4] = U3ndn.I8r(139, 14, 4, 8, 188);
            U3ndn.z_y(6);
            j$K[1] = U3ndn.I8r(0, 1);
            Q6N[144] = Q6N[22][r8no$[j$K[6]]][r8no$[j$K[4]]] - j$K[1];
            k_I(false);
            M6K();
            O8$();
            t5w();
            t$S();
          }
        } else {
          j$K[3]['target'] = Q6N[310];
          i2W(j$K[3]);
          U3ndn.S2t(105);
          j$K[9] = U3ndn.E_K(10, 32, 51, 16);
          U3ndn.z_y(45);
          j$K[7] = U3ndn.I8r(11, 2, 766, 37);
          U3ndn.z_y(1);
          j$K[2] = U3ndn.I8r(329, 282);
          U3ndn.z_y(9);
          j$K[8] = U3ndn.E_K(8, 135, 17);
          Q6N[310] = Q6N[22][r8no$[j$K[9]]][r8no$[j$K[7]]][r8no$[j$K[2]]] - j$K[8];
          k_I(true);
          H3s();
          O8$();
          t5w();
          c0S();
          t$S();
        }
      };
      Q6N[65] = document['getElementById']('mapeditor_leftbox_upbutton');
      Q6N[845] = document['getElementById']('mapeditor_leftbox_downbutton');
      Q6N[65]['onclick'] = L0U;
      Q6N[845]['onclick'] = L0U;
      Q6N[525] = document['getElementById']('mapeditor_midbox_playbutton');
      Q6N[525]['onclick'] = L39;
      Q6N[603] = false;
      Q6N[989] = false;
      Q6N[922] = false;
      Q6N[310] = - 1;
      Q6N[144] = - 1;
      Q6N[747] = - 1;
      Q6N[180] = null;
      Q6N[352] = document['getElementById']('mapeditor_rightbox_namefield');
      Q6N[782] = document['getElementById']('mapeditor_rightbox_platformparams');
      Q6N[556] = document['getElementById']('mapeditor_rightbox_spawnparams');
      Q6N[381] = document['getElementById']('mapeditor_rightbox_capzoneparams');
      Q6N[644] = document['getElementById']('mapeditor_rightbox_mapparams');
      Q6N[632] = document['getElementById']('mapeditor_rightbox_basicheading');
      Q6N[868] = document['getElementById']('mapeditor_rightbox_dynamicheading');
      Q6N[873] = document['getElementById']('mapeditor_rightbox_jointheading');
      Q6N[680] = document['getElementById']('mapeditor_rightbox_shapeheading');
      Q6N[885] = document['getElementById']('mapeditor_rightbox_table_simple');
      Q6N[859] = document['getElementById']('mapeditor_rightbox_table_dynamic');
      Q6N[377] = document['getElementById']('mapeditor_rightbox_shapetablecontainer');
      Q6N[948] = document['getElementById']('mapeditor_rightbox_jointtablecontainer');
      Q6N[885]['style']['display'] = 'none';
      Q6N[859]['style']['display'] = 'none';
      Q6N[377]['style']['display'] = 'none';
      Q6N[948]['style']['display'] = 'none';
      Q6N[406] = document['getElementById']('mapeditor_rightbox_shapeaddcontainer');
      Q6N[787] = document['getElementById']('mapeditor_rightbox_addnewshapebutton');
      Q6N[796] = document['getElementById']('mapeditor_rightbox_shapeaddmenucontainer');
      Q6N[839] = document['getElementById']('mapeditor_rightbox_shapeaddmenu_rectangle');
      Q6N[910] = document['getElementById']('mapeditor_rightbox_shapeaddmenu_circle');
      Q6N[112] = document['getElementById']('mapeditor_rightbox_shapeaddmenu_polygon');
      Q6N[787]['onclick'] = function () {
        U3ndn.Y$U();
        var o3g = [
          arguments
        ];
        o3g[9] = r8no$;
        if (Q6N[796]['style']['visibility'] == 'inherit') {
          Q6N[796]['style']['visibility'] = 'hidden';
        } else {
          Q6N[796]['style']['visibility'] = 'inherit';
        }
      };
      Q6N[910]['onclick'] = function () {
        var g09 = [
          arguments
        ];
        g09[9] = r8no$;
        M6d(Q6N[310]);
        U3ndn.w30();
        Q6N[796]['style']['visibility'] = 'hidden';
      };
      Q6N[839]['onclick'] = function () {
        var b1R = [
          arguments
        ];
        b1R[9] = r8no$;
        e1R(Q6N[310]);
        Q6N[796]['style']['visibility'] = 'hidden';
      };
      Q6N[112]['onclick'] = function () {
        U3ndn.Y$U();
        var y40 = [
          arguments
        ];
        y40[9] = r8no$;
        X0h(Q6N[310]);
        Q6N[796]['style']['visibility'] = 'hidden';
      };
      Q6N[632]['onclick'] = w93;
      Q6N[868]['onclick'] = w93;
      Q6N[680]['onclick'] = w93;
      Q6N[873]['onclick'] = w93;
      Q6N[351] = document['getElementById']('mapeditor_rightbox_table_x');
      Q6N[746] = document['getElementById']('mapeditor_rightbox_table_y');
      Q6N[437] = document['getElementById']('mapeditor_rightbox_table_angle');
      Q6N[940] = document['getElementById']('mapeditor_rightbox_table_restitution');
      Q6N[946] = document['getElementById']('mapeditor_rightbox_table_density');
      Q6N[949] = document['getElementById']('mapeditor_rightbox_table_friction');
      Q6N[596] = document['getElementById']('mapeditor_rightbox_table_frictionplayers');
      Q6N[826] = document['getElementById']('mapeditor_rightbox_table_bullet');
      Q6N[981] = document['getElementById']('mapeditor_rightbox_table_filtercategory');
      Q6N[364] = document['getElementById']('mapeditor_rightbox_table_collideP');
      Q6N[966] = document['getElementById']('mapeditor_rightbox_table_collideA');
      Q6N[447] = document['getElementById']('mapeditor_rightbox_table_collideB');
      Q6N[864] = document['getElementById']('mapeditor_rightbox_table_collideC');
      Q6N[932] = document['getElementById']('mapeditor_rightbox_table_collideD');
      Q6N[566] = document['getElementById']('mapeditor_rightbox_table_type');
      Q6N[456] = document['getElementById']('mapeditor_rightbox_table_xvel');
      Q6N[811] = document['getElementById']('mapeditor_rightbox_table_yvel');
      Q6N[236] = document['getElementById']('mapeditor_rightbox_table_av');
      Q6N[108] = document['getElementById']('mapeditor_rightbox_table_ld');
      Q6N[331] = document['getElementById']('mapeditor_rightbox_table_ad');
      Q6N[481] = document['getElementById']('mapeditor_x_down');
      Q6N[130] = document['getElementById']('mapeditor_y_down');
      Q6N[646] = document['getElementById']('mapeditor_angle_down');
      Q6N[109] = document['getElementById']('mapeditor_restitution_down');
      Q6N[765] = document['getElementById']('mapeditor_density_down');
      Q6N[432] = document['getElementById']('mapeditor_friction_down');
      Q6N[968] = document['getElementById']('mapeditor_x_up');
      Q6N[247] = document['getElementById']('mapeditor_y_up');
      Q6N[689] = document['getElementById']('mapeditor_angle_up');
      Q6N[700] = document['getElementById']('mapeditor_restitution_up');
      Q6N[446] = document['getElementById']('mapeditor_density_up');
      Q6N[639] = document['getElementById']('mapeditor_friction_up');
      Q6N[468] = document['getElementById']('mapeditor_xvel_down');
      Q6N[637] = document['getElementById']('mapeditor_yvel_down');
      Q6N[193] = document['getElementById']('mapeditor_sspin_down');
      Q6N[953] = document['getElementById']('mapeditor_ld_down');
      Q6N[973] = document['getElementById']('mapeditor_sd_down');
      Q6N[509] = document['getElementById']('mapeditor_cfx_down');
      Q6N[333] = document['getElementById']('mapeditor_cfy_down');
      Q6N[215] = document['getElementById']('mapeditor_cft_down');
      Q6N[328] = document['getElementById']('mapeditor_xvel_up');
      Q6N[311] = document['getElementById']('mapeditor_yvel_up');
      Q6N[736] = document['getElementById']('mapeditor_sspin_up');
      Q6N[543] = document['getElementById']('mapeditor_ld_up');
      Q6N[520] = document['getElementById']('mapeditor_sd_up');
      Q6N[131] = document['getElementById']('mapeditor_cfx_up');
      Q6N[505] = document['getElementById']('mapeditor_cfy_up');
      Q6N[634] = document['getElementById']('mapeditor_cft_up');
      Q6N[968]['onmousedown'] = r7W;
      Q6N[247]['onmousedown'] = r7W;
      Q6N[689]['onmousedown'] = r7W;
      Q6N[700]['onmousedown'] = r7W;
      Q6N[446]['onmousedown'] = r7W;
      Q6N[639]['onmousedown'] = r7W;
      Q6N[481]['onmousedown'] = r7W;
      Q6N[130]['onmousedown'] = r7W;
      Q6N[646]['onmousedown'] = r7W;
      Q6N[109]['onmousedown'] = r7W;
      Q6N[765]['onmousedown'] = r7W;
      Q6N[432]['onmousedown'] = r7W;
      Q6N[328]['onmousedown'] = r7W;
      Q6N[311]['onmousedown'] = r7W;
      Q6N[736]['onmousedown'] = r7W;
      Q6N[543]['onmousedown'] = r7W;
      Q6N[520]['onmousedown'] = r7W;
      Q6N[131]['onmousedown'] = r7W;
      Q6N[505]['onmousedown'] = r7W;
      Q6N[634]['onmousedown'] = r7W;
      Q6N[468]['onmousedown'] = r7W;
      Q6N[637]['onmousedown'] = r7W;
      Q6N[193]['onmousedown'] = r7W;
      Q6N[953]['onmousedown'] = r7W;
      Q6N[973]['onmousedown'] = r7W;
      Q6N[509]['onmousedown'] = r7W;
      Q6N[333]['onmousedown'] = r7W;
      Q6N[215]['onmousedown'] = r7W;
      Q6N[225] = null;
      Q6N[741] = null;
      Q6N[344] = null;
      Q6N[426] = null;
      Q6N[281] = false;
      Q6N[188] = document['getElementById']('mapeditor_midbox_settingsbutton');
      Q6N[103] = document['getElementById']('mapeditor_midbox_zoom_in');
      Q6N[874] = document['getElementById']('mapeditor_midbox_zoom_out');
      Q6N[324] = document['getElementById']('mapeditor_midbox_zoom_reset');
      Q6N[401] = document['getElementById']('mapeditor_midbox_cancel_drawing');
      Q6N[854] = document['getElementById']('mapeditor_midbox_grid');
      V6D[67]['setButtonSounds']([Q6N[188],
      Q6N[103],
      Q6N[874],
      Q6N[324],
      Q6N[525],
      Q6N[80],
      Q6N[401],
      Q6N[854],
      Q6N[33],
      Q6N[11],
      Q6N[50],
      Q6N[52],
      Q6N[41],
      Q6N[18],
      Q6N[43],
      Q6N[15],
      Q6N[10],
      Q6N[65],
      Q6N[845],
      Q6N[787],
      Q6N[839],
      Q6N[910],
      Q6N[112],
      Q6N[62],
      Q6N[90],
      Q6N[63],
      Q6N[64],
      Q6N[72],
      Q6N[37],
      Q6N[26],
      Q6N[12],
      Q6N[69],
      Q6N[36],
      Q6N[92],
      Q6N[47],
      Q6N[66],
      Q6N[58]]);
      Q6N[854]['onclick'] = function () {
        Q6N[281] = !Q6N[281];
        U3ndn.Y$U();
        v8Z();
        k_I(false);
      };
      Q6N[188]['onclick'] = function () {
        Q6N[310] = - 1;
        Q6N[144] = - 1;
        Q6N[747] = - 1;
        U3ndn.Y$U();
        b8l();
        r13();
      };
      Q6N[103]['onclick'] = F9U;
      Q6N[874]['onclick'] = Z1p;
      Q6N[324]['onclick'] = function () {
        var S3i = [
          arguments
        ];
        S3i[7] = r8no$;
        Q6N[57]['resetStage']();
        if (Q6N[29] == false) {
          k_I(false);
        }
      };
      Q6N[550] = 0;
      Q6N[141] = 0;
      Q6N[249] = document['getElementById']('mapeditor_rightbox_table_xvel');
      Q6N[305] = document['getElementById']('mapeditor_rightbox_table_yvel');
      Q6N[976] = document['getElementById']('mapeditor_rightbox_table_av');
      Q6N[108] = document['getElementById']('mapeditor_rightbox_table_ld');
      Q6N[435] = document['getElementById']('mapeditor_rightbox_table_ad');
      Q6N[127] = document['getElementById']('mapeditor_rightbox_table_fixedrotation');
      Q6N[585] = document['getElementById']('mapeditor_rightbox_table_cfx');
      Q6N[813] = document['getElementById']('mapeditor_rightbox_table_cfy');
      Q6N[653] = document['getElementById']('mapeditor_rightbox_table_cft');
      Q6N[961] = document['getElementById']('mapeditor_rightbox_table_forcedirection');
      Q6N[883] = [
      ];
      Q6N[993] = [
      ];
      Q6N[673] = document['getElementById']('mapeditor_rightbox_jointwarning');
      Q6N[351]['oninput'] = X$l;
      Q6N[746]['oninput'] = X$l;
      Q6N[437]['oninput'] = X$l;
      Q6N[940]['oninput'] = X$l;
      Q6N[946]['oninput'] = X$l;
      Q6N[949]['oninput'] = X$l;
      Q6N[249]['oninput'] = X$l;
      Q6N[305]['oninput'] = X$l;
      Q6N[976]['oninput'] = X$l;
      Q6N[108]['oninput'] = X$l;
      Q6N[435]['oninput'] = X$l;
      Q6N[585]['oninput'] = X$l;
      Q6N[813]['oninput'] = X$l;
      Q6N[653]['oninput'] = X$l;
      Q6N[961]['onchange'] = O02;
      Q6N[352]['oninput'] = B7y;
      Q6N[127]['onchange'] = W5A;
      Q6N[596]['onchange'] = m3$;
      Q6N[826]['onchange'] = H1L;
      Q6N[566]['onchange'] = o7m;
      Q6N[981]['onchange'] = b1a;
      Q6N[364]['onchange'] = function () {
        var I0k = [
          arguments
        ];
        I0k[2] = r8no$;
        Q6N[22]['physics']['bodies'][Q6N[310]]['f_p'] = Q6N[364]['checked'];
      };
      Q6N[966]['onchange'] = function () {
        var x0X = [
          arguments
        ];
        x0X[8] = r8no$;
        Q6N[22]['physics']['bodies'][Q6N[310]]['f_1'] = Q6N[966]['checked'];
      };
      Q6N[447]['onchange'] = function () {
        var Q$Y = [
          arguments
        ];
        Q$Y[4] = r8no$;
        Q6N[22]['physics']['bodies'][Q6N[310]]['f_2'] = Q6N[447]['checked'];
      };
      Q6N[864]['onchange'] = function () {
        var O__ = [
          arguments
        ];
        O__[2] = r8no$;
        O__[7] = 1757104602;
        O__[6] = - 635775615;
        O__[3] = 2;
        for (O__[1] = 1; U3ndn.P5V(O__[1].toString(), O__[1].toString().length, 43417) !== O__[7]; O__[1]++) {
          Q6N[22]['bb']['b2Fixture'][Q6N[310]]['dampingRatio'] = Q6N[864][r8no$[8278]];
          O__[3] += 2;
        }
        U3ndn.Y$U();
        if (U3ndn.v9p(O__[3].toString(), O__[3].toString().length, 479) !== O__[6]) {
          Q6N[22]['splice']['say'][Q6N[310]]['btoa'] = Q6N[864][r8no$[8857]];
        }
        Q6N[22]['physics']['bodies'][Q6N[310]]['f_3'] = Q6N[864]['checked'];
      };
      Q6N[932]['onchange'] = function () {
        var j20 = [
          arguments
        ];
        j20[9] = r8no$;
        U3ndn.Y$U();
        Q6N[22]['physics']['bodies'][Q6N[310]]['f_4'] = Q6N[932]['checked'];
      };
      this['getShowing'] = function () {
        return Q6N[3];
      };
      this['show'] = function (c78) {
        var u5H = [
          arguments
        ];
        u5H[7] = r8no$;
        Q6N[3] = true;
        Q6N[22] = JSON['parse'](JSON['stringify'](u5H[0][0]));
        if (Q6N[22]['m']['rxid'] == 0 && V6D[67]['userName'] != Q6N[22]['m']['a'] && Q6N[22]['m']['dbid'] != - 1) {
          Q6N[22]['m']['rxid'] = Q6N[22]['m']['dbid'];
          Q6N[22]['m']['rxn'] = Q6N[22]['m']['n'];
          Q6N[22]['m']['rxa'] = Q6N[22]['m']['a'];
          Q6N[22]['m']['n'] += ' (edit)';
          Q6N[22]['m']['a'] = V6D[67]['userName'];
          Q6N[22]['m']['rxdb'] = Q6N[22]['m']['dbv'];
        }
        t5w();
        c0S();
        A2h();
        t$S();
        s7e();
        v8Z();
        o$b();
        if (Q6N[310] != - 1) {
          H3s();
        }
        if (Q6N[144] != - 1) {
          M6K();
        }
        if (Q6N[747] != - 1) {
          h7z();
        }
        if (Q6N[644]['style']['display'] == 'block') {
          r13();
        }
        V6D[67]['enterFrameDispatcher']['subscribe'](1, z_k);
        Q6N[9]['style']['display'] = 'block';
        if (Q6N[56] == false || Q6N[1]['clientWidth'] > Q6N[2]['clientWidth'] - 30 || Q6N[1]['clientHeight'] > Q6N[2]['clientHeight'] - 40) {
          U3ndn.S2t(1);
          u5H[4] = U3ndn.E_K(1478, 5);
          U3ndn.S2t(45);
          u5H[1] = U3ndn.I8r(17, 16, 7373, 29);
          U3ndn.S2t(24);
          u5H[9] = U3ndn.I8r(5, 11, 18, 16);
          U3ndn.z_y(14);
          u5H[5] = U3ndn.E_K(213, 1278, 1263);
          Q6N[1]['style']['width'] = Q6N[2][r8no$[u5H[4]]] / V6D[67][r8no$[u5H[1]]] - u5H[9] + U3ndn.j31(u5H[5]);
          U3ndn.S2t(127);
          u5H[6] = U3ndn.E_K(10976, 26341028, 15, 8, 20);
          U3ndn.S2t(14);
          u5H[3] = U3ndn.E_K(530, 530, 514);
          U3ndn.z_y(135);
          u5H[2] = U3ndn.E_K(48, 12, 4, 2);
          U3ndn.z_y(25);
          u5H[8] = U3ndn.E_K(1283, 1260, 1283, 8, 1);
          Q6N[1]['style']['height'] = Q6N[2][r8no$[u5H[6]]] / V6D[67][r8no$[u5H[3]]] - u5H[2] + U3ndn.j31(u5H[8]);
          Q6N[56] = true;
        }
        if (V6D[67]['guest']) {
          Q6N[50]['classList']['add']('brownButtonDisabled');
        } else {
          Q6N[50]['classList']['remove']('brownButtonDisabled');
        }
        Q6N[57]['getCanvas']() ['onmouseover'] = i5o;
        Q6N[57]['getCanvas']() ['onmouseout'] = Z5u;
        Q6N[57]['resetStage']();
        Q6N[57]['resizeRenderer']();
        k_I(true);
        O7O();
        k7K();
      };
      this['hide'] = function () {
        var n0i = [
          arguments
        ];
        n0i[4] = r8no$;
        Q6N[3] = false;
        V6D[67]['enterFrameDispatcher']['unsubscribe'](z_k);
        Q6N[9]['style']['display'] = 'none';
        Q6N[57]['getCanvas']() ['onmousedown'] = null;
        Q6N[57]['getCanvas']() ['onmousemove'] = null;
        Q6N[57]['getCanvas']() ['style']['cursor'] = '';
        Q6N[57]['getCanvas']() ['style']['border'] = '';
        Q6N[57]['getCanvas']() ['onmouseover'] = null;
        Q6N[57]['getCanvas']() ['onmouseout'] = null;
        D$d();
      };
      Q6N[871] = [
      ];
      this['on'] = function (F0U, o8K) {
        var B3h = [
          arguments
        ];
        B3h[1] = r8no$;
        U3ndn.Y$U();
        Q6N[871]['push']({
          eventName: B3h[0][0],
          callback: B3h[0][1]
        });
      };
      this['destroy'] = function () {
        var P3Z = [
          arguments
        ];
        P3Z[2] = r8no$;
        D$d();
        Q6N[4]['hide']();
        for (P3Z[8] = 0; P3Z[8] < Q6N[993]['length']; P3Z[8]++) {
          Q6N[948]['removeChild'](Q6N[993][P3Z[8]]);
        }
        for (P3Z[9] = 0; P3Z[9] < Q6N[883]['length']; P3Z[9]++) {
          Q6N[377]['removeChild'](Q6N[883][P3Z[9]]);
        }
        Q6N[57]['getCanvas']() ['onmouseover'] = null;
        Q6N[57]['getCanvas']() ['onmouseout'] = null;
        Q6N[57]['getCanvas']() ['style']['cursor'] = '';
        Q6N[57]['destroy']();
        Q6N[57] = null;
        Q6N[70]['removeChild'](Q6N[88]);
        Q6N[27] = null;
        Q6N[34] = null;
        Q6N[40]['off']('mapChosen', R1q);
        Q6N[40] = null;
        Q6N[19] = null;
        V6D[67]['enterFrameDispatcher']['unsubscribe'](z_k);
      };
    }
    E['getNewCapZone'] = function () {
      return {
        n: 'Cap Zone',
        ty: 1,
        l: 10,
        i: - 1
      };
    };
    E['getNewSpawn'] = function () {
      U3ndn.w30();
      return {
        x: 400,
        y: 300,
        xv: 0,
        yv: 0,
        priority: 5,
        r: true,
        f: true,
        b: true,
        gr: false,
        ye: false,
        n: 'Spawn'
      };
    };
    E['encode'] = function (q55) {
      U3ndn.w30();
      var M6T = [
        arguments
      ];
      M6T[7] = r8no$;
      M6T[9] = E['pson']['encode'](M6T[0][0]);
      return M6T[9];
    };
    E['decode'] = function (P8_) {
      var q7b = [
        arguments
      ];
      U3ndn.w30();
      q7b[1] = r8no$;
      q7b[8] = E['pson']['decode'](q7b[0][0]);
      return E['mergeIntoNewMap'](q7b[8]);
    };
    E['mergeIntoNewMap'] = function (C4Q) {
      U3ndn.w30();
      var K17 = [
        arguments
      ];
      K17[1] = r8no$;
      K17[6] = E['getBlankMap']();
      if (K17[0][0]['s']) {
        if (typeof K17[0][0]['s']['re'] == 'boolean') {
          K17[6]['s']['re'] = K17[0][0]['s']['re'];
        }
        if (typeof K17[0][0]['s']['nc'] == 'boolean') {
          K17[6]['s']['nc'] = K17[0][0]['s']['nc'];
        }
        if (K17[0][0]['s']['pq'] >= 1 && K17[0][0]['s']['pq'] <= 2) {
          K17[6]['s']['pq'] = K17[0][0]['s']['pq'];
        }
        if (K17[0][0]['s']['gd'] >= 2 && K17[0][0]['s']['pq'] <= 100) {
          K17[6]['s']['gd'] = K17[0][0]['s']['gd'];
        }
        if (typeof K17[0][0]['s']['fl'] == 'boolean') {
          K17[6]['s']['fl'] = K17[0][0]['s']['fl'];
        }
      }
      if (K17[0][0]['m']) {
        if (typeof K17[0][0]['m']['a'] == 'string' && K17[0][0]['m']['a']['length'] <= 15) {
          K17[6]['m']['a'] = K17[0][0]['m']['a'];
        }
        if (typeof K17[0][0]['m']['n'] == 'string' && K17[0][0]['m']['n']['length'] <= 25) {
          K17[6]['m']['n'] = K17[0][0]['m']['n'];
        }
        if (typeof K17[0][0]['m']['rxn'] == 'string' && K17[0][0]['m']['rxn']['length'] <= 25) {
          K17[6]['m']['rxn'] = K17[0][0]['m']['rxn'];
        }
        if (typeof K17[0][0]['m']['rxa'] == 'string' && K17[0][0]['m']['rxa']['length'] <= 15) {
          K17[6]['m']['rxa'] = K17[0][0]['m']['rxa'];
        }
        if (typeof (K17[0][0]['m']['rxid'] == 'number') && K17[0][0]['m']['rxid'] >= 0 && K17[0][0]['m']['rxid'] <= 9999999999) {
          K17[6]['m']['rxid'] = K17[0][0]['m']['rxid'];
        }
        if (K17[0][0]['m']['rxdb'] == 1 || K17[0][0]['m']['rxdb'] == 2) {
          K17[6]['m']['rxdb'] = K17[0][0]['m']['rxdb'];
        }
        for (K17[67] = 0; K17[67] < K17[0][0]['m']['cr']['length']; K17[67]++) {
          if (typeof K17[0][0]['m']['cr'][K17[67]] == 'string' && K17[0][0]['m']['cr'][K17[67]]['length'] <= 15) {
            K17[6]['m']['cr']['push'](K17[0][0]['m']['cr'][K17[67]]);
          }
        }
        if (typeof K17[0][0]['m']['mo'] == 'string' && K17[0][0]['m']['mo']['length'] <= 5) {
          K17[6]['m']['mo'] = K17[0][0]['m']['mo'];
        }
        if (typeof K17[0][0]['m']['dbid'] == 'number') {
          K17[6]['m']['dbid'] = K17[0][0]['m']['dbid'];
        }
        if (typeof K17[0][0]['m']['vu'] == 'number') {
          K17[6]['m']['vu'] = K17[0][0]['m']['vu'];
        }
        if (typeof K17[0][0]['m']['vd'] == 'number') {
          K17[6]['m']['vd'] = K17[0][0]['m']['vd'];
        }
      }
      if (K17[0][0]['physics']) {
        if (K17[0][0]['physics']['shapes']) {
          for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['physics']['shapes']['length'], 1000); K17[57]++) {
            if (K17[0][0]['physics']['shapes'][K17[57]]) {
              K17[5] = K17[0][0]['physics']['shapes'][K17[57]];
              if (K17[5]['type'] == 'bx') {
                K17[6]['physics']['shapes'][K17[57]] = E['getNewBoxShape']();
                if (K17[5]['w'] > 0 && K17[5]['w'] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['w'] = K17[5]['w'];
                }
                if (K17[5]['h'] > 0 && K17[5]['h'] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['h'] = K17[5]['h'];
                }
                if (K17[5]['c'][0] >= - 99999 && K17[5]['c'][0] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][0] = K17[5]['c'][0];
                }
                if (K17[5]['c'][1] >= - 99999 && K17[5]['c'][1] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][1] = K17[5]['c'][1];
                }
                if (K17[5]['a'] >= - 999 && K17[5]['a'] <= 999) {
                  K17[6]['physics']['shapes'][K17[57]]['a'] = K17[5]['a'];
                }
                if (typeof K17[5]['sk'] == 'boolean') {
                  K17[6]['physics']['shapes'][K17[57]]['sk'] = K17[5]['sk'];
                }
              }
              if (K17[5]['type'] == 'ci') {
                K17[6]['physics']['shapes'][K17[57]] = E['getNewCircleShape']();
                if (K17[5]['r'] > 0 && K17[5]['r'] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['r'] = K17[5]['r'];
                }
                if (K17[6]['physics']['shapes'][K17[57]]['r'] > 2000) {
                  K17[6]['physics']['shapes'][K17[57]]['r'] = 2000;
                }
                if (K17[5]['c'][0] >= - 99999 && K17[5]['c'][0] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][0] = K17[5]['c'][0];
                }
                if (K17[5]['c'][1] >= - 99999 && K17[5]['c'][1] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][1] = K17[5]['c'][1];
                }
                if (typeof K17[5]['sk'] == 'boolean') {
                  K17[6]['physics']['shapes'][K17[57]]['sk'] = K17[5]['sk'];
                }
              }
              if (K17[5]['type'] == 'po') {
                K17[6]['physics']['shapes'][K17[57]] = E['getNewPolyShape']();
              }
              if (K17[5]['type'] == 'ch') {
                K17[6]['physics']['shapes'][K17[57]] = E['getNewChainShape']();
                if (typeof K17[5]['l'] == 'boolean') {
                  K17[6]['physics']['shapes'][K17[57]]['l'] = K17[5]['l'];
                }
              }
              if (K17[5]['type'] == 'po' || K17[5]['type'] == 'ch') {
                K17[7] = false;
                for (K17[16] = 0; K17[16] < Math['min'](K17[5]['v']['length'], 100); K17[16]++) {
                  if (!K17[5]['v'][K17[16]] || typeof K17[5]['v'][K17[16]] != 'object' || K17[5]['v'][K17[16]]['length'] != 2 || typeof K17[5]['v'][K17[16]][0] != 'number' || typeof K17[5]['v'][K17[16]][1] != 'number' || K17[5]['v'][K17[16]][0] < - 99999 || K17[5]['v'][K17[16]][0] > 99999 || K17[5]['v'][K17[16]][1] < - 99999 || K17[5]['v'][K17[16]][1] > 99999) {
                    K17[7] = true;
                    break;
                  }
                }
                if (!K17[7]) {
                  K17[6]['physics']['shapes'][K17[57]]['v'] = K17[5]['v'];
                }
                if (K17[5]['s'] >= - 999 && K17[5]['s'] <= 999) {
                  K17[6]['physics']['shapes'][K17[57]]['s'] = K17[5]['s'];
                }
                if (K17[5]['a'] >= - 999 && K17[5]['a'] <= 999) {
                  K17[6]['physics']['shapes'][K17[57]]['a'] = K17[5]['a'];
                }
                if (K17[5]['c'][0] >= - 99999 && K17[5]['c'][0] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][0] = K17[5]['c'][0];
                }
                if (K17[5]['c'][1] >= - 99999 && K17[5]['c'][1] <= 99999) {
                  K17[6]['physics']['shapes'][K17[57]]['c'][1] = K17[5]['c'][1];
                }
              }
            }
          }
        }
        if (K17[0][0]['physics']['fixtures']) {
          for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['physics']['fixtures']['length'], 1000); K17[57]++) {
            if (K17[0][0]['physics']['fixtures'][K17[57]]) {
              K17[2] = K17[0][0]['physics']['fixtures'][K17[57]];
              if (K17[6]['physics']['shapes'][K17[2]['sh']]) {
                K17[6]['physics']['fixtures'][K17[57]] = E['getNewFixture'](K17[2]['sh']);
                if (typeof K17[2]['n'] == 'string' && K17[2]['n']['length'] <= 30) {
                  K17[6]['physics']['fixtures'][K17[57]]['n'] = K17[2]['n'];
                }
                if (K17[2]['fr'] >= 0 && K17[2]['fr'] <= 99999) {
                  K17[6]['physics']['fixtures'][K17[57]]['fr'] = K17[2]['fr'];
                }
                if (typeof K17[2]['fp'] == 'boolean') {
                  K17[6]['physics']['fixtures'][K17[57]]['fp'] = K17[2]['fp'];
                }
                if (K17[2]['re'] >= - 99999 && K17[2]['re'] <= 99999) {
                  K17[6]['physics']['fixtures'][K17[57]]['re'] = K17[2]['re'];
                }
                if (K17[2]['de'] >= 0 && K17[2]['de'] <= 99999) {
                  K17[6]['physics']['fixtures'][K17[57]]['de'] = K17[2]['de'];
                }
                if (K17[2]['f'] >= 0 && K17[2]['f'] <= 16777215) {
                  K17[6]['physics']['fixtures'][K17[57]]['f'] = K17[2]['f'];
                }
                if (typeof K17[2]['d'] == 'boolean') {
                  K17[6]['physics']['fixtures'][K17[57]]['d'] = K17[2]['d'];
                }
                if (typeof K17[2]['np'] == 'boolean') {
                  K17[6]['physics']['fixtures'][K17[57]]['np'] = K17[2]['np'];
                }
                if (typeof K17[2]['fs'] == 'string') {
                  K17[6]['physics']['fixtures'][K17[57]]['fs'] = K17[2]['fs'];
                }
                if (typeof K17[2]['zp'] == 'number' && K17[2]['zp'] > - 1000 && K17[2]['zp'] < 1000) {
                  K17[6]['physics']['fixtures'][K17[57]]['zp'] = K17[2]['zp'];
                }
                if (typeof K17[2]['ng'] == 'boolean') {
                  K17[6]['physics']['fixtures'][K17[57]]['ng'] = K17[2]['ng'];
                }
                if (typeof K17[2]['ig'] == 'boolean') {
                  K17[6]['physics']['fixtures'][K17[57]]['ig'] = K17[2]['ig'];
                }
              }
            }
          }
        }
        if (K17[0][0]['physics']['bodies']) {
          for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['physics']['bodies']['length'], 300); K17[57]++) {
            if (K17[0][0]['physics']['bodies'][K17[57]]) {
              K17[9] = K17[0][0]['physics']['bodies'][K17[57]];
              K17[6]['physics']['bodies'][K17[57]] = E['getNewBody']();
              K17[4] = K17[6]['physics']['bodies'][K17[57]];
              if (K17[9]['type'] == 's' || K17[9]['type'] == 'd' || K17[9]['type'] == 'k') {
                K17[4]['type'] = K17[9]['type'];
              }
              if (typeof K17[9]['n'] == 'string' && K17[9]['n']['length'] <= 30) {
                K17[4]['n'] = K17[9]['n'];
              }
              if (typeof K17[9]['p'] == 'object' && K17[9]['p']['length'] == 2 && K17[9]['p'][0] >= - 99999 && K17[9]['p'][0] <= 99999 && K17[9]['p'][1] >= - 99999 && K17[9]['p'][1] <= 99999) {
                K17[4]['p'] = K17[9]['p'];
              }
              if (K17[9]['a'] >= - 9999 && K17[9]['a'] <= 9999) {
                K17[4]['a'] = K17[9]['a'];
              }
              if (typeof K17[9]['lv'] == 'object' && K17[9]['lv']['length'] == 2 && K17[9]['lv'][0] >= - 99999 && K17[9]['lv'][0] <= 99999 && K17[9]['lv'][1] >= - 99999 && K17[9]['lv'][1] <= 99999) {
                K17[4]['lv'] = K17[9]['lv'];
              }
              if (K17[9]['av'] >= - 9999 && K17[9]['av'] <= 9999) {
                K17[4]['av'] = K17[9]['av'];
              }
              if (K17[9]['ld'] >= - 99999 && K17[9]['ld'] <= 99999) {
                K17[4]['ld'] = K17[9]['ld'];
              }
              if (K17[9]['ad'] >= - 99999 && K17[9]['ad'] <= 99999) {
                K17[4]['ad'] = K17[9]['ad'];
              }
              if (K17[9]['fric'] >= - 99999 && K17[9]['fric'] <= 99999) {
                K17[4]['fric'] = K17[9]['fric'];
              }
              if (typeof K17[9]['fricp'] == 'boolean') {
                K17[4]['fricp'] = K17[9]['fricp'];
              }
              if (K17[9]['de'] >= - 99999 && K17[9]['de'] <= 99999) {
                K17[4]['de'] = K17[9]['de'];
              }
              if (K17[9]['re'] >= - 99999 && K17[9]['re'] <= 99999) {
                K17[4]['re'] = K17[9]['re'];
              }
              if (typeof K17[9]['fr'] == 'boolean') {
                K17[4]['fr'] = K17[9]['fr'];
              }
              if (typeof K17[9]['bu'] == 'boolean') {
                K17[4]['bu'] = K17[9]['bu'];
              }
              if (typeof K17[9]['cf'] == 'object') {
                K17[4]['cf'] = {
                  x: 0,
                  y: 0,
                  w: true,
                  ct: 0
                };
                if (K17[9]['cf']['x'] >= - 999999 && K17[9]['cf']['x'] < 999999) {
                  K17[4]['cf']['x'] = K17[9]['cf']['x'];
                }
                if (K17[9]['cf']['y'] >= - 999999 && K17[9]['cf']['y'] < 999999) {
                  K17[4]['cf']['y'] = K17[9]['cf']['y'];
                }
                if (typeof K17[9]['cf']['w'] == 'boolean') {
                  K17[4]['cf']['w'] = K17[9]['cf']['w'];
                }
                if (K17[9]['cf']['ct'] >= - 999999 && K17[9]['cf']['ct'] < 999999) {
                  K17[4]['cf']['ct'] = K17[9]['cf']['ct'];
                }
              }
              if (typeof K17[9]['fx'] == 'object' && K17[9]['fx']['length'] > 0) {
                for (K17[49] = 0; K17[49] < Math['min'](K17[9]['fx']['length'], 100); K17[49]++) {
                  if (K17[6]['physics']['fixtures'][K17[9]['fx'][K17[49]]]) {
                    K17[4]['fx']['push'](K17[9]['fx'][K17[49]]);
                  }
                }
              }
              if (typeof K17[9]['f_c'] == 'number') {
                K17[4]['f_c'] = K17[9]['f_c'];
              }
              if (typeof K17[9]['f_p'] == 'boolean') {
                K17[4]['f_p'] = K17[9]['f_p'];
              }
              if (typeof K17[9]['f_1'] == 'boolean') {
                K17[4]['f_1'] = K17[9]['f_1'];
              }
              if (typeof K17[9]['f_2'] == 'boolean') {
                K17[4]['f_2'] = K17[9]['f_2'];
              }
              if (typeof K17[9]['f_3'] == 'boolean') {
                K17[4]['f_3'] = K17[9]['f_3'];
              }
              if (typeof K17[9]['f_4'] == 'boolean') {
                K17[4]['f_4'] = K17[9]['f_4'];
              }
            }
          }
        }
        if (K17[0][0]['physics']['bro'] && typeof K17[0][0]['physics']['bro'] == 'object' && K17[0][0]['physics']['bro']['length'] > 0) {
          for (K17[57] = 0; K17[57] < K17[0][0]['physics']['bro']['length']; K17[57]++) {
            if (K17[6]['physics']['bodies'][K17[0][0]['physics']['bro'][K17[57]]]) {
              K17[6]['physics']['bro']['push'](K17[0][0]['physics']['bro'][K17[57]]);
            }
          }
        }
        if (K17[0][0]['physics']['joints'] && typeof K17[0][0]['physics']['joints'] == 'object' && K17[0][0]['physics']['joints']['length'] > 0) {
          for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['physics']['joints']['length'], 100); K17[57]++) {
            if (K17[0][0]['physics']['joints'][K17[57]]) {
              K17[3] = K17[0][0]['physics']['joints'][K17[57]];
              if (K17[3]['ba'] != - 1 && !K17[6]['physics']['bodies'][K17[3]['ba']] || K17[3]['bb'] != - 1 && !K17[6]['physics']['bodies'][K17[3]['bb']]) {
                continue;
              }
              if (K17[3]['type'] == 'rv') {
                K17[8] = E['getNewRevoluteJoint'](K17[3]['ba'], K17[3]['bb']);
                if (typeof K17[3]['d'] == 'object') {
                  if (K17[3]['d']['la'] >= - 999 && K17[3]['d']['la'] <= 999) {
                    K17[8]['d']['la'] = K17[3]['d']['la'];
                  }
                  if (K17[3]['d']['ua'] >= - 999 && K17[3]['d']['ua'] <= 999) {
                    K17[8]['d']['ua'] = K17[3]['d']['ua'];
                  }
                  if (K17[3]['d']['mmt'] >= - 99999999 && K17[3]['d']['mmt'] <= 99999999) {
                    K17[8]['d']['mmt'] = K17[3]['d']['mmt'];
                  }
                  if (K17[3]['d']['ms'] >= - 99999999 && K17[3]['d']['ms'] <= 99999999) {
                    K17[8]['d']['ms'] = K17[3]['d']['ms'];
                  }
                  if (typeof K17[3]['d']['el'] == 'boolean') {
                    K17[8]['d']['el'] = K17[3]['d']['el'];
                  }
                  if (typeof K17[3]['d']['em'] == 'boolean') {
                    K17[8]['d']['em'] = K17[3]['d']['em'];
                  }
                  if (typeof K17[3]['d']['cc'] == 'boolean') {
                    K17[8]['d']['cc'] = K17[3]['d']['cc'];
                  }
                  if (typeof K17[3]['d']['dl'] == 'boolean') {
                    K17[8]['d']['dl'] = K17[3]['d']['dl'];
                  }
                  if (K17[3]['d']['bf'] >= 0 && K17[3]['d']['bf'] <= 99999999) {
                    K17[8]['d']['bf'] = K17[3]['d']['bf'];
                  }
                }
                if (typeof K17[3]['aa'] == 'object' && K17[3]['aa']['length'] == 2 && K17[3]['aa'][0] >= - 99999 && K17[3]['aa'][0] <= 99999 && K17[3]['aa'][1] >= - 99999 && K17[3]['aa'][1] <= 99999) {
                  K17[8]['aa'] = K17[3]['aa'];
                }
              }
              if (K17[3]['type'] == 'p') {
                K17[8] = {
                  type: 'p',
                  n: 'Def pris',
                  d: {
                    el: true,
                    lt: - 100,
                    ut: 100,
                    em: false,
                    mmf: 0,
                    ms: 0,
                    cc: false,
                    bf: 0,
                    cd: false
                  },
                  ba: K17[3]['ba'],
                  bb: K17[3]['bb'],
                  aa: [
                    200,
                    200
                  ],
                  ab: [
                    0,
                    0
                  ],
                  axa: [
                    0,
                    1
                  ]
                };
                if (typeof K17[3]['d'] == 'object') {
                  if (K17[3]['d']['lt'] >= - 99999 && K17[3]['d']['lt'] <= 99999) {
                    K17[8]['d']['lt'] = K17[3]['d']['lt'];
                  }
                  if (K17[3]['d']['ut'] >= - 99999 && K17[3]['d']['ut'] <= 99999) {
                    K17[8]['d']['ut'] = K17[3]['d']['ut'];
                  }
                  if (K17[3]['d']['mmf'] >= - 99999999 && K17[3]['d']['mmf'] <= 99999999) {
                    K17[8]['d']['mmf'] = K17[3]['d']['mmf'];
                  }
                  if (K17[3]['d']['ms'] >= - 99999999 && K17[3]['d']['ms'] <= 99999999) {
                    K17[8]['d']['ms'] = K17[3]['d']['ms'];
                  }
                  if (typeof K17[3]['d']['el'] == 'boolean') {
                    K17[8]['d']['el'] = K17[3]['d']['el'];
                  }
                  if (typeof K17[3]['d']['em'] == 'boolean') {
                    K17[8]['d']['em'] = K17[3]['d']['em'];
                  }
                  if (typeof K17[3]['d']['cc'] == 'boolean') {
                    K17[8]['d']['cc'] = K17[3]['d']['cc'];
                  }
                  if (typeof K17[3]['d']['cd'] == 'boolean') {
                    K17[8]['d']['cd'] = K17[3]['d']['cd'];
                  }
                  if (typeof K17[3]['d']['dl'] == 'boolean') {
                    K17[8]['d']['dl'] = K17[3]['d']['dl'];
                  }
                  if (K17[3]['d']['bf'] >= 0 && K17[3]['d']['bf'] <= 99999999) {
                    K17[8]['d']['bf'] = K17[3]['d']['bf'];
                  }
                }
                if (typeof K17[3]['aa'] == 'object' && K17[3]['aa']['length'] == 2 && K17[3]['aa'][0] >= - 99999 && K17[3]['aa'][0] <= 99999 && K17[3]['aa'][1] >= - 99999 && K17[3]['ab'][1] <= 99999) {
                  K17[8]['aa'] = K17[3]['aa'];
                }
                if (typeof K17[3]['ab'] == 'object' && K17[3]['ab']['length'] == 2 && K17[3]['ab'][0] >= - 99999 && K17[3]['ab'][0] <= 99999 && K17[3]['ab'][1] >= - 99999 && K17[3]['ab'][1] <= 99999) {
                  K17[8]['ab'] = K17[3]['ab'];
                }
                if (typeof K17[3]['axa'] == 'object' && K17[3]['axa']['length'] == 2 && K17[3]['axa'][0] >= - 999 && K17[3]['axa'][0] <= 999 && K17[3]['axa'][1] >= - 999 && K17[3]['axa'][1] <= 999) {
                  K17[8]['axa'] = K17[3]['axa'];
                }
              }
              if (K17[3]['type'] == 'd') {
                K17[8] = E['getNewDistanceJoint'](K17[3]['ba'], K17[3]['bb']);
                if (typeof K17[3]['d'] == 'object') {
                  if (K17[3]['d']['fh'] >= - 99999 && K17[3]['d']['fh'] <= 99999) {
                    K17[8]['d']['fh'] = K17[3]['d']['fh'];
                  }
                  if (K17[3]['d']['dr'] >= - 99999 && K17[3]['d']['dr'] <= 99999) {
                    K17[8]['d']['dr'] = K17[3]['d']['dr'];
                  }
                  if (typeof K17[3]['d']['cc'] == 'boolean') {
                    K17[8]['d']['cc'] = K17[3]['d']['cc'];
                  }
                  if (typeof K17[3]['d']['dl'] == 'boolean') {
                    K17[8]['d']['dl'] = K17[3]['d']['dl'];
                  }
                  if (K17[3]['d']['bf'] >= 0 && K17[3]['d']['bf'] <= 99999999) {
                    K17[8]['d']['bf'] = K17[3]['d']['bf'];
                  }
                }
                if (typeof K17[3]['aa'] == 'object' && K17[3]['aa']['length'] == 2 && K17[3]['aa'][0] >= - 99999 && K17[3]['aa'][0] <= 99999 && K17[3]['aa'][1] >= - 99999 && K17[3]['ab'][1] <= 99999) {
                  K17[8]['aa'] = K17[3]['aa'];
                }
                if (typeof K17[3]['ab'] == 'object' && K17[3]['ab']['length'] == 2 && K17[3]['ab'][0] >= - 99999 && K17[3]['ab'][0] <= 99999 && K17[3]['ab'][1] >= - 99999 && K17[3]['ab'][1] <= 99999) {
                  K17[8]['ab'] = K17[3]['ab'];
                }
              }
              if (K17[3]['type'] == 'lsj') {
                K17[8] = E['getNewLSJJoint'](K17[3]['ba'], K17[3]['bb']);
                if (typeof K17[3]['d'] == 'object') {
                  if (typeof K17[3]['d']['cc'] == 'boolean') {
                    K17[8]['d']['cc'] = K17[3]['d']['cc'];
                  }
                  if (typeof K17[3]['d']['dl'] == 'boolean') {
                    K17[8]['d']['dl'] = K17[3]['d']['dl'];
                  }
                  if (K17[3]['d']['bf'] >= 0 && K17[3]['d']['bf'] <= 99999999) {
                    K17[8]['d']['bf'] = K17[3]['d']['bf'];
                  }
                }
                if (K17[3]['sax'] >= - 99999999 && K17[3]['sax'] <= 99999999) {
                  K17[8]['sax'] = K17[3]['sax'];
                }
                if (K17[3]['say'] >= - 99999999 && K17[3]['say'] <= 99999999) {
                  K17[8]['say'] = K17[3]['say'];
                }
                if (K17[3]['sf'] >= - 99999999 && K17[3]['sf'] <= 99999999) {
                  K17[8]['sf'] = K17[3]['sf'];
                }
                if (K17[3]['slen'] >= - 99999999 && K17[3]['slen'] <= 99999999) {
                  K17[8]['slen'] = K17[3]['slen'];
                }
              }
              if (K17[3]['type'] == 'lpj') {
                K17[8] = E['getNewLPJJoint'](K17[3]['ba'], K17[3]['bb']);
                if (typeof K17[3]['d'] == 'object') {
                  if (typeof K17[3]['d']['cc'] == 'boolean') {
                    K17[8]['d']['cc'] = K17[3]['d']['cc'];
                  }
                  if (typeof K17[3]['d']['dl'] == 'boolean') {
                    K17[8]['d']['dl'] = K17[3]['d']['dl'];
                  }
                  if (K17[3]['d']['bf'] >= 0 && K17[3]['d']['bf'] <= 99999999) {
                    K17[8]['d']['bf'] = K17[3]['d']['bf'];
                  }
                }
                if (K17[3]['pax'] >= - 99999999 && K17[3]['pax'] <= 99999999) {
                  K17[8]['pax'] = K17[3]['pax'];
                }
                if (K17[3]['pay'] >= - 99999999 && K17[3]['pay'] <= 99999999) {
                  K17[8]['pay'] = K17[3]['pay'];
                }
                if (K17[3]['pa'] >= - 99999999 && K17[3]['pa'] <= 99999999) {
                  K17[8]['pa'] = K17[3]['pa'];
                }
                if (K17[3]['pf'] >= - 99999999 && K17[3]['pf'] <= 99999999) {
                  K17[8]['pf'] = K17[3]['pf'];
                }
                if (K17[3]['plen'] >= - 99999999 && K17[3]['plen'] <= 99999999) {
                  K17[8]['plen'] = K17[3]['plen'];
                }
                if (K17[3]['pms'] >= - 99999999 && K17[3]['pms'] <= 99999999) {
                  K17[8]['pms'] = K17[3]['pms'];
                }
              }
              K17[6]['physics']['joints'][K17[57]] = K17[8];
            }
          }
          for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['physics']['joints']['length'], 100); K17[57]++) {
            if (K17[0][0]['physics']['joints'][K17[57]] && K17[0][0]['physics']['joints'][K17[57]]['type'] == 'g') {
              K17[3] = K17[0][0]['physics']['joints'][K17[57]];
              if (K17[3]['ba'] != - 1 && !K17[6]['physics']['bodies'][K17[3]['ba']] || K17[3]['bb'] != - 1 && !K17[6]['physics']['bodies'][K17[3]['bb']]) {
                continue;
              }
              if (!K17[6]['physics']['joints'][K17[3]['ja']] || !K17[6]['physics']['joints'][K17[3]['jb']]) {
                continue;
              }
              K17[8] = {
                type: 'g',
                n: 'Def gear',
                d: {
                  cc: false,
                  r: 1
                },
                ba: K17[3]['ba'],
                bb: K17[3]['bb'],
                ja: K17[3]['ja'],
                jb: K17[3]['jb']
              };
              if (typeof K17[3]['n'] == 'string' && K17[3]['n']['length'] < 30) {
                K17[8]['n'] = K17[3]['n'];
              }
              if (typeof K17[3]['d'] == 'object') {
                if (typeof K17[3]['d']['cc'] == 'boolean') {
                  K17[8]['d']['cc'] = K17[3]['d']['cc'];
                }
                if (K17[3]['d']['r'] >= - 99999 && K17[3]['d']['r'] <= 99999) {
                  K17[8]['d']['r'] = K17[3]['d']['r'];
                }
              }
              K17[6]['physics']['joints'][K17[57]] = K17[8];
            }
          }
        }
        if (K17[0][0]['physics']['ppm'] >= 2 && K17[0][0]['physics']['ppm'] <= 300) {
          K17[6]['physics']['ppm'] = K17[0][0]['physics']['ppm'];
        }
      }
      if (K17[0][0]['spawns']) {
        for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['spawns']['length'], 100); K17[57]++) {
          if (K17[0][0]['spawns'][K17[57]]) {
            K17[6]['spawns'][K17[57]] = E['getNewSpawn']();
            if (K17[0][0]['spawns'][K17[57]]['x'] >= - 10000 && K17[0][0]['spawns'][K17[57]]['x'] <= 10000) {
              K17[6]['spawns'][K17[57]]['x'] = K17[0][0]['spawns'][K17[57]]['x'];
            }
            if (K17[0][0]['spawns'][K17[57]]['y'] >= - 10000 && K17[0][0]['spawns'][K17[57]]['y'] <= 10000) {
              K17[6]['spawns'][K17[57]]['y'] = K17[0][0]['spawns'][K17[57]]['y'];
            }
            if (K17[0][0]['spawns'][K17[57]]['xv'] >= - 10000 && K17[0][0]['spawns'][K17[57]]['xv'] <= 10000) {
              K17[6]['spawns'][K17[57]]['xv'] = K17[0][0]['spawns'][K17[57]]['xv'];
            }
            if (K17[0][0]['spawns'][K17[57]]['yv'] >= - 10000 && K17[0][0]['spawns'][K17[57]]['yv'] <= 10000) {
              K17[6]['spawns'][K17[57]]['yv'] = K17[0][0]['spawns'][K17[57]]['yv'];
            }
            if (K17[0][0]['spawns'][K17[57]]['priority'] >= 0 && K17[0][0]['spawns'][K17[57]]['priority'] <= 10000) {
              K17[6]['spawns'][K17[57]]['priority'] = K17[0][0]['spawns'][K17[57]]['priority'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['r'] == 'boolean') {
              K17[6]['spawns'][K17[57]]['r'] = K17[0][0]['spawns'][K17[57]]['r'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['f'] == 'boolean') {
              K17[6]['spawns'][K17[57]]['f'] = K17[0][0]['spawns'][K17[57]]['f'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['b'] == 'boolean') {
              K17[6]['spawns'][K17[57]]['b'] = K17[0][0]['spawns'][K17[57]]['b'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['gr'] == 'boolean') {
              K17[6]['spawns'][K17[57]]['gr'] = K17[0][0]['spawns'][K17[57]]['gr'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['ye'] == 'boolean') {
              K17[6]['spawns'][K17[57]]['ye'] = K17[0][0]['spawns'][K17[57]]['ye'];
            }
            if (typeof K17[0][0]['spawns'][K17[57]]['n'] == 'string' && K17[0][0]['spawns'][K17[57]]['n']['length'] < 60) {
              K17[6]['spawns'][K17[57]]['n'] = K17[0][0]['spawns'][K17[57]]['n'];
            }
          }
        }
      }
      if (K17[0][0]['capZones']) {
        for (K17[57] = 0; K17[57] < Math['min'](K17[0][0]['capZones']['length'], 50); K17[57]++) {
          if (K17[0][0]['capZones'][K17[57]]) {
            K17[6]['capZones'][K17[57]] = E['getNewCapZone']();
            if (typeof K17[0][0]['capZones'][K17[57]]['n'] == 'string' && K17[0][0]['capZones'][K17[57]]['n']['length'] < 30) {
              K17[6]['capZones'][K17[57]]['n'] = K17[0][0]['capZones'][K17[57]]['n'];
            }
            if (K17[0][0]['capZones'][K17[57]]['l'] >= 0.01 && K17[0][0]['capZones'][K17[57]]['l'] <= 1000) {
              K17[6]['capZones'][K17[57]]['l'] = K17[0][0]['capZones'][K17[57]]['l'];
            }
            if (typeof K17[0][0]['capZones'][K17[57]]['ty'] == 'number' && K17[0][0]['capZones'][K17[57]]['ty'] >= 1 && K17[0][0]['capZones'][K17[57]]['ty'] <= 5) {
              K17[6]['capZones'][K17[57]]['ty'] = K17[0][0]['capZones'][K17[57]]['ty'];
            }
            if (K17[6]['physics']['fixtures'][K17[0][0]['capZones'][K17[57]]['i']]) {
              K17[6]['capZones'][K17[57]]['i'] = K17[0][0]['capZones'][K17[57]]['i'];
            }
          }
        }
      }
      return K17[6];
    };
    E['deepDiffMapper'] = {
      VALUE_CREATED: 'created',
      VALUE_UPDATED: 'updated',
      VALUE_DELETED: 'deleted',
      VALUE_UNCHANGED: 'unchanged',
      map: function (R26, K2C) {
        var Z_o = [
          arguments
        ];
        Z_o[6] = r8no$;
        if (this['isFunction'](Z_o[0][0]) || this['isFunction'](Z_o[0][1])) {
          throw 'Invalid argument. Function given, object expected.';
        }
        if (this['isValue'](Z_o[0][0]) || this['isValue'](Z_o[0][1])) {
          return {
            type: this['compareValues'](Z_o[0][0], Z_o[0][1]),
            data: Z_o[0][0] === undefined ? Z_o[0][1] : Z_o[0][0]
          };
        }
        Z_o[3] = {
        };
        for (Z_o[1] in Z_o[0][0]) {
          if (this['isFunction'](Z_o[0][0][Z_o[1]])) {
            continue;
          }
          Z_o[7] = undefined;
          if (Z_o[0][1][Z_o[1]] !== undefined) {
            Z_o[7] = Z_o[0][1][Z_o[1]];
          }
          Z_o[3][Z_o[1]] = this['map'](Z_o[0][0][Z_o[1]], Z_o[7]);
        }
        U3ndn.Y$U();
        for (Z_o[1] in Z_o[0][1]) {
          if (this['isFunction'](Z_o[0][1][Z_o[1]]) || Z_o[3][Z_o[1]] !== undefined) {
            continue;
          }
          Z_o[3][Z_o[1]] = this['map'](undefined, Z_o[0][1][Z_o[1]]);
        }
        return Z_o[3];
      },
      compareValues: function (h8r, N15) {
        U3ndn.Y$U();
        var A94 = [
          arguments
        ];
        A94[6] = r8no$;
        if (A94[0][0] === A94[0][1]) {
          return this['VALUE_UNCHANGED'];
        }
        if (this['isDate'](A94[0][0]) && this['isDate'](A94[0][1]) && A94[0][0]['getTime']() === A94[0][1]['getTime']()) {
          return this['VALUE_UNCHANGED'];
        }
        if (A94[0][0] === undefined) {
          return this['VALUE_CREATED'];
        }
        if (A94[0][1] === undefined) {
          return this['VALUE_DELETED'];
        }
        return this['VALUE_UPDATED'];
      },
      isFunction: function (R0f) {
        var y4q = [
          arguments
        ];
        y4q[1] = r8no$;
        U3ndn.Y$U();
        U3ndn.z_y(17);
        y4q[5] = U3ndn.E_K(12, 1656, 3);
        return Object['prototype']['toString']['call'](y4q[0][0]) === U3ndn.j31(y4q[5]);
      },
      isArray: function (E_m) {
        var P_h = [
          arguments
        ];
        P_h[8] = r8no$;
        U3ndn.S2t(106);
        P_h[2] = U3ndn.I8r(19, 11, 13776, 52307, 979);
        U3ndn.w30();
        return Object['prototype']['toString']['call'](P_h[0][0]) === U3ndn.j31(P_h[2]);
      },
      isDate: function (O_2) {
        var T4W = [
          arguments
        ];
        T4W[4] = r8no$;
        U3ndn.z_y(13);
        T4W[1] = U3ndn.E_K(2806, 36, 18);
        return Object['prototype']['toString']['call'](T4W[0][0]) === U3ndn.j31(T4W[1]);
      },
      isObject: function (S3v) {
        var x8E = [
          arguments
        ];
        x8E[2] = r8no$;
        U3ndn.Y$U();
        U3ndn.z_y(136);
        x8E[9] = U3ndn.I8r(17, 19, 3679, 1, 58545);
        return Object['prototype']['toString']['call'](x8E[0][0]) === U3ndn.j31(x8E[9]);
      },
      isValue: function (h81) {
        var G8e = [
          arguments
        ];
        G8e[1] = r8no$;
        return !this['isObject'](G8e[0][0]) && !this['isArray'](G8e[0][0]);
      }
    };
    E['fromOldString'] = function (q1z) {
      var S4q = [
        arguments
      ];
      S4q[4] = r8no$;
      S4q[3] = new V6D[76];
      S4q[3]['fromBase64'](decodeURIComponent(S4q[0][0]), true);
      S4q[7] = S4q[3]['readObject']();
      U3ndn.w30();
      S4q[2] = E['fromOldFormat'](S4q[7]);
      S4q[9] = E['mergeIntoNewMap'](S4q[2]);
      return S4q[9];
    };
    E['fromOldFormat'] = function (q69) {
      var G7M = [
        arguments
      ];
      G7M[9] = r8no$;
      G7M[6] = E['getBlankMap']();
      G7M[6]['m']['a'] = G7M[0][0]['author'];
      G7M[6]['m']['n'] = G7M[0][0]['mapname'];
      U3ndn.z_y(28);
      G7M[35] = U3ndn.E_K(940, 2, 19, 135);
      U3ndn.S2t(14);
      G7M[99] = U3ndn.I8r(1, 9, 11);
      G7M[6]['s']['fl'] = G7M[0][0][r8no$[G7M[35]]] == G7M[99];
      G7M[6]['s']['a1'] = true;
      G7M[6]['s']['a2'] = false;
      G7M[6]['s']['a3'] = false;
      G7M[6]['s']['re'] = G7M[0][0]['respawn'];
      G7M[6]['s']['nc'] = G7M[0][0]['noCollide'];
      G7M[6]['physics']['ppm'] = G7M[0][0]['ppm'];
      G7M[7] = G7M[0][0]['ppm'];
      for (G7M[21] = 0; G7M[21] < G7M[0][0]['spawnArray']['length']; G7M[21]++) {
        G7M[5] = G7M[0][0]['spawnArray'][G7M[21]];
        G7M[6]['spawns']['push']({
          x: G7M[5]['x'],
          y: G7M[5]['y'],
          xv: G7M[5]['xv'],
          yv: G7M[5]['yv'],
          priority: G7M[5]['priority'],
          r: G7M[5]['red'],
          f: G7M[5]['ffa'],
          b: G7M[5]['blue'],
          n: G7M[0][0]['spawnNames'][G7M[21]]
        });
      }
      for (G7M[81] = 0; G7M[81] < G7M[0][0]['platformArray']['length']; G7M[81]++) {
        G7M[8] = G7M[0][0]['platformArray'][G7M[81]];
        G7M[3] = [
        ];
        G7M[4] = E['getNewBody']();
        G7M[4]['type'] = G7M[8]['isDynamic'] == true ? 'd' : 's';
        G7M[4]['n'] = G7M[0][0]['platformNames'][G7M[81]];
        G7M[4]['p'][0] = G7M[8]['x'];
        G7M[4]['p'][1] = G7M[8]['y'];
        G7M[4]['lv'][0] = G7M[8]['xv'];
        G7M[4]['lv'][1] = G7M[8]['yv'];
        G7M[4]['a'] = G7M[8]['angle'];
        G7M[4]['av'] = G7M[8]['angularVelocity'];
        G7M[4]['ld'] = G7M[8]['linearDamping'];
        G7M[4]['ad'] = G7M[8]['angularDamping'];
        G7M[4]['de'] = G7M[8]['density'];
        G7M[4]['fric'] = G7M[8]['friction'];
        G7M[4]['re'] = G7M[8]['restitution'];
        G7M[4]['fr'] = false;
        function v19(V3Y, H0h, p4z) {
          var T8C = [
            arguments
          ];
          T8C[9] = r8no$;
          T8C[7] = {
          };
          U3ndn.S2t(6);
          T8C[5] = U3ndn.I8r(3, 36);
          U3ndn.S2t(13);
          T8C[8] = U3ndn.E_K(21, 35, 16);
          T8C[7]['x'] = T8C[0][1] * T8C[0][0][r8no$[T8C[5]]] - T8C[0][2] * T8C[0][0][r8no$[T8C[8]]];
          U3ndn.z_y(15);
          U3ndn.Y$U();
          T8C[4] = U3ndn.E_K(12, 37, 10);
          U3ndn.z_y(73);
          T8C[2] = U3ndn.E_K(10, 440, 4);
          T8C[7]['y'] = T8C[0][2] * T8C[0][0][r8no$[T8C[4]]] + T8C[0][1] * T8C[0][0][r8no$[T8C[2]]];
          return T8C[7];
        }
        G7M[4]['bu'] = false;
        G7M[4]['cf'];
        G7M[4]['fx'] = [
        ];
        G7M[6]['physics']['bodies']['push'](G7M[4]);
        for (G7M[33] = 0; G7M[33] < G7M[8]['shapeArray']['length']; G7M[33]++) {
          G7M[1] = G7M[8]['shapeArray'][G7M[33]];
          G7M[2] = SafeTrig['safeCos'](G7M[1]['localAngle']);
          G7M[14] = SafeTrig['safeSin'](G7M[1]['localAngle']);
          G7M[76] = Math['abs'](G7M[1]['width']);
          G7M[39] = Math['abs'](G7M[1]['height']);
          G7M[37] = {
          };
          if (G7M[1]['shapeID'] == 1) {
            G7M[37] = E['getNewCircleShape']();
            G7M[37]['r'] = G7M[76];
            G7M[37]['sk'] = false;
          } else if (G7M[1]['shapeID'] == 2 || G7M[1]['shapeID'] == 4) {
            G7M[37] = E['getNewBoxShape']();
            U3ndn.S2t(4);
            G7M[37]['w'] = U3ndn.I8r(2, G7M[76]);
            U3ndn.S2t(4);
            G7M[37]['h'] = U3ndn.E_K(2, G7M[39]);
            U3ndn.z_y(6);
            G7M[73] = U3ndn.E_K(489, 489);
            U3ndn.S2t(1);
            G7M[19] = U3ndn.I8r(60, 56);
            G7M[37]['sk'] = G7M[1][r8no$[G7M[73]]] == G7M[19];
          } else if (G7M[1]['shapeID'] == 5) {
            G7M[37] = E['getNewPolyShape']();
            G7M[26] = [
              G7M[76],
              0
            ];
            U3ndn.z_y(137);
            G7M[27] = [
              U3ndn.E_K(0.5, G7M[76]),
              G7M[39]
            ];
            U3ndn.S2t(137);
            G7M[92] = [
              U3ndn.I8r(0.5, G7M[76]),
              - G7M[39]
            ];
            G7M[37]['v'] = [
              G7M[26],
              G7M[27],
              G7M[92]
            ];
            G7M[37]['sk'] = false;
          } else if (G7M[1]['shapeID'] == 6) {
            G7M[37] = E['getNewPolyShape']();
            U3ndn.S2t(4);
            G7M[51] = U3ndn.E_K(G7M[7], 2);
            G7M[93] = Math['min'](G7M[76], G7M[39]);
            U3ndn.z_y(4);
            G7M[88] = Math['min'](G7M[51], U3ndn.I8r(0.4, G7M[93]));
            U3ndn.z_y(1);
            G7M[90] = U3ndn.I8r(G7M[76], G7M[88]);
            G7M[43] = G7M[76];
            U3ndn.S2t(1);
            G7M[13] = U3ndn.I8r(G7M[39], G7M[88]);
            G7M[53] = G7M[39];
            G7M[10] = [
              - G7M[43],
              - G7M[13]
            ];
            G7M[63] = [
              - G7M[90],
              - G7M[53]
            ];
            G7M[42] = [
              G7M[90],
              - G7M[53]
            ];
            G7M[65] = [
              G7M[43],
              - G7M[13]
            ];
            G7M[41] = [
              G7M[43],
              G7M[13]
            ];
            G7M[64] = [
              G7M[90],
              G7M[53]
            ];
            G7M[24] = [
              - G7M[90],
              G7M[53]
            ];
            G7M[60] = [
              - G7M[43],
              G7M[13]
            ];
            G7M[37]['v'] = [
              G7M[10],
              G7M[63],
              G7M[42],
              G7M[65],
              G7M[41],
              G7M[64],
              G7M[24],
              G7M[60]
            ];
            G7M[37]['sk'] = false;
          } else {
            throw new Error('unknown shape ID');
          }
          G7M[37]['c'][0] = G7M[1]['localX'];
          G7M[37]['c'][1] = G7M[1]['localY'];
          G7M[37]['a'] = G7M[1]['localAngle'];
          G7M[6]['physics']['shapes']['push'](G7M[37]);
          G7M[46] = E['getNewFixture']();
          G7M[46]['n'] = '';
          G7M[46]['fr'] = null;
          G7M[46]['fp'] = null;
          G7M[46]['re'] = null;
          G7M[46]['de'] = null;
          G7M[46]['sn'] = false;
          G7M[46]['f'] = G7M[1]['color'];
          G7M[46]['d'] = G7M[1]['death'];
          G7M[46]['np'] = G7M[1]['noPhysics'];
          U3ndn.S2t(6);
          G7M[45] = U3ndn.I8r(11, 32);
          U3ndn.z_y(13);
          G7M[54] = U3ndn.E_K(62, 5, 10);
          U3ndn.S2t(13);
          G7M[59] = U3ndn.I8r(2, 60, 15);
          U3ndn.z_y(138);
          G7M[58] = U3ndn.E_K(9, 1, 0, 1, 8);
          G7M[46]['sh'] = G7M[6][r8no$[G7M[45]]][r8no$[G7M[54]]][r8no$[G7M[59]]] - G7M[58];
          G7M[6]['physics']['fixtures']['push'](G7M[46]);
          G7M[4]['fx']['push'](G7M[6]['physics']['fixtures']['length'] - 1);
        }
        if (G7M[8]['rotates']) {
          G7M[71] = G7M[8]['stiffness'];
          G7M[94] = {
            type: 'rv',
            n: '',
            d: {
              la: 0,
              ua: 0,
              mmt: G7M[71],
              ms: 0,
              el: false,
              em: true,
              cc: false,
              bf: 0
            },
            ba: G7M[6]['physics']['bodies']['length'] - 1,
            bb: - 1,
            aa: [
              G7M[8]['rotatePivotX'],
              G7M[8]['rotatePivotY']
            ]
          };
          G7M[6]['physics']['joints']['push'](G7M[94]);
        }
        if (G7M[8]['springy']) {
          G7M[30] = E['getNewLSJJoint'](G7M[6]['physics']['bodies']['length'] - 1, - 1);
          G7M[30]['sax'] = G7M[8]['springyAnchorX'];
          G7M[30]['say'] = G7M[8]['springyAnchorY'];
          G7M[30]['sf'] = G7M[8]['springyForce'];
          G7M[30]['slen'] = G7M[8]['springyUpper'];
          G7M[6]['physics']['joints']['push'](G7M[30]);
        }
        if (G7M[8]['path']) {
          G7M[31] = E['getNewLPJJoint'](G7M[6]['physics']['bodies']['length'] - 1, - 1);
          G7M[31]['pax'] = 0;
          G7M[31]['pay'] = 0;
          G7M[31]['pa'] = G7M[8]['pathAngle'];
          G7M[31]['pf'] = G7M[8]['pathForce'];
          G7M[31]['plen'] = G7M[8]['pathUpper'];
          G7M[31]['pms'] = G7M[8]['pathMaxSpeed'];
          G7M[6]['physics']['joints']['push'](G7M[31]);
        }
      }
      for (G7M[34] = G7M[6]['physics']['bodies']['length'] - 1; G7M[34] >= 0; G7M[34]--) {
        G7M[6]['physics']['bro']['push'](G7M[34]);
      }
      for (G7M[68] = 0; G7M[68] < G7M[0][0]['capZoneArray']['length']; G7M[68]++) {
        G7M[29] = G7M[0][0]['capZoneArray'][G7M[68]];
        G7M[48] = E['getNewCircleShape']();
        U3ndn.S2t(9);
        G7M[56] = U3ndn.E_K(2632, 49820, 19);
        G7M[48]['r'] = G7M[29][r8no$[G7M[56]]] * G7M[7];
        G7M[6]['physics']['shapes']['push'](G7M[48]);
        G7M[69] = E['getNewFixture'](G7M[6]['physics']['shapes']['length'] - 1);
        G7M[6]['physics']['fixtures']['push'](G7M[69]);
        G7M[96] = E['getNewBody']();
        G7M[96]['n'] = 'Cap Zone Body';
        U3ndn.z_y(67);
        G7M[89] = U3ndn.E_K(19, 42, 32, 1, 13);
        U3ndn.S2t(15);
        G7M[62] = U3ndn.E_K(3, 440, 388);
        U3ndn.z_y(17);
        G7M[84] = U3ndn.I8r(35, 4, 8);
        U3ndn.S2t(78);
        G7M[17] = U3ndn.I8r(17, 32, 13, 3);
        G7M[96]['fx'] = [
          G7M[6][r8no$[G7M[89]]][r8no$[G7M[62]]][r8no$[G7M[84]]] - G7M[17]
        ];
        G7M[96]['p'][0] = G7M[29]['x'];
        G7M[96]['p'][1] = G7M[29]['y'];
        G7M[96]['f_1'] = false;
        G7M[96]['f_2'] = false;
        G7M[96]['f_3'] = false;
        G7M[96]['f_4'] = false;
        G7M[6]['physics']['bodies']['push'](G7M[96]);
        G7M[6]['capZones']['push']({
          n: G7M[0][0]['capZoneNames'][G7M[68]],
          l: G7M[29]['captureLimit'],
          i: G7M[6]['physics']['fixtures']['length'] - 1
        });
        G7M[6]['physics']['bro']['unshift'](G7M[6]['physics']['bodies']['length'] - 1);
      }
      return G7M[6];
    };
    N2['createImage'] = function (B2F, Y7B, w2v, f7O, a_S, q5X, a94, j1H, h_8, P3K = 1, q97, u4G) {
      function y1S() {
        U3ndn.w30();
        var I8x = [
          arguments
        ];
        I8x[4] = r8no$;
        O_O[4]['render'](O_O[5]);
        I8x[9] = O_O[4]['extract']['image']();
        U3ndn.S2t(15);
        I8x[3] = U3ndn.I8r(19, 1284, 34);
        I8x[9]['style']['width'] = O_O[0][4] + U3ndn.j31(I8x[3]);
        U3ndn.z_y(6);
        I8x[2] = U3ndn.I8r(71, 1198);
        I8x[9]['style']['height'] = O_O[0][5] + U3ndn.j31(I8x[2]);
        if (document['body']['contains'](O_O[38])) {
          while (O_O[38]['firstChild']) {
            O_O[38]['removeChild'](O_O[38]['firstChild']);
          }
          O_O[38]['appendChild'](I8x[9]);
          if (O_O[79] != '') {
            I8x[9]['classList']['add'](O_O[79]);
          }
        }
        if (O_O[0][6]) {
          if (!O_O[0][6][O_O[0][7]]) {
            O_O[0][6][O_O[0][7]] = [
            ];
          }
          O_O[0][6][O_O[0][7]][O_O[0][8]] = I8x[9];
        }
        for (I8x[8] = 0; I8x[8] < O_O[37]['length']; I8x[8]++) {
          O_O[37][I8x[8]]['destroy'](true);
        }
        for (I8x[5] = 0; I8x[5] < O_O[63]['length']; I8x[5]++) {
          O_O[63][I8x[5]]['destroy'](true);
        }
        for (I8x[7] = 0; I8x[7] < O_O[56]['length']; I8x[7]++) {
          O_O[56][I8x[7]]['destroy'](true);
          O_O[56][I8x[7]]['dispose'](true);
        }
      }
      var O_O = [
        arguments
      ];
      O_O[8] = r8no$;
      U3ndn.z_y(42);
      O_O[55] = U3ndn.I8r(88, 19, 28, 9);
      O_O[7] = O_O[0][4] * window[r8no$[O_O[55]]] * P3K;
      U3ndn.z_y(1);
      O_O[59] = U3ndn.E_K(459, 6);
      O_O[2] = O_O[0][5] * window[r8no$[O_O[59]]] * P3K;
      O_O[4] = N2['avatarRenderer'];
      if (O_O[4]['width'] != O_O[7] || O_O[4]['height'] != O_O[2]) {
        O_O[4]['resize'](O_O[7], O_O[2]);
      }
      O_O[5] = new PIXI['Container'];
      O_O[1] = new PIXI['Graphics'];
      O_O[3] = new PIXI['Graphics'];
      O_O[6] = null;
      O_O[9] = N2['teamify'](O_O[0][0]['bc'], O_O[0][1]);
      U3ndn.z_y(101);
      O_O[35] = U3ndn.I8r(15, 36, O_O[7]);
      O_O[14] = 1;
      O_O[1]['beginFill'](O_O[9]);
      U3ndn.S2t(4);
      O_O[1]['drawCircle'](0, 0, U3ndn.E_K(O_O[14], O_O[35]));
      O_O[1]['endFill']();
      O_O[3]['beginFill'](16777215);
      U3ndn.S2t(4);
      O_O[3]['drawCircle'](0, 0, U3ndn.E_K(O_O[14], O_O[35]));
      O_O[3]['endFill']();
      if (O_O[0][11] > 0) {
        O_O[96] = new PIXI['Graphics'];
        O_O[96]['beginFill'](0);
        O_O[96]['alpha'] = O_O[0][11];
        U3ndn.S2t(2);
        O_O[30] = U3ndn.I8r(O_O[35], O_O[14], O_O[0][10]);
        U3ndn.S2t(4);
        O_O[96]['drawCircle'](O_O[30], O_O[30], U3ndn.I8r(O_O[14], O_O[35]));
        U3ndn.S2t(0);
        O_O[96]['x'] = U3ndn.I8r(O_O[7], 2);
        U3ndn.S2t(0);
        O_O[96]['y'] = U3ndn.E_K(O_O[2], 2);
        O_O[5]['addChild'](O_O[96]);
      }
      O_O[53] = O_O[0][0]['layers'];
      O_O[90] = [
      ];
      O_O[38] = O_O[0][2];
      O_O[79] = O_O[0][3];
      O_O[56] = [
      ];
      O_O[63] = [
      ];
      O_O[37] = [
      ];
      for (O_O[18] = O_O[53]['length'] - 1; O_O[18] >= 0; O_O[18]--) {
        O_O[72] = O_O[53][O_O[18]];
        O_O[72]['scale'] = Math['abs'](O_O[72]['scale']);
        if (!(O_O[72]['id'] >= 0) || !(O_O[72]['id'] <= 115) || Math['abs'](O_O[72]['x']) > 9999 || Math['abs'](O_O[72]['y']) > 9999 || O_O[72]['scale'] > 999 || O_O[72]['angle'] > 9999 || isNaN(O_O[72]['color']) || typeof O_O[72]['color'] != 'number' || typeof O_O[72]['flipX'] != 'boolean' || typeof O_O[72]['flipY'] != 'boolean') {
          continue;
        }
        U3ndn.S2t(0);
        O_O[46] = U3ndn.I8r(O_O[35], 15);
        U3ndn.S2t(139);
        O_O[25] = U3ndn.I8r(1, 322, 405, 2898, 1);
        O_O[87] = O_O[72][r8no$[O_O[25]]] * O_O[14] * O_O[46];
        if (O_O[87] < 0.08) {
          continue;
        }
        O_O[90][O_O[18]] = false;
        O_O[89] = O_O[72]['id']['toString']();
        if (O_O[72]['id'] < 10) {
          U3ndn.S2t(140);
          O_O[61] = U3ndn.E_K(59, 3, 173, 10, 15);
          O_O[89] = U3ndn.j31(O_O[61]) + O_O[89];
        }
        if (O_O[72]['id'] < 100) {
          U3ndn.z_y(60);
          O_O[75] = U3ndn.E_K(11, 6, 2616);
          O_O[89] = U3ndn.j31(O_O[75]) + O_O[89];
        }
        O_O[95] = 16;
        O_O[83] = 1;
        if (O_O[87] > O_O[95]) {
          U3ndn.S2t(0);
          O_O[83] = U3ndn.I8r(O_O[87], O_O[95]);
          O_O[87] = O_O[95];
        }
        O_O[36] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][O_O[72]['id']], {
          scale: O_O[87],
          autoload: false
        });
        O_O[56]['push'](O_O[36]);
        O_O[36]['load']();
        O_O[65] = PIXI['Texture']['from'](O_O[36]);
        O_O[63]['push'](O_O[65]);
        O_O[65]['baseTexture']['layerID'] = O_O[18];
        O_O[65]['baseTexture']['on']('loaded', function () {
          var D8q = [
            arguments
          ];
          D8q[6] = r8no$;
          U3ndn.w30();
          O_O[90][this['layerID']] = true;
          if (O_O[90]['indexOf'](false) == - 1) {
            y1S();
          }
        });
        O_O[92] = new PIXI['Sprite'](O_O[65]);
        O_O[37]['push'](O_O[92]);
        O_O[92]['tint'] = N2['teamify'](O_O[72]['color'], O_O[0][1]);
        O_O[92]['anchor']['set'](0.5);
        O_O[92]['angle'] = O_O[72]['angle'];
        U3ndn.S2t(6);
        O_O[49] = U3ndn.I8r(7, 32);
        O_O[92]['x'] = O_O[72][r8no$[O_O[49]]] * O_O[46];
        U3ndn.z_y(15);
        O_O[52] = U3ndn.E_K(7, 200, 167);
        O_O[92]['y'] = O_O[72][r8no$[O_O[52]]] * O_O[46];
        O_O[82] = O_O[72]['flipX'] ? - 1 : 1;
        O_O[13] = O_O[72]['flipY'] ? - 1 : 1;
        O_O[92]['scale']['x'] = O_O[92]['scale']['y'] = O_O[83];
        O_O[92]['scale']['x'] *= O_O[82];
        O_O[92]['scale']['y'] *= O_O[13];
        O_O[1]['addChild'](O_O[92]);
      }
      if (O_O[0][1] >= 2 && O_O[0][1] <= 5) {
        O_O[77] = 0;
        if (O_O[0][1] == 2) {
          O_O[77] = 16007990;
        } else if (O_O[0][1] == 3) {
          O_O[77] = 2201331;
        } else if (O_O[0][1] == 4) {
          O_O[77] = 5025616;
        } else if (O_O[0][1] == 5) {
          O_O[77] = 16771899;
        }
        O_O[42] = new PIXI['Graphics'];
        U3ndn.S2t(4);
        O_O[42]['lineStyle'](U3ndn.I8r(O_O[35], 0.12), O_O[77]);
        U3ndn.z_y(9);
        O_O[42]['drawCircle'](0, 0, U3ndn.E_K(O_O[35], 1, O_O[14]));
        O_O[1]['addChild'](O_O[42]);
      }
      O_O[45] = new PIXI['Container'];
      O_O[45]['addChild'](O_O[1]);
      O_O[45]['addChild'](O_O[3]);
      O_O[1]['mask'] = O_O[3];
      if (O_O[6]) {
        O_O[45]['addChild'](O_O[6]);
      }
      U3ndn.S2t(0);
      O_O[45]['x'] = U3ndn.I8r(O_O[7], 2);
      U3ndn.S2t(0);
      O_O[45]['y'] = U3ndn.E_K(O_O[2], 2);
      O_O[5]['addChild'](O_O[45]);
      if (O_O[90]['length'] == 0) {
        y1S();
      }
    };
    N2['HSLToHex'] = function (f1k, S9A, l0w) {
      var T5w = [
        arguments
      ];
      T5w[2] = r8no$;
      T5w[0][1] /= 100;
      T5w[0][2] /= 100;
      U3ndn.S2t(1);
      T5w[5] = U3ndn.I8r(14, 13);
      U3ndn.S2t(15);
      T5w[4] = U3ndn.I8r(11, 11, 20);
      U3ndn.z_y(97);
      T5w[21] = U3ndn.E_K(18, 20, 0, 3);
      T5w[8] = (T5w[5] - Math['abs'](T5w[4] * T5w[0][2] - T5w[21])) * T5w[0][1];
      U3ndn.z_y(141);
      T5w[91] = U3ndn.I8r(28, 10, 5, 12);
      U3ndn.S2t(14);
      T5w[92] = U3ndn.E_K(5, 5, 59);
      U3ndn.z_y(142);
      T5w[96] = U3ndn.I8r(1, 0, 17, 19);
      U3ndn.z_y(73);
      T5w[17] = U3ndn.E_K(2, 10, 4);
      T5w[3] = T5w[8] * (T5w[91] - Math['abs'](T5w[0][0] / T5w[92] % T5w[96] - T5w[17]));
      U3ndn.S2t(143);
      T5w[9] = U3ndn.E_K(2, T5w[8], T5w[0][2]);
      T5w[1] = 0;
      T5w[7] = 0;
      T5w[6] = 0;
      if (0 <= T5w[0][0] && T5w[0][0] < 60) {
        T5w[1] = T5w[8];
        T5w[7] = T5w[3];
        T5w[6] = 0;
      } else if (60 <= T5w[0][0] && T5w[0][0] < 120) {
        T5w[1] = T5w[3];
        T5w[7] = T5w[8];
        T5w[6] = 0;
      } else if (120 <= T5w[0][0] && T5w[0][0] < 180) {
        T5w[1] = 0;
        T5w[7] = T5w[8];
        T5w[6] = T5w[3];
      } else if (180 <= T5w[0][0] && T5w[0][0] < 240) {
        T5w[1] = 0;
        T5w[7] = T5w[3];
        T5w[6] = T5w[8];
      } else if (240 <= T5w[0][0] && T5w[0][0] < 300) {
        T5w[1] = T5w[3];
        T5w[7] = 0;
        T5w[6] = T5w[8];
      } else if (300 <= T5w[0][0] && T5w[0][0] < 360) {
        T5w[1] = T5w[8];
        T5w[7] = 0;
        T5w[6] = T5w[3];
      }
      U3ndn.z_y(144);
      T5w[1] = Math['round'](U3ndn.I8r(T5w[1], 255, T5w[9]));
      U3ndn.S2t(144);
      U3ndn.Y$U();
      T5w[7] = Math['round'](U3ndn.I8r(T5w[7], 255, T5w[9]));
      U3ndn.z_y(144);
      T5w[6] = Math['round'](U3ndn.E_K(T5w[6], 255, T5w[9]));
      T5w[1] *= 65536;
      T5w[7] *= 256;
      T5w[6] *= 1;
      U3ndn.z_y(17);
      return U3ndn.E_K(T5w[6], T5w[1], T5w[7]);
    };
    N2['hexToHSL'] = function (f8y) {
      var d5p = [
        arguments
      ];
      d5p[1] = r8no$;
      d5p[7] = 0;
      d5p[4] = 0;
      d5p[2] = 0;
      if (d5p[0][0]['length'] == 4) {
        U3ndn.S2t(6);
        d5p[88] = U3ndn.E_K(865, 6);
        U3ndn.S2t(9);
        d5p[72] = U3ndn.I8r(13, 64, 5);
        U3ndn.z_y(145);
        d5p[40] = U3ndn.I8r(10, 3, 18, 1, 10);
        d5p[7] = U3ndn.j31(d5p[88]) + d5p[0][0][d5p[72]] + d5p[0][0][d5p[40]];
        U3ndn.z_y(146);
        d5p[35] = U3ndn.E_K(11, 885, 10, 575, 3);
        U3ndn.z_y(1);
        d5p[84] = U3ndn.I8r(5, 3);
        U3ndn.z_y(147);
        d5p[15] = U3ndn.E_K(18, 17, 4, 0, 372);
        d5p[4] = U3ndn.j31(d5p[35]) + d5p[0][0][d5p[84]] + d5p[0][0][d5p[15]];
        U3ndn.z_y(103);
        d5p[82] = U3ndn.I8r(7, 72293, 10452, 8, 8);
        U3ndn.z_y(57);
        d5p[81] = U3ndn.I8r(17, 20);
        U3ndn.S2t(134);
        d5p[42] = U3ndn.E_K(17, 1, 21, 7, 0);
        d5p[2] = U3ndn.j31(d5p[82]) + d5p[0][0][d5p[81]] + d5p[0][0][d5p[42]];
      } else if (d5p[0][0]['length'] == 7) {
        U3ndn.z_y(6);
        d5p[48] = U3ndn.E_K(857, 14);
        U3ndn.S2t(148);
        d5p[14] = U3ndn.I8r(3, 1, 5);
        U3ndn.z_y(1);
        d5p[62] = U3ndn.E_K(40, 38);
        d5p[7] = U3ndn.j31(d5p[48]) + d5p[0][0][d5p[14]] + d5p[0][0][d5p[62]];
        U3ndn.z_y(149);
        d5p[71] = U3ndn.I8r(870, 6, 1, 54, 324);
        U3ndn.z_y(73);
        d5p[47] = U3ndn.E_K(9, 54, 3);
        d5p[4] = U3ndn.j31(d5p[71]) + d5p[0][0][d5p[47]] + d5p[0][0][4];
        U3ndn.S2t(142);
        d5p[73] = U3ndn.I8r(1, 13065, 12203, 9);
        U3ndn.S2t(78);
        d5p[91] = U3ndn.I8r(20, 62, 7, 40);
        U3ndn.z_y(125);
        d5p[78] = U3ndn.I8r(17, 5, 9, 1, 6);
        d5p[2] = U3ndn.j31(d5p[73]) + d5p[0][0][d5p[91]] + d5p[0][0][d5p[78]];
      }
      d5p[7] /= 255;
      d5p[4] /= 255;
      d5p[2] /= 255;
      d5p[8] = Math['min'](d5p[7], d5p[4], d5p[2]);
      d5p[6] = Math['max'](d5p[7], d5p[4], d5p[2]);
      U3ndn.Y$U();
      U3ndn.S2t(1);
      d5p[3] = U3ndn.E_K(d5p[6], d5p[8]);
      d5p[5] = 0;
      d5p[9] = 0;
      d5p[74] = 0;
      if (d5p[3] == 0) {
        d5p[5] = 0;
      } else if (d5p[6] == d5p[7]) {
        U3ndn.z_y(150);
        d5p[5] = U3ndn.I8r(d5p[2], d5p[3], 6, d5p[4]);
      } else if (d5p[6] == d5p[4]) {
        U3ndn.S2t(28);
        d5p[5] = U3ndn.I8r(2, d5p[7], d5p[3], d5p[2]);
      } else {
        U3ndn.S2t(28);
        d5p[5] = U3ndn.E_K(4, d5p[4], d5p[3], d5p[7]);
      }
      U3ndn.z_y(4);
      d5p[5] = Math['round'](U3ndn.E_K(60, d5p[5]));
      if (d5p[5] < 0) {
        d5p[5] += 360;
      }
      U3ndn.S2t(151);
      d5p[74] = U3ndn.E_K(d5p[6], d5p[8], 2);
      d5p[9] = d5p[3] == 0 ? 0 : d5p[3] / (1 - Math['abs'](2 * d5p[74] - 1));
      d5p[9] = + (d5p[9] * 100) ['toFixed'](1);
      d5p[74] = + (d5p[74] * 100) ['toFixed'](1);
      return {
        h: d5p[5],
        s: d5p[9],
        l: d5p[74]
      };
    };
    N2['hueify'] = function (e9I, P1B) {
      var W6h = [
        arguments
      ];
      W6h[7] = r8no$;
      U3ndn.z_y(81);
      W6h[6] = U3ndn.E_K(1304, 2606, 15, 1319);
      U3ndn.z_y(57);
      W6h[1] = U3ndn.I8r(7, 13);
      U3ndn.z_y(15);
      W6h[2] = U3ndn.I8r(15, 2601, 17);
      W6h[0][0] = U3ndn.j31(W6h[6]) + W6h[0][0]['toString'](16) ['padStart'](W6h[1], U3ndn.j31(W6h[2]));
      W6h[3] = N2['hexToHSL'](W6h[0][0]);
      W6h[3]['h'] = W6h[0][1];
      W6h[8] = N2['HSLToHex'](W6h[3]['h'], W6h[3]['s'], W6h[3]['l']);
      return W6h[8];
    };
    N2['teamify'] = function (J44, M8K) {
      var I70 = [
        arguments
      ];
      I70[9] = r8no$;
      if (I70[0][1] == 2) {
        return N2['hueify'](I70[0][0], 4);
      }
      if (I70[0][1] == 3) {
        return N2['hueify'](I70[0][0], 207);
      }
      if (I70[0][1] == 4) {
        return N2['hueify'](I70[0][0], 122);
      }
      if (I70[0][1] == 5) {
        return N2['hueify'](I70[0][0], 54);
      }
      return I70[0][0];
    };
    J['createNewState'] = function (s_u, b9G, B8b, X4C, h0A, A08, k0H) {
      var N48 = [
        arguments
      ];
      N48[1] = r8no$;
      N48[2] = {
      };
      N48[2]['scores'] = [
        0,
        0,
        0,
        0
      ];
      N48[2]['goalHeight'] = 13;
      N48[2]['borderThickness'] = 5;
      N48[2]['borderThicknessXInner'] = 25;
      N48[2]['borderThicknessYInner'] = 70;
      N48[2]['ppm'] = 11;
      N48[2]['fte'] = - 1;
      N48[2]['ftu'] = 120;
      N48[2]['lscr'] = - 1;
      N48[2]['ni'] = true;
      N48[2]['ball'] = {
      };
      U3ndn.z_y(54);
      N48[94] = U3ndn.E_K(4, 7, 5, 713, 163);
      U3ndn.S2t(60);
      N48[91] = U3ndn.E_K(10, 4, 16);
      U3ndn.z_y(100);
      N48[71] = U3ndn.I8r(368, 14326, 3, 20, 13);
      N48[2]['ball']['x'] = N48[94] / N48[91] / N48[2][r8no$[N48[71]]];
      U3ndn.z_y(97);
      N48[66] = U3ndn.E_K(452, 2, 45, 5);
      U3ndn.S2t(152);
      N48[20] = U3ndn.E_K(0, 78, 10, 12, 4);
      U3ndn.S2t(90);
      N48[60] = U3ndn.I8r(20, 18, 8, 92);
      N48[2]['ball']['y'] = N48[66] / N48[20] / N48[2][r8no$[N48[60]]];
      N48[2]['ball']['xv'] = 0;
      N48[2]['ball']['yv'] = 0;
      N48[2]['players'] = N48[0][0];
      N48[2]['seed'] = N48[0][2];
      N48[2]['discs'] = [
      ];
      N48[2]['sts'] = [
      ];
      N48[5] = [
        0,
        0,
        0,
        0
      ];
      for (N48[51] = 0; N48[51] < N48[0][0]['length']; N48[51]++) {
        if (N48[0][0][N48[51]]) {
          N48[6] = N48[0][0][N48[51]];
          N48[4] = N48[6]['team'];
          if (N48[4] != 2 && N48[4] != 3) {
            continue;
          }
          N48[7] = N48[4] == 3 ? - 250 : 250;
          U3ndn.S2t(14);
          N48[3] = U3ndn.E_K(2, 730, N48[7]);
          N48[9] = 80;
          U3ndn.z_y(153);
          N48[80] = U3ndn.E_K(19, 4, 4, 17);
          N48[8] = Math['ceil'](N48[5][N48[4]] / N48[80]) * N48[9];
          if (N48[4] == 2) {
            if (N48[5][N48[4]] % 2 == 0) {
              N48[8] = - N48[8];
            }
          } else if (N48[5][N48[4]] % 2 == 1) {
            N48[8] = - N48[8];
          }
          U3ndn.z_y(14);
          N48[83] = U3ndn.I8r(2, 500, N48[8]);
          N48[46] = {
          };
          U3ndn.S2t(149);
          N48[45] = U3ndn.E_K(32, 12, 6, 49, 7);
          N48[46]['x'] = N48[3] / N48[2][r8no$[N48[45]]];
          U3ndn.z_y(100);
          N48[15] = U3ndn.E_K(874, 157284, 12, 10, 15);
          N48[46]['y'] = N48[83] / N48[2][r8no$[N48[15]]];
          N48[46]['xv'] = 0;
          N48[46]['yv'] = 0;
          N48[46]['team'] = N48[4];
          N48[46]['kickReady'] = true;
          N48[2]['discs'][N48[51]] = N48[46];
          N48[5][N48[4]]++;
        }
      }
      U3ndn.Y$U();
      return N48[2];
    };
    J['prototype']['step'] = function (J3U, b$j, r7v, d7k, E2A, x2_) {
      function O_h(Q5_) {
        var j4r = [
          arguments
        ];
        j4r[4] = r8no$;
        if (W8Q[0][2] && W8Q[0][2]['playersLeft'] && W8Q[0][2]['playersLeft']['length'] > 0) {
          for (j4r[2] = 0; j4r[2] < W8Q[0][2]['playersLeft']['length']; j4r[2]++) {
            if (W8Q[0][2]['playersLeft'][j4r[2]] == j4r[0][0]) {
              return true;
            }
          }
        }
        return false;
      }
      var W8Q = [
        arguments
      ];
      W8Q[9] = r8no$;
      J['soundsThisStep'] = [
      ];
      if (!J['world']) {
        J['world'] = new V6D[10](new V6D[2](0, 0));
        J['world']['SetWarmStarting'](false);
        J['contactListener'] = {
        };
        J['world']['SetContactListener'](J['contactListener']);
        J['contactListener']['PostSolve'] = function (Y6N, M2L) {
          var I3G = [
            arguments
          ];
          I3G[7] = r8no$;
          I3G[2] = I3G[0][0]['GetFixtureA']();
          I3G[8] = I3G[0][0]['GetFixtureB']();
          I3G[5] = I3G[2]['GetBody']();
          I3G[9] = I3G[8]['GetBody']();
          if (I3G[5]['GetUserData']() ['type'] == 'ball' || I3G[9]['GetUserData']() ['type'] == 'ball') {
            I3G[4] = I3G[0][1]['normalImpulses'][0];
            if (I3G[4] > 1) {
              J['soundsThisStep']['push']({
                i: 'footBounce',
                v: I3G[4],
                f: 5
              });
            }
          }
        };
        J['contactListener']['EndContact'] = function () {
        };
        J['contactListener']['PreSolve'] = function (W11) {
          U3ndn.w30();
          [
            arguments
          ];
        };
        J['contactListener']['BeginContact'] = function (K1x) {
          [
            arguments
          ];
        };
      }
      W8Q[4] = J['world'];
      W8Q[4]['novakReset']();
      W8Q[4]['SetContactListener'](J['contactListener']);
      W8Q[8] = new V6D[28](W8Q[4], W8Q[0][0]);
      U3ndn.Y$U();
      W8Q[3] = new V6D[20](W8Q[4], W8Q[0][0]['ball']);
      W8Q[5] = [
      ];
      for (W8Q[76] = 0; W8Q[76] < W8Q[0][0]['discs']['length']; W8Q[76]++) {
        if (W8Q[0][0]['discs'][W8Q[76]]) {
          if (O_h(W8Q[76]) == false) {
            W8Q[5][W8Q[76]] = new V6D[70](W8Q[4], W8Q[0][0]['discs'][W8Q[76]], W8Q[0][0]['ppm']);
          }
        }
      }
      if (W8Q[0][0]['ftu'] == - 1) {
        for (W8Q[81] = 0; W8Q[81] < W8Q[5]['length']; W8Q[81]++) {
          if (W8Q[5][W8Q[81]] && W8Q[0][1][W8Q[81]]) {
            W8Q[5][W8Q[81]]['applyInputs'](W8Q[0][1][W8Q[81]]);
            W8Q[5][W8Q[81]]['doKick'](W8Q[0][1][W8Q[81]], W8Q[3]['body']);
          }
        }
      }
      if (W8Q[0][0]['ftu'] == - 1) {
        U3ndn.z_y(0);
        W8Q[4]['Step'](U3ndn.E_K(1, W8Q[0][3]), 2, 6);
      }
      W8Q[4]['ClearForces']();
      for (W8Q[27] = 0; W8Q[27] < W8Q[5]['length']; W8Q[27]++) {
        if (W8Q[5][W8Q[27]]) {
          W8Q[5][W8Q[27]]['clampToPitch']();
        }
      }
      W8Q[2] = W8Q[0][0]['scores']['slice']();
      W8Q[1] = W8Q[0][0]['lscr'];
      W8Q[7] = false;
      if (W8Q[0][0]['ftu'] == - 1 && W8Q[0][0]['fte'] == - 1) {
        W8Q[6] = W8Q[3]['body']['GetPosition']() ['x'];
        if (W8Q[6] < (W8Q[0][0]['borderThickness'] + W8Q[0][0]['borderThicknessXInner']) / W8Q[0][0]['ppm']) {
          W8Q[2][2]++;
          W8Q[1] = 2;
          W8Q[7] = true;
          J['soundsThisStep']['push']({
            i: 'footGoal',
            v: 1,
            p: 'l',
            f: 5
          });
        }
        if (W8Q[6] > (730 - W8Q[0][0]['borderThickness'] - W8Q[0][0]['borderThicknessXInner']) / W8Q[0][0]['ppm']) {
          W8Q[2][3]++;
          W8Q[1] = 3;
          W8Q[7] = true;
          J['soundsThisStep']['push']({
            i: 'footGoal',
            v: 1,
            p: 'r',
            f: 5
          });
        }
      }
      W8Q[87] = {
      };
      W8Q[87]['scores'] = W8Q[2];
      W8Q[87]['goalHeight'] = W8Q[0][0]['goalHeight'];
      W8Q[87]['borderThickness'] = W8Q[0][0]['borderThickness'];
      W8Q[87]['borderThicknessXInner'] = W8Q[0][0]['borderThicknessXInner'];
      W8Q[87]['borderThicknessYInner'] = W8Q[0][0]['borderThicknessYInner'];
      W8Q[87]['ppm'] = W8Q[0][0]['ppm'];
      W8Q[87]['lscr'] = W8Q[1];
      W8Q[87]['seed'] = W8Q[0][0]['seed'];
      W8Q[87]['ni'] = false;
      W8Q[87]['sts'] = [
      ];
      W8Q[87]['players'] = [
      ];
      for (W8Q[42] = 0; W8Q[42] < W8Q[0][0]['players']['length']; W8Q[42]++) {
        if (W8Q[0][0]['players'][W8Q[42]]) {
          if (O_h(W8Q[0][0]['players'][W8Q[42]]['id']) == false) {
            W8Q[87]['players'][W8Q[42]] = W8Q[0][0]['players'][W8Q[42]];
          }
        }
      }
      for (W8Q[99] = 0; W8Q[99] < W8Q[0][0]['sts']['length']; W8Q[99]++) {
        if (W8Q[0][0]['sts'][W8Q[99]] && W8Q[0][0]['sts'][W8Q[99]]['f'] > 0) {
          W8Q[87]['sts']['push']({
            i: W8Q[0][0]['sts'][W8Q[99]]['i'],
            f: W8Q[0][0]['sts'][W8Q[99]]['f'] - 1,
            v: W8Q[0][0]['sts'][W8Q[99]]['v'],
            p: W8Q[0][0]['sts'][W8Q[99]]['p'],
            pl: W8Q[0][0]['sts'][W8Q[99]]['pl']
          });
        }
      }
      for (W8Q[11] = 0; W8Q[11] < J['soundsThisStep']['length']; W8Q[11]++) {
        W8Q[87]['sts']['push'](J['soundsThisStep'][W8Q[11]]);
      }
      if (W8Q[7]) {
        W8Q[87]['fte'] = 90;
      } else {
        W8Q[87]['fte'] = Math['max']( - 1, W8Q[0][0]['fte'] - 1);
      }
      W8Q[87]['ftu'] = Math['max']( - 1, W8Q[0][0]['ftu'] - 1);
      W8Q[87]['ball'] = W8Q[3]['output']();
      W8Q[87]['discs'] = [
      ];
      for (W8Q[82] = 0; W8Q[82] < W8Q[5]['length']; W8Q[82]++) {
        if (W8Q[5][W8Q[82]]) {
          W8Q[87]['discs'][W8Q[82]] = W8Q[5][W8Q[82]]['output']();
        }
      }
      if (W8Q[0][0]['fte'] == 0) {
        W8Q[56] = W8Q[87]['players'];
        W8Q[87] = J['createNewState'](W8Q[56], null, W8Q[0][0]['seed'], false, null, false);
        W8Q[87]['scores'] = W8Q[2];
      }
      W8Q[3]['destroy']();
      for (W8Q[85] = 0; W8Q[85] < W8Q[5]['length']; W8Q[85]++) {
        if (W8Q[5][W8Q[85]]) {
          W8Q[5][W8Q[85]]['destroy']();
        }
      }
      W8Q[8]['destroy']();
      return W8Q[87];
    };
    V6D[20] = class a4k {
      constructor(p96, z0V) {
        U3ndn.Y$U();
        var Y4Z = [
          arguments
        ];
        Y4Z[6] = r8no$;
        this['world'] = Y4Z[0][0];
        Y4Z[9] = new V6D[4];
        Y4Z[9]['type'] = V6D[5]['b2_dynamicBody'];
        Y4Z[9]['position']['Set'](Y4Z[0][1]['x'], Y4Z[0][1]['y']);
        Y4Z[3] = Y4Z[0][0]['CreateBody'](Y4Z[9]);
        Y4Z[8] = new V6D[19](0.7);
        Y4Z[1] = new V6D[27];
        Y4Z[1]['shape'] = Y4Z[8];
        Y4Z[1]['restitution'] = 0.4;
        U3ndn.S2t(154);
        Y4Z[7] = U3ndn.E_K(191, 2, 3, 2, 391);
        Y4Z[1]['density'] = 0.6 / (Math[r8no$[Y4Z[7]]] * 0.7 * 0.7);
        Y4Z[1]['friction'] = 0;
        Y4Z[1]['filter']['categoryBits'] = 4;
        Y4Z[3]['CreateFixture'](Y4Z[1]);
        Y4Z[3]['SetLinearVelocity'](new V6D[2](Y4Z[0][1]['xv'], Y4Z[0][1]['yv']));
        Y4Z[4] = {
        };
        Y4Z[4]['type'] = 'ball';
        Y4Z[4]['ballReference'] = this;
        Y4Z[3]['SetUserData'](Y4Z[4]);
        Y4Z[3]['SetFixedRotation'](true);
        Y4Z[3]['SetLinearDamping'](0.6);
        Y4Z[3]['SetBullet'](true);
        this['body'] = Y4Z[3];
      }
      output() {
        var u34 = [
          arguments
        ];
        u34[2] = r8no$;
        U3ndn.w30();
        u34[9] = {
        };
        u34[9] = {
        };
        u34[9]['x'] = this['body']['GetPosition']() ['x'];
        u34[9]['y'] = this['body']['GetPosition']() ['y'];
        u34[9]['xv'] = this['body']['GetLinearVelocity']() ['x'];
        u34[9]['yv'] = this['body']['GetLinearVelocity']() ['y'];
        return u34[9];
      }
      destroy() {
        var d8z = [
          arguments
        ];
        d8z[2] = r8no$;
        this['world']['DestroyBody'](this['body']);
        this['world'] = null;
      }
    };
    V6D[70] = class v3g {
      constructor(C_m, j5j, k_O) {
        var L5_ = [
          arguments
        ];
        L5_[6] = r8no$;
        this['world'] = L5_[0][0];
        this['radius'] = 1;
        this['ppm'] = L5_[0][2];
        L5_[5] = new V6D[4];
        L5_[5]['type'] = V6D[5]['b2_dynamicBody'];
        L5_[5]['position']['Set'](L5_[0][1]['x'], L5_[0][1]['y']);
        L5_[5]['fixedRotation'] = true;
        L5_[5]['linearDamping'] = 2.4;
        L5_[5]['linearVelocity']['x'] = L5_[0][1]['xv'];
        L5_[5]['linearVelocity']['y'] = L5_[0][1]['yv'];
        L5_[5]['bullet'] = true;
        L5_[9] = L5_[0][0]['CreateBody'](L5_[5]);
        L5_[2] = new V6D[19];
        L5_[2]['SetRadius'](this['radius']);
        L5_[1] = new V6D[27];
        L5_[1]['shape'] = L5_[2];
        L5_[1]['friction'] = 0;
        L5_[1]['restitution'] = 0.4;
        U3ndn.z_y(1);
        L5_[8] = U3ndn.E_K(200, 18);
        U3ndn.S2t(81);
        L5_[3] = U3ndn.I8r(197, 145, 18, 5);
        U3ndn.z_y(7);
        L5_[7] = U3ndn.I8r(192, 1244, 13, 8);
        L5_[1]['density'] = 1.05 / (Math[r8no$[L5_[8]]] * this[r8no$[L5_[3]]] * this[r8no$[L5_[7]]]);
        L5_[1]['filter']['categoryBits'] = 2;
        L5_[9]['CreateFixture'](L5_[1]);
        L5_[4] = {
        };
        L5_[4]['type'] = 'disc';
        L5_[4]['discReference'] = this;
        L5_[9]['SetUserData'](L5_[4]);
        this['body'] = L5_[9];
        this['kickReady'] = L5_[0][1]['kickReady'];
        this['inputState'] = L5_[0][1];
      }
      applyInputs(I21) {
        var r4i = [
          arguments
        ];
        r4i[2] = r8no$;
        r4i[5] = new V6D[2](0, 0);
        r4i[1] = 32;
        if (r4i[0][0]['left']) {
          r4i[5]['x'] = - r4i[1];
        } else if (r4i[0][0]['right']) {
          r4i[5]['x'] = r4i[1];
        }
        if (r4i[0][0]['up']) {
          r4i[5]['y'] = - r4i[1];
        } else if (r4i[0][0]['down']) {
          r4i[9] = - 1929123729;
          r4i[3] = - 34846078;
          r4i[8] = 2;
          for (r4i[6] = 1; U3ndn.P5V(r4i[6].toString(), r4i[6].toString().length, 87586) !== r4i[9]; r4i[6]++) {
            r4i[5]['s'] = r4i[1];
            r4i[8] += 2;
          }
          if (U3ndn.P5V(r4i[8].toString(), r4i[8].toString().length, 96651) !== r4i[3]) {
            r4i[5]['y'] = r4i[1];
          }
        }
        if (r4i[0][0]['action']) {
          r4i[5]['Multiply'](0.7);
        }
        if (r4i[0][0]['action2']) {
          r4i[5]['x'] = 0;
          r4i[5]['y'] = 0;
        }
        this['body']['ApplyForce'](r4i[5], this['body']['GetWorldCenter']());
      }
      doKick(F7g, L3j) {
        var H8u = [
          arguments
        ];
        H8u[5] = r8no$;
        if (H8u[0][0]['action'] && this['kickReady']) {
          H8u[6] = this['body']['GetPosition']() ['Copy']();
          H8u[6]['Subtract'](H8u[0][1]['GetPosition']());
          if (Math['abs'](H8u[6]['Length']()) < 0.7 + this['radius'] + 0.6) {
            H8u[2] = H8u[6]['Copy']();
            H8u[2] = H8u[2]['GetNegative']();
            H8u[7] = H8u[6]['Length']();
            U3ndn.S2t(0);
            H8u[4] = U3ndn.I8r(H8u[7], 15);
            U3ndn.z_y(6);
            H8u[9] = U3ndn.I8r(2, 37);
            H8u[2]['x'] = H8u[2][r8no$[H8u[9]]] / H8u[4];
            U3ndn.S2t(92);
            H8u[3] = U3ndn.I8r(7, 64, 1, 19, 12);
            H8u[2]['y'] = H8u[2][r8no$[H8u[3]]] / H8u[4];
            H8u[0][1]['ApplyImpulse'](H8u[2], H8u[0][1]['GetPosition']());
            this['kickReady'] = false;
            J['soundsThisStep']['push']({
              i: 'footKick',
              v: 1,
              f: 10
            });
          }
        }
        if (!H8u[0][0]['action']) {
          this['kickReady'] = true;
        }
      }
      clampToPitch() {
        var H9w = [
          arguments
        ];
        H9w[4] = r8no$;
        H9w[6] = this['body']['GetPosition']();
        if (H9w[6]['x'] < 0 + this['radius']) {
          U3ndn.S2t(115);
          H9w[1] = U3ndn.E_K(119, 14, 186, 17);
          H9w[6]['x'] = 0 + this[r8no$[H9w[1]]];
          this['body']['GetLinearVelocity']() ['x'] = 0;
        }
        if (H9w[6]['x'] > 730 / this['ppm'] - this['radius']) {
          U3ndn.z_y(1);
          H9w[3] = U3ndn.I8r(14600, 13870);
          U3ndn.z_y(9);
          H9w[8] = U3ndn.E_K(414, 1196, 3);
          U3ndn.z_y(29);
          H9w[7] = U3ndn.E_K(123, 5, 13);
          H9w[6]['x'] = H9w[3] / this[r8no$[H9w[8]]] - this[r8no$[H9w[7]]];
          this['body']['GetLinearVelocity']() ['x'] = 0;
        }
        if (H9w[6]['y'] < 0 + this['radius']) {
          U3ndn.z_y(6);
          H9w[9] = U3ndn.I8r(168, 20);
          H9w[6]['y'] = 0 + this[r8no$[H9w[9]]];
          this['body']['GetLinearVelocity']() ['y'] = 0;
        }
        if (H9w[6]['y'] > 500 / this['ppm'] - this['radius']) {
          U3ndn.z_y(6);
          H9w[2] = U3ndn.I8r(45, 455);
          U3ndn.z_y(80);
          H9w[5] = U3ndn.E_K(3, 263, 17, 57, 14);
          U3ndn.S2t(65);
          H9w[53] = U3ndn.E_K(18, 1880, 470, 166);
          H9w[6]['y'] = H9w[2] / this[r8no$[H9w[5]]] - this[r8no$[H9w[53]]];
          this['body']['GetLinearVelocity']() ['y'] = 0;
        }
      }
      output() {
        var B$X = [
          arguments
        ];
        B$X[8] = r8no$;
        B$X[7] = {
        };
        B$X[7]['x'] = this['body']['GetPosition']() ['x'];
        B$X[7]['y'] = this['body']['GetPosition']() ['y'];
        B$X[7]['xv'] = this['body']['GetLinearVelocity']() ['x'];
        B$X[7]['yv'] = this['body']['GetLinearVelocity']() ['y'];
        B$X[7]['team'] = this['inputState']['team'];
        B$X[7]['kickReady'] = this['kickReady'];
        return B$X[7];
      }
      destroy() {
        U3ndn.Y$U();
        var Y4y = [
          arguments
        ];
        Y4y[2] = r8no$;
        this['world']['DestroyBody'](this['body']);
        this['world'] = null;
        this['inputState'] = null;
      }
    };
    V6D[28] = class f5Q {
      constructor(E5b, r9i) {
        var X1G = [
          arguments
        ];
        X1G[2] = r8no$;
        this['world'] = X1G[0][0];
        X1G[6] = X1G[0][1]['ppm'];
        X1G[4] = 0;
        X1G[7] = 0;
        X1G[3] = 0;
        X1G[1] = 0;
        X1G[9] = 0;
        X1G[5] = 0;
        U3ndn.S2t(1);
        X1G[76] = U3ndn.E_K(13870, 13140);
        U3ndn.z_y(115);
        X1G[96] = U3ndn.E_K(23552, 16, 1487, 1472);
        U3ndn.z_y(42);
        X1G[20] = U3ndn.I8r(160, 12, 12, 18);
        U3ndn.z_y(132);
        X1G[42] = U3ndn.I8r(26802, 1497, 9, 26802, 1);
        U3ndn.S2t(26);
        X1G[24] = U3ndn.E_K(4, 30, 406, 12);
        X1G[91] = (X1G[76] - X1G[0][1][r8no$[X1G[96]]] * X1G[20] - X1G[0][1][r8no$[X1G[42]]] * X1G[24]) / X1G[6];
        U3ndn.z_y(155);
        X1G[73] = U3ndn.E_K(10, 20, 2500, 8, 1516);
        U3ndn.z_y(1);
        X1G[30] = U3ndn.E_K(1503, 15);
        U3ndn.z_y(13);
        X1G[61] = U3ndn.I8r(0, 12, 10);
        U3ndn.z_y(9);
        X1G[38] = U3ndn.I8r(1478, 23636, 17);
        U3ndn.z_y(9);
        X1G[36] = U3ndn.E_K(4, 22, 6);
        X1G[85] = (X1G[73] - X1G[0][1][r8no$[X1G[30]]] * X1G[61] - X1G[0][1][r8no$[X1G[38]]] * X1G[36]) / X1G[6];
        U3ndn.S2t(0);
        X1G[26] = U3ndn.I8r(5, X1G[6]);
        X1G[33] = X1G[0][1]['goalHeight'];
        U3ndn.z_y(0);
        X1G[46] = U3ndn.E_K(8, X1G[6]);
        if (X1G[91] != X1G[3] || X1G[85] != X1G[1] || X1G[6] != X1G[7] || X1G[26] != X1G[4] || X1G[33] != X1G[9] || X1G[46] != X1G[5]) {
          X1G[3] = X1G[91];
          X1G[1] = X1G[85];
          X1G[7] = X1G[6];
          X1G[4] = X1G[26];
          X1G[9] = X1G[33];
          X1G[5] = X1G[46];
          U3ndn.z_y(14);
          X1G[8] = [
            new V6D[2](U3ndn.I8r(2, X1G[91], X1G[26]), U3ndn.E_K(2, X1G[85], U3ndn.z_y(156))),
            new V6D[2](U3ndn.I8r(X1G[26], X1G[91], 2, U3ndn.S2t(157)), U3ndn.I8r(2, X1G[85], U3ndn.S2t(156))),
            new V6D[2](U3ndn.E_K(X1G[26], X1G[91], 2, U3ndn.z_y(157)), U3ndn.E_K(X1G[26], X1G[85], 2, U3ndn.S2t(157))),
            new V6D[2](U3ndn.I8r(2, X1G[91], X1G[26], U3ndn.z_y(14)), U3ndn.E_K(X1G[26], X1G[85], 2, U3ndn.z_y(157)))
          ];
          X1G[15] = [
            new V6D[2](X1G[91] / 2 + X1G[26], X1G[85] / 2),
            new V6D[2]( - X1G[91] / 2 - X1G[26], X1G[85] / 2),
            new V6D[2]( - X1G[91] / 2 - X1G[26], X1G[85] / 2 + X1G[26]),
            new V6D[2](X1G[91] / 2 + X1G[26], X1G[85] / 2 + X1G[26])
          ]['reverse']();
          U3ndn.S2t(156);
          X1G[83] = [
            new V6D[2](U3ndn.E_K(2, X1G[91]), U3ndn.I8r(X1G[33], X1G[85], X1G[85], 2, 2, U3ndn.z_y(158))),
            new V6D[2](U3ndn.I8r(X1G[26], X1G[91], 2, U3ndn.S2t(157)), U3ndn.I8r(X1G[33], X1G[85], X1G[85], 2, 2, U3ndn.z_y(158))),
            new V6D[2](U3ndn.I8r(X1G[26], X1G[91], 2, U3ndn.z_y(157)), U3ndn.I8r(2, X1G[85], U3ndn.S2t(156))),
            new V6D[2](U3ndn.E_K(2, X1G[91], U3ndn.z_y(156)), U3ndn.E_K(2, X1G[85], U3ndn.z_y(156)))
          ];
          X1G[14] = [
            new V6D[2](X1G[91] / 2, - X1G[85] / 2 + (X1G[85] - X1G[33]) / 2),
            new V6D[2](X1G[91] / 2 + X1G[26], - X1G[85] / 2 + (X1G[85] - X1G[33]) / 2),
            new V6D[2](X1G[91] / 2 + X1G[26], - X1G[85] / 2),
            new V6D[2](X1G[91] / 2, - X1G[85] / 2)
          ]['reverse']();
          X1G[48] = [
            new V6D[2]( - X1G[91] / 2, X1G[85] / 2 - (X1G[85] - X1G[33]) / 2),
            new V6D[2]( - X1G[91] / 2 - X1G[26], X1G[85] / 2 - (X1G[85] - X1G[33]) / 2),
            new V6D[2]( - X1G[91] / 2 - X1G[26], X1G[85] / 2),
            new V6D[2]( - X1G[91] / 2, X1G[85] / 2)
          ]['reverse']();
          U3ndn.z_y(0);
          X1G[47] = [
            new V6D[2](U3ndn.I8r(X1G[91], 2), U3ndn.I8r(X1G[85], 2, X1G[85], 2, X1G[33], U3ndn.S2t(159))),
            new V6D[2](U3ndn.E_K(2, X1G[91], X1G[26], U3ndn.S2t(14)), U3ndn.I8r(X1G[85], 2, X1G[85], 2, X1G[33], U3ndn.z_y(159))),
            new V6D[2](U3ndn.I8r(2, X1G[91], X1G[26], U3ndn.z_y(14)), U3ndn.E_K(X1G[85], 2, U3ndn.S2t(0))),
            new V6D[2](U3ndn.E_K(X1G[91], 2, U3ndn.z_y(0)), U3ndn.I8r(X1G[85], 2, U3ndn.z_y(0)))
          ];
          U3ndn.z_y(156);
          X1G[18] = new V6D[2](U3ndn.E_K(2, X1G[91]), U3ndn.I8r(X1G[33], X1G[85], X1G[85], 2, 2, U3ndn.z_y(158)));
          U3ndn.S2t(0);
          X1G[22] = new V6D[2](U3ndn.I8r(X1G[91], 2), U3ndn.E_K(X1G[33], X1G[85], X1G[85], 2, 2, U3ndn.z_y(158)));
          U3ndn.S2t(156);
          X1G[97] = new V6D[2](U3ndn.I8r(2, X1G[91]), U3ndn.I8r(X1G[85], 2, X1G[85], 2, X1G[33], U3ndn.S2t(159)));
          U3ndn.S2t(0);
          X1G[94] = new V6D[2](U3ndn.E_K(X1G[91], 2), U3ndn.I8r(X1G[85], 2, X1G[85], 2, X1G[33], U3ndn.z_y(159)));
        }
        X1G[90] = new V6D[27];
        X1G[21] = new V6D[27];
        X1G[72] = new V6D[4];
        X1G[39] = new V6D[62];
        X1G[72]['type'] = V6D[5]['b2_staticBody'];
        U3ndn.z_y(160);
        X1G[72]['position']['Set'](U3ndn.E_K(730, X1G[6], 2), U3ndn.E_K(500, X1G[6], 2));
        X1G[17] = X1G[0][0]['CreateBody'](X1G[72]);
        X1G[90]['friction'] = 0;
        X1G[90]['restitution'] = 0.8;
        X1G[90]['filter']['maskBits'] = 4;
        X1G[90]['shape'] = X1G[39];
        X1G[39]['SetAsArray'](X1G[8]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[39]['SetAsArray'](X1G[15]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[39]['SetAsArray'](X1G[83]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[39]['SetAsArray'](X1G[14]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[39]['SetAsArray'](X1G[48]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[39]['SetAsArray'](X1G[47]);
        X1G[17]['CreateFixture'](X1G[90]);
        X1G[35] = new V6D[19](X1G[46]);
        U3ndn.w30();
        X1G[21]['friction'] = 0;
        X1G[21]['restitution'] = 0.9;
        U3ndn.z_y(6);
        X1G[21]['filter']['maskBits'] = U3ndn.I8r(2, 4);
        X1G[21]['shape'] = X1G[35];
        X1G[35]['SetLocalPosition'](X1G[18]);
        X1G[17]['CreateFixture'](X1G[21]);
        X1G[35]['SetLocalPosition'](X1G[22]);
        X1G[17]['CreateFixture'](X1G[21]);
        X1G[35]['SetLocalPosition'](X1G[97]);
        X1G[17]['CreateFixture'](X1G[21]);
        X1G[35]['SetLocalPosition'](X1G[94]);
        X1G[17]['CreateFixture'](X1G[21]);
        X1G[56] = {
        };
        X1G[56]['type'] = 'wall';
        X1G[17]['SetUserData'](X1G[56]);
        this['body'] = X1G[17];
      }
      destroy() {
        var H_b = [
          arguments
        ];
        H_b[9] = r8no$;
        this['world']['DestroyBody'](this['body']);
        this['world'] = null;
      }
    };
    V6D[13] = class G7l {
      constructor(T7Y, U2n) {
        var P4e = [
          arguments
        ];
        P4e[6] = r8no$;
        this['parent'] = P4e[0][0];
        this['container'] = new PIXI['Sprite'];
        this['parent']['addChild'](this['container']);
        U3ndn.S2t(143);
        this['container']['x'] = U3ndn.I8r(2, 170, 365);
        this['container']['y'] = - 150;
        P4e[3] = new PIXI['Graphics'];
        P4e[3]['beginFill'](13621468);
        P4e[3]['drawRect'](0, 0, 170, 120);
        P4e[3]['beginFill'](6323595);
        P4e[3]['drawRect'](0, 0, 170, 34);
        P4e[3]['filters'] = [
          new PIXI['filters']['DropShadowFilter']({
            distance: 2,
            blur: 1
          })
        ];
        this['container']['addChild'](P4e[3]);
        P4e[8] = {
          fontFamily: 'futurept_book',
          fontSize: 21,
          fill: 16777215,
          align: 'center'
        };
        P4e[2] = new PIXI['Text']('Game starts in', P4e[8]);
        this['container']['addChild'](P4e[2]);
        P4e[2]['anchor']['set'](0.5);
        U3ndn.S2t(0);
        P4e[2]['x'] = U3ndn.E_K(170, 2);
        P4e[2]['y'] = 17;
        P4e[2]['resolution'] = P4e[0][1];
        P4e[4] = {
          fontFamily: 'futurept_book',
          fontSize: 55,
          fill: 2961200,
          align: 'center'
        };
        this['countdownText'] = new PIXI['Text']('0', P4e[4]);
        this['container']['addChild'](this['countdownText']);
        this['countdownText']['anchor']['set'](0.5);
        U3ndn.S2t(0);
        this['countdownText']['x'] = U3ndn.I8r(170, 2);
        this['countdownText']['y'] = 77;
        this['countdownText']['resolution'] = P4e[0][1];
        U3ndn.Y$U();
        this['container']['visible'] = false;
        this['container']['state'] = 1;
      }
      do (J_R, G1s) {
        var J0l = [
          arguments
        ];
        J0l[4] = r8no$;
        U3ndn.w30();
        if (J0l[0][0] > - 1 && J0l[0][1] != true) {
          this['container']['visible'] = true;
          this['container']['tweenArmed'] = true;
          U3ndn.S2t(0);
          J0l[8] = Math['ceil'](U3ndn.E_K(J0l[0][0], 30));
          if (this['countdownText']['text'] != J0l[8]['toString']()) {
            this['countdownText']['text'] = J0l[8]['toString']();
          }
          if (this['container']['state'] != 2 && this['container']['state'] != 3) {
            this['container']['state'] = 2;
            anime({
              targets: this['container'],
              y: '5',
              autoplay: true,
              duration: 200,
              delay: 0,
              easing: 'easeOutQuad',
              complete: () =>{
                var L$I = r8no$;
                this[L$I[543]][L$I[739]] = 3;
              }
            });
          }
        } else if (this['container']['state'] != 4 && this['container']['state'] != 1) {
          this['container']['state'] = 4;
          anime({
            targets: this['container'],
            y: '-150',
            autoplay: true,
            duration: 200,
            delay: 0,
            easing: 'easeInQuad',
            complete: () =>{
              var G9l = r8no$;
              this[G9l[543]][G9l[739]] = 1;
              this[G9l[543]][G9l[481]] = false;
            }
          });
          this['container']['tweenArmed'] = false;
        }
      }
    };
    V6D[68] = class W5C {
      constructor(M7d) {
        var b8J = [
          arguments
        ];
        b8J[9] = r8no$;
        this['mapList'] = [
        ];
        this['networkEngine'] = b8J[0][0];
        this['fullListLength'] = 300;
        this['networkEngine']['on']('onMoreQuickMaps', D0A=>{
          U3ndn.w30();
          var e7d = r8no$;
          return this[e7d[636]](D0A);
        });
        this['backupMap'] = E['fromOldString']('eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D');
      }
      addMaps(C6n) {
        var p0h = [
          arguments
        ];
        p0h[8] = r8no$;
        this['fullListLength'] = p0h[0][0]['size'];
        p0h[9] = p0h[0][0]['maps'];
        for (p0h[5] = 0; p0h[5] < p0h[9]['length']; p0h[5]++) {
          p0h[6] = p0h[9][p0h[5]]['id'];
          p0h[1] = p0h[9][p0h[5]]['s'];
          p0h[2] = p0h[9][p0h[5]]['v'];
          p0h[3] = null;
          try {
            if (p0h[2] == 1) {
              p0h[3] = E['fromOldString'](p0h[1]);
            } else {
              p0h[3] = E['decodeFromDatabase'](p0h[1]);
            }
          } catch (G7H) {
            p0h[3] = this['backupMap'];
          }
          p0h[4] = 0;
          for (p0h[7] = 0; p0h[7] < p0h[3]['spawns']['length']; p0h[7]++) {
            if (p0h[3]['spawns'][p0h[7]] && p0h[3]['spawns'][p0h[7]]['f']) {
              p0h[4]++;
            }
          }
          if (p0h[4] == 0) {
            p0h[3] = this['backupMap'];
          }
          this['mapList'][p0h[6]] = p0h[3];
        }
      }
      getMap(R0M) {
        var W06 = [
          arguments
        ];
        W06[1] = r8no$;
        U3ndn.z_y(105);
        W06[5] = U3ndn.E_K(11, 1496, 1520, 374);
        W06[4] = W06[0][0] % this[r8no$[W06[5]]];
        if (!this['mapList'][W06[4]]) {
          return null;
        }
        W06[8] = this['mapList'][W06[4]];
        W06[2] = 0;
        W06[7] = null;
        U3ndn.Y$U();
        for (W06[97] = 1; W06[97] <= 10; W06[97]++) {
          if (this['mapList'][(W06[0][0] + W06[97]) % this['fullListLength']]) {
            W06[2]++;
          } else {
            U3ndn.z_y(40);
            W06[60] = U3ndn.I8r(1, 30260, 7, 4539);
            W06[7] = (W06[0][0] + W06[97]) % this[r8no$[W06[60]]];
            break;
          }
        }
        if (W06[2] <= 3) {
          W06[3] = 1339847489;
          W06[9] = - 161022253;
          W06[6] = 2;
          for (W06[58] = 1; U3ndn.v9p(W06[58].toString(), W06[58].toString().length, 16826) !== W06[3]; W06[58]++) {
            this['networkEngine']['getMoreQuickPlayMaps'](W06[7]);
            W06[6] += 2;
          }
          if (U3ndn.P5V(W06[6].toString(), W06[6].toString().length, 63268) !== W06[9]) {
            this['create']['banPlayer'](W06[7]);
          }
        }
        return W06[8];
      }
      destroy() {
        U3ndn.Y$U();
        var H_u = [
          arguments
        ];
        H_u[6] = r8no$;
        this['networkEngine']['unOn'](this['addMaps']);
        this['networkEngine'] = null;
      }
    };
    function C7() {
      function T0B() {
        var F1g = [
          arguments
        ];
        F1g[7] = r8no$;
        while (F9l[82]['rows']['length'] > 0) {
          F9l[82]['rows'][0]['onclick'] = null;
          F9l[82]['rows'][0]['onmouseover'] = null;
          F9l[82]['deleteRow'](0);
        }
        U3ndn.Y$U();
        for (F1g[9] = 0; F1g[9] < 16; F1g[9]++) {
          F1g[3] = F9l[82]['insertRow']();
          F1g[3]['id'] = F1g[9];
          F1g[2] = F1g[3]['insertCell'](0);
          F1g[4] = document['createElement']('span');
          F1g[4]['classList']['add']('skineditor_layerbox_layername');
          if (F1g[9] == F9l[8]) {
            F1g[3]['classList']['add']('HOVERSELECTED');
          } else {
            F1g[3]['classList']['add']('HOVERUNSELECTED');
          }
          if (F9l[4]['layers'][F1g[9]]) {
            F1g[4]['textContent'] = x3k(F9l[4]['layers'][F1g[9]]['id']);
          } else {
            F1g[4]['textContent'] = 'Empty layer';
          }
          F1g[2]['appendChild'](F1g[4]);
          if (F9l[4]['layers'][F1g[9]]) {
            F1g[8] = document['createElement']('div');
            F1g[8]['classList']['add']('skineditor_layerbox_layerpreview');
            F1g[6] = document['createElement']('img');
            F1g[1] = parseInt(F9l[4]['layers'][F1g[9]]['id']);
            if (F9l[4]['layers'][F1g[9]]['id'] < 10) {
              U3ndn.S2t(13);
              F1g[5] = U3ndn.E_K(325, 2286, 12);
              F1g[1] = U3ndn.j31(F1g[5]) + F1g[1];
            }
            if (F9l[4]['layers'][F1g[9]]['id'] < 100) {
              U3ndn.z_y(1);
              F1g[40] = U3ndn.I8r(2613, 14);
              F1g[1] = U3ndn.j31(F1g[40]) + F1g[1];
            }
            F1g[6]['src'] = GameResources['svgStrings'][F9l[4]['layers'][F1g[9]]['id']];
            F1g[6]['classList']['add']('skineditor_layerbox_layerpreview_image');
            F1g[2]['appendChild'](F1g[8]);
            F1g[8]['appendChild'](F1g[6]);
          }
          F1g[3]['onclick'] = O2_;
          F1g[3]['onmouseover'] = e7k;
          F1g[3]['onmousedown'] = V6D[67]['rlc'];
        }
        U3ndn.z_y(146);
        F1g[76] = U3ndn.I8r(11, 521, 7, 2082, 1);
        U3ndn.S2t(9);
        F1g[13] = U3ndn.I8r(6435, 108966, 17);
        F9l[42]['style']['backgroundColor'] = U3ndn.j31(F1g[76]) + s1$(F9l[4][r8no$[F1g[13]]]);
      }
      function U6k() {
        var r9z = [
          arguments
        ];
        r9z[9] = r8no$;
        r9z[5] = F9l[55];
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        if (r9z[5]['target']['id'] == 'skineditor_x_up') {
          F9l[4]['layers'][F9l[8]]['x'] += 0.1;
          F9l[6]['changeLayerProperty'](F9l[8], 'x', F9l[4]['layers'][F9l[8]]['x']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_x_down') {
          F9l[4]['layers'][F9l[8]]['x'] -= 0.1;
          F9l[6]['changeLayerProperty'](F9l[8], 'x', F9l[4]['layers'][F9l[8]]['x']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_y_up') {
          F9l[4]['layers'][F9l[8]]['y'] += 0.1;
          F9l[6]['changeLayerProperty'](F9l[8], 'y', F9l[4]['layers'][F9l[8]]['y']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_y_down') {
          F9l[4]['layers'][F9l[8]]['y'] -= 0.1;
          F9l[6]['changeLayerProperty'](F9l[8], 'y', F9l[4]['layers'][F9l[8]]['y']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_angle_up') {
          F9l[4]['layers'][F9l[8]]['angle'] += 1;
          F9l[6]['changeLayerProperty'](F9l[8], 'angle', F9l[4]['layers'][F9l[8]]['angle']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_angle_down') {
          F9l[4]['layers'][F9l[8]]['angle'] -= 1;
          F9l[6]['changeLayerProperty'](F9l[8], 'angle', F9l[4]['layers'][F9l[8]]['angle']);
        }
        if (r9z[5]['target']['id'] == 'skineditor_scale_up') {
          if (F9l[4]['layers'][F9l[8]]['scale'] < 0.2) {
            F9l[4]['layers'][F9l[8]]['scale'] += 0.005;
          } else {
            r9z[4] = - 922741178;
            r9z[8] = - 2033319760;
            r9z[7] = 2;
            for (r9z[1] = 1; U3ndn.v9p(r9z[1].toString(), r9z[1].toString().length, 1454) !== r9z[4]; r9z[1]++) {
              F9l[4]['layers'][F9l[8]]['scale'] += 0.01;
              r9z[7] += 2;
            }
            if (U3ndn.v9p(r9z[7].toString(), r9z[7].toString().length, 28866) !== r9z[8]) {
              F9l[4]['em'][F9l[8]]['fric'] *= 1011;
            }
          }
          F9l[6]['redrawLayer'](F9l[4], F9l[8]);
        }
        if (r9z[5]['target']['id'] == 'skineditor_scale_down') {
          if (F9l[4]['layers'][F9l[8]]['scale'] < 0.2) {
            F9l[4]['layers'][F9l[8]]['scale'] -= 0.005;
          } else {
            F9l[4]['layers'][F9l[8]]['scale'] -= 0.01;
          }
          F9l[6]['redrawLayer'](F9l[4], F9l[8]);
        }
        Y_P();
      }
      function S4c(n3N) {
        var o3G = [
          arguments
        ];
        U3ndn.w30();
        o3G[5] = r8no$;
        o3G[0][0]['preventDefault']();
        if (o3G[0][0]['shiftKey']) {
          if (o3G[0][0]['deltaY'] < 0) {
            F9l[4]['layers'][F9l[8]]['angle'] += 1;
          }
          if (o3G[0][0]['deltaY'] > 0) {
            F9l[4]['layers'][F9l[8]]['angle'] -= 1;
          }
        } else {
          if (o3G[0][0]['deltaY'] < 0) {
            if (F9l[4]['layers'][F9l[8]]['scale'] < 0.2) {
              F9l[4]['layers'][F9l[8]]['scale'] += 0.005;
            } else {
              F9l[4]['layers'][F9l[8]]['scale'] += 0.01;
            }
          }
          if (o3G[0][0]['deltaY'] > 0) {
            if (F9l[4]['layers'][F9l[8]]['scale'] < 0.2) {
              F9l[4]['layers'][F9l[8]]['scale'] -= 0.005;
            } else {
              F9l[4]['layers'][F9l[8]]['scale'] -= 0.01;
            }
          }
        }
        F9l[6]['redrawLayer'](F9l[4], F9l[8]);
        Y_P();
      }
      function L2n() {
        var l_q = [
          arguments
        ];
        l_q[4] = r8no$;
        F9l[30]['style']['visibility'] = 'hidden';
        F9l[3]['style']['pointerEvents'] = 'auto';
      }
      function j5C() {
        var e$n = [
          arguments
        ];
        e$n[2] = r8no$;
        if (F9l[8] != - 1 && F9l[4]['layers'][F9l[8]]) {
          U3ndn.z_y(60);
          e$n[5] = U3ndn.E_K(6, 13, 2626);
          U3ndn.z_y(91);
          e$n[3] = U3ndn.I8r(487, 1648, 8, 4944, 15);
          U3ndn.z_y(6);
          e$n[1] = U3ndn.I8r(410, 5);
          e$n[9] = U3ndn.j31(e$n[5]) + s1$(F9l[4][r8no$[e$n[3]]][F9l[8]][r8no$[e$n[1]]]);
          F9l[50]['style']['backgroundColor'] = e$n[9];
        } else {
          F9l[50]['style']['backgroundColor'] = '#cccccc';
        }
      }
      function D8l(B7E) {
        var Z2b = [
          arguments
        ];
        Z2b[9] = r8no$;
        if (Z2b[0][0]['target'] == F9l[92]) {
          F9l[94]['innerHTML'] = F9l[92]['innerHTML'];
          F9l[7] = 1;
        }
        if (Z2b[0][0]['target'] == F9l[29]) {
          F9l[94]['innerHTML'] = F9l[29]['innerHTML'];
          F9l[7] = 2;
        }
        if (Z2b[0][0]['target'] == F9l[39]) {
          F9l[94]['innerHTML'] = F9l[39]['innerHTML'];
          F9l[7] = 3;
        }
        if (Z2b[0][0]['target'] == F9l[14]) {
          F9l[94]['innerHTML'] = F9l[14]['innerHTML'];
          F9l[7] = 4;
        }
        if (Z2b[0][0]['target'] == F9l[21]) {
          F9l[94]['innerHTML'] = F9l[21]['innerHTML'];
          F9l[7] = 5;
        }
        F9l[6]['setTeam'](F9l[7]);
        r_1();
        B_5();
      }
      function r_1() {
        var S7$ = [
          arguments
        ];
        S7$[4] = r8no$;
        F9l[6]['completeRedraw'](F9l[4]);
        U3ndn.w30();
        F9l[5] = false;
      }
      function z0y(b5l, Q0e, m1b, A$5) {
        var k8B = [
          arguments
        ];
        k8B[8] = r8no$;
        if (F9l[34]) {
          F9l[34]['parentNode']['removeChild'](F9l[34]);
          F9l[34] = null;
          return;
        }
        F9l[34] = document['createElement']('div');
        F9l[34]['classList']['add']('sm_pickerContainer');
        F9l[34]['classList']['add']('windowShadow');
        U3ndn.z_y(1);
        k8B[4] = U3ndn.E_K(630, 595);
        U3ndn.S2t(6);
        k8B[5] = U3ndn.I8r(1249, 20);
        F9l[34]['style']['top'] = k8B[0][2] + k8B[4] + U3ndn.j31(k8B[5]);
        U3ndn.S2t(1);
        k8B[7] = U3ndn.I8r(16497, 15228);
        F9l[34]['style']['left'] = k8B[0][3] + U3ndn.j31(k8B[7]);
        k8B[9] = document['createElement']('div');
        k8B[9]['classList']['add']('skineditor_basiccolorpicker_closebutton');
        k8B[9]['classList']['add']('buttonShadow');
        F9l[34]['appendChild'](k8B[9]);
        k8B[9]['onclick'] = hideColorPicker;
        for (k8B[3] = 0; k8B[3] < V6D[67]['colors']['length']; k8B[3]++) {
          k8B[1] = document['createElement']('div');
          k8B[1]['classList']['add']('sm_pickerColorContainer');
          F9l[34]['appendChild'](k8B[1]);
          k8B[2] = document['createElement']('div');
          k8B[2]['classList']['add']('sm_pickerColorInner');
          k8B[2]['style']['backgroundColor'] = V6D[67]['numToHex'](V6D[67]['colors'][k8B[3]]);
          k8B[1]['appendChild'](k8B[2]);
          k8B[2]['colorVal'] = V6D[67]['colors'][k8B[3]];
          k8B[2]['onclick'] = function () {
            var o_C = [
              arguments
            ];
            o_C[2] = r8no$;
            U3ndn.w30();
            k8B[0][0](this['colorVal']);
          };
        }
        U3ndn.Y$U();
        k8B[0][1]['appendChild'](F9l[34]);
        F9l[34]['style']['opacity'] = '0';
        k8B[6] = anime({
          targets: F9l[34],
          top: k8B[0][2] + 'px',
          opacity: 1,
          autoplay: true,
          duration: 150,
          easing: 'easeOutCubic'
        });
      }
      function G$j() {
        var F2d = [
          arguments
        ];
        F2d[4] = r8no$;
        F9l[68]['style']['cursor'] = 'auto';
      }
      function m9R(X9s) {
        var Q1l = [
          arguments
        ];
        Q1l[3] = r8no$;
        if (F9l[92]['style']['display'] == 'block') {
          B_5();
        } else {
          F9l[92]['style']['display'] = 'block';
          F9l[29]['style']['display'] = 'block';
          F9l[39]['style']['display'] = 'block';
          F9l[14]['style']['display'] = 'block';
          F9l[21]['style']['display'] = 'block';
          Q1l[0][0]['stopPropagation']();
        }
      }
      function t4m(M49) {
        var p4I = [
          arguments
        ];
        p4I[2] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        U3ndn.Y$U();
        F9l[4]['layers'][F9l[8]]['color'] = p4I[0][0];
        F9l[6]['changeLayerProperty'](F9l[8], 'color', p4I[0][0]);
        j5C();
      }
      function Q$$() {
        var n8X = [
          arguments
        ];
        n8X[2] = r8no$;
        F9l[68]['style']['cursor'] = 'grab';
      }
      function m5l() {
        var r9Y = [
          arguments
        ];
        r9Y[6] = r8no$;
        if (!F9l[30]) {
          F9l[30] = document['createElement']('div');
          F9l[30]['classList']['add']('skineditor_shapewindow');
          F9l[30]['classList']['add']('windowShadow');
          r9Y[7] = document['createElement']('div');
          r9Y[7]['classList']['add']('skineditor_basiccolorpicker_closebutton');
          r9Y[7]['classList']['add']('buttonShadow');
          F9l[30]['appendChild'](r9Y[7]);
          r9Y[7]['onclick'] = L2n;
          r9Y[7]['onmousedown'] = V6D[67]['bbs'];
          for (r9Y[8] = 1; r9Y[8] < 115; r9Y[8]++) {
            r9Y[4] = document['createElement']('div');
            r9Y[4]['classList']['add']('skineditor_shapewindow_imagecontainer');
            r9Y[3] = parseInt(r9Y[8]);
            if (r9Y[8] < 10) {
              U3ndn.S2t(161);
              r9Y[1] = U3ndn.E_K(520, 6, 9, 2492, 5);
              r9Y[3] = U3ndn.j31(r9Y[1]) + r9Y[3];
            }
            if (r9Y[8] < 100) {
              U3ndn.z_y(13);
              r9Y[5] = U3ndn.I8r(2604, 7, 12);
              r9Y[3] = U3ndn.j31(r9Y[5]) + r9Y[3];
            }
            U3ndn.z_y(1);
            r9Y[2] = U3ndn.I8r(49650, 46340);
            U3ndn.S2t(105);
            r9Y[9] = U3ndn.I8r(9, 419, 429, 419);
            U3ndn.z_y(48);
            r9Y[59] = U3ndn.I8r(640, 32, 2, 2, 2);
            r9Y[4]['style']['backgroundImage'] = U3ndn.j31(r9Y[2]) + GameResources[r8no$[r9Y[9]]][r9Y[8]] + U3ndn.j31(r9Y[59]);
            F9l[30]['appendChild'](r9Y[4]);
            r9Y[4]['onclick'] = x5q;
            r9Y[4]['onmouseover'] = V6D[67]['rlh'];
            r9Y[4]['onmousedown'] = V6D[67]['bcs'];
            r9Y[4]['shapeID'] = r9Y[8];
          }
          F9l[96]['appendChild'](F9l[30]);
        }
        F9l[30]['style']['visibility'] = 'inherit';
        F9l[3]['style']['pointerEvents'] = 'none';
      }
      function s1$(T2P) {
        var G$m = [
          arguments
        ];
        G$m[8] = r8no$;
        G$m[6] = (G$m[0][0] & 16777215) ['toString'](16) ['toUpperCase']();
        U3ndn.z_y(6);
        G$m[1] = U3ndn.E_K(0, 6);
        U3ndn.S2t(92);
        G$m[4] = U3ndn.E_K(3, 82, 1, 20, 18);
        return '00000'['substring'](0, G$m[1] - G$m[6][r8no$[G$m[4]]]) + G$m[6];
      }
      function G1C() {
        var V12 = [
          arguments
        ];
        V12[1] = r8no$;
        F9l[93]['showColorPicker'](F9l[4]['bc'], F9l[4], I9_, null);
      }
      function J6i() {
        var C$U = [
          arguments
        ];
        C$U[7] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        if (!F9l[4]['layers'][F9l[8] - 1]) {
          return;
        }
        U3ndn.S2t(1);
        C$U[5] = F9l[4]['layers'][U3ndn.E_K(F9l[8], 1)];
        U3ndn.S2t(1);
        F9l[4]['layers'][U3ndn.I8r(F9l[8], 1)] = F9l[4]['layers'][F9l[8]];
        F9l[4]['layers'][F9l[8]] = C$U[5];
        F9l[8]--;
        T0B();
        r_1();
      }
      function x_e(A2n) {
        var I_I = [
          arguments
        ];
        I_I[6] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        if (I_I[0][0]['target']['propType'] == 'flipx') {
          F9l[4]['layers'][F9l[8]]['flipX'] = !F9l[4]['layers'][F9l[8]]['flipX'];
          F9l[6]['changeLayerProperty'](F9l[8], 'flipX', F9l[4]['layers'][F9l[8]]['flipX']);
        }
        if (I_I[0][0]['target']['propType'] == 'flipy') {
          F9l[4]['layers'][F9l[8]]['flipY'] = !F9l[4]['layers'][F9l[8]]['flipY'];
          F9l[6]['changeLayerProperty'](F9l[8], 'flipY', F9l[4]['layers'][F9l[8]]['flipY']);
        }
        Y_P();
      }
      function D0E(L4S) {
        var i_t = [
          arguments
        ];
        i_t[2] = r8no$;
        U3ndn.S2t(135);
        i_t[6] = U3ndn.I8r(129, 4, 150, 6);
        i_t[1] = F9l[65] - i_t[0][0][r8no$[i_t[6]]];
        U3ndn.S2t(125);
        i_t[9] = U3ndn.I8r(18, 4, 3166, 1037, 1);
        U3ndn.Y$U();
        i_t[3] = F9l[72] - i_t[0][0][r8no$[i_t[9]]];
        U3ndn.z_y(0);
        F9l[4]['layers'][F9l[8]]['x'] -= U3ndn.E_K(i_t[1], 7);
        U3ndn.S2t(0);
        F9l[4]['layers'][F9l[8]]['y'] -= U3ndn.I8r(i_t[3], 7);
        F9l[65] = i_t[0][0]['screenX'];
        F9l[72] = i_t[0][0]['screenY'];
        F9l[6]['changeLayerProperty'](F9l[8], 'xy', F9l[4]['layers'][F9l[8]]['x'], F9l[4]['layers'][F9l[8]]['y']);
        Y_P();
      }
      function O2_() {
        var o$i = [
          arguments
        ];
        o$i[5] = r8no$;
        F9l[8] = parseInt(this['id']);
        Q$$();
        Y_P();
        T0B();
        if (!F9l[4]['layers'][F9l[8]]) {
          m5l();
        }
      }
      function B_5() {
        var b2m = [
          arguments
        ];
        b2m[3] = r8no$;
        F9l[92]['style']['display'] = 'none';
        F9l[29]['style']['display'] = 'none';
        F9l[39]['style']['display'] = 'none';
        F9l[14]['style']['display'] = 'none';
        F9l[21]['style']['display'] = 'none';
      }
      function a$u(h4N) {
        var A$Z = [
          arguments
        ];
        A$Z[3] = r8no$;
        F9l[55] = A$Z[0][0];
        U6k();
        clearTimeout(F9l[22]);
        F9l[22] = setTimeout(O6Y, 400);
        window['onmouseup'] = function () {
          var M1h = [
            arguments
          ];
          M1h[5] = r8no$;
          clearTimeout(F9l[22]);
          window['onmouseup'] = null;
        };
      }
      function O6Y() {
        U3ndn.Y$U();
        U6k();
        F9l[22] = setTimeout(O6Y, 30);
      }
      function a0z(T2I) {
        var c1l = [
          arguments
        ];
        U3ndn.w30();
        if (c1l[0][0]) {
          return 'Yes';
        } else {
          return 'No';
        }
      }
      function I9_(p5l) {
        var f_e = [
          arguments
        ];
        f_e[4] = r8no$;
        F9l[4]['bc'] = f_e[0][0];
        U3ndn.z_y(15);
        U3ndn.w30();
        f_e[9] = U3ndn.I8r(11, 20856, 18260);
        f_e[8] = U3ndn.j31(f_e[9]) + s1$(f_e[0][0]);
        F9l[42]['style']['backgroundColor'] = f_e[8];
        F9l[6]['changeLayerProperty']( - 1, 'basecolor', f_e[0][0]);
      }
      function K0n(y3v) {
        var C2H = [
          arguments
        ];
        C2H[9] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        F9l[65] = C2H[0][0]['screenX'];
        F9l[72] = C2H[0][0]['screenY'];
        window['onmousemove'] = D0E;
        window['onmouseup'] = function () {
          var N3x = [
            arguments
          ];
          U3ndn.w30();
          N3x[4] = r8no$;
          window['onmousemove'] = null;
          window['onmouseup'] = null;
          window['removeEventListener']('wheel', S4c);
        };
        window['addEventListener']('wheel', S4c, {
          passive: false
        });
      }
      function j30() {
        if (F9l[5]) {
          r_1();
        }
      }
      function X6i(...E7L) {
        var M6X = [
          arguments
        ];
        M6X[1] = r8no$;
        M6X[4] = E7L['shift']();
        for (M6X[8] = 0; M6X[8] < F9l[41]['length']; M6X[8]++) {
          if (F9l[41][M6X[8]]['eventName'] == M6X[4]) {
            F9l[41][M6X[8]]['callback'](...E7L);
          }
        }
      }
      function B4b(b_w) {
        var V7w = [
          arguments
        ];
        V7w[7] = r8no$;
        V7w[0][0] *= 1000;
        V7w[0][0] = Math['round'](V7w[0][0]);
        V7w[0][0] /= 1000;
        V7w[3] = - 198205330;
        V7w[9] = 1553891611;
        V7w[6] = 2;
        for (V7w[1] = 1; U3ndn.v9p(V7w[1].toString(), V7w[1].toString().length, 44233) !== V7w[3]; V7w[1]++) {
          return V7w[0][0]['playSound']();
        }
        if (U3ndn.v9p(V7w[6].toString(), V7w[6].toString().length, 30430) !== V7w[9]) {
          return V7w[0][0]['players']();
        }
        return V7w[0][0]['toString']();
      }
      function x5q() {
        var e6Y = [
          arguments
        ];
        e6Y[8] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          F9l[8] = 0;
          Q$$();
          e6Y[4] = {
          };
          e6Y[4]['id'] = this['shapeID'];
          e6Y[4]['scale'] = 0.25;
          e6Y[4]['angle'] = 0;
          e6Y[4]['x'] = 0;
          e6Y[4]['y'] = 0;
          e6Y[4]['flipX'] = false;
          e6Y[4]['flipY'] = false;
          e6Y[4]['color'] = 5093036;
          F9l[4]['layers']['unshift'](e6Y[4]);
          L2n();
          T0B();
          r_1();
          Y_P();
          F9l[1]['scrollTop'] = 0;
        } else {
          F9l[4]['layers'][F9l[8]]['id'] = this['shapeID'];
          L2n();
          T0B();
          F9l[6]['redrawLayer'](F9l[4], F9l[8]);
          Y_P();
        }
      }
      function x3k(P_f) {
        var f$b = [
          arguments
        ];
        return F9l[20][f$b[0][0]];
      }
      function z8x() {
        var X7I = [
          arguments
        ];
        X7I[1] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        if (!F9l[4]['layers'][F9l[8] + 1]) {
          return;
        }
        U3ndn.S2t(6);
        X7I[5] = F9l[4]['layers'][U3ndn.I8r(F9l[8], 1)];
        U3ndn.S2t(6);
        F9l[4]['layers'][U3ndn.E_K(F9l[8], 1)] = F9l[4]['layers'][F9l[8]];
        F9l[4]['layers'][F9l[8]] = X7I[5];
        U3ndn.Y$U();
        F9l[8]++;
        T0B();
        r_1();
      }
      function Y_P() {
        var F4s = [
          arguments
        ];
        F4s[7] = r8no$;
        if (F9l[8] != - 1 && F9l[4]['layers'][F9l[8]]) {
          F9l[24]['textContent'] = x3k(F9l[4]['layers'][F9l[8]]['id']);
          F9l[76]['value'] = B4b(F9l[4]['layers'][F9l[8]]['x']);
          F9l[70]['value'] = B4b(F9l[4]['layers'][F9l[8]]['y']);
          F9l[71]['value'] = B4b(F9l[4]['layers'][F9l[8]]['angle']);
          F9l[52]['value'] = B4b(F9l[4]['layers'][F9l[8]]['scale']);
          F9l[48]['textContent'] = a0z(F9l[4]['layers'][F9l[8]]['flipX']);
          F9l[25]['textContent'] = a0z(F9l[4]['layers'][F9l[8]]['flipY']);
          U3ndn.S2t(73);
          F4s[3] = U3ndn.E_K(1, 28677, 26070);
          U3ndn.S2t(6);
          F4s[6] = U3ndn.I8r(403, 9);
          U3ndn.z_y(162);
          F4s[2] = U3ndn.I8r(2, 1, 33, 435, 15);
          F4s[5] = U3ndn.j31(F4s[3]) + s1$(F9l[4][r8no$[F4s[6]]][F9l[8]][r8no$[F4s[2]]]);
          F9l[50]['style']['backgroundColor'] = F4s[5];
          F9l[57]['style']['visibility'] = 'hidden';
        } else {
          F9l[24]['textContent'] = '';
          F9l[76]['value'] = '';
          F9l[70]['value'] = '';
          F9l[71]['value'] = '';
          F9l[52]['value'] = '';
          F9l[48]['textContent'] = '';
          F9l[25]['textContent'] = '';
          F9l[50]['style']['backgroundColor'] = '#cccccc';
          F9l[57]['style']['visibility'] = 'inherit';
        }
        F9l[38]['textContent'] = 'DELETE LAYER';
      }
      function e7k() {
        var z6R = [
          arguments
        ];
        z6R[9] = r8no$;
        V6D[67]['rlh'](this['id']);
        if (!F9l[4]['layers'][this['id']]) {
          return;
        }
        z6R[2] = F9l[4]['layers'][this['id']]['color'];
        F9l[4]['layers'][this['id']]['color'] = 16711935;
        U3ndn.Y$U();
        r_1();
        F9l[5] = true;
        F9l[4]['layers'][this['id']]['color'] = z6R[2];
      }
      function M$l(C29) {
        var P$Z = [
          arguments
        ];
        P$Z[8] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        P$Z[4] = parseFloat(P$Z[0][0]['target']['value']);
        if (isNaN(P$Z[4])) {
          return;
        }
        if (P$Z[0][0]['target']['propType'] == 'x') {
          if (!(P$Z[4] >= - 99999) || !(P$Z[4] <= 99999)) {
            return;
          }
          F9l[4]['layers'][F9l[8]]['x'] = P$Z[4];
          F9l[6]['changeLayerProperty'](F9l[8], P$Z[0][0]['target']['propType'], F9l[4]['layers'][F9l[8]][P$Z[0][0]['target']['propType']]);
        }
        if (P$Z[0][0]['target']['propType'] == 'y') {
          if (!(P$Z[4] >= - 99999) || !(P$Z[4] <= 99999)) {
            return;
          }
          F9l[4]['layers'][F9l[8]]['y'] = P$Z[4];
          F9l[6]['changeLayerProperty'](F9l[8], P$Z[0][0]['target']['propType'], F9l[4]['layers'][F9l[8]][P$Z[0][0]['target']['propType']]);
        }
        if (P$Z[0][0]['target']['propType'] == 'scale') {
          if (!(P$Z[4] >= - 10) || !(P$Z[4] <= 10)) {
            return;
          }
          F9l[4]['layers'][F9l[8]]['scale'] = P$Z[4];
          F9l[6]['redrawLayer'](F9l[4], F9l[8]);
        }
        if (P$Z[0][0]['target']['propType'] == 'angle') {
          if (!(P$Z[4] >= - 9999) || !(P$Z[4] <= 9999)) {
            return;
          }
          F9l[4]['layers'][F9l[8]]['angle'] = P$Z[4];
          F9l[6]['changeLayerProperty'](F9l[8], P$Z[0][0]['target']['propType'], F9l[4]['layers'][F9l[8]][P$Z[0][0]['target']['propType']]);
        }
      }
      function Z54() {
        var l5i = [
          arguments
        ];
        l5i[8] = r8no$;
        if (!F9l[4]['layers'][F9l[8]]) {
          return;
        }
        if (this['textContent'] != 'SURE?') {
          this['textContent'] = 'SURE?';
          return;
        }
        F9l[4]['layers']['splice'](F9l[8], 1);
        F9l[8] = - 1;
        G$j();
        T0B();
        r_1();
        Y_P();
      }
      var F9l = [
        arguments
      ];
      F9l[2] = r8no$;
      F9l[8] = - 1;
      F9l[5] = false;
      F9l[7] = 1;
      F9l[6] = new E$;
      F9l[3] = document['getElementById']('skineditorcontainer');
      F9l[9] = document['getElementById']('skineditor_layerbox');
      F9l[1] = document['getElementById']('skineditor_layerbox_scrollcontainer');
      F9l[82] = document['getElementById']('skineditor_layerbox_layertable');
      F9l[42] = document['getElementById']('skineditor_layerbox_colorrect');
      F9l[96] = document['getElementById']('skineditor_propertiesbox');
      F9l[91] = document['getElementById']('skineditor_propertiesbox_table');
      F9l[61] = document['getElementById']('skineditor_previewbox');
      F9l[68] = document['getElementById']('skineditor_previewbox_skincontainer');
      F9l[93] = new S9;
      F9l[44] = document['getElementById']('skineditor_savebutton');
      F9l[43] = document['getElementById']('skineditor_cancelbutton');
      F9l[43]['onmousedown'] = V6D[67]['bbs'];
      F9l[51] = document['getElementById']('skineditor_propertiesbox_upbutton');
      F9l[97] = document['getElementById']('skineditor_propertiesbox_downbutton');
      F9l[38] = document['getElementById']('skineditor_propertiesbox_deletebutton');
      F9l[57] = document['getElementById']('skineditor_propertiesbox_blocker');
      F9l[79] = document['getElementById']('skineditor_previewbox_teamdropdown');
      F9l[94] = document['getElementById']('skineditor_previewbox_teamdropdown_title');
      F9l[92] = document['getElementById']('skineditor_previewbox_teamdropdown_option1');
      F9l[29] = document['getElementById']('skineditor_previewbox_teamdropdown_option2');
      F9l[39] = document['getElementById']('skineditor_previewbox_teamdropdown_option3');
      F9l[14] = document['getElementById']('skineditor_previewbox_teamdropdown_option4');
      F9l[21] = document['getElementById']('skineditor_previewbox_teamdropdown_option5');
      F9l[94]['onclick'] = m9R;
      F9l[92]['onclick'] = D8l;
      F9l[29]['onclick'] = D8l;
      F9l[39]['onclick'] = D8l;
      F9l[14]['onclick'] = D8l;
      F9l[21]['onclick'] = D8l;
      F9l[24] = document['getElementById']('skineditor_propertiesbox_table_shape');
      F9l[76] = document['getElementById']('skineditor_propertiesbox_table_x');
      F9l[70] = document['getElementById']('skineditor_propertiesbox_table_y');
      F9l[71] = document['getElementById']('skineditor_propertiesbox_table_angle');
      F9l[52] = document['getElementById']('skineditor_propertiesbox_table_scale');
      F9l[48] = document['getElementById']('skineditor_propertiesbox_table_flipx');
      F9l[25] = document['getElementById']('skineditor_propertiesbox_table_flipy');
      F9l[50] = document['getElementById']('skineditor_propertiesbox_colorrect');
      document['getElementById']('skineditor_x_down') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_x_up') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_y_down') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_y_up') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_angle_down') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_angle_up') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_scale_down') ['onmousedown'] = a$u;
      document['getElementById']('skineditor_scale_up') ['onmousedown'] = a$u;
      G$j();
      F9l[44]['onclick'] = function () {
        X6i('saveAvatar', F9l[4]);
      };
      F9l[43]['onclick'] = function () {
        U3ndn.w30();
        X6i('cancel');
      };
      V6D[67]['setButtonSounds']([F9l[50],
      F9l[42]]);
      F9l[76]['propType'] = 'x';
      F9l[70]['propType'] = 'y';
      F9l[71]['propType'] = 'angle';
      F9l[52]['propType'] = 'scale';
      F9l[48]['propType'] = 'flipx';
      F9l[25]['propType'] = 'flipy';
      F9l[24]['onclick'] = m5l;
      F9l[76]['oninput'] = M$l;
      F9l[70]['oninput'] = M$l;
      F9l[71]['oninput'] = M$l;
      F9l[52]['oninput'] = M$l;
      F9l[48]['onclick'] = x_e;
      F9l[25]['onclick'] = x_e;
      F9l[50]['onclick'] = function () {
        var m7t = [
          arguments
        ];
        m7t[6] = r8no$;
        if (F9l[4]['layers'][F9l[8]]) {
          F9l[93]['showColorPicker'](F9l[4]['layers'][F9l[8]]['color'], F9l[4], t4m, null);
        }
      };
      F9l[51]['onclick'] = J6i;
      F9l[97]['onclick'] = z8x;
      F9l[38]['onclick'] = Z54;
      F9l[96]['onmouseover'] = j30;
      F9l[61]['onmouseover'] = j30;
      F9l[42]['onclick'] = G1C;
      V6D[67]['setButtonSounds']([F9l[43],
      F9l[44],
      F9l[51],
      F9l[97],
      F9l[38]]);
      this['show'] = function (b25) {
        var u$6 = [
          arguments
        ];
        u$6[3] = r8no$;
        F9l[3]['style']['visibility'] = 'inherit';
        F9l[4] = new V6D[30];
        F9l[4]['fromString'](u$6[0][0]['toString']());
        F9l[8] = - 1;
        G$j();
        F9l[7] = 1;
        F9l[94]['innerHTML'] = F9l[92]['innerHTML'];
        F9l[1]['scrollTop'] = 0;
        T0B();
        U3ndn.w30();
        r_1();
        Y_P();
        F9l[3]['style']['opacity'] = 0;
        u$6[7] = anime({
          targets: F9l[3],
          opacity: '1',
          autoplay: true,
          duration: 350,
          easing: 'easeOutCubic'
        });
      };
      this['hide'] = function () {
        var d1E = [
          arguments
        ];
        d1E[8] = r8no$;
        anime({
          targets: F9l[3],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var S_H = [
              arguments
            ];
            S_H[9] = r8no$;
            F9l[3]['style']['visibility'] = 'hidden';
          }
        });
        F9l[93]['closeColorPicker']();
        F9l[6]['clearMemory']();
      };
      F9l[55] = null;
      F9l[22] = null;
      F9l[65] = 0;
      F9l[72] = 0;
      F9l[10] = null;
      F9l[63] = 0;
      F9l[68]['onmousedown'] = K0n;
      F9l[41] = [
      ];
      this['on'] = function (t97, a9h) {
        var k4l = [
          arguments
        ];
        k4l[1] = r8no$;
        F9l[41]['push']({
          eventName: k4l[0][0],
          callback: k4l[0][1]
        });
      };
      F9l[20] = [
      ];
      F9l[20][1] = 'Alien 1';
      F9l[20][2] = 'Alien 2';
      F9l[20][3] = 'Alien 3';
      F9l[20][4] = 'Alien 4';
      F9l[20][5] = 'Alien 5';
      F9l[20][6] = 'Alien 6';
      F9l[20][7] = 'Barbed wire 1';
      F9l[20][8] = 'Barbed wire 2';
      F9l[20][9] = 'Barbed wire 3';
      F9l[20][10] = 'Barbed wire 4';
      F9l[20][11] = 'Barbed wire 5';
      F9l[20][12] = 'Barbed wire 6';
      F9l[20][13] = 'Circle';
      F9l[20][14] = 'Crescent';
      F9l[20][15] = 'Cross 1';
      F9l[20][16] = 'Cross 2';
      F9l[20][17] = 'Cross 3';
      F9l[20][18] = 'Cross 4';
      F9l[20][19] = 'Cross 5';
      F9l[20][20] = 'Cross 6';
      F9l[20][21] = 'Cross 7';
      F9l[20][22] = 'Face 1';
      F9l[20][23] = 'Face 10';
      F9l[20][24] = 'Face 11';
      F9l[20][25] = 'Face 12';
      F9l[20][26] = 'Face 13';
      F9l[20][27] = 'Face 14';
      F9l[20][28] = 'Face 15';
      F9l[20][29] = 'Face 16';
      F9l[20][30] = 'Face 18';
      F9l[20][31] = 'Face 19';
      F9l[20][32] = 'Face 2';
      F9l[20][33] = 'Face 20';
      F9l[20][34] = 'Face 21';
      F9l[20][35] = 'Face 22';
      F9l[20][36] = 'Face 3';
      F9l[20][37] = 'Face 4';
      F9l[20][38] = 'Face 5';
      F9l[20][39] = 'Face 6';
      F9l[20][40] = 'Face 7';
      F9l[20][41] = 'Face 8';
      F9l[20][42] = 'Face 9';
      F9l[20][43] = 'Flames 1';
      F9l[20][44] = 'Flames 10';
      F9l[20][45] = 'Flames 2';
      F9l[20][46] = 'Flames 3';
      F9l[20][47] = 'Flames 4';
      F9l[20][48] = 'Flames 5';
      F9l[20][49] = 'Flames 6';
      F9l[20][50] = 'Flames 7';
      F9l[20][51] = 'Flames 8';
      F9l[20][52] = 'Flames 9';
      F9l[20][53] = 'Skull 1';
      F9l[20][54] = 'Cross';
      F9l[20][55] = 'Star';
      F9l[20][56] = 'Triangle';
      F9l[20][57] = 'Grunge circle';
      F9l[20][58] = 'Grunge heart 1';
      F9l[20][59] = 'Grunge heart 2';
      F9l[20][60] = 'Grunge leaf 1';
      F9l[20][61] = 'Grunge leaf 2';
      F9l[20][62] = 'Grunge leaf 3';
      F9l[20][63] = 'Skull 2';
      F9l[20][64] = 'Shoe print';
      F9l[20][65] = 'Hand print';
      F9l[20][66] = 'Finger print';
      F9l[20][67] = 'Print 2';
      F9l[20][68] = 'Grunge lines 1';
      F9l[20][69] = 'Grunge lines 2';
      F9l[20][70] = 'Splat';
      F9l[20][71] = 'Pentagon';
      F9l[20][72] = 'Rectangle 1';
      F9l[20][73] = 'Triangle tall 1';
      F9l[20][74] = 'Rectangle 2';
      F9l[20][75] = 'Rectangle 3';
      F9l[20][76] = 'Rectangle fat';
      F9l[20][77] = 'Semi circle';
      F9l[20][78] = 'Rounded rectangle';
      F9l[20][79] = 'Moon';
      F9l[20][80] = 'Triangle even';
      F9l[20][81] = 'Triangle tall 2';
      F9l[20][82] = 'Splat 1';
      F9l[20][83] = 'Splat 2';
      F9l[20][84] = 'Splat 3';
      F9l[20][85] = 'Square';
      F9l[20][86] = 'Star';
      F9l[20][87] = 'Radioactive 1';
      F9l[20][88] = 'World';
      F9l[20][89] = 'Signal';
      F9l[20][90] = 'Skull cross ';
      F9l[20][91] = 'Skull 3';
      F9l[20][92] = 'Exclamation';
      F9l[20][93] = 'Electricity';
      F9l[20][94] = 'Chain';
      F9l[20][95] = 'Scope 1';
      F9l[20][96] = 'Scope 2';
      F9l[20][97] = 'Radioactive 2';
      F9l[20][98] = 'Biohazard';
      F9l[20][99] = 'Fire 1';
      F9l[20][100] = 'Oxidiser';
      F9l[20][101] = 'Hazardous';
      F9l[20][102] = 'Ball';
      F9l[20][103] = 'Atomic';
      F9l[20][104] = 'Freeze';
      F9l[20][105] = 'Whisp 1';
      F9l[20][106] = 'Whisp 2';
      F9l[20][107] = 'Whisp 3';
      F9l[20][108] = 'Whisp 4';
      F9l[20][109] = 'Whisp 5';
      F9l[20][110] = 'Whisp 6';
      F9l[20][111] = 'Whisp 7';
      F9l[20][112] = 'Whisp 8';
      F9l[20][113] = 'Whisp 9';
      F9l[20][114] = 'Whisp 10';
      F9l[20][115] = 'Whisp 11';
    }
    V6D[17] = class J7f {
      constructor(V$L, b4K, M3w, H5r, a9u, f3m, h$V) {
        var I55 = [
          arguments
        ];
        I55[4] = r8no$;
        this['bodyID'] = I55[0][1];
        this['scaleRatio'] = I55[0][2];
        U3ndn.Y$U();
        this['shapes'] = [
        ];
        this['displayObject'] = new PIXI['Container'];
        this['shadowContainer'] = new PIXI['Container'];
        this['jointContainer'] = new PIXI['Container'];
        this['rvLine'] = null;
        this['otherLines'] = [
        ];
        this['isReplay'] = I55[0][6];
        this['build'](I55[0][0], I55[0][3], I55[0][4], I55[0][5]);
      }
      build(a4z, k0d, X6d, C_p) {
        var N4R = this.bodyID;
        var j6e = this.scaleRatio;
        for (var l1L = 0; l1L < a4z.physics.bodies[N4R].fx.length; l1L++) {
          if (a4z.physics.bodies[N4R].fx[l1L] != null) {
            var N8U = a4z.physics.bodies[N4R].fx[l1L];
            var h42 = a4z.physics.fixtures[N8U];
            var S1X = h42.sh;
            a4z.physics.shapes[S1X];
            var z0p = false;
            var i4$ = X6d.tea;
            for (var V2i = 0; V2i < a4z.capZones.length; V2i++) {
              if (a4z.capZones[V2i] && a4z.capZones[V2i].i == N8U) {
                z0p = true;
                break;
              }
            }
            this.shapes[S1X] = new V6D[34](a4z, S1X, z0p, j6e, k0d, i4$, C_p, this.isReplay);
          }
        }
        this.displayObject.addChild(this.shadowContainer);
        this.shadowContainer.x = 2;
        this.shadowContainer.y = 2;
        for (var l1L = 0; l1L < a4z.physics.bodies[N4R].fx.length; l1L++) {
          if (a4z.physics.bodies[N4R].fx[l1L] != null) {
            var p_r = a4z.physics.bodies[N4R].fx[l1L];
            if (this.shapes[p_r].shadowTexture) {
              this.shadowContainer.addChild(this.shapes[p_r].shadowTexture);
            } else if (this.shapes[p_r].shadow) {
              this.shadowContainer.addChild(this.shapes[p_r].shadow);
            }
          }
        }
        for (var l1L = 0; l1L < a4z.physics.bodies[N4R].fx.length; l1L++) {
          if (a4z.physics.bodies[N4R].fx[l1L] != null) {
            var D6S = a4z.physics.bodies[N4R].fx[l1L];
            if (this.shapes[D6S].capFill) {
              this.displayObject.addChild(this.shapes[D6S].capFill);
            }
            if (this.shapes[D6S].graphicTexture) {
              this.displayObject.addChild(this.shapes[D6S].graphicTexture);
            } else if (this.shapes[D6S].graphic) {
              this.displayObject.addChild(this.shapes[D6S].graphic);
            }
          }
        }
        var F0f = this.scaleRatio * a4z.physics.ppm;
        for (var B7u = 0; B7u < a4z.physics.joints.length; B7u++) {
          if (a4z.physics.joints[B7u]) {
            var I2F = a4z.physics.joints[B7u];
            if (I2F.type == 'rv' && I2F.ba == this.bodyID && I2F.d.dl) {
              if (!this.rvLine) {
                this.rvLine = new PIXI.Graphics;
              }
              this.rvLine.lineStyle(1, 13421772, 0.5);
              this.rvLine.moveTo(0, 0);
              this.rvLine.lineTo(I2F.aa[0] * F0f, I2F.aa[1] * F0f);
            }
          }
        }
        if (this.rvLine) {
          this.displayObject.addChildAt(this.rvLine, 0);
        }
        for (var o3y = 0; o3y < a4z.physics.joints.length; o3y++) {
          if (a4z.physics.joints[o3y]) {
            var S6U = a4z.physics.joints[o3y];
            if (S6U.ba == this.bodyID && S6U.type == 'lpj' && S6U.d.dl) {
              this.otherLines[o3y] = new PIXI.Graphics;
              this.otherLines[o3y].lineStyle(1, 13421772, 0.5);
              this.otherLines[o3y].moveTo(S6U.plen * F0f, 0);
              this.otherLines[o3y].lineTo( - S6U.plen * F0f, 0);
              this.otherLines[o3y].rotation = S6U.pa;
              this.otherLines[o3y].x = S6U.pax * F0f;
              this.otherLines[o3y].y = S6U.pay * F0f;
              this.jointContainer.addChild(this.otherLines[o3y]);
            }
          }
        }
        for (var M$t = 0; M$t < a4z.physics.joints.length; M$t++) {
          if (a4z.physics.joints[M$t]) {
            var P9y = a4z.physics.joints[M$t];
            if (P9y.type == 'd' && P9y.d.dl && P9y.ba == this.bodyID) {
              this.otherLines[M$t] = new PIXI.Graphics;
              this.jointContainer.addChild(this.otherLines[M$t]);
            }
          }
        }
      }
      move(s3i, e4G, i86) {
        var b0N = e4G.physics.ppm * this.scaleRatio;
        var H91 = s3i.physics.bodies[this.bodyID].p[0] * b0N;
        var h2_ = s3i.physics.bodies[this.bodyID].p[1] * b0N;
        var W7h = e4G.physics.bodies[this.bodyID].p[0] * b0N;
        var r7F = e4G.physics.bodies[this.bodyID].p[1] * b0N;
        var J1M = s3i.physics.bodies[this.bodyID].a;
        var g3b = e4G.physics.bodies[this.bodyID].a;
        var z5F = Math.cos(J1M);
        var B41 = Math.sin(J1M);
        var a$d = Math.cos(g3b);
        var e13 = Math.sin(g3b);
        var q2u = (1 - i86) * z5F + i86 * a$d;
        var X7E = (1 - i86) * B41 + i86 * e13;
        this.displayObject.x = (1 - i86) * H91 + i86 * W7h;
        this.displayObject.y = (1 - i86) * h2_ + i86 * r7F;
        this.displayObject.rotation = Math.atan2(X7E, q2u);
        var P1M = {
          x: 2 * this.scaleRatio,
          y: 2 * this.scaleRatio
        };
        var H6E = V6D[67].rotatePoint({
          x: 0,
          y: 0
        }, P1M, - this.displayObject.rotation);
        this.shadowContainer.x = H6E.x;
        this.shadowContainer.y = H6E.y;
        for (var d61 = 0; d61 < this.shapes.length; d61++) {
          if (this.shapes[d61] && this.shapes[d61].shrink) {
            this.shapes[d61].doShrink(s3i, e4G, i86);
          }
        }
        for (var E2m = 0; E2m < e4G.capZones.length; E2m++) {
          if (e4G.capZones[E2m] && this.shapes[e4G.capZones[E2m].i]) {
            this.shapes[e4G.capZones[E2m].i].doCapZone(s3i, e4G, i86, E2m);
          }
        }
        this.updateRodJoints(s3i, e4G, i86);
      }
      updateRodJoints(S3m, G7X, M1n) {
        var q27 = [
          arguments
        ];
        q27[7] = r8no$;
        U3ndn.z_y(48);
        q27[91] = U3ndn.I8r(42, 61, 61, 11, 12);
        U3ndn.S2t(26);
        q27[50] = U3ndn.E_K(10, 230, 1634, 7);
        U3ndn.S2t(13);
        q27[76] = U3ndn.E_K(80, 1445, 9);
        q27[6] = q27[0][1][r8no$[q27[91]]][r8no$[q27[50]]] * this[r8no$[q27[76]]];
        for (q27[67] = 0; q27[67] < q27[0][1]['physics']['joints']['length']; q27[67]++) {
          if (q27[0][1]['physics']['joints'][q27[67]] && q27[0][0]['physics']['joints'][q27[67]] && q27[0][1]['physics']['joints'][q27[67]]['type'] == 'd' && q27[0][1]['physics']['joints'][q27[67]]['d']['dl'] && q27[0][1]['physics']['joints'][q27[67]]['ba'] == this['bodyID']) {
            q27[1] = q27[0][0]['physics']['joints'][q27[67]];
            q27[9] = q27[0][1]['physics']['joints'][q27[67]];
            this['otherLines'][q27[67]]['clear']();
            q27[4] = {
              x: q27[1]['aa'][0],
              y: q27[1]['aa'][1]
            };
            q27[2] = V6D[67]['rotatePoint']({
              x: 0,
              y: 0
            }, q27[4], q27[0][0]['physics']['bodies'][q27[1]['ba']]['a']);
            U3ndn.z_y(1);
            q27[24] = U3ndn.E_K(195, 156);
            U3ndn.S2t(40);
            q27[14] = U3ndn.I8r(2, 4859, 19, 516);
            U3ndn.z_y(60);
            q27[39] = U3ndn.E_K(7, 89, 144);
            U3ndn.S2t(17);
            q27[94] = U3ndn.I8r(60, 4, 12);
            U3ndn.S2t(52);
            q27[11] = U3ndn.E_K(14, 54, 10, 17, 9891);
            q27[8] = q27[2][r8no$[q27[24]]] + q27[0][0][r8no$[q27[14]]][r8no$[q27[39]]][q27[1][r8no$[q27[94]]]][r8no$[q27[11]]][0];
            U3ndn.S2t(14);
            q27[18] = U3ndn.E_K(25, 25, 39);
            U3ndn.z_y(163);
            q27[88] = U3ndn.E_K(5, 20, 128, 4);
            U3ndn.S2t(164);
            q27[34] = U3ndn.I8r(18, 13784, 14, 4, 59);
            U3ndn.z_y(1);
            q27[19] = U3ndn.I8r(65, 16);
            U3ndn.S2t(78);
            q27[63] = U3ndn.I8r(4, 18, 15, 0);
            q27[5] = q27[2][r8no$[q27[18]]] + q27[0][0]['physics'][r8no$[q27[88]]][q27[1][r8no$[q27[34]]]][r8no$[q27[19]]][q27[63]];
            q27[3] = {
              x: q27[9]['aa'][0],
              y: q27[9]['aa'][1]
            };
            q27[16] = V6D[67]['rotatePoint']({
              x: 0,
              y: 0
            }, q27[3], q27[0][1]['physics']['bodies'][q27[9]['ba']]['a']);
            U3ndn.z_y(6);
            q27[84] = U3ndn.E_K(3, 36);
            U3ndn.z_y(29);
            q27[12] = U3ndn.E_K(28, 2, 10);
            U3ndn.S2t(17);
            q27[79] = U3ndn.I8r(2, 67, 7);
            U3ndn.S2t(26);
            q27[27] = U3ndn.I8r(6, 41, 797, 18);
            q27[25] = q27[16][r8no$[q27[84]]] + q27[0][1]['physics'][r8no$[q27[12]]][q27[9][r8no$[q27[79]]]][r8no$[q27[27]]][0];
            U3ndn.S2t(91);
            q27[30] = U3ndn.I8r(58, 3, 10, 27, 18);
            U3ndn.z_y(6);
            q27[41] = U3ndn.E_K(34, 9);
            U3ndn.z_y(142);
            q27[43] = U3ndn.E_K(1, 53, 14, 9);
            U3ndn.z_y(1);
            q27[59] = U3ndn.E_K(836, 760);
            U3ndn.z_y(165);
            q27[83] = U3ndn.E_K(19, 6, 45, 12, 11);
            U3ndn.z_y(15);
            q27[69] = U3ndn.I8r(11, 0, 10);
            q27[45] = q27[16][r8no$[q27[30]]] + q27[0][1][r8no$[q27[41]]][r8no$[q27[43]]][q27[9][r8no$[q27[59]]]][r8no$[q27[83]]][q27[69]];
            q27[52] = 0;
            q27[87] = 0;
            q27[10] = 0;
            q27[74] = 0;
            if (q27[9]['bb'] == - 1) {
              q27[52] = q27[9]['ab'][0];
              q27[87] = q27[9]['ab'][1];
              q27[10] = q27[9]['ab'][0];
              q27[74] = q27[9]['ab'][1];
            } else {
              q27[13] = {
                x: q27[1]['ab'][0],
                y: q27[1]['ab'][1]
              };
              q27[65] = V6D[67]['rotatePoint']({
                x: 0,
                y: 0
              }, q27[13], q27[0][0]['physics']['bodies'][q27[1]['bb']]['a']);
              U3ndn.z_y(93);
              q27[47] = U3ndn.E_K(49, 19, 37, 3, 8);
              U3ndn.S2t(29);
              q27[78] = U3ndn.I8r(15, 14, 2);
              U3ndn.S2t(78);
              q27[70] = U3ndn.I8r(14, 409, 11, 432);
              U3ndn.S2t(139);
              q27[98] = U3ndn.E_K(5, 1, 76, 5, 1);
              U3ndn.S2t(131);
              q27[35] = U3ndn.E_K(37, 3, 15, 37, 44);
              q27[52] = q27[65][r8no$[q27[47]]] + q27[0][0][r8no$[q27[78]]][r8no$[q27[70]]][q27[1][r8no$[q27[98]]]][r8no$[q27[35]]][0];
              U3ndn.z_y(26);
              q27[86] = U3ndn.I8r(4, 26, 200, 8);
              U3ndn.S2t(6);
              q27[61] = U3ndn.E_K(4, 39);
              U3ndn.S2t(105);
              q27[21] = U3ndn.I8r(19, 432, 59, 54);
              U3ndn.z_y(166);
              q27[57] = U3ndn.E_K(86, 2, 43, 73);
              U3ndn.S2t(167);
              q27[55] = U3ndn.I8r(4, 1, 87, 32, 17);
              U3ndn.S2t(154);
              q27[36] = U3ndn.I8r(11, 10, 5, 10, 54);
              q27[87] = q27[65][r8no$[q27[86]]] + q27[0][0][r8no$[q27[61]]][r8no$[q27[21]]][q27[1][r8no$[q27[57]]]][r8no$[q27[55]]][q27[36]];
              q27[93] = {
                x: q27[9]['ab'][0],
                y: q27[9]['ab'][1]
              };
              q27[99] = V6D[67]['rotatePoint']({
                x: 0,
                y: 0
              }, q27[93], q27[0][1]['physics']['bodies'][q27[9]['bb']]['a']);
              U3ndn.S2t(168);
              q27[51] = U3ndn.E_K(9, 5, 18, 41, 48);
              U3ndn.S2t(75);
              q27[75] = U3ndn.I8r(14, 3, 2, 20, 72);
              U3ndn.z_y(1);
              q27[29] = U3ndn.I8r(384, 336);
              U3ndn.S2t(54);
              q27[85] = U3ndn.E_K(1, 7, 16, 231, 3626);
              U3ndn.z_y(86);
              q27[49] = U3ndn.I8r(7, 2, 5, 4, 32);
              q27[10] = q27[99][r8no$[q27[51]]] + q27[0][1][r8no$[q27[75]]][r8no$[q27[29]]][q27[9][r8no$[q27[85]]]][r8no$[q27[49]]][0];
              U3ndn.z_y(1);
              q27[32] = U3ndn.E_K(480, 440);
              U3ndn.z_y(6);
              q27[48] = U3ndn.E_K(3, 40);
              U3ndn.z_y(13);
              q27[22] = U3ndn.E_K(51, 16, 19);
              U3ndn.S2t(28);
              q27[81] = U3ndn.I8r(70, 11, 8, 67);
              U3ndn.S2t(13);
              q27[64] = U3ndn.I8r(16, 39, 6);
              U3ndn.S2t(117);
              q27[56] = U3ndn.E_K(20, 3, 10, 1199, 18);
              q27[74] = q27[99][r8no$[q27[32]]] + q27[0][1][r8no$[q27[48]]][r8no$[q27[22]]][q27[9][r8no$[q27[81]]]][r8no$[q27[64]]][q27[56]];
            }
            U3ndn.S2t(169);
            q27[71] = U3ndn.E_K(q27[0][2], 1, q27[0][2], q27[25], q27[8]);
            U3ndn.S2t(169);
            q27[40] = U3ndn.E_K(q27[0][2], 1, q27[0][2], q27[45], q27[5]);
            U3ndn.z_y(169);
            q27[15] = U3ndn.E_K(q27[0][2], 1, q27[0][2], q27[10], q27[52]);
            U3ndn.z_y(169);
            q27[28] = U3ndn.E_K(q27[0][2], 1, q27[0][2], q27[74], q27[87]);
            this['otherLines'][q27[67]]['lineStyle'](1, 13421772, 0.5);
            U3ndn.z_y(4);
            this['otherLines'][q27[67]]['moveTo'](U3ndn.I8r(q27[6], q27[71]), U3ndn.I8r(q27[6], q27[40]));
            U3ndn.S2t(4);
            this['otherLines'][q27[67]]['lineTo'](U3ndn.E_K(q27[6], q27[15]), U3ndn.I8r(q27[6], q27[28]));
          }
        }
      }
      destroy() {
        var Q2V = [
          arguments
        ];
        Q2V[5] = r8no$;
        for (Q2V[7] = 0; Q2V[7] < this['shapes']['length']; Q2V[7]++) {
          if (this['shapes'][Q2V[7]]) {
            this['shapes'][Q2V[7]]['destroy']();
          }
        }
        this['shapes'] = [
        ];
        if (this['rvLine']) {
          this['rvLine']['destroy'](true);
        }
        this['otherLines']['forEach']((X81, k2a) =>{
          var h1Z = r8no$;
          X81[h1Z[392]](true);
        });
        this['otherLines'] = null;
        this['jointContainer']['destroy'](true);
        this['jointContainer'] = null;
      }
    };
    V6D[72] = class m0P {
      constructor(o$5, N4h) {
        var C5R = [
          arguments
        ];
        C5R[7] = r8no$;
        U3ndn.Y$U();
        this['gradientBackgroundCanvas'] = document['createElement']('canvas');
        this['bgTex'] = null;
        this['lastRenderRoundCount'] = - 1;
        this['roundGraphics'] = null;
        this['discGraphics'] = [
        ];
        this['arrowGraphics'] = [
        ];
        this['stage'] = new PIXI['Container'];
        this['bgGradient'] = new PIXI['Graphics'];
        this['stage']['addChild'](this['bgGradient']);
        this['blurContainer'] = new PIXI['Container'];
        this['stage']['addChild'](this['blurContainer']);
        this['environmentContainer'] = new PIXI['Container'];
        this['blurContainer']['addChild'](this['environmentContainer']);
        this['discContainer'] = new PIXI['Container'];
        this['blurContainer']['addChild'](this['discContainer']);
        this['foregroundFader'] = new PIXI['Graphics'];
        this['foregroundFader']['alpha'] = 0;
        this['foregroundFader']['visible'] = false;
        this['stage']['addChild'](this['foregroundFader']);
        this['renderer'] = A['gameRenderer'];
        this['domContainer'] = C5R[0][0];
        this['domContainer']['appendChild'](this['renderer']['view']);
        this['particleManager'] = null;
        this['gameInterfaceGraphics'] = null;
        this['shakeTweenGroup'] = new TWEEN['Group'];
        this['shakeTweenObject'] = {
          x: 0,
          y: 0
        };
        this['domLastWidth'] = 0;
        this['domLastHeight'] = 0;
        this['newWinnerDOM'] = document['getElementById']('ingamewinner');
        this['countdownDOM'] = document['getElementById']('ingamecountdown');
        this['scaleRatio'] = 1;
        this['playerArray'] = [
        ];
        this['localPlayerID'] = null;
        this['isReplay'] = C5R[0][1];
        this['resizeRenderer']();
        this['renderer']['render'](this['stage']);
      }
      resizeRenderer() {
        var p9k = [
          arguments
        ];
        p9k[8] = r8no$;
        this['domLastWidth'] = this['domContainer']['offsetWidth'];
        this['domLastHeight'] = this['domContainer']['offsetHeight'];
        U3ndn.S2t(0);
        U3ndn.w30();
        p9k[5] = U3ndn.I8r(730, 500);
        U3ndn.S2t(1);
        p9k[4] = U3ndn.E_K(10801, 9258);
        U3ndn.S2t(62);
        p9k[7] = U3ndn.I8r(6, 523, 1555, 14, 1563);
        p9k[9] = this[r8no$[p9k[4]]] / this[r8no$[p9k[7]]];
        p9k[1] = 0;
        p9k[3] = 0;
        if (p9k[9] > p9k[5]) {
          p9k[3] = this['domLastHeight'];
          U3ndn.z_y(4);
          p9k[1] = U3ndn.E_K(p9k[5], p9k[3]);
        } else {
          p9k[1] = this['domLastWidth'];
          U3ndn.z_y(0);
          p9k[3] = U3ndn.I8r(p9k[1], p9k[5]);
        }
        U3ndn.S2t(0);
        this['scaleRatio'] = U3ndn.I8r(p9k[1], 730);
        this['renderer']['resize'](p9k[1], p9k[3]);
        U3ndn.z_y(1);
        p9k[2] = U3ndn.I8r(1274, 5);
        document['getElementById']('xpbar') ['style']['width'] = p9k[1] * 0.9 + U3ndn.j31(p9k[2]);
        p9k[6] = V6D[67]['getPageHeight']();
        U3ndn.S2t(60);
        p9k[44] = U3ndn.I8r(16, 2, 20);
        U3ndn.z_y(147);
        p9k[31] = U3ndn.E_K(9, 14, 7, 0, 216);
        U3ndn.S2t(45);
        p9k[68] = U3ndn.E_K(15, 18, 338931, 1260);
        document['getElementById']('xpbarcontainer') ['style']['top'] = (p9k[6] - p9k[3]) / p9k[44] - p9k[31] + U3ndn.j31(p9k[68]);
        if (this['scaleRatio'] < 1.5) {
          U3ndn.z_y(17);
          p9k[56] = U3ndn.I8r(1290, 217, 9);
          this['newWinnerDOM']['style']['zoom'] = this[r8no$[p9k[56]]] / 1.5;
        } else {
          this['newWinnerDOM']['style']['zoom'] = '1';
        }
        this['countdownDOM']['style']['zoom'] = Math['min'](1.5, this['scaleRatio']);
        document['getElementById']('ingamemapcredit') ['style']['zoom'] = Math['sqrt'](this['scaleRatio']);
        this['createGradientBackground']();
      }
      build(r$T, r1n) {
        var n3c = [
          arguments
        ];
        n3c[9] = r8no$;
        U3ndn.w30();
        this['roundGraphics'] = new V6D[41](n3c[0][0], this['scaleRatio'], this['renderer'], n3c[0][1], this['playerArray']);
        this['environmentContainer']['addChild'](this['roundGraphics']['displayObject']);
        this['particleManager'] = new V6D[37](this['playerArray'], this['scaleRatio'], this['renderer']);
        this['blurContainer']['addChild'](this['particleManager']['container']);
        if (!this['isReplay']) {
          this['gameInterfaceGraphics'] = new V6D[82](n3c[0][1], this['playerArray'], this['foregroundFader'], this['blurContainer'], this['localPlayerID'], this['scaleRatio']);
        }
      }
      render(e46, b2Y, H0o, k3r, i8X, v4$) {
        if (b2Y.dontInterpolate == true) {
          e46 = b2Y;
        }
        if (this.renderer.view.parentNode != this.domContainer) {
          this.domContainer.appendChild(this.renderer.view);
        }
        var a0H = false;
        if (this.domLastWidth != this.domContainer.offsetWidth || this.domLastHeight != this.domContainer.offsetHeight) {
          this.resizeRenderer();
          a0H = true;
        }
        if (b2Y.rc > this.lastRenderRoundCount || a0H) {
          this.lastRenderRoundCount = b2Y.rc;
          this.destroyChildren();
          this.build(b2Y, k3r);
          if ((b2Y.rc == 0 || a0H == false) && this.isReplay) {
            this.replayFadeIn();
          }
        }
        this.roundGraphics.render(e46, b2Y, H0o);
        for (var F3q = 0; F3q < b2Y.discs.length; F3q++) {
          if (b2Y.discs[F3q] && !this.discGraphics[F3q]) {
            this.discGraphics[F3q] = new V6D[24](b2Y, this.scaleRatio, k3r, this.playerArray[F3q], F3q, this.renderer, F3q == this.localPlayerID, this.isReplay);
            var h0Q = F3q == this.localPlayerID ? this.discContainer.children.length : 0;
            this.discContainer.addChildAt(this.discGraphics[F3q].container, h0Q);
            this.discContainer.addChild(this.discGraphics[F3q].offScreenContainer);
          }
        }
        for (var X04 = 0; X04 < this.discGraphics.length; X04++) {
          if (this.discGraphics[X04] && !b2Y.discs[X04]) {
            this.discContainer.removeChild(this.discGraphics[X04].container);
            this.discContainer.removeChild(this.discGraphics[X04].offScreenContainer);
            this.discGraphics[X04].destroy();
            this.discGraphics[X04] = null;
          }
        }
        for (var Z1O = 0; Z1O < b2Y.discs.length; Z1O++) {
          if (b2Y.discs[Z1O]) {
            this.discGraphics[Z1O].move(e46, b2Y, H0o, null, v4$);
          }
        }
        for (var x1B = 0; x1B < this.arrowGraphics.length; x1B++) {
          if (this.arrowGraphics[x1B] && (!e46.projectiles[x1B] || !b2Y.projectiles[x1B] || b2Y.projectiles[x1B].did != this.arrowGraphics[x1B].ownerID)) {
            this.blurContainer.removeChild(this.arrowGraphics[x1B].graphic);
            this.arrowGraphics[x1B].destroy();
            this.arrowGraphics[x1B] = null;
          }
        }
        for (var n7_ = 0; n7_ < b2Y.projectiles.length; n7_++) {
          if (!this.arrowGraphics[n7_] && e46.projectiles[n7_] && b2Y.projectiles[n7_]) {
            var x_B = b2Y.projectiles[n7_].did;
            var O_d = b2Y.projectiles[n7_].team;
            var r5X = k3r.mo == 'ard';
            this.arrowGraphics[n7_] = new V6D[96](n7_, this.playerArray[x_B], x_B, O_d, this.scaleRatio * b2Y.physics.ppm, r5X, this.renderer);
            this.blurContainer.addChild(this.arrowGraphics[n7_].graphic);
          }
        }
        for (var c1j = 0; c1j < this.arrowGraphics.length; c1j++) {
          if (this.arrowGraphics[c1j]) {
            this.arrowGraphics[c1j].move(e46, b2Y, H0o);
          }
        }
        this.particleManager.render(e46, b2Y, H0o, this.renderer, this.isReplay);
        if (b2Y.shk && (b2Y.shk.x != 0 || b2Y.shk.y != 0)) {
          this.shakeTweenGroup.removeAll();
          var H9s = new TWEEN.Tween(this.shakeTweenObject, this.shakeTweenGroup);
          var L2e = 50;
          var E65 = 800;
          H9s.to({
            x: b2Y.shk.x,
            y: b2Y.shk.y
          }, L2e);
          H9s.easing(TWEEN.Easing.Cubic.Out);
          H9s.onComplete(() =>{
            var K8K = new TWEEN.Tween(this.shakeTweenObject, this.shakeTweenGroup);
            K8K.to({
              x: 0,
              y: 0
            }, E65);
            K8K.easing(TWEEN.Easing.Elastic.Out);
            K8K.start();
          });
          H9s.start();
        }
        this.shakeTweenGroup.update();
        this.blurContainer.x = this.shakeTweenObject.x;
        this.blurContainer.y = this.shakeTweenObject.y;
        if (this.gameInterfaceGraphics) {
          this.gameInterfaceGraphics.render(e46, b2Y, H0o, i8X);
        }
        V6D[67].soundManager.resetSumVols();
        b2Y.sts = null;
        this.renderer.render(this.stage);
        this.renderer.view.style.visibility = 'inherit';
      }
      createGradientBackground() {
        function E3B(y60, i33) {
          var a21 = [
            arguments
          ];
          a21[9] = r8no$;
          U3ndn.S2t(144);
          W7Y[5]['width'] = U3ndn.E_K(730, W7Y[8], 50);
          U3ndn.S2t(144);
          W7Y[5]['height'] = U3ndn.E_K(500, W7Y[8], 50);
          a21[7] = W7Y[5]['getContext']('2d');
          U3ndn.S2t(4);
          a21[6] = a21[7]['createRadialGradient'](0, 0, U3ndn.E_K(W7Y[8], 10), 0, 0, U3ndn.I8r(W7Y[8], 540));
          a21[6]['addColorStop'](0, a21[0][0]);
          a21[6]['addColorStop'](1, a21[0][1]);
          a21[7]['fillStyle'] = a21[6];
          U3ndn.S2t(144);
          a21[7]['fillRect'](0, 0, U3ndn.I8r(730, W7Y[8], 50), U3ndn.I8r(500, W7Y[8], 50));
          return new PIXI['Texture']['from'](W7Y[5]);
        }
        var W7Y = [
          arguments
        ];
        W7Y[7] = r8no$;
        if (this['bgTex']) {
          W7Y[6] = 527320742;
          W7Y[2] = - 2140426784;
          W7Y[3] = 2;
          for (W7Y[9] = 1; U3ndn.v9p(W7Y[9].toString(), W7Y[9].toString().length, 1648) !== W7Y[6]; W7Y[9]++) {
            this[r8no$[8924]]['rotates'](false);
            W7Y[3] += 2;
          }
          if (U3ndn.P5V(W7Y[3].toString(), W7Y[3].toString().length, 32993) !== W7Y[2]) {
            this[r8no$[8924]]['rotates'](false);
          }
          this['bgTex']['destroy'](true);
        }
        W7Y[8] = this['scaleRatio'];
        W7Y[5] = this['gradientBackgroundCanvas'];
        this['bgGradient']['clear']();
        this['bgTex'] = E3B('#3b536b', '#2c3e50');
        this['bgGradient']['beginTextureFill']({
          texture: this['bgTex']
        });
        U3ndn.S2t(144);
        this['bgGradient']['drawRect'](0, 0, U3ndn.I8r(730, W7Y[8], 50), U3ndn.I8r(500, W7Y[8], 50));
        U3ndn.z_y(137);
        this['bgGradient']['x'] = U3ndn.I8r(25, W7Y[8]);
        U3ndn.z_y(137);
        this['bgGradient']['y'] = U3ndn.E_K(25, W7Y[8]);
        this['foregroundFader']['clear']();
        this['foregroundFader']['beginTextureFill']({
          texture: this['bgTex']
        });
        U3ndn.z_y(144);
        this['foregroundFader']['drawRect'](0, 0, U3ndn.E_K(730, W7Y[8], 50), U3ndn.I8r(500, W7Y[8], 50));
        U3ndn.z_y(137);
        this['foregroundFader']['x'] = U3ndn.I8r(25, W7Y[8]);
        U3ndn.z_y(137);
        this['foregroundFader']['y'] = U3ndn.I8r(25, W7Y[8]);
      }
      destroyChildren() {
        var m0d = [
          arguments
        ];
        m0d[8] = r8no$;
        if (this['roundGraphics']) {
          this['environmentContainer']['removeChild'](this['roundGraphics']);
          this['roundGraphics']['destroy']();
          this['roundGraphics'] = null;
        }
        for (m0d[7] = 0; m0d[7] < this['discGraphics']['length']; m0d[7]++) {
          if (this['discGraphics'][m0d[7]]) {
            this['blurContainer']['removeChild'](this['discGraphics'][m0d[7]]['container']);
            this['blurContainer']['removeChild'](this['discGraphics'][m0d[7]]['offScreenContainer']);
            this['discGraphics'][m0d[7]]['destroy']();
          }
        }
        this['discGraphics'] = [
        ];
        if (this['particleManager']) {
          this['particleManager']['destroy']();
        }
        this['particleManager'] = null;
        if (this['gameInterfaceGraphics']) {
          this['gameInterfaceGraphics']['destroy']();
        }
      }
      destroy() {
        var s7m = [
          arguments
        ];
        s7m[3] = r8no$;
        U3ndn.Y$U();
        if (this['renderer']['view']['parentNode'] == this['domContainer']) {
          this['domContainer']['removeChild'](this['renderer']['view']);
        }
        if (this['bgTex']) {
          this['bgTex']['destroy'](true);
        }
        this['destroyChildren']();
        this['renderer']['clear']();
      }
      setPlayerArray(G8Q) {
        var x99 = [
          arguments
        ];
        U3ndn.w30();
        x99[2] = r8no$;
        this['playerArray'] = x99[0][0];
      }
      setLocalPlayerID(Q_X) {
        U3ndn.w30();
        var u1m = [
          arguments
        ];
        u1m[3] = r8no$;
        this['localPlayerID'] = u1m[0][0];
        if (this['gameInterfaceGraphics']) {
          this['gameInterfaceGraphics']['setLocalPlayerID'](u1m[0][0]);
        }
      }
      showAfkWarn() {
        var H3A = [
          arguments
        ];
        U3ndn.Y$U();
        H3A[6] = r8no$;
        if (this['gameInterfaceGraphics']) {
          this['gameInterfaceGraphics']['showAfkWarn']();
        }
      }
      clearAfkWarn() {
        var M6y = [
          arguments
        ];
        M6y[8] = r8no$;
        if (this['gameInterfaceGraphics']) {
          this['gameInterfaceGraphics']['clearAfkWarn']();
        }
      }
      blur() {
      }
      unblur() {
      }
      destroySkins() {
      }
      replayFadeIn() {
        var z1$ = [
          arguments
        ];
        z1$[7] = r8no$;
        this['foregroundFader']['visible'] = true;
        U3ndn.w30();
        this['foregroundFader']['alpha'] = 1;
        anime({
          targets: this['foregroundFader'],
          alpha: 0,
          autoplay: true,
          duration: 200,
          delay: 30,
          easing: 'linear',
          complete: () =>{
            U3ndn.w30();
            var X4i = r8no$;
            this[X4i[1536]][X4i[481]] = false;
          }
        });
      }
      replayFadeOut() {
        var Z5N = [
          arguments
        ];
        Z5N[9] = r8no$;
        this['foregroundFader']['visible'] = true;
        anime({
          targets: this['foregroundFader'],
          alpha: 1,
          autoplay: true,
          duration: 200,
          delay: 0,
          easing: 'linear'
        });
      }
    };
    V6D[41] = class m2H {
      constructor(w4x, m6i, v28, z4S, Q66) {
        var s8u = [
          arguments
        ];
        s8u[3] = r8no$;
        this['displayObject'] = new PIXI['Container'];
        this['scaleRatio'] = s8u[0][1];
        U3ndn.Y$U();
        this['bodyGraphics'] = [
        ];
        this['build'](s8u[0][0], s8u[0][2], s8u[0][3], s8u[0][4]);
      }
      build(t5K, w8q, j7w, G9C) {
        var c_L = [
          arguments
        ];
        c_L[5] = r8no$;
        c_L[2] = Date['now']();
        for (c_L[7] = c_L[0][0]['physics']['bro']['length'] - 1; c_L[7] >= 0; c_L[7]--) {
          c_L[8] = c_L[0][0]['physics']['bro'][c_L[7]];
          if (c_L[0][0]['physics']['bodies'][c_L[8]]) {
            this['bodyGraphics'][c_L[8]] = new V6D[17](c_L[0][0], c_L[8], this['scaleRatio'], c_L[0][1], c_L[0][2], c_L[0][3]);
            if (this['bodyGraphics'][c_L[8]]['jointContainer']['children']['length'] > 0) {
              this['displayObject']['addChild'](this['bodyGraphics'][c_L[8]]['jointContainer']);
            }
            this['displayObject']['addChild'](this['bodyGraphics'][c_L[8]]['displayObject']);
          }
        }
        c_L[6] = Date['now']() - c_L[2];
      }
      render(g$l, o77, l7$) {
        for (var Q1G = 0; Q1G < this.bodyGraphics.length; Q1G++) {
          if (this.bodyGraphics[Q1G]) {
            this.bodyGraphics[Q1G].move(g$l, o77, l7$);
          }
        }
      }
      destroy() {
        var j7j = [
          arguments
        ];
        j7j[4] = r8no$;
        U3ndn.w30();
        for (j7j[6] = 0; j7j[6] < this['bodyGraphics']['length']; j7j[6]++) {
          if (this['bodyGraphics'][j7j[6]]) {
            this['bodyGraphics'][j7j[6]]['destroy']();
          }
        }
        this['bodyGraphics'] = [
        ];
        this['displayObject']['parent']['removeChild'](this['displayObject']);
        this['displayObject'] = null;
      }
    };
    V6D[34] = class V0A {
      constructor(z_B, h5Z, p_h, g3D, N4O, P1c, e88, H4Q) {
        var s2Q = [
          arguments
        ];
        s2Q[6] = r8no$;
        this['shapeID'] = s2Q[0][1];
        this['graphic'] = new PIXI['Graphics'];
        this['graphicTexture'] = null;
        U3ndn.w30();
        this['shadow'] = null;
        this['shadowTexture'] = null;
        this['capFill'] = null;
        this['shrink'] = false;
        this['capZone'] = s2Q[0][2];
        this['shapeType'] = null;
        this['scaleRatio'] = s2Q[0][3];
        this['teams'] = s2Q[0][5];
        this['playerArray'] = s2Q[0][6];
        this['isReplay'] = s2Q[0][7];
        this['build'](s2Q[0][0], s2Q[0][1], s2Q[0][2], s2Q[0][4]);
      }
      build(G8h, u0J, U79, p74) {
        var c49 = r8no$;
        var a33 = G8h[c49[43]][c49[55]][u0J];
        var V2g = G8h[c49[43]][c49[57]][u0J];
        U3ndn.z_y(90);
        var S1Y = U3ndn.I8r(12, 12, 191, 258);
        U3ndn.S2t(13);
        var w5d = U3ndn.I8r(38, 26, 18);
        U3ndn.S2t(12);
        var F7A = U3ndn.I8r(21224, 4, 12, 7580);
        var b34 = G8h[c49[S1Y]][c49[w5d]] * this[c49[F7A]];
        if (U79) {
          this[c49[1552]][c49[477]](3 * this[c49[1516]], 16777215, 1);
          this[c49[1556]] = new PIXI[c49[427]];
          if (V2g[c49[52]] != 'po') {
            U3ndn.S2t(139);
            var K0q = U3ndn.E_K(1, 53, 57, 53, 1);
            this[c49[1556]][c49[39]] = V2g[c49[K0q]][0] * b34;
            U3ndn.S2t(6);
            var H7C = U3ndn.E_K(54, 4);
            U3ndn.z_y(1);
            var k_u = U3ndn.I8r(18, 17);
            this[c49[1556]][c49[40]] = V2g[c49[H7C]][k_u] * b34;
            if (V2g[c49[64]] !== undefined) {
              this[c49[1556]][c49[508]] = V2g[c49[64]];
            }
          }
        } else {
          this[c49[1552]][c49[428]](a33[c49[116]]);
        }
        this[c49[1557]] = V2g[c49[326]];
        this[c49[1559]] = V2g[c49[52]];
        var y6P = a33[c49[223]] == false && V6D[67][c49[371]][c49[452]] != 1;
        if (y6P) {
          this[c49[1554]] = new PIXI[c49[427]];
          if (U79) {
            this[c49[1554]][c49[431]]();
            this[c49[1554]][c49[477]](3 * this[c49[1516]], 0, 0.17);
          } else {
            this[c49[1554]][c49[428]](0, 0.17);
          }
        }
        if (V2g[c49[52]] == 'bx') {
          this[c49[1552]][c49[430]]( - V2g[c49[59]] / 2 * b34, - V2g[c49[60]] / 2 * b34, V2g[c49[59]] * b34, V2g[c49[60]] * b34);
          U3ndn.z_y(1);
          var c$P = U3ndn.I8r(64, 6);
          this[c49[1552]][c49[39]] = V2g[c49[c$P]][0] * b34;
          U3ndn.z_y(170);
          var i1s = U3ndn.E_K(520, 580, 8, 10, 16);
          U3ndn.S2t(110);
          var x6f = U3ndn.I8r(6, 6, 9, 0, 4);
          this[c49[1552]][c49[40]] = V2g[c49[i1s]][x6f] * b34;
          this[c49[1552]][c49[508]] = V2g[c49[64]];
          if (y6P) {
            this[c49[1554]][c49[430]]( - V2g[c49[59]] / 2 * b34, - V2g[c49[60]] / 2 * b34, V2g[c49[59]] * b34, V2g[c49[60]] * b34);
            U3ndn.z_y(6);
            var V86 = U3ndn.E_K(15, 43);
            this[c49[1554]][c49[39]] = V2g[c49[V86]][0] * b34;
            U3ndn.S2t(21);
            var n1L = U3ndn.E_K(11, 562, 73, 2, 20);
            U3ndn.S2t(57);
            var V4V = U3ndn.E_K(3, 4);
            this[c49[1554]][c49[40]] = V2g[c49[n1L]][V4V] * b34;
            this[c49[1554]][c49[508]] = V2g[c49[64]];
          }
        } else if (V2g[c49[52]] == 'ci') {
          this[c49[1552]][c49[580]](0, 0, V2g[c49[61]] * b34);
          U3ndn.z_y(92);
          var P2k = U3ndn.I8r(75, 59, 3, 6, 20);
          this[c49[1552]][c49[39]] = V2g[c49[P2k]][0] * b34;
          U3ndn.z_y(26);
          var D4v = U3ndn.I8r(16, 0, 127, 8);
          this[c49[1552]][c49[40]] = V2g[c49[58]][D4v] * b34;
          if (y6P) {
            this[c49[1554]][c49[580]](0, 0, V2g[c49[61]] * b34);
            U3ndn.z_y(17);
            var j2X = U3ndn.E_K(34, 6, 18);
            this[c49[1554]][c49[39]] = V2g[c49[j2X]][0] * b34;
            U3ndn.z_y(6);
            var W71 = U3ndn.I8r(52, 6);
            U3ndn.z_y(171);
            var x6s = U3ndn.E_K(0, 1, 8, 2, 16);
            this[c49[1554]][c49[40]] = V2g[c49[W71]][x6s] * b34;
          }
        } else if (V2g[c49[52]] == 'po') {
          if (V2g[c49[62]][c49[47]] > 0) {
            this[c49[1552]][c49[503]](V2g[c49[62]][0][0] * b34, V2g[c49[62]][0][1] * b34);
            if (y6P) {
              this[c49[1554]][c49[503]](V2g[c49[62]][0][0] * b34, V2g[c49[62]][0][1] * b34);
            }
            for (var B4o = 1; B4o < V2g[c49[62]][c49[47]]; B4o++) {
              this[c49[1552]][c49[504]](V2g[c49[62]][B4o][0] * b34, V2g[c49[62]][B4o][1] * b34);
              if (y6P) {
                this[c49[1554]][c49[504]](V2g[c49[62]][B4o][0] * b34, V2g[c49[62]][B4o][1] * b34);
              }
            }
            this[c49[1552]][c49[504]](V2g[c49[62]][0][0] * b34, V2g[c49[62]][0][1] * b34);
            if (y6P) {
              this[c49[1554]][c49[504]](V2g[c49[62]][0][0] * b34, V2g[c49[62]][0][1] * b34);
            }
          }
        }
        this[c49[1552]][c49[431]]();
        if (y6P) {
          this[c49[1554]][c49[431]]();
        }
        if (V6D[67][c49[1561]] && this[c49[1559]] == 'ci') {
          this[c49[1553]] = this[c49[1562]](this[c49[1552]], p74);
          if (this[c49[1554]]) {
            this[c49[1555]] = this[c49[1562]](this[c49[1554]], p74);
          }
        }
      }
      doShrink(V2P, z_S, n2K) {
        var Z__ = [
          arguments
        ];
        Z__[7] = r8no$;
        U3ndn.z_y(6);
        Z__[2] = U3ndn.I8r(33, 10);
        U3ndn.S2t(1);
        Z__[3] = U3ndn.E_K(736, 690);
        U3ndn.S2t(172);
        Z__[6] = U3ndn.I8r(6, 1, 13644, 6, 752);
        Z__[4] = Z__[0][1][r8no$[Z__[2]]][r8no$[Z__[3]]] * this[r8no$[Z__[6]]];
        if (this['shapeType'] == 'bx') {
          Z__[5] = Z__[0][0]['physics']['shapes'][this['shapeID']]['w'];
          Z__[1] = Z__[0][1]['physics']['shapes'][this['shapeID']]['w'];
          if (this['graphicTexture']) {
            U3ndn.S2t(173);
            this['graphicTexture']['width'] = U3ndn.E_K(Z__[1], Z__[0][2], Z__[5], 1, Z__[0][2], Z__[4]);
          } else {
            U3ndn.z_y(173);
            this['graphic']['width'] = U3ndn.E_K(Z__[1], Z__[0][2], Z__[5], 1, Z__[0][2], Z__[4]);
          }
          if (this['shadowTexture']) {
            U3ndn.z_y(173);
            this['shadowTexture']['width'] = U3ndn.E_K(Z__[1], Z__[0][2], Z__[5], 1, Z__[0][2], Z__[4]);
          } else if (this['shadow']) {
            U3ndn.z_y(173);
            this['shadow']['width'] = U3ndn.E_K(Z__[1], Z__[0][2], Z__[5], 1, Z__[0][2], Z__[4]);
          }
        }
        if (this['shapeType'] == 'ci') {
          Z__[9] = Z__[0][0]['physics']['shapes'][this['shapeID']]['r'];
          Z__[8] = Z__[0][1]['physics']['shapes'][this['shapeID']]['r'];
          if (this['graphicTexture']) {
            U3ndn.z_y(174);
            this['graphicTexture']['width'] = this['graphicTexture']['height'] = U3ndn.E_K(Z__[8], Z__[9], 1, Z__[0][2], Z__[4], 2, Z__[0][2]);
          } else {
            U3ndn.z_y(174);
            this['graphic']['width'] = this['graphic']['height'] = U3ndn.E_K(Z__[8], Z__[9], 1, Z__[0][2], Z__[4], 2, Z__[0][2]);
          }
          if (this['shadowTexture']) {
            U3ndn.S2t(174);
            this['shadowTexture']['width'] = this['shadowTexture']['height'] = U3ndn.I8r(Z__[8], Z__[9], 1, Z__[0][2], Z__[4], 2, Z__[0][2]);
          } else if (this['shadow']) {
            U3ndn.S2t(174);
            this['shadow']['width'] = this['shadow']['height'] = U3ndn.I8r(Z__[8], Z__[9], 1, Z__[0][2], Z__[4], 2, Z__[0][2]);
          }
        }
      }
      createTexture(q1_, w$d) {
        var v4r = [
          arguments
        ];
        v4r[8] = r8no$;
        v4r[7] = new PIXI['Container'];
        v4r[7]['addChild'](v4r[0][0]);
        v4r[2] = v4r[7]['getLocalBounds']();
        v4r[7]['x'] = - v4r[2]['x'];
        v4r[7]['y'] = - v4r[2]['y'];
        v4r[4] = 1024;
        v4r[6] = 1;
        if (v4r[2]['width'] > v4r[4] || v4r[2]['height'] > v4r[4]) {
          v4r[0][0]['cacheAsBitmap'] = true;
          return null;
        }
        v4r[9] = PIXI['RenderTexture']['create']({
          width: v4r[2]['width'],
          height: v4r[2]['height'],
          scaleMode: PIXI['SCALE_MODES']['LINEAR'],
          resolution: v4r[6]
        });
        if (v4r[6] == 1 && v4r[0][1]['framebuffer'] && PIXI['MSAA_QUALITY'] && V6D[67]['customControls']['quality'] != 1) {
          v4r[9]['framebuffer']['multisample'] = PIXI['MSAA_QUALITY']['HIGH'];
        }
        v4r[0][1]['render'](v4r[7], v4r[9]);
        if (v4r[6] == 1 && v4r[0][1]['framebuffer'] && PIXI['MSAA_QUALITY'] && V6D[67]['customControls']['quality'] != 1) {
          v4r[0][1]['framebuffer']['blit']();
        }
        v4r[3] = new PIXI['Sprite'](v4r[9]);
        v4r[3]['anchor']['x'] = 0.5;
        v4r[3]['anchor']['y'] = 0.5;
        U3ndn.S2t(14);
        v4r[1] = U3ndn.E_K(57, 57, 38);
        U3ndn.S2t(125);
        v4r[5] = U3ndn.E_K(10, 13, 1183, 117, 1);
        U3ndn.z_y(18);
        v4r[87] = U3ndn.I8r(18, 14, 26, 24);
        v4r[3]['x'] = v4r[2][r8no$[v4r[1]]] + v4r[2][r8no$[v4r[5]]] / v4r[87];
        U3ndn.z_y(13);
        v4r[88] = U3ndn.E_K(29, 14, 3);
        U3ndn.S2t(1);
        v4r[63] = U3ndn.E_K(7504, 7035);
        U3ndn.z_y(57);
        v4r[16] = U3ndn.I8r(13, 15);
        v4r[3]['y'] = v4r[2][r8no$[v4r[88]]] + v4r[2][r8no$[v4r[63]]] / v4r[16];
        v4r[7]['removeChild'](v4r[0][0]);
        return v4r[3];
      }
      doCapZone(A2U, q9a, S76, J2u) {
        var O$F = [
          arguments
        ];
        O$F[2] = r8no$;
        O$F[1] = O$F[0][1]['capZones'][O$F[0][3]];
        O$F[4] = Math['min'](O$F[1]['p'] / O$F[1]['l'], 1);
        O$F[6] = O$F[1]['o'];
        O$F[8] = O$F[0][1]['physics']['shapes'][this['shapeID']];
        U3ndn.S2t(154);
        O$F[34] = U3ndn.E_K(14, 19, 13, 1, 3415);
        U3ndn.z_y(26);
        O$F[70] = U3ndn.I8r(18, 66, 878, 11);
        U3ndn.z_y(115);
        O$F[12] = U3ndn.E_K(10233, 9, 1512, 4548);
        O$F[5] = O$F[0][1][r8no$[O$F[34]]][r8no$[O$F[70]]] * this[r8no$[O$F[12]]];
        O$F[3] = 13417386;
        if (this['teams']) {
          if (O$F[6] == 2) {
            O$F[3] = 16007990;
          }
          if (O$F[6] == 3) {
            O$F[3] = 2201331;
          }
          if (O$F[6] == 4) {
            O$F[3] = 5025616;
          }
          if (O$F[6] == 5) {
            O$F[3] = 16771899;
          }
        } else if (this['playerArray'][O$F[6]] && this['playerArray'][O$F[6]]['avatar']) {
          O$F[3] = this['playerArray'][O$F[6]]['avatar']['bc'];
        } else {
          O$F[3] = 16007990;
        }
        this['capFill']['clear']();
        this['capFill']['beginFill'](O$F[3]);
        U3ndn.S2t(105);
        O$F[76] = U3ndn.E_K(14, 1529, 1, 1);
        O$F[7] = 1.2 * this[r8no$[O$F[76]]];
        if (this['shapeType'] == 'ci') {
          U3ndn.S2t(27);
          O$F[93] = U3ndn.I8r(15, 4, 3, 75);
          O$F[9] = (O$F[8][r8no$[O$F[93]]] * O$F[5] - O$F[7]) * O$F[4];
          this['capFill']['drawCircle'](0, 0, O$F[9]);
        }
        if (this['shapeType'] == 'bx') {
          U3ndn.S2t(102);
          O$F[62] = U3ndn.I8r(10, 9, 7, 1, 2);
          O$F[27] = (O$F[8][r8no$[O$F[62]]] * O$F[5] - O$F[7]) * O$F[4];
          U3ndn.S2t(124);
          O$F[45] = U3ndn.E_K(11, 5, 41, 18, 1);
          O$F[67] = (O$F[8][r8no$[O$F[45]]] * O$F[5] - O$F[7]) * O$F[4];
          U3ndn.S2t(156);
          this['capFill']['drawRect'](U3ndn.I8r(2, O$F[27]), U3ndn.E_K(2, O$F[67]), O$F[27], O$F[67]);
        }
        if (this['shapeType'] == 'po') {
          O$F[52] = 0;
          O$F[50] = 0;
          for (O$F[59] = 0; O$F[59] < O$F[8]['v']['length']; O$F[59]++) {
            O$F[52] += O$F[8]['v'][O$F[59]][0];
            O$F[50] += O$F[8]['v'][O$F[59]][1];
          }
          O$F[52] /= O$F[8]['v']['length'];
          O$F[50] /= O$F[8]['v']['length'];
          if (O$F[8]['v']['length'] > 0) {
            U3ndn.z_y(175);
            O$F[81] = U3ndn.E_K(7, 18, 18, 6);
            U3ndn.S2t(6);
            O$F[49] = U3ndn.E_K(6, 56);
            O$F[68] = (O$F[52] * (O$F[81] - O$F[4]) + O$F[8][r8no$[O$F[49]]][0][0] * O$F[4]) * O$F[5];
            U3ndn.S2t(176);
            O$F[97] = U3ndn.I8r(11, 9, 3);
            U3ndn.z_y(10);
            O$F[71] = U3ndn.I8r(11850, 19, 11, 12, 992);
            U3ndn.z_y(1);
            O$F[44] = U3ndn.I8r(8, 7);
            O$F[25] = (O$F[50] * (O$F[97] - O$F[4]) + O$F[8][r8no$[O$F[71]]][0][O$F[44]] * O$F[4]) * O$F[5];
            this['capFill']['moveTo'](O$F[68], O$F[25]);
            for (O$F[13] = 1; O$F[13] < O$F[8]['v']['length']; O$F[13]++) {
              U3ndn.z_y(1);
              O$F[33] = U3ndn.I8r(10, 9);
              U3ndn.S2t(1);
              O$F[56] = U3ndn.E_K(806, 744);
              O$F[68] = (O$F[52] * (O$F[33] - O$F[4]) + O$F[8][r8no$[O$F[56]]][O$F[13]][0] * O$F[4]) * O$F[5];
              U3ndn.S2t(98);
              O$F[83] = U3ndn.I8r(18, 6, 13, 1, 343);
              U3ndn.S2t(62);
              O$F[64] = U3ndn.I8r(4, 1, 56, 2, 4);
              U3ndn.S2t(177);
              O$F[37] = U3ndn.I8r(125, 9, 16, 18);
              O$F[25] = (O$F[50] * (O$F[83] - O$F[4]) + O$F[8][r8no$[O$F[64]]][O$F[13]][O$F[37]] * O$F[4]) * O$F[5];
              this['capFill']['lineTo'](O$F[68], O$F[25]);
            }
            this['capFill']['closePath']();
          }
        }
        if (O$F[4] >= 1) {
          if (this['graphicTexture']) {
            this['graphicTexture']['tint'] = 10092441;
          } else if (this['graphic']) {
            this['graphic']['tint'] = 10092441;
          }
        }
        if (O$F[0][1]['sts']) {
          for (O$F[30] = 0; O$F[30] < O$F[0][1]['sts']['length']; O$F[30]++) {
            O$F[87] = O$F[0][1]['sts'][O$F[30]];
            if (O$F[87][0] == 'capIncrease' || O$F[87][0] == 'capDecrease' || O$F[87][0] == 'capComplete') {
              O$F[20] = O$F[87][2];
              if (O$F[0][3] != O$F[20]) {
                continue;
              }
              O$F[90] = 0;
              O$F[28] = 0;
              O$F[11] = this['graphic']['x'];
              if (this['graphic']['parent']) {
                O$F[11] += this['graphic']['parent']['x'];
              } else if (this['graphicTexture']['parent']) {
                O$F[11] += this['graphicTexture']['parent']['x'];
              }
              U3ndn.S2t(45);
              O$F[31] = U3ndn.E_K(2, 4, 5030, 720);
              U3ndn.z_y(72);
              O$F[74] = U3ndn.I8r(17, 20, 39);
              U3ndn.S2t(17);
              O$F[23] = U3ndn.E_K(3, 1504, 9);
              U3ndn.z_y(1);
              O$F[92] = U3ndn.E_K(9, 8);
              O$F[90] = O$F[11] / (O$F[31] / O$F[74] * this[r8no$[O$F[23]]]) - O$F[92];
              O$F[28] = O$F[87][1];
              O$F[90] = Math['max'](Math['min'](1, O$F[90]), - 1);
              O$F[90] *= A['panAmount'];
              O$F[28] = Math['min'](O$F[28], 35);
              if (this['isReplay']) {
                O$F[28] = Math['min'](O$F[28], 10);
                O$F[28] *= 0.5;
              }
              O$F[98] = O$F[87][0];
              V6D[67]['soundManager']['playSound'](O$F[98], O$F[90], O$F[28], undefined);
            }
          }
        }
      }
      destroy() {
        var z_0 = [
          arguments
        ];
        z_0[6] = r8no$;
        if (this['graphic']) {
          this['graphic']['destroy'](true);
        }
        if (this['shadow']) {
          this['shadow']['destroy'](true);
        }
        if (this['graphicTexture']) {
          this['graphicTexture']['destroy'](true);
        }
        U3ndn.w30();
        if (this['shadowTexture']) {
          this['shadowTexture']['destroy'](true);
        }
        if (this['capFill']) {
          this['capFill']['destroy'](true);
        }
        this['playerArray'] = null;
      }
    };
    V6D[24] = class H8J {
      constructor(d8S, l63, L4x, p8x, x46, B2a, f6Q, Z05) {
        var h9c = [
          arguments
        ];
        h9c[1] = r8no$;
        this['container'] = new PIXI['Container'];
        this['playerGraphic'] = null;
        this['outline'] = null;
        this['teamOutline'] = null;
        this['shadow'] = null;
        this['offScreenContainer'] = null;
        this['offScreenArrow'] = null;
        this['offScreenText'] = null;
        this['specialGraphic'] = null;
        this['specialRing'] = null;
        this['arrowAimContainer'] = null;
        this['arrowAimGraphic'] = null;
        this['destroyed'] = false;
        this['playerID'] = h9c[0][4];
        this['playerObject'] = h9c[0][3];
        this['scaleRatio'] = h9c[0][1];
        this['skinTextureObject'] = null;
        this['avatar'] = null;
        this['local'] = h9c[0][6];
        this['isReplay'] = h9c[0][7];
        U3ndn.z_y(135);
        h9c[7] = U3ndn.E_K(23, 2, 3, 4);
        U3ndn.S2t(19);
        h9c[2] = U3ndn.I8r(870, 13, 7, 2, 920);
        U3ndn.S2t(110);
        h9c[5] = U3ndn.E_K(3, 19, 4, 0, 19);
        this['radius'] = h9c[0][0][r8no$[h9c[7]]][r8no$[h9c[2]]] * h9c[5];
        this['svgOversample'] = 2;
        this['gameSettings'] = h9c[0][2];
        this['lastOffScreenBeep'] = 0;
        this['team'] = 1;
        h9c[8] = null;
        h9c[9] = '';
        if (this['gameSettings']['bal'][h9c[0][4]]) {
          h9c[6] = 1;
          U3ndn.S2t(13);
          h9c[4] = U3ndn.E_K(138, 24, 13);
          U3ndn.S2t(1);
          h9c[16] = U3ndn.I8r(199, 8);
          U3ndn.S2t(12);
          h9c[58] = U3ndn.E_K(1448, 1, 18, 86);
          h9c[3] = this[r8no$[h9c[4]]][r8no$[h9c[16]]][h9c[0][4]] / h9c[58];
          h9c[3] = Math['max'](Math['min'](h9c[3], 1), - 0.94);
          h9c[6] += h9c[3];
          this['radius'] *= h9c[6];
        }
        this['radius'] *= this['scaleRatio'];
        if (h9c[0][3]) {
          this['team'] = h9c[0][3]['team'];
          this['avatar'] = h9c[0][3]['avatar'];
          h9c[9] = h9c[0][3]['userName'];
        }
        this['build'](h9c[9], h9c[0][5]);
      }
      build(I$9, c8W) {
        var E4f = [
          arguments
        ];
        E4f[9] = r8no$;
        this['playerGraphic'] = new PIXI['Graphics'];
        this['playerGraphic']['beginFill'](4492031);
        this['playerGraphic']['drawCircle'](0, 0, this['radius']);
        this['container']['addChild'](this['playerGraphic']);
        if (this['avatar']) {
          E4f[4] = V6D[67]['avatarCache']['check'](this['avatar'], this['radius'], this['team']);
          if (E4f[4]) {
            this['drawTexture'](E4f[4]);
          } else {
            this['createSkinTexture'](E4f[0][1]);
          }
        }
        E4f[8] = 1.5;
        E4f[3] = 1.05;
        this['shadow'] = new PIXI['Graphics'];
        this['shadow']['lineStyle'](undefined);
        this['shadow']['beginFill'](0, 0.12);
        this['shadow']['drawCircle'](0, 0, this['radius'] * E4f[3]);
        U3ndn.z_y(1);
        E4f[98] = U3ndn.I8r(13644, 12128);
        this['shadow']['x'] = E4f[8] * this[r8no$[E4f[98]]];
        U3ndn.z_y(1);
        E4f[24] = U3ndn.E_K(1530, 14);
        this['shadow']['y'] = E4f[8] * this[r8no$[E4f[24]]];
        this['container']['addChildAt'](this['shadow'], 0);
        if (this['team'] >= 2 && this['team'] <= 5) {
          this['teamOutline'] = new PIXI['Graphics'];
          E4f[7] = 0;
          if (this['team'] == 2) {
            E4f[7] = 16007990;
          }
          if (this['team'] == 3) {
            E4f[7] = 2201331;
          }
          if (this['team'] == 4) {
            E4f[7] = 5025616;
          }
          if (this['team'] == 5) {
            E4f[7] = 16771899;
          }
          this['teamOutline']['lineStyle'](0.15 * this['radius'], E4f[7]);
          this['teamOutline']['drawCircle'](0, 0, this['radius']);
          this['container']['addChild'](this['teamOutline']);
        }
        this['outline'] = new PIXI['Graphics'];
        this['outline']['lineStyle'](2 * this['scaleRatio'], 16777215, 1);
        this['outline']['drawCircle'](0, 0, this['radius'] + 1 * this['scaleRatio']);
        this['container']['addChild'](this['outline']);
        E4f[1] = '';
        if (this['playerObject']) {
          E4f[1] = this['playerObject']['userName'];
        }
        E4f[5] = {
          fontFamily: 'futurept_medium',
          fontSize: 11 * this['scaleRatio'],
          fill: 16777215,
          align: 'center',
          dropShadow: true,
          dropShadowDistance: 3,
          dropShadowAlpha: 0.3
        };
        this['nameText'] = new PIXI['Text'](E4f[1], E4f[5]);
        this['nameText']['resolution'] = 2;
        this['container']['addChild'](this['nameText']);
        U3ndn.S2t(6);
        E4f[14] = U3ndn.I8r(1569, 19);
        U3ndn.z_y(77);
        U3ndn.w30();
        E4f[90] = U3ndn.E_K(16, 461, 7376, 465, 3);
        U3ndn.z_y(45);
        E4f[60] = U3ndn.E_K(14, 17, 236, 1);
        U3ndn.z_y(60);
        E4f[97] = U3ndn.I8r(7, 2, 10);
        this['nameText']['x'] = - this[r8no$[E4f[14]]][r8no$[E4f[90]]] / E4f[60] + E4f[97];
        U3ndn.z_y(17);
        E4f[74] = U3ndn.I8r(114, 63, 11);
        this['nameText']['y'] = 1.2 * this[r8no$[E4f[74]]];
        this['offScreenText'] = new PIXI['Text'](E4f[1], {
          fontFamily: 'futurept_medium',
          fontSize: 9 * this['scaleRatio'],
          fill: 16448250,
          align: 'center'
        });
        this['offScreenText']['resolution'] = 2;
        U3ndn.z_y(1);
        E4f[15] = U3ndn.E_K(1578, 4);
        U3ndn.z_y(1);
        E4f[44] = U3ndn.I8r(476, 8);
        U3ndn.z_y(41);
        E4f[75] = U3ndn.I8r(7, 9, 7, 7);
        this['offScreenText']['x'] = - this[r8no$[E4f[15]]][r8no$[E4f[44]]] / E4f[75];
        U3ndn.z_y(81);
        E4f[35] = U3ndn.I8r(4722, 1567, 3, 675);
        U3ndn.S2t(45);
        E4f[13] = U3ndn.E_K(15, 5, 17156, 235);
        U3ndn.S2t(6);
        E4f[91] = U3ndn.I8r(0, 2);
        this['offScreenText']['y'] = - this[r8no$[E4f[35]]][r8no$[E4f[13]]] / E4f[91];
        this['offScreenArrow'] = new PIXI['Graphics'];
        this['offScreenArrow']['beginFill'](38536);
        this['offScreenArrow']['drawPolygon']([new PIXI['Point'](0, 0),
        new PIXI['Point'](18, 10),
        new PIXI['Point'](0, 20),
        new PIXI['Point'](6, 10),
        new PIXI['Point'](0, 0)]);
        this['offScreenArrow']['pivot'] = new PIXI['Point'](9, 10);
        U3ndn.S2t(14);
        E4f[56] = U3ndn.E_K(2, 1498, 767);
        this['offScreenArrow']['scale']['x'] = this['offScreenArrow']['scale']['y'] = 0.7 * this[r8no$[E4f[56]]];
        this['offScreenContainer'] = new PIXI['Container'];
        this['offScreenContainer']['addChild'](this['offScreenArrow']);
        this['offScreenContainer']['addChild'](this['offScreenText']);
        if (this['gameSettings']['mo'] == 'sp' || this['gameSettings']['mo'] == 'ar' || this['gameSettings']['mo'] == 'ard') {
          this['specialGraphic'] = new PIXI['Graphics'];
          this['container']['addChildAt'](this['specialGraphic'], 0);
          this['specialRing'] = new PIXI['Graphics'];
          this['container']['addChild'](this['specialRing']);
        }
        if (this['gameSettings']['mo'] == 'ar' || this['gameSettings']['mo'] == 'ard') {
          U3ndn.S2t(1);
          E4f[62] = U3ndn.E_K(3760, 3572);
          U3ndn.z_y(56);
          E4f[80] = U3ndn.I8r(20, 6, 14, 12);
          U3ndn.S2t(60);
          E4f[63] = U3ndn.E_K(19, 3806, 4080);
          E4f[6] = this[r8no$[E4f[62]]] * E4f[80] / E4f[63];
          E4f[2] = new PIXI['resources']['SVGResource'](GameResources['bowSVG'], {
            scale: E4f[6],
            autoload: true
          });
          E4f[72] = PIXI['Texture']['from'](E4f[2]);
          E4f[19] = new PIXI['Sprite'](E4f[72]);
          E4f[19]['anchor']['y'] = 0.5;
          E4f[19]['anchor']['x'] = 0;
          U3ndn.z_y(60);
          E4f[65] = U3ndn.E_K(14, 3558, 3760);
          U3ndn.S2t(73);
          E4f[26] = U3ndn.E_K(5, 20, 2);
          E4f[19]['x'] = this[r8no$[E4f[65]]] / E4f[26];
          this['arrowAimContainer'] = new PIXI['Container'];
          this['arrowAimGraphic'] = new PIXI['Graphics'];
          this['arrowAimContainer']['addChild'](E4f[19]);
          this['arrowAimContainer']['addChild'](this['arrowAimGraphic']);
          this['container']['addChild'](this['arrowAimContainer']);
        }
      }
      createSkinTexture(U4p) {
        var J7K = [
          arguments
        ];
        J7K[3] = r8no$;
        U3ndn.Y$U();
        J7K[4] = this;
        this['skinTextureObject'] = {
          texture: null,
          inProgress: true,
          layerProgress: [
          ],
          svg: [
          ],
          totalSize: this['radius'] / 15
        };
        J7K[5] = this['avatar']['layers'];
        if (J7K[5]['length'] == 0) {
          this['checkAllSkinLayersLoaded'](J7K[0][0]);
        } else {
          J7K[1] = function (o_K) {
            var v_W = [
              arguments
            ];
            U3ndn.Y$U();
            v_W[4] = r8no$;
            v_W[3] = J7K[5][v_W[0][0]];
            if (!(v_W[3]['id'] >= 0) || !(v_W[3]['id'] <= 115) || Math['abs'](v_W[3]['x']) > 9999 || Math['abs'](v_W[3]['y']) > 9999 || v_W[3]['scale'] > 999 || v_W[3]['angle'] > 9999 || isNaN(v_W[3]['color']) || typeof v_W[3]['color'] != 'number' || typeof v_W[3]['flipX'] != 'boolean' || typeof v_W[3]['flipY'] != 'boolean') {
              return 'continue';
            }
            v_W[2] = v_W[3]['id']['toString']();
            if (v_W[3]['id'] < 10) {
              U3ndn.S2t(13);
              v_W[7] = U3ndn.I8r(236, 2383, 20);
              v_W[2] = U3ndn.j31(v_W[7]) + v_W[2];
            }
            if (v_W[3]['id'] < 100) {
              U3ndn.S2t(9);
              v_W[6] = U3ndn.E_K(18193, 197524, 11);
              v_W[2] = U3ndn.j31(v_W[6]) + v_W[2];
            }
            v_W[8] = null;
            try {
              U3ndn.z_y(107);
              v_W[1] = U3ndn.E_K(431, 9, 6, 2163);
              U3ndn.z_y(147);
              v_W[9] = U3ndn.I8r(5, 9, 11, 6324, 55479);
              U3ndn.S2t(155);
              v_W[69] = U3ndn.I8r(6, 6, 4380, 19, 13451);
              U3ndn.S2t(62);
              v_W[57] = U3ndn.E_K(7, 799, 1601, 20, 1591);
              v_W[5] = v_W[3][r8no$[v_W[1]]] * J7K[4][r8no$[v_W[9]]][r8no$[v_W[69]]] * J7K[4][r8no$[v_W[57]]];
              v_W[8] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][v_W[3]['id']], {
                scale: v_W[5],
                autoload: false
              });
            } catch (f_$) {
            }
            J7K[4]['skinTextureObject']['layerProgress'][v_W[0][0]] = false;
            J7K[4]['skinTextureObject']['svg'][v_W[0][0]] = v_W[8];
            v_W[8]['load']() ['then'](() =>{
              var l65 = r8no$;
              if (J7K[4][l65[1579]]) {
                return;
              }
              J7K[4][l65[1581]][l65[422]][v_W[0][0]] = true;
              J7K[4][l65[1590]](J7K[0][0]);
            });
          };
          for (J7K[6] = J7K[5]['length'] - 1; J7K[6] >= 0; J7K[6]--) {
            J7K[9] = J7K[1](J7K[6]);
            if (J7K[9] === 'continue') {
              continue;
            }
          }
        }
      }
      checkAllSkinLayersLoaded(n02) {
        var s94 = [
          arguments
        ];
        s94[6] = r8no$;
        s94[3] = true;
        for (s94[69] = 0; s94[69] < this['skinTextureObject']['layerProgress']['length']; s94[69]++) {
          if (this['skinTextureObject']['layerProgress'][s94[69]] == false) {
            s94[3] = false;
            break;
          }
        }
        if (!s94[3]) {
          return;
        }
        s94[2] = this['avatar']['layers'];
        s94[4] = new PIXI['Sprite'];
        s94[7] = new PIXI['Graphics'];
        s94[1] = this['teamify'](this['avatar']['bc'], this['team']);
        s94[7]['beginFill'](s94[1]);
        s94[7]['drawRect']( - 256, - 256, 512, 512);
        s94[7]['endFill']();
        s94[4]['addChild'](s94[7]);
        s94[9] = [
        ];
        for (s94[26] = this['skinTextureObject']['svg']['length'] - 1; s94[26] >= 0; s94[26]--) {
          if (!this['skinTextureObject']['svg'][s94[26]]) {
            continue;
          }
          s94[5] = PIXI['Texture']['from'](this['skinTextureObject']['svg'][s94[26]]);
          s94[8] = new PIXI['Sprite'](s94[5]);
          s94[9]['push'](s94[8]);
          s94[9]['push'](s94[5]);
          s94[28] = s94[2][s94[26]];
          s94[8]['tint'] = this['teamify'](s94[28]['color'], this['team']);
          s94[8]['anchor']['set'](0.5);
          s94[8]['angle'] = s94[28]['angle'];
          U3ndn.z_y(6);
          s94[87] = U3ndn.I8r(28, 11);
          U3ndn.z_y(60);
          s94[78] = U3ndn.E_K(12, 20541, 22134);
          U3ndn.z_y(60);
          s94[73] = U3ndn.E_K(2, 6130, 6570);
          s94[8]['x'] = s94[28][r8no$[s94[87]]] * this[r8no$[s94[78]]][r8no$[s94[73]]];
          U3ndn.S2t(15);
          s94[77] = U3ndn.E_K(7, 48, 15);
          U3ndn.S2t(13);
          s94[67] = U3ndn.E_K(144, 1455, 18);
          U3ndn.S2t(166);
          s94[92] = U3ndn.I8r(418, 10, 418, 428);
          s94[8]['y'] = s94[28][r8no$[s94[77]]] * this[r8no$[s94[67]]][r8no$[s94[92]]];
          s94[86] = s94[28]['flipX'] ? - 1 : 1;
          s94[58] = s94[28]['flipY'] ? - 1 : 1;
          U3ndn.z_y(85);
          s94[81] = U3ndn.E_K(28, 18, 1, 11);
          U3ndn.S2t(64);
          s94[55] = U3ndn.I8r(1581, 527, 1580, 1);
          s94[8]['scale']['x'] = s94[81] / this[r8no$[s94[55]]];
          U3ndn.S2t(105);
          s94[20] = U3ndn.E_K(10, 7, 10, 7);
          U3ndn.S2t(126);
          s94[34] = U3ndn.I8r(19, 5551, 396, 10, 20);
          s94[8]['scale']['y'] = s94[20] / this[r8no$[s94[34]]];
          s94[8]['scale']['x'] *= s94[86];
          s94[8]['scale']['y'] *= s94[58];
          s94[4]['addChild'](s94[8]);
        }
        U3ndn.S2t(123);
        s94[63] = U3ndn.E_K(1, 14, 10, 1569, 14095);
        U3ndn.z_y(1);
        s94[23] = U3ndn.E_K(455, 17);
        U3ndn.S2t(178);
        s94[84] = U3ndn.I8r(4, 4, 9, 16);
        s94[4]['x'] = this[r8no$[s94[63]]][r8no$[s94[23]]] * s94[84];
        U3ndn.S2t(90);
        s94[13] = U3ndn.I8r(11, 5, 6308, 7905);
        U3ndn.z_y(13);
        s94[91] = U3ndn.E_K(73, 383, 18);
        U3ndn.z_y(179);
        s94[88] = U3ndn.E_K(1, 6, 2, 4, 3);
        s94[4]['y'] = this[r8no$[s94[13]]][r8no$[s94[91]]] * s94[88];
        s94[31] = PIXI['RenderTexture']['create']({
          width: this['radius'] * 2,
          height: this['radius'] * 2
        });
        s94[0][0]['render'](s94[4], s94[31]);
        this['skinTextureObject']['texture'] = s94[31];
        V6D[67]['avatarCache']['store'](this['avatar'], this['radius'], this['team'], s94[31]);
        U3ndn.w30();
        this['drawTexture'](s94[31]);
        for (s94[56] = 0; s94[56] < s94[9]['length']; s94[56]++) {
          s94[9][s94[56]]['destroy'](true);
        }
        s94[9] = null;
        for (s94[37] = 0; s94[37] < this['skinTextureObject']['svg']['length']; s94[37]++) {
          if (this['skinTextureObject']['svg'][s94[37]]) {
            s94[53] = this['skinTextureObject']['svg'][s94[37]];
            s94[53]['destroy'](true);
            s94[53]['dispose'](true);
          }
        }
      }
      drawTexture(n0u) {
        var B03 = [
          arguments
        ];
        B03[3] = r8no$;
        this['playerGraphic']['clear']();
        this['playerGraphic']['beginTextureFill']({
          texture: B03[0][0],
          matrix: new PIXI['Matrix'](1, 0, 0, 1, - this['radius'], - this['radius'])
        });
        this['playerGraphic']['drawCircle'](0, 0, this['radius']);
        this['playerGraphic']['endFill']();
      }
      move(p72, I3F, c3u, N9P, z5d) {
        var h6D;
        var h9i;
        var Z1Q;
        var Y7T = r8no$;
        U3ndn.S2t(1);
        var F02 = U3ndn.I8r(645, 602);
        U3ndn.z_y(1);
        var l$$ = U3ndn.I8r(828, 782);
        U3ndn.S2t(6);
        var d$E = U3ndn.I8r(1509, 7);
        var F1D = I3F[Y7T[F02]][Y7T[l$$]] * this[Y7T[d$E]];
        U3ndn.z_y(100);
        var k79 = U3ndn.I8r(820, 80331, 14, 12, 7);
        U3ndn.S2t(107);
        U3ndn.w30();
        var H4s = U3ndn.E_K(85, 20, 19, 487);
        U3ndn.z_y(78);
        var T3E = U3ndn.I8r(10, 765, 14, 780);
        h6D = p72[Y7T[k79]][this[Y7T[H4s]]][Y7T[T3E]] * F1D;
        U3ndn.S2t(6);
        var E4$ = U3ndn.E_K(28, 13);
        U3ndn.S2t(15);
        var g2m = U3ndn.E_K(18, 8864, 7774);
        U3ndn.z_y(6);
        var c5K = U3ndn.I8r(20, 20);
        h9i = p72[Y7T[E4$]][this[Y7T[g2m]]][Y7T[c5K]] * F1D;
        U3ndn.z_y(6);
        var X1T = U3ndn.I8r(23, 18);
        U3ndn.S2t(100);
        var o8w = U3ndn.I8r(101, 19101, 10, 9, 20);
        U3ndn.S2t(1);
        var t5h = U3ndn.E_K(58, 19);
        var F_1 = I3F[Y7T[X1T]][this[Y7T[o8w]]][Y7T[t5h]] * F1D;
        U3ndn.z_y(65);
        var N6p = U3ndn.E_K(19, 60, 10, 16);
        U3ndn.S2t(1);
        var H0Y = U3ndn.E_K(14404, 13296);
        U3ndn.z_y(147);
        var I7z = U3ndn.E_K(9, 18, 2, 20, 518);
        var c_l = I3F[Y7T[N6p]][this[Y7T[H0Y]]][Y7T[I7z]] * F1D;
        Z1Q = p72[Y7T[41]][this[Y7T[1108]]][Y7T[64]];
        var F7v = I3F[Y7T[41]][this[Y7T[1108]]][Y7T[64]];
        if (I3F[Y7T[41]][this[Y7T[1108]]][Y7T[336]] == true) {
          h6D = F_1;
          h9i = c_l;
          Z1Q = F7v;
        }
        U3ndn.z_y(169);
        this[Y7T[543]][Y7T[39]] = U3ndn.I8r(c3u, 1, c3u, F_1, h6D);
        U3ndn.S2t(169);
        this[Y7T[543]][Y7T[40]] = U3ndn.E_K(c3u, 1, c3u, c_l, h9i);
        var Z97 = Math[Y7T[482]](Z1Q);
        var w8c = Math[Y7T[483]](Z1Q);
        var E3l = Math[Y7T[482]](F7v);
        var H_9 = Math[Y7T[483]](F7v);
        U3ndn.S2t(169);
        var X6L = U3ndn.I8r(c3u, 1, c3u, E3l, Z97);
        U3ndn.S2t(169);
        var e9C = U3ndn.I8r(c3u, 1, c3u, H_9, w8c);
        this[Y7T[543]][Y7T[508]] = Math[Y7T[600]](e9C, X6L);
        if (I3F[Y7T[41]][this[Y7T[1108]]][Y7T[184]] && this[Y7T[149]][Y7T[118]] != 'bs' && !(I3F[Y7T[41]][this[Y7T[1108]]][Y7T[189]] > 0)) {
          this[Y7T[588]][Y7T[476]] = Math[Y7T[192]](I3F[Y7T[41]][this[Y7T[1108]]][Y7T[119]] / 1000, 0.25);
        } else {
          this[Y7T[588]][Y7T[476]] = 0;
        }
        this[Y7T[1592]]();
        if (this[Y7T[149]][Y7T[118]] == 'sp') {
          this[Y7T[1593]](p72, I3F, c3u, N9P);
        }
        if (this[Y7T[149]][Y7T[118]] == 'ar' || this[Y7T[149]][Y7T[118]] == 'ard') {
          this[Y7T[1594]](p72, I3F, c3u, N9P);
        }
        this[Y7T[1595]](p72, I3F, c3u, z5d);
      }
      doSounds(H$O, O2D, A3d, h7I) {
        var Z_g = [
          arguments
        ];
        U3ndn.w30();
        Z_g[9] = r8no$;
        if (Z_g[0][1]['sts']) {
          for (Z_g[3] = 0; Z_g[3] < Z_g[0][1]['sts']['length']; Z_g[3]++) {
            Z_g[7] = Z_g[0][1]['sts'][Z_g[3]];
            if (Z_g[7][0] == 'discDisc' || Z_g[7][0] == 'platBounce') {
              Z_g[6] = Z_g[7][2];
              if (Z_g[6] != this['playerID']) {
                continue;
              }
              Z_g[1] = 0;
              Z_g[8] = 0;
              Z_g[5] = this['container']['x'];
              U3ndn.S2t(180);
              Z_g[2] = U3ndn.E_K(17, 5, 745, 728, 1871);
              U3ndn.S2t(73);
              Z_g[21] = U3ndn.I8r(2, 16, 6);
              U3ndn.S2t(78);
              Z_g[75] = U3ndn.E_K(4, 32, 17, 1527);
              U3ndn.z_y(13);
              Z_g[54] = U3ndn.E_K(0, 19, 18);
              Z_g[1] = Z_g[5] / (Z_g[2] / Z_g[21] * this[r8no$[Z_g[75]]]) - Z_g[54];
              U3ndn.S2t(181);
              Z_g[94] = U3ndn.E_K(8, 6, 18, 1, 5);
              Z_g[8] = Z_g[7][Z_g[94]] * 0.03;
              Z_g[1] = Math['max'](Math['min'](1, Z_g[1]), - 1);
              Z_g[1] *= A['panAmount'];
              Z_g[8] = Math['min'](Z_g[8], 35);
              if (this['isReplay']) {
                Z_g[8] = Math['min'](Z_g[8], 10);
                Z_g[8] *= 0.5;
              }
              Z_g[4] = Z_g[7][0];
              V6D[67]['soundManager']['playSound'](Z_g[4], Z_g[1], Z_g[8], Z_g[0][3]);
            }
          }
        }
      }
      doOffScreen() {
        var k8_ = [
          arguments
        ];
        k8_[8] = r8no$;
        U3ndn.S2t(6);
        k8_[36] = U3ndn.I8r(4, 14);
        U3ndn.S2t(6);
        k8_[61] = U3ndn.E_K(505, 1011);
        k8_[5] = k8_[36] * this[r8no$[k8_[61]]];
        U3ndn.z_y(120);
        k8_[60] = U3ndn.I8r(5, 3, 208, 18, 38);
        U3ndn.z_y(105);
        k8_[20] = U3ndn.E_K(17, 1532, 1529, 383);
        k8_[3] = k8_[60] * this[r8no$[k8_[20]]];
        if (this['container']['x'] < 0 - k8_[5] || this['container']['x'] > 730 * this['scaleRatio'] + k8_[5] || this['container']['y'] < 0 - k8_[3]) {
          U3ndn.S2t(1);
          k8_[18] = U3ndn.E_K(29, 9);
          U3ndn.S2t(7);
          k8_[50] = U3ndn.E_K(7580, 96933, 7, 13);
          U3ndn.S2t(9);
          k8_[22] = U3ndn.E_K(17314, 102310, 6);
          U3ndn.S2t(15);
          k8_[52] = U3ndn.I8r(15, 456, 3);
          U3ndn.z_y(57);
          k8_[77] = U3ndn.I8r(2, 4);
          k8_[2] = k8_[18] * this[r8no$[k8_[50]]] + this[r8no$[k8_[22]]][r8no$[k8_[52]]] / k8_[77];
          U3ndn.S2t(100);
          k8_[21] = U3ndn.I8r(18, 754, 7, 18, 6);
          U3ndn.S2t(18);
          k8_[43] = U3ndn.I8r(2, 2, 12, 1528);
          U3ndn.S2t(1);
          k8_[53] = U3ndn.E_K(1578, 4);
          U3ndn.z_y(26);
          k8_[57] = U3ndn.E_K(19, 466, 4381, 10);
          U3ndn.z_y(13);
          k8_[49] = U3ndn.I8r(0, 10, 8);
          k8_[9] = k8_[21] * this[r8no$[k8_[43]]] + this[r8no$[k8_[53]]][r8no$[k8_[57]]] / k8_[49];
          U3ndn.S2t(72);
          k8_[67] = U3ndn.E_K(10, 10, 30);
          U3ndn.z_y(6);
          k8_[34] = U3ndn.I8r(1507, 9);
          U3ndn.S2t(161);
          k8_[55] = U3ndn.E_K(1569, 10, 4, 11, 1);
          U3ndn.S2t(139);
          k8_[26] = U3ndn.I8r(77, 2, 467, 462, 3);
          U3ndn.S2t(6);
          k8_[95] = U3ndn.I8r(1, 1);
          k8_[7] = k8_[67] * this[r8no$[k8_[34]]] + this[r8no$[k8_[55]]][r8no$[k8_[26]]] / k8_[95];
          U3ndn.z_y(147);
          k8_[14] = U3ndn.I8r(10, 19, 6, 26, 788);
          U3ndn.S2t(6);
          k8_[58] = U3ndn.I8r(1508, 8);
          U3ndn.S2t(78);
          k8_[97] = U3ndn.I8r(8, 17, 16, 1567);
          U3ndn.z_y(17);
          k8_[47] = U3ndn.E_K(407, 47, 15);
          U3ndn.z_y(182);
          k8_[27] = U3ndn.E_K(11, 3, 11);
          k8_[1] = k8_[14] * this[r8no$[k8_[58]]] + this[r8no$[k8_[97]]][r8no$[k8_[47]]] / k8_[27];
          this['offScreenContainer']['visible'] = true;
          U3ndn.S2t(6);
          this['offScreenContainer']['x'] = Math['max'](U3ndn.I8r(0, k8_[2]), Math['min'](730 * this['scaleRatio'] - k8_[2], this['container']['x']));
          U3ndn.S2t(6);
          this['offScreenContainer']['y'] = Math['max'](U3ndn.I8r(0, k8_[9]), this['container']['y']);
          U3ndn.S2t(64);
          k8_[10] = U3ndn.I8r(1536, 512, 1546, 1);
          U3ndn.S2t(132);
          k8_[16] = U3ndn.I8r(1, 57, 19, 23, 23);
          U3ndn.S2t(13);
          k8_[69] = U3ndn.E_K(27, 524, 8);
          U3ndn.S2t(14);
          k8_[86] = U3ndn.E_K(13, 13, 38);
          k8_[6] = this[r8no$[k8_[10]]][r8no$[k8_[16]]] - this[r8no$[k8_[69]]][r8no$[k8_[86]]];
          U3ndn.z_y(130);
          k8_[32] = U3ndn.I8r(194, 19, 71, 1, 1546);
          U3ndn.S2t(1);
          k8_[65] = U3ndn.E_K(52, 12);
          U3ndn.z_y(178);
          k8_[93] = U3ndn.E_K(460, 91, 11, 3);
          U3ndn.z_y(7);
          k8_[56] = U3ndn.E_K(24, 240, 4, 14);
          k8_[4] = this[r8no$[k8_[32]]][r8no$[k8_[65]]] - this[r8no$[k8_[93]]][r8no$[k8_[56]]];
          k8_[11] = Math['atan2'](k8_[4], k8_[6]);
          U3ndn.S2t(1);
          k8_[48] = U3ndn.I8r(187, 5);
          this['offScreenArrow']['rotation'] = Math[r8no$[k8_[48]]] + k8_[11];
          U3ndn.z_y(17);
          k8_[19] = U3ndn.I8r(1366, 197, 10);
          U3ndn.S2t(45);
          k8_[84] = U3ndn.I8r(8, 4, 243332, 7620);
          this['offScreenArrow']['x'] = Math['cos'](this[r8no$[k8_[19]]][r8no$[k8_[84]]]) * k8_[7];
          U3ndn.z_y(12);
          k8_[75] = U3ndn.E_K(15664, 1, 11, 1567);
          U3ndn.S2t(93);
          k8_[59] = U3ndn.E_K(510, 1, 21, 4, 19);
          this['offScreenArrow']['y'] = Math['sin'](this[r8no$[k8_[75]]][r8no$[k8_[59]]]) * k8_[1];
          if (this['local']) {
            if (Date['now']() > this['lastOffScreenBeep'] + 500) {
              U3ndn.S2t(13);
              k8_[79] = U3ndn.E_K(258, 1301, 10);
              U3ndn.z_y(136);
              k8_[71] = U3ndn.I8r(15, 16, 34, 1, 231);
              U3ndn.S2t(183);
              k8_[73] = U3ndn.I8r(4918, 8, 17, 20, 743);
              U3ndn.S2t(6);
              k8_[64] = U3ndn.E_K(0, 2);
              U3ndn.z_y(64);
              k8_[87] = U3ndn.E_K(3032, 2, 758, 2);
              U3ndn.z_y(6);
              k8_[99] = U3ndn.E_K(0, 1);
              k8_[30] = this[r8no$[k8_[79]]][r8no$[k8_[71]]] / (k8_[73] / k8_[64] * this[r8no$[k8_[87]]]) - k8_[99];
              k8_[30] *= A['panAmount'];
              k8_[30] = Math['max'](Math['min'](1, k8_[30]), - 1);
              V6D[67]['soundManager']['playSound']('discOffScreen', k8_[30], 0.15, undefined);
              this['lastOffScreenBeep'] = Date['now']();
            }
          }
        } else {
          k8_[68] = 1840342152;
          k8_[76] = - 945002618;
          k8_[80] = 2;
          for (k8_[83] = 1; U3ndn.v9p(k8_[83].toString(), k8_[83].toString().length, 27551) !== k8_[68]; k8_[83]++) {
            this['offScreenContainer']['visible'] = false;
            k8_[80] += 2;
          }
          if (U3ndn.v9p(k8_[80].toString(), k8_[80].toString().length, 47807) !== k8_[76]) {
            this[r8no$[3467]]['color'] = true;
          }
        }
      }
      doGrapple(u_W, i$v, r3g, U_v) {
        var E25 = [
          arguments
        ];
        E25[4] = r8no$;
        E25[9] = 500;
        E25[6] = 4;
        E25[5] = 3;
        U3ndn.z_y(107);
        E25[12] = U3ndn.E_K(59, 20, 19, 1058);
        U3ndn.z_y(6);
        E25[96] = U3ndn.E_K(30, 16);
        U3ndn.S2t(60);
        E25[99] = U3ndn.I8r(17, 9079, 10612);
        E25[7] = E25[0][1][r8no$[E25[12]]][r8no$[E25[96]]] * this[r8no$[E25[99]]];
        this['specialGraphic']['clear']();
        if (E25[0][0]['discs'][this['playerID']]['swing'] && E25[0][1]['discs'][this['playerID']]['swing']) {
          E25[1] = E25[0][1]['discs'][this['playerID']]['swing']['b'];
          E25[8] = {
            x: E25[0][0]['discs'][this['playerID']]['swing']['p'][0],
            y: E25[0][0]['discs'][this['playerID']]['swing']['p'][1]
          };
          E25[3] = V6D[67]['rotatePoint']({
            x: 0,
            y: 0
          }, E25[8], E25[0][0]['physics']['bodies'][E25[1]]['a']);
          E25[2] = {
            x: E25[3]['x'] + E25[0][0]['physics']['bodies'][E25[1]]['p'][0],
            y: E25[3]['y'] + E25[0][0]['physics']['bodies'][E25[1]]['p'][1]
          };
          E25[70] = {
            x: E25[0][1]['discs'][this['playerID']]['swing']['p'][0],
            y: E25[0][1]['discs'][this['playerID']]['swing']['p'][1]
          };
          E25[23] = V6D[67]['rotatePoint']({
            x: 0,
            y: 0
          }, E25[70], E25[0][1]['physics']['bodies'][E25[1]]['a']);
          E25[61] = {
            x: E25[23]['x'] + E25[0][1]['physics']['bodies'][E25[1]]['p'][0],
            y: E25[23]['y'] + E25[0][1]['physics']['bodies'][E25[1]]['p'][1]
          };
          E25[37] = {
          };
          U3ndn.S2t(176);
          E25[90] = U3ndn.I8r(16, 7, 10);
          U3ndn.z_y(78);
          E25[35] = U3ndn.E_K(18, 40, 8, 53);
          U3ndn.S2t(9);
          E25[25] = U3ndn.E_K(351, 6981, 20);
          E25[37]['x'] = (E25[90] - E25[0][2]) * E25[2][r8no$[E25[35]]] + E25[0][2] * E25[61][r8no$[E25[25]]];
          U3ndn.S2t(85);
          E25[38] = U3ndn.I8r(29, 19, 1, 11);
          U3ndn.z_y(60);
          E25[42] = U3ndn.E_K(13, 467, 520);
          U3ndn.z_y(178);
          E25[94] = U3ndn.I8r(17, 20, 12, 15);
          E25[37]['y'] = (E25[38] - E25[0][2]) * E25[2][r8no$[E25[42]]] + E25[0][2] * E25[61][r8no$[E25[94]]];
          E25[95] = {
          };
          U3ndn.S2t(6);
          E25[40] = U3ndn.I8r(24, 15);
          U3ndn.S2t(15);
          E25[62] = U3ndn.I8r(2, 561, 20);
          U3ndn.S2t(97);
          E25[31] = U3ndn.I8r(39, 20, 7, 13);
          E25[95]['x'] = E25[37][r8no$[E25[40]]] * E25[7] - this[r8no$[E25[62]]][r8no$[E25[31]]];
          U3ndn.z_y(1);
          E25[81] = U3ndn.E_K(56, 16);
          U3ndn.z_y(14);
          E25[45] = U3ndn.E_K(49, 49, 542);
          U3ndn.S2t(125);
          E25[29] = U3ndn.E_K(14, 16, 904, 45, 1);
          E25[95]['y'] = E25[37][r8no$[E25[81]]] * E25[7] - this[r8no$[E25[45]]][r8no$[E25[29]]];
          this['specialGraphic']['lineStyle'](2 * this['scaleRatio'], 13421772, 0.5);
          this['specialGraphic']['lineTo'](E25[95]['x'], E25[95]['y']);
          this['specialGraphic']['drawCircle'](E25[95]['x'], E25[95]['y'], 0.2 * E25[7]);
        } else if (E25[0][0]['discs'][this['playerID']]['a2'] && E25[0][1]['discs'][this['playerID']]['a2'] && this['local']) {
          this['specialGraphic']['lineStyle'](2, 13421772, 0.5);
          U3ndn.z_y(4);
          this['specialGraphic']['drawCircle'](0, 0, U3ndn.E_K(E25[7], 10));
        }
        this['specialRing']['clear']();
        if (E25[0][0]['discs'][this['playerID']]['a1a'] < E25[9]) {
          this['specialRing']['lineStyle'](2 * this['scaleRatio'], 16724787, 0.5);
          this['specialRing']['drawCircle'](0, 0, this['radius'] + 1 * this['scaleRatio']);
          this['specialRing']['scale']['x'] = this['specialRing']['scale']['y'] = 1;
        }
        E25[14] = 4;
        this['specialRing']['lineStyle'](2 * E25[14] * this['scaleRatio'], 16777215, 0.3);
        U3ndn.S2t(9);
        E25[47] = U3ndn.E_K(34, 469, 15);
        U3ndn.S2t(60);
        E25[74] = U3ndn.I8r(10, 17718, 18836);
        U3ndn.z_y(127);
        E25[26] = U3ndn.I8r(113, 251080, 19, 9, 13);
        U3ndn.S2t(87);
        E25[33] = U3ndn.I8r(20, 19, 63, 12, 14101);
        E25[55] = (E25[0][0][r8no$[E25[47]]][this[r8no$[E25[74]]]][r8no$[E25[26]]] - E25[9]) / (E25[33] - E25[9]);
        if (E25[55] > 0) {
          this['specialRing']['arc'](0, 0, (this['radius'] + 1 * this['scaleRatio']) * E25[14], 0, 2 * Math['PI'] * E25[55]);
          U3ndn.S2t(0);
          this['specialRing']['scale']['x'] = this['specialRing']['scale']['y'] = U3ndn.E_K(1, E25[14]);
          U3ndn.z_y(184);
          E25[76] = U3ndn.E_K(2, 180, 11, 281);
          U3ndn.z_y(60);
          E25[16] = U3ndn.I8r(9, 9, 622);
          this['specialRing']['rotation'] = E25[76] * PIXI[r8no$[E25[16]]];
        }
      }
      doArrows(V3U, a0k, Y6D, B1v) {
        var M$5 = [
          arguments
        ];
        M$5[9] = r8no$;
        M$5[6] = 1;
        M$5[5] = 0.5;
        U3ndn.S2t(9);
        M$5[99] = U3ndn.I8r(55, 672, 13);
        U3ndn.z_y(6);
        M$5[33] = U3ndn.E_K(3, 43);
        U3ndn.S2t(6);
        U3ndn.w30();
        M$5[50] = U3ndn.I8r(758, 758);
        M$5[4] = M$5[0][1][r8no$[M$5[99]]][r8no$[M$5[33]]] * this[r8no$[M$5[50]]];
        if (M$5[0][1]['discs'][this['playerID']]['ds'] == 0) {
          M$5[2] = 4;
          this['specialRing']['clear']();
          this['specialRing']['lineStyle'](2 * this['scaleRatio'] * M$5[2], 16777215, 0.3);
          U3ndn.z_y(12);
          M$5[12] = U3ndn.E_K(492, 4, 13, 164);
          U3ndn.S2t(77);
          M$5[22] = U3ndn.E_K(19, 1104, 2622, 1020, 11);
          U3ndn.z_y(14);
          M$5[57] = U3ndn.I8r(238, 1904, 111);
          U3ndn.S2t(15);
          M$5[73] = U3ndn.I8r(20, 515, 35);
          U3ndn.S2t(168);
          M$5[34] = U3ndn.E_K(9, 11, 11, 48, 1017);
          U3ndn.S2t(1);
          M$5[79] = U3ndn.I8r(519, 19);
          M$5[7] = (M$5[0][0][r8no$[M$5[12]]][this[r8no$[M$5[22]]]][r8no$[M$5[57]]] - M$5[73]) / (M$5[34] - M$5[79]);
          if (M$5[7] > 0) {
            this['specialRing']['arc'](0, 0, (this['radius'] + 1 * this['scaleRatio']) * M$5[2], 0, 2 * Math['PI'] * M$5[7]);
            U3ndn.S2t(0);
            this['specialRing']['scale']['x'] = this['specialRing']['scale']['y'] = U3ndn.E_K(1, M$5[2]);
            U3ndn.S2t(57);
            M$5[97] = U3ndn.I8r(1350, 1260);
            U3ndn.S2t(14);
            M$5[36] = U3ndn.E_K(3, 60, 584);
            this['specialRing']['rotation'] = M$5[97] * PIXI[r8no$[M$5[36]]];
          }
          this['arrowAimContainer']['visible'] = false;
        } else {
          U3ndn.S2t(4);
          M$5[8] = U3ndn.I8r(M$5[4], M$5[6]);
          U3ndn.S2t(4);
          M$5[1] = U3ndn.E_K(M$5[4], M$5[5]);
          U3ndn.z_y(133);
          M$5[35] = U3ndn.E_K(9, 5, 17, 2422, 600);
          U3ndn.z_y(6);
          M$5[61] = U3ndn.I8r(30, 11);
          U3ndn.S2t(27);
          M$5[68] = U3ndn.I8r(18, 1092, 19, 53);
          U3ndn.z_y(74);
          M$5[26] = U3ndn.E_K(170, 194, 5, 167, 3);
          M$5[3] = PIXI[r8no$[M$5[35]]] * M$5[0][0][r8no$[M$5[61]]][this[r8no$[M$5[68]]]][r8no$[M$5[26]]];
          U3ndn.S2t(17);
          M$5[19] = U3ndn.I8r(550, 50, 4);
          U3ndn.S2t(1);
          M$5[94] = U3ndn.I8r(328, 287);
          U3ndn.z_y(6);
          M$5[25] = U3ndn.E_K(1099, 9);
          U3ndn.z_y(6);
          M$5[20] = U3ndn.I8r(181, 9);
          M$5[18] = PIXI[r8no$[M$5[19]]] * M$5[0][1][r8no$[M$5[94]]][this[r8no$[M$5[25]]]][r8no$[M$5[20]]];
          M$5[13] = Math['cos'](M$5[3]);
          M$5[69] = Math['sin'](M$5[3]);
          M$5[44] = Math['cos'](M$5[18]);
          M$5[41] = Math['sin'](M$5[18]);
          U3ndn.z_y(169);
          M$5[75] = U3ndn.E_K(M$5[0][2], 1, M$5[0][2], M$5[44], M$5[13]);
          U3ndn.S2t(169);
          M$5[39] = U3ndn.I8r(M$5[0][2], 1, M$5[0][2], M$5[41], M$5[69]);
          this['arrowAimContainer']['rotation'] = Math['atan2'](M$5[39], M$5[75]);
          this['arrowAimContainer']['visible'] = true;
          this['arrowAimGraphic']['clear']();
          U3ndn.z_y(15);
          M$5[90] = U3ndn.I8r(12, 35, 6);
          U3ndn.S2t(29);
          M$5[88] = U3ndn.E_K(470, 11, 58);
          U3ndn.S2t(185);
          M$5[17] = U3ndn.E_K(7, 4, 378, 1304, 9);
          U3ndn.S2t(186);
          M$5[51] = U3ndn.I8r(4, 6, 8, 1);
          U3ndn.z_y(9);
          M$5[55] = U3ndn.E_K(208, 3140, 16);
          M$5[46] = Math['sqrt'](M$5[0][0][r8no$[M$5[90]]][this[r8no$[M$5[88]]]][r8no$[M$5[17]]]) / M$5[51] * this[r8no$[M$5[55]]];
          M$5[38] = this['radius'];
          M$5[93] = 13840175;
          if (this['gameSettings']['tea'] == false) {
            if (this['playerObject'] && this['playerObject']['avatar']) {
              M$5[93] = this['playerObject']['avatar']['bc'];
            }
          } else {
            if (this['team'] == 2) {
              M$5[93] = 16007990;
            }
            if (this['team'] == 3) {
              M$5[93] = 2201331;
            }
            if (this['team'] == 4) {
              M$5[93] = 5025616;
            }
            if (this['team'] == 5) {
              M$5[93] = 16771899;
            }
          }
          this['arrowAimGraphic']['beginFill'](M$5[93]);
          this['arrowAimGraphic']['lineStyle'](undefined);
          if (this['gameSettings']['mo'] == 'ard') {
            this['arrowAimGraphic']['lineStyle']({
              width: 1,
              color: 0
            });
          }
          U3ndn.z_y(187);
          this['arrowAimGraphic']['drawRect'](U3ndn.I8r(M$5[8], 2, M$5[38], M$5[46]), U3ndn.E_K(2, M$5[1], U3ndn.z_y(156)), M$5[8], M$5[1]);
          this['arrowAimGraphic']['lineStyle'](1, 16777215, 0.3);
          this['arrowAimGraphic']['moveTo'](0.6 * this['radius'], - 1.6 * this['radius']);
          U3ndn.z_y(187);
          this['arrowAimGraphic']['lineTo'](U3ndn.I8r(M$5[8], 2, M$5[38], M$5[46]), U3ndn.E_K(2, M$5[1], U3ndn.z_y(156)));
          this['arrowAimGraphic']['moveTo'](0.6 * this['radius'], 1.6 * this['radius']);
          U3ndn.z_y(187);
          this['arrowAimGraphic']['lineTo'](U3ndn.E_K(M$5[8], 2, M$5[38], M$5[46]), U3ndn.I8r(M$5[1], 2, U3ndn.z_y(0)));
          this['arrowAimGraphic']['lineStyle'](1, 16777215, 0.3);
          this['arrowAimGraphic']['moveTo'](0, 0);
          U3ndn.z_y(4);
          this['arrowAimGraphic']['lineTo'](U3ndn.I8r(M$5[4], 5), 0);
        }
      }
      HSLToHex(M8H, C6$, i9C) {
        var N13 = [
          arguments
        ];
        N13[4] = r8no$;
        N13[0][1] /= 100;
        N13[0][2] /= 100;
        U3ndn.z_y(54);
        N13[7] = U3ndn.E_K(46, 4, 3, 14, 0);
        U3ndn.z_y(57);
        N13[9] = U3ndn.I8r(17, 19);
        U3ndn.z_y(12);
        N13[97] = U3ndn.E_K(17, 5, 15, 6);
        N13[6] = (N13[7] - Math['abs'](N13[9] * N13[0][2] - N13[97])) * N13[0][1];
        U3ndn.z_y(1);
        N13[87] = U3ndn.E_K(4, 3);
        U3ndn.z_y(27);
        N13[60] = U3ndn.E_K(19, 6, 4, 77);
        U3ndn.z_y(15);
        N13[36] = U3ndn.I8r(3, 0, 1);
        U3ndn.S2t(15);
        N13[86] = U3ndn.I8r(16, 0, 15);
        N13[3] = N13[6] * (N13[87] - Math['abs'](N13[0][0] / N13[60] % N13[36] - N13[86]));
        U3ndn.z_y(143);
        N13[8] = U3ndn.I8r(2, N13[6], N13[0][2]);
        N13[2] = 0;
        N13[1] = 0;
        U3ndn.w30();
        N13[5] = 0;
        if (0 <= N13[0][0] && N13[0][0] < 60) {
          N13[2] = N13[6];
          N13[1] = N13[3];
          N13[5] = 0;
        } else if (60 <= N13[0][0] && N13[0][0] < 120) {
          N13[2] = N13[3];
          N13[1] = N13[6];
          N13[5] = 0;
        } else if (120 <= N13[0][0] && N13[0][0] < 180) {
          N13[2] = 0;
          N13[1] = N13[6];
          N13[5] = N13[3];
        } else if (180 <= N13[0][0] && N13[0][0] < 240) {
          N13[2] = 0;
          N13[1] = N13[3];
          N13[5] = N13[6];
        } else if (240 <= N13[0][0] && N13[0][0] < 300) {
          N13[2] = N13[3];
          N13[1] = 0;
          N13[5] = N13[6];
        } else if (300 <= N13[0][0] && N13[0][0] < 360) {
          N13[2] = N13[6];
          N13[1] = 0;
          N13[5] = N13[3];
        }
        U3ndn.z_y(144);
        N13[2] = Math['round'](U3ndn.E_K(N13[2], 255, N13[8]));
        U3ndn.z_y(144);
        N13[1] = Math['round'](U3ndn.E_K(N13[1], 255, N13[8]));
        U3ndn.S2t(144);
        N13[5] = Math['round'](U3ndn.I8r(N13[5], 255, N13[8]));
        N13[2] *= 65536;
        N13[1] *= 256;
        N13[5] *= 1;
        U3ndn.S2t(17);
        return U3ndn.E_K(N13[5], N13[2], N13[1]);
      }
      hexToHSL(k1a) {
        var D7$ = [
          arguments
        ];
        D7$[3] = r8no$;
        D7$[1] = 0;
        D7$[7] = 0;
        D7$[5] = 0;
        if (D7$[0][0]['length'] == 4) {
          U3ndn.S2t(1);
          D7$[12] = U3ndn.E_K(16549, 15678);
          U3ndn.S2t(175);
          D7$[65] = U3ndn.I8r(13, 18, 14, 16);
          U3ndn.z_y(1);
          D7$[45] = U3ndn.E_K(13, 12);
          D7$[1] = U3ndn.j31(D7$[12]) + D7$[0][0][D7$[65]] + D7$[0][0][D7$[45]];
          U3ndn.z_y(45);
          D7$[37] = U3ndn.E_K(9, 17, 1198496, 7839);
          U3ndn.S2t(41);
          D7$[87] = U3ndn.I8r(15, 13, 30, 34);
          U3ndn.S2t(79);
          D7$[58] = U3ndn.E_K(3, 11, 3);
          D7$[7] = U3ndn.j31(D7$[37]) + D7$[0][0][D7$[87]] + D7$[0][0][D7$[58]];
          U3ndn.z_y(41);
          D7$[97] = U3ndn.E_K(9, 13, 3488, 4355);
          U3ndn.S2t(97);
          D7$[18] = U3ndn.I8r(14, 16, 0, 5);
          U3ndn.z_y(85);
          D7$[35] = U3ndn.E_K(3, 6, 6, 5);
          D7$[5] = U3ndn.j31(D7$[97]) + D7$[0][0][D7$[18]] + D7$[0][0][D7$[35]];
        } else if (D7$[0][0]['length'] == 7) {
          U3ndn.S2t(6);
          D7$[14] = U3ndn.E_K(867, 4);
          U3ndn.S2t(20);
          D7$[46] = U3ndn.E_K(21, 10, 1, 1, 2);
          U3ndn.S2t(107);
          D7$[95] = U3ndn.E_K(1, 5, 7, 0);
          D7$[1] = U3ndn.j31(D7$[14]) + D7$[0][0][D7$[46]] + D7$[0][0][D7$[95]];
          U3ndn.z_y(6);
          D7$[55] = U3ndn.E_K(867, 4);
          U3ndn.z_y(142);
          D7$[79] = U3ndn.I8r(9, 42, 3, 12);
          U3ndn.S2t(154);
          D7$[13] = U3ndn.E_K(15, 17, 20, 3, 1696);
          D7$[7] = U3ndn.j31(D7$[55]) + D7$[0][0][D7$[79]] + D7$[0][0][D7$[13]];
          U3ndn.z_y(40);
          D7$[50] = U3ndn.E_K(2, 183, 17, 124);
          U3ndn.S2t(20);
          D7$[64] = U3ndn.I8r(19, 14, 14, 1, 14);
          U3ndn.S2t(6);
          D7$[34] = U3ndn.E_K(1, 5);
          D7$[5] = U3ndn.j31(D7$[50]) + D7$[0][0][D7$[64]] + D7$[0][0][D7$[34]];
        }
        D7$[1] /= 255;
        D7$[7] /= 255;
        D7$[5] /= 255;
        D7$[2] = Math['min'](D7$[1], D7$[7], D7$[5]);
        D7$[4] = Math['max'](D7$[1], D7$[7], D7$[5]);
        U3ndn.S2t(1);
        D7$[6] = U3ndn.E_K(D7$[4], D7$[2]);
        D7$[8] = 0;
        D7$[9] = 0;
        D7$[44] = 0;
        if (D7$[6] == 0) {
          D7$[8] = 0;
        } else if (D7$[4] == D7$[1]) {
          U3ndn.S2t(150);
          D7$[8] = U3ndn.I8r(D7$[5], D7$[6], 6, D7$[7]);
        } else if (D7$[4] == D7$[7]) {
          U3ndn.z_y(28);
          D7$[8] = U3ndn.I8r(2, D7$[1], D7$[6], D7$[5]);
        } else {
          U3ndn.z_y(28);
          D7$[8] = U3ndn.I8r(4, D7$[7], D7$[6], D7$[1]);
        }
        U3ndn.S2t(4);
        D7$[8] = Math['round'](U3ndn.I8r(60, D7$[8]));
        if (D7$[8] < 0) {
          D7$[8] += 360;
        }
        U3ndn.z_y(151);
        D7$[44] = U3ndn.E_K(D7$[4], D7$[2], 2);
        D7$[9] = D7$[6] == 0 ? 0 : D7$[6] / (1 - Math['abs'](2 * D7$[44] - 1));
        D7$[9] = + (D7$[9] * 100) ['toFixed'](1);
        D7$[44] = + (D7$[44] * 100) ['toFixed'](1);
        return {
          h: D7$[8],
          s: D7$[9],
          l: D7$[44]
        };
      }
      hueify(x88, a8o) {
        var d5c = [
          arguments
        ];
        U3ndn.Y$U();
        d5c[7] = r8no$;
        U3ndn.z_y(14);
        d5c[4] = U3ndn.I8r(79, 237, 2604);
        U3ndn.S2t(60);
        d5c[5] = U3ndn.I8r(4, 3, 13);
        U3ndn.z_y(1);
        d5c[1] = U3ndn.I8r(25990, 23391);
        d5c[0][0] = U3ndn.j31(d5c[4]) + d5c[0][0]['toString'](16) ['padStart'](d5c[5], U3ndn.j31(d5c[1]));
        d5c[8] = this['hexToHSL'](d5c[0][0]);
        d5c[8]['h'] = d5c[0][1];
        d5c[9] = this['HSLToHex'](d5c[8]['h'], d5c[8]['s'], d5c[8]['l']);
        return d5c[9];
      }
      teamify(y8E, J6j) {
        var Y8_ = [
          arguments
        ];
        Y8_[1] = r8no$;
        if (Y8_[0][1] == 2) {
          return this['hueify'](Y8_[0][0], 4);
        }
        if (Y8_[0][1] == 3) {
          return this['hueify'](Y8_[0][0], 207);
        }
        U3ndn.Y$U();
        if (Y8_[0][1] == 4) {
          return this['hueify'](Y8_[0][0], 122);
        }
        if (Y8_[0][1] == 5) {
          return this['hueify'](Y8_[0][0], 54);
        }
        return Y8_[0][0];
      }
      destroy() {
        var d8O = [
          arguments
        ];
        d8O[1] = r8no$;
        if (this['container']) {
          this['container']['destroy']({
            children: false,
            texture: true,
            baseTexture: true
          });
        }
        if (this['playerGraphic']) {
          this['playerGraphic']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['outline']) {
          this['outline']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['teamOutline']) {
          this['teamOutline']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['shadow']) {
          this['shadow']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['specialGraphic']) {
          this['specialGraphic']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['specialRing']) {
          this['specialRing']['destroy']({
            children: true,
            texture: true,
            baseTexture: true
          });
        }
        if (this['arrowAimContainer']) {
          this['arrowAimContainer']['destroy']({
            children: true,
            texture: false,
            baseTexture: false
          });
        }
        if (this['offScreenContainer']) {
          this['offScreenContainer']['destroy'](true);
        }
        this['container'] = null;
        U3ndn.w30();
        this['playerGraphic'] = null;
        this['outline'] = null;
        this['shadow'] = null;
        this['offScreen'] = null;
        this['gameSettings'] = null;
        this['destroyed'] = true;
      }
    };
    V6D[75] = class D2A {
      constructor() {
        var D34 = [
          arguments
        ];
        D34[3] = r8no$;
        this['CACHE_SIZE'] = 20;
        this['avatars'] = [
        ];
      }
      check(m7a, O8X, J5f) {
        var v2M = [
          arguments
        ];
        v2M[6] = r8no$;
        U3ndn.Y$U();
        for (v2M[5] = 0; v2M[5] < this['avatars']['length']; v2M[5]++) {
          if (this['avatars'][v2M[5]]['radius'] == v2M[0][1] && this['avatars'][v2M[5]]['team'] == v2M[0][2] && this['compare'](this['avatars'][v2M[5]]['avatar'], v2M[0][0])) {
            this['bump'](v2M[5]);
            return this['avatars'][0]['texture'];
          }
        }
        return false;
      }
      compare(Z28, K4o) {
        var k5h = [
          arguments
        ];
        k5h[6] = r8no$;
        if (k5h[0][0]['bc'] != k5h[0][1]['bc']) {
          return false;
        }
        if (k5h[0][0]['layers']['length'] != k5h[0][1]['layers']['length']) {
          return false;
        }
        U3ndn.Y$U();
        for (k5h[7] = 0; k5h[7] < k5h[0][0]['layers']['length']; k5h[7]++) {
          if (k5h[0][0]['layers'][k5h[7]]['id'] != k5h[0][1]['layers'][k5h[7]]['id']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['color'] != k5h[0][1]['layers'][k5h[7]]['color']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['scale'] != k5h[0][1]['layers'][k5h[7]]['scale']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['x'] != k5h[0][1]['layers'][k5h[7]]['x']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['y'] != k5h[0][1]['layers'][k5h[7]]['y']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['angle'] != k5h[0][1]['layers'][k5h[7]]['angle']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['flipX'] != k5h[0][1]['layers'][k5h[7]]['flipX']) {
            return false;
          }
          if (k5h[0][0]['layers'][k5h[7]]['flipY'] != k5h[0][1]['layers'][k5h[7]]['flipY']) {
            return false;
          }
        }
        return true;
      }
      bump(S6f) {
        var a7d = [
          arguments
        ];
        a7d[4] = r8no$;
        a7d[3] = this['avatars']['splice'](a7d[0][0], 1) [0];
        this['avatars']['unshift'](a7d[3]);
      }
      store(V74, Y6L, b5e, T0q) {
        var N7v = [
          arguments
        ];
        N7v[7] = r8no$;
        this['avatars']['unshift']({
          avatar: N7v[0][0],
          radius: N7v[0][1],
          team: N7v[0][2],
          texture: N7v[0][3]
        });
        U3ndn.Y$U();
        if (this['avatars']['length'] > this['CACHE_SIZE']) {
          this['avatars']['pop']();
        }
      }
      clear() {
        var L0i = [
          arguments
        ];
        L0i[8] = r8no$;
        for (L0i[3] = 0; L0i[3] < this['avatars']['length']; L0i[3]++) {
          this['avatars'][L0i[3]]['avatar'] = null;
          this['avatars'][L0i[3]]['texture']['destroy'](true);
        }
        this['avatars'] = [
        ];
      }
    };
    V6D[37] = class v0i {
      constructor(F4n, w2W, q92) {
        var N22 = [
          arguments
        ];
        N22[5] = r8no$;
        this['container'] = new PIXI['Container'];
        this['playerDeathTimers'] = [
        ];
        this['playerBounceTimers'] = [
        ];
        this['bounceTimers'] = [
        ];
        this['lastAnimationTime'] = - 1;
        this['playerArray'] = N22[0][0];
        this['particles'] = [
        ];
        this['scaleRatio'] = N22[0][1];
        N22[6] = new PIXI['Graphics'];
        N22[6]['beginFill'](16777215);
        U3ndn.Y$U();
        N22[6]['drawRect'](0, 0, 20, 20);
        this['particleTexture'] = N22[0][2]['generateTexture'](N22[6]);
      }
      render(Q5q, D5l, e23, n$1) {
        var I6P;
        var l$N;
        var I86;
        var i77;
        var v5Y;
        var f8Y;
        var L8W;
        var o7t;
        var z3d;
        var y$3;
        var V_L;
        var F6$;
        var Q3e;
        var g5x;
        var U99;
        var D5L;
        var B9R;
        var u9T;
        var M5L;
        var K8q;
        var K2u;
        var T6Y;
        var p0U;
        var d$4;
        var m9N;
        var Z4S;
        var Z60;
        var m$4;
        var J$6;
        var W2w;
        var K_u;
        var T85;
        var W4E;
        var x25;
        var d9Y;
        var q5b;
        var i9M;
        var x1r;
        var d3g;
        var x5Y;
        var U_X;
        var q9i;
        var I1Z;
        var K0r = r8no$;
        U3ndn.z_y(42);
        var e$Q = U3ndn.E_K(174, 8, 25, 17);
        U3ndn.S2t(1);
        var S_2 = U3ndn.I8r(828, 782);
        U3ndn.S2t(1);
        var h9y = U3ndn.I8r(16676, 15160);
        var T1R = D5l[K0r[e$Q]][K0r[S_2]] * this[K0r[h9y]];
        this[K0r[1601]][K0r[635]]((g3Q, u6H) =>{
          U3ndn.Y$U();
          g3Q--;
          if (g3Q <= 0) {
            g3Q = null;
          }
        });
        this[K0r[1602]][K0r[635]]((o$3, g3A) =>{
          var u21 = r8no$;
          o$3[u21[770]]--;
          if (o$3[u21[770]] <= 0) {
            this[u21[1602]][u21[65]](g3A, 1);
          }
        });
        for (var S3l = 0; S3l < D5l[K0r[42]][K0r[47]]; S3l++) {
          I6P = D5l[K0r[42]][S3l][K0r[100]];
          if (D5l[K0r[42]][S3l][K0r[116]] < 10 && !this[K0r[1601]][I6P]) {
            this[K0r[1601]][I6P] = 90;
            U3ndn.S2t(1);
            var s5Q = U3ndn.I8r(760, 720);
            U3ndn.z_y(45);
            var T2L = U3ndn.E_K(20, 18, 68938, 192);
            U3ndn.z_y(27);
            var W3_ = U3ndn.I8r(7, 9, 4, 182);
            l$N = s5Q * (Math[K0r[T2L]] / W3_);
            I86 = 0.9;
            i77 = 0.8;
            v5Y = 3;
            f8Y = 3;
            L8W = 18;
            if (V6D[67][K0r[371]][K0r[452]] == 2) {
              L8W = 15;
            } else if (V6D[67][K0r[371]][K0r[452]] == 1) {
              L8W = 12;
            }
            o7t = 1;
            z3d = [
            ];
            if (this[K0r[848]][I6P] && this[K0r[848]][I6P][K0r[413]]) {
              y$3 = this[K0r[848]][I6P][K0r[413]];
              V_L = 1;
              if (D5l[K0r[121]][I6P]) {
                V_L = D5l[K0r[121]][I6P][K0r[115]];
              }
              z3d[K0r[101]](V6D[67][K0r[1031]](y$3[K0r[429]], V_L));
              z3d[K0r[101]](V6D[67][K0r[1031]](y$3[K0r[429]], V_L));
              for (var z2d = 0; z2d < y$3[K0r[412]][K0r[47]]; z2d++) {
                if (y$3[K0r[412]][z2d]) {
                  z3d[K0r[101]](V6D[67][K0r[1031]](y$3[K0r[412]][z2d][K0r[415]], V_L));
                }
              }
            }
            for (var C4d = 0; C4d < L8W; C4d++) {
              F6$ = 15794089;
              if (z3d[C4d % z3d[K0r[47]]] !== undefined) {
                U3ndn.S2t(17);
                var K4m = U3ndn.E_K(41, 2, 4);
                F6$ = z3d[C4d % z3d[K0r[K4m]]];
              }
              U3ndn.S2t(28);
              var F0z = U3ndn.I8r(1507, 8, 9, 89);
              Q3e = (f8Y + Math[K0r[545]]() * v5Y) * this[K0r[F0z]];
              U3ndn.z_y(185);
              var F2m = U3ndn.E_K(13, 18, 19, 116, 10);
              U3ndn.S2t(7);
              var f4v = U3ndn.I8r(201, 1908, 11, 11);
              g5x = Math[K0r[545]]() * F2m * Math[K0r[f4v]];
              U99 = Math[K0r[545]]() * o7t;
              D5L = new PIXI[K0r[426]](this[K0r[1606]]);
              D5L[K0r[437]][K0r[39]] = 0.5;
              D5L[K0r[437]][K0r[40]] = 0.5;
              D5L[K0r[435]] = F6$;
              D5L[K0r[468]] = Q3e;
              D5L[K0r[469]] = Q3e;
              this[K0r[543]][K0r[432]](D5L);
              U3ndn.z_y(178);
              var R9c = U3ndn.I8r(28, 23, 14, 5);
              U3ndn.z_y(6);
              var a_e = U3ndn.I8r(4, 35);
              D5L[K0r[39]] = (D5l[K0r[R9c]][S3l][K0r[a_e]] + Math[K0r[482]](g5x) * U99) * T1R;
              U3ndn.z_y(9);
              var g0o = U3ndn.E_K(53, 594, 12);
              U3ndn.z_y(9);
              var b9J = U3ndn.I8r(440, 5240, 12);
              D5L[K0r[40]] = (D5l[K0r[g0o]][S3l][K0r[b9J]] + Math[K0r[483]](g5x) * U99) * T1R;
              U3ndn.z_y(15);
              var N_T = U3ndn.E_K(16, 7, 21);
              B9R = - l$N / N_T + Math[K0r[545]]() * l$N;
              u9T = Math[K0r[600]](D5l[K0r[42]][S3l][K0r[109]], D5l[K0r[42]][S3l][K0r[108]]);
              U3ndn.z_y(6);
              M5L = U3ndn.I8r(u9T, B9R);
              K8q = Math[K0r[606]](D5l[K0r[42]][S3l][K0r[109]] * D5l[K0r[42]][S3l][K0r[109]] + D5l[K0r[42]][S3l][K0r[108]] * D5l[K0r[42]][S3l][K0r[108]]);
              K8q *= i77;
              K8q = Math[K0r[193]](K8q, 35);
              K2u = Math[K0r[545]]() * I86 * K8q;
              K8q -= K2u;
              U3ndn.z_y(6);
              var Z7g = U3ndn.E_K(0, 4);
              T6Y = Math[K0r[482]](M5L) * K8q / Z7g;
              U3ndn.S2t(79);
              var z36 = U3ndn.E_K(12, 76, 6);
              p0U = Math[K0r[483]](M5L) * K8q / z36;
              d$4 = 1;
              this[K0r[1605]][K0r[101]]({
                graphics: D5L,
                xv: T6Y,
                yv: p0U,
                alpha: d$4,
                shrinkPerFrame: 0.016,
                gravity: 0.04
              });
            }
            U3ndn.z_y(27);
            var K49 = U3ndn.E_K(17, 21, 20, 19);
            m9N = 'discDeath' + Math[K0r[117]](Math[K0r[545]]() * K49);
            U3ndn.S2t(15);
            var K6Q = U3ndn.I8r(16, 84, 58);
            U3ndn.S2t(188);
            var i9V = U3ndn.E_K(1, 12, 24, 14, 11);
            U3ndn.z_y(12);
            var l9r = U3ndn.E_K(2254, 1, 4, 746);
            U3ndn.S2t(106);
            var P_X = U3ndn.E_K(10, 10, 9, 5, 4);
            U3ndn.z_y(15);
            var q84 = U3ndn.I8r(12, 15160, 13656);
            U3ndn.z_y(84);
            var E7Q = U3ndn.E_K(2, 17, 2, 7, 1);
            Z4S = D5l[K0r[K6Q]][S3l][K0r[i9V]] * T1R / (l9r / P_X * this[K0r[q84]]) - E7Q;
            Z4S = Math[K0r[192]](Math[K0r[193]](1, Z4S), - 1);
            Z4S *= A[K0r[394]];
            Z60 = 0.4;
            if (n$1) {
              Z60 *= 0.5;
            }
            V6D[67][K0r[1570]][K0r[399]](m9N, Z4S, Z60, undefined);
          }
        }
        U3ndn.Y$U();
        if (D5l[K0r[324]]) {
          a: for (var r9d = 0; r9d < D5l[K0r[324]][K0r[47]]; r9d++) {
            m$4 = D5l[K0r[324]][r9d];
            if (m$4[0] == 'platBounce') {
              for (var M1t = 0; M1t < this[K0r[1602]][K0r[47]]; M1t++) {
                if (this[K0r[1602]][M1t][K0r[49]] == m$4[2] && this[K0r[1602]][M1t][K0r[116]] == m$4[3]) {
                  continue a;
                }
              }
              this[K0r[1602]][K0r[101]]({
                p: m$4[2],
                f: m$4[3],
                time: 10
              });
              J$6 = m$4[1];
              W2w = 170;
              J$6 /= 5;
              J$6 = Math[K0r[193]](45, J$6);
              if (!D5l[K0r[43]][K0r[55]][m$4[3]]) {
                continue;
              }
              K_u = D5l[K0r[43]][K0r[55]][m$4[3]][K0r[116]];
              T85 = 4;
              if (V6D[67][K0r[371]][K0r[452]] == 2) {
                T85 = 3;
              } else if (V6D[67][K0r[371]][K0r[452]] == 1) {
                T85 = 2;
              }
              for (var W7v = 0; W7v < T85; W7v++) {
                U3ndn.z_y(13);
                var x08 = U3ndn.I8r(0, 14, 13);
                U3ndn.z_y(86);
                var H4Z = U3ndn.E_K(17, 1516, 17, 6064, 1431);
                W4E = (3.5 + J$6 * 0.1) * (x08 - Math[K0r[545]]() * 0.4) * this[K0r[H4Z]];
                x25 = new PIXI[K0r[426]](this[K0r[1606]]);
                x25[K0r[437]][K0r[39]] = 0.5;
                x25[K0r[437]][K0r[40]] = 0.5;
                x25[K0r[435]] = K_u;
                x25[K0r[468]] = W4E;
                x25[K0r[469]] = W4E;
                this[K0r[543]][K0r[432]](x25);
                U3ndn.z_y(189);
                var M3Z = U3ndn.I8r(4, 4, 7, 12, 1);
                d9Y = m$4[M3Z] * T1R;
                U3ndn.S2t(18);
                var v_Q = U3ndn.E_K(14, 17, 111, 120);
                q5b = m$4[v_Q] * T1R;
                x25[K0r[39]] = d9Y;
                x25[K0r[40]] = q5b;
                i9M = m$4[4];
                U3ndn.S2t(9);
                var O5z = U3ndn.I8r(178, 1598, 10);
                U3ndn.S2t(190);
                var t4Y = U3ndn.E_K(7, 18, 18, 175, 2);
                x1r = W2w * (Math[K0r[O5z]] / t4Y);
                i9M += Math[K0r[545]]() * x1r;
                U3ndn.S2t(0);
                i9M -= U3ndn.E_K(x1r, 2);
                x25[K0r[508]] = i9M;
                U3ndn.z_y(85);
                var x2n = U3ndn.I8r(20, 14, 7, 19);
                d3g = (0.4 + J$6 * 0.005) * (x2n - Math[K0r[545]]() * 0.7);
                x5Y = Math[K0r[482]](i9M) * d3g;
                U_X = Math[K0r[483]](i9M) * d3g;
                q9i = 0.03;
                I1Z = 1;
                this[K0r[1605]][K0r[101]]({
                  graphics: x25,
                  xv: x5Y,
                  yv: U_X,
                  alpha: I1Z,
                  shrinkPerFrame: q9i,
                  gravity: 0.02
                });
              }
            }
          }
        }
        this[K0r[1608]]();
      }
      updateParticles() {
        var H0I;
        var T3B;
        var x0e = r8no$;
        U3ndn.z_y(87);
        var c0y = U3ndn.E_K(10, 16, 1623, 18, 290520);
        H0I = Date[x0e[130]]() - this[x0e[c0y]];
        var B6O = 1;
        if (this[x0e[1604]] == - 1) {
          U3ndn.z_y(0);
          H0I = U3ndn.E_K(1, 60);
        }
        this[x0e[1604]] = Date[x0e[130]]();
        U3ndn.z_y(121);
        B6O = U3ndn.I8r(60, H0I, 1000);
        for (var H8_ = 0; H8_ < this[x0e[1605]][x0e[47]]; H8_++) {
          T3B = this[x0e[1605]][H8_];
          if (T3B[x0e[617]][x0e[414]][x0e[39]] <= 0) {
            this[x0e[543]][x0e[517]](T3B[x0e[617]]);
            T3B[x0e[617]][x0e[392]]({
              children: true,
              texture: false,
              baseTexture: false
            });
            this[x0e[1605]][x0e[65]](H8_, 1);
            H8_--;
            continue;
          }
          U3ndn.z_y(14);
          var S8q = U3ndn.I8r(7, 119, 91);
          U3ndn.z_y(6);
          var k1Y = U3ndn.E_K(0, 2);
          U3ndn.z_y(6);
          var n3w = U3ndn.I8r(168, 1348);
          T3B[x0e[617]][x0e[39]] += T3B[x0e[S8q]] * k1Y * B6O * this[x0e[n3w]];
          U3ndn.z_y(1);
          var A9O = U3ndn.E_K(124, 15);
          U3ndn.S2t(191);
          var S4t = U3ndn.E_K(7, 16, 1, 22, 17);
          U3ndn.S2t(12);
          var a0d = U3ndn.E_K(40932, 4, 8, 21224);
          T3B[x0e[617]][x0e[40]] += T3B[x0e[A9O]] * S4t * B6O * this[x0e[a0d]];
          U3ndn.z_y(6);
          var C0h = U3ndn.E_K(613, 5);
          T3B[x0e[109]] += T3B[x0e[C0h]] * B6O;
          U3ndn.z_y(192);
          T3B[x0e[108]] *= U3ndn.E_K(B6O, 0.02, 1);
          U3ndn.S2t(192);
          T3B[x0e[109]] *= U3ndn.E_K(B6O, 0.01, 1);
          T3B[x0e[617]][x0e[508]] = Math[x0e[600]](T3B[x0e[109]], T3B[x0e[108]]);
          T3B[x0e[617]][x0e[476]] = T3B[x0e[476]];
          U3ndn.z_y(26);
          var m5s = U3ndn.I8r(7, 3714, 32870, 9);
          U3ndn.S2t(107);
          var R85 = U3ndn.E_K(15, 16, 13, 172);
          T3B[x0e[617]][x0e[468]] -= T3B[x0e[m5s]] * B6O * R85;
          U3ndn.S2t(12);
          var O5y = U3ndn.I8r(965, 1, 18, 88);
          U3ndn.S2t(64);
          var L$5 = U3ndn.E_K(15, 3, 2, 1);
          T3B[x0e[617]][x0e[469]] -= T3B[x0e[O5y]] * B6O * L$5;
        }
      }
      destroy() {
        var J$c = [
          arguments
        ];
        J$c[5] = r8no$;
        this['container']['destroy'](true);
        this['playerArray'] = null;
      }
    };
    V6D[96] = class D15 {
      constructor(t3P, v3p, B7k, p9N, K6C, Z_J, Q49) {
        var d6A = [
          arguments
        ];
        d6A[8] = r8no$;
        if (!d6A[0][6]['deathArrowTexture']) {
          this['createDeathArrowTexture'](d6A[0][6]);
        }
        if (d6A[0][5]) {
          this['graphic'] = new PIXI['Sprite'](d6A[0][6]['deathArrowTexture']);
        } else {
          this['graphic'] = new PIXI['Sprite'](PIXI['Texture']['WHITE']);
        }
        d6A[9] = 1;
        d6A[4] = 0.5;
        U3ndn.z_y(4);
        this['graphic']['width'] = U3ndn.E_K(d6A[0][4], d6A[9]);
        U3ndn.z_y(4);
        this['graphic']['height'] = U3ndn.E_K(d6A[0][4], d6A[4]);
        this['graphic']['anchor']['x'] = 0.5;
        this['graphic']['anchor']['y'] = 0.5;
        this['arrowID'] = d6A[0][0];
        this['ppm'] = d6A[0][4];
        this['ownerID'] = d6A[0][2];
        U3ndn.Y$U();
        if (d6A[0][1] && d6A[0][1]['avatar']) {
          d6A[1] = d6A[0][1]['avatar']['bc'];
          if (d6A[1] > 16777215) {
            d6A[1] = 16777215;
          }
          this['graphic']['tint'] = V6D[67]['teamify'](d6A[1], d6A[0][3]);
        }
      }
      createDeathArrowTexture(b_h) {
        var d3d = [
          arguments
        ];
        d3d[3] = r8no$;
        d3d[2] = 1;
        d3d[1] = 0.5;
        d3d[5] = new PIXI['Graphics'];
        U3ndn.S2t(4);
        d3d[8] = U3ndn.I8r(40, d3d[2]);
        U3ndn.S2t(4);
        d3d[9] = U3ndn.I8r(40, d3d[1]);
        d3d[5]['beginFill'](16777215);
        d3d[5]['lineStyle']({
          width: 6,
          color: 0
        });
        d3d[5]['drawRect'](0, 0, d3d[8], d3d[9]);
        d3d[5]['endFill']();
        d3d[0][0]['deathArrowTexture'] = d3d[0][0]['generateTexture'](d3d[5]);
      }
      build() {
      }
      move(L3$, I2H, j1_) {
        var r3r = [
          arguments
        ];
        r3r[5] = r8no$;
        U3ndn.S2t(40);
        U3ndn.Y$U();
        r3r[92] = U3ndn.E_K(1, 895, 7, 146);
        U3ndn.z_y(28);
        r3r[66] = U3ndn.E_K(1609, 7, 530, 1597);
        U3ndn.S2t(14);
        r3r[96] = U3ndn.E_K(65, 585, 30);
        U3ndn.S2t(1);
        r3r[70] = U3ndn.I8r(56, 10);
        r3r[2] = r3r[0][0][r8no$[r3r[92]]][this[r8no$[r3r[66]]]][r8no$[r3r[96]]] * this[r8no$[r3r[70]]];
        U3ndn.z_y(9);
        r3r[68] = U3ndn.E_K(125, 1498, 13);
        U3ndn.S2t(178);
        r3r[82] = U3ndn.I8r(2, 1614, 19, 15);
        U3ndn.z_y(6);
        r3r[77] = U3ndn.I8r(6, 34);
        U3ndn.z_y(9);
        r3r[72] = U3ndn.I8r(5, 4, 10);
        r3r[6] = r3r[0][0][r8no$[r3r[68]]][this[r8no$[r3r[82]]]][r8no$[r3r[77]]] * this[r8no$[r3r[72]]];
        U3ndn.S2t(65);
        r3r[85] = U3ndn.E_K(18, 508, 254, 107);
        U3ndn.z_y(63);
        r3r[20] = U3ndn.E_K(20, 17, 11, 355108, 1623);
        U3ndn.S2t(18);
        r3r[45] = U3ndn.E_K(14, 4, 12, 48);
        r3r[8] = r3r[0][1][r8no$[r3r[85]]][this[r8no$[r3r[20]]]]['x'] * this[r8no$[r3r[45]]];
        U3ndn.S2t(65);
        r3r[47] = U3ndn.E_K(20, 113, 113, 106);
        U3ndn.z_y(1);
        r3r[52] = U3ndn.I8r(1617, 5);
        U3ndn.z_y(1);
        r3r[28] = U3ndn.E_K(46, 6);
        r3r[3] = r3r[0][1][r8no$[r3r[47]]][this[r8no$[r3r[52]]]][r8no$[r3r[28]]] * this['ppm'];
        r3r[1] = r3r[0][0]['projectiles'][this['arrowID']]['a'];
        r3r[7] = r3r[0][1]['projectiles'][this['arrowID']]['a'];
        U3ndn.z_y(169);
        this['graphic']['x'] = U3ndn.E_K(r3r[0][2], 1, r3r[0][2], r3r[8], r3r[2]);
        U3ndn.z_y(169);
        this['graphic']['y'] = U3ndn.I8r(r3r[0][2], 1, r3r[0][2], r3r[3], r3r[6]);
        r3r[4] = Math['cos'](r3r[1]);
        r3r[9] = Math['sin'](r3r[1]);
        r3r[54] = Math['cos'](r3r[7]);
        r3r[86] = Math['sin'](r3r[7]);
        U3ndn.z_y(169);
        r3r[74] = U3ndn.E_K(r3r[0][2], 1, r3r[0][2], r3r[54], r3r[4]);
        U3ndn.S2t(169);
        r3r[19] = U3ndn.I8r(r3r[0][2], 1, r3r[0][2], r3r[86], r3r[9]);
        this['graphic']['rotation'] = Math['atan2'](r3r[19], r3r[74]);
      }
      destroy() {
        U3ndn.w30();
        var j$m = [
          arguments
        ];
        j$m[6] = r8no$;
        this['graphic']['destroy'](false);
      }
    };
    V6D[82] = class J$a {
      constructor(n52, M_s, r1B, U0k, l1a, T03) {
        var v6G = [
          arguments
        ];
        v6G[8] = r8no$;
        this['newWinnerDOM'] = document['getElementById']('ingamewinner');
        this['newWinnerDOMTop'] = document['getElementById']('ingamewinner_top');
        this['newWinnerDOMBottom'] = document['getElementById']('ingamewinner_bottom');
        this['newWinnerDOMSkinContainer'] = document['getElementById']('ingamewinner_skin');
        this['newWinnerDOMSkinActual'] = document['getElementById']('ingamewinner_skin_skin');
        this['newWinnerDOMSkinX'] = document['getElementById']('ingamewinner_skin_x');
        this['newWinnerDOMScores'] = document['getElementById']('ingamewinner_scores');
        this['newWinnerDOMScoresTop'] = document['getElementById']('ingamewinner_scores_top');
        this['newWinnerDOMScoresLeft'] = document['getElementById']('ingamewinner_scores_left');
        this['newWinnerDOMScoresRight'] = document['getElementById']('ingamewinner_scores_right');
        this['countdownDOM'] = document['getElementById']('ingamecountdown');
        this['countdownDOMText'] = document['getElementById']('ingamecountdown_text');
        this['countdownState'] = null;
        this['countdownTweenArmed'] = false;
        this['creditDOM'] = document['getElementById']('ingamemapcredit');
        this['creditName'] = document['getElementById']('ingamemapcredit_name');
        this['creditAuthor'] = document['getElementById']('ingamemapcredit_author');
        this['creditState'] = 1;
        this['creditTweenArmed'] = false;
        this['gameSettings'] = v6G[0][0];
        this['playerArray'] = v6G[0][1];
        this['winnerAvatarCache'] = [
        ];
        this['plainAvatar'] = new V6D[30];
        this['plainAvatar']['bc'] = 16777215;
        this['foregroundFader'] = v6G[0][2];
        this['blurContainer'] = v6G[0][3];
        this['roundEndTweenGroup'] = new TWEEN['Group'];
        this['colorAdjust'] = null;
        if (PIXI['filters']['AdjustmentFilter']) {
        }
        this['blur'] = new PIXI['filters']['KawaseBlurFilter'](2, 5, false);
        this['localPlayerID'] = v6G[0][4];
        this['localSpawnedYet'] = false;
        if (this['blurContainer']) {
          v6G[4] = new PIXI['Graphics'];
          v6G[4]['beginFill'](1713971);
          v6G[4]['drawRect'](0, 0, 1, 1);
          this['blurContainer']['addChild'](v6G[4]);
          v6G[4]['x'] = - 25;
          v6G[4]['y'] = - 25;
          v6G[5] = new PIXI['Graphics'];
          v6G[5]['beginFill'](1713971);
          v6G[5]['drawRect'](0, 0, 1, 1);
          this['blurContainer']['addChild'](v6G[5]);
          U3ndn.S2t(15);
          v6G[3] = U3ndn.I8r(10, 8030, 7310);
          U3ndn.z_y(14);
          v6G[1] = U3ndn.I8r(2, 8, 21);
          U3ndn.S2t(188);
          v6G[7] = U3ndn.I8r(1, 39, 117, 9, 1489);
          v6G[5]['x'] = (v6G[3] + v6G[1]) * this[r8no$[v6G[7]]];
          U3ndn.S2t(193);
          v6G[6] = U3ndn.E_K(504, 16, 3, 13, 4);
          U3ndn.z_y(123);
          v6G[2] = U3ndn.E_K(7, 2, 15, 175, 348);
          U3ndn.z_y(15);
          v6G[9] = U3ndn.I8r(6, 1512, 2);
          v6G[5]['y'] = (v6G[6] + v6G[2]) * this[r8no$[v6G[9]]];
        }
      }
      setLocalPlayerID(l5W) {
        var I8w = [
          arguments
        ];
        U3ndn.Y$U();
        I8w[7] = r8no$;
        this['localPlayerID'] = I8w[0][0];
      }
      destroy() {
        var g4Z = [
          arguments
        ];
        g4Z[1] = r8no$;
        this['gameSettings'] = null;
        U3ndn.Y$U();
        this['playerArray'] = null;
        this['winnerAvatarCache'] = null;
        this['foregroundFader'] = null;
        this['blurContainer'] = null;
        this['newWinnerDOM']['style']['visibility'] = 'hidden';
        this['countdownDOM']['style']['visibility'] = 'hidden';
        document['getElementById']('ingametextwarning_afk') ['style']['display'] = 'none';
        document['getElementById']('ingametextwarning_spectating') ['style']['display'] = 'none';
        document['getElementById']('ingametextwarning_matchedsoon') ['style']['display'] = 'none';
        this['creditDOM']['style']['visibility'] = 'hidden';
        this['localPlayerID'] = - 1;
      }
      showAfkWarn() {
        var Z15 = [
          arguments
        ];
        Z15[8] = r8no$;
        document['getElementById']('ingametextwarning_afk') ['style']['display'] = 'table';
      }
      clearAfkWarn() {
        var j0n = [
          arguments
        ];
        j0n[2] = r8no$;
        document['getElementById']('ingametextwarning_afk') ['style']['display'] = 'none';
      }
      render(z9J, S2w, l40, Y8D) {
        var n1y;
        var d7s;
        var s1E;
        var C8i;
        var H1n;
        var f63;
        var W1y;
        var q6A;
        var Q6E;
        var R2u;
        var D$J;
        var e6t;
        var c6P;
        var z7D;
        var v5M;
        var m0N;
        var R0N;
        var Y0Z;
        var u5v;
        var A3D;
        var L9L;
        var D7e;
        var p9C;
        var d7a;
        var j6O;
        var c3G;
        var Q60;
        var q73;
        var t7a = r8no$;
        var D22 = 0;
        for (var y_a = 0; y_a < S2w[t7a[121]][t7a[47]]; y_a++) {
          if (S2w[t7a[121]][y_a]) {
            D22++;
          }
        }
        var v0z = this[t7a[149]][t7a[349]] && D22 == 1;
        if (v0z) {
          if (document[t7a[445]]('ingametextwarning_matchedsoon') [t7a[459]][t7a[1023]] != 'table') {
            document[t7a[445]]('ingametextwarning_matchedsoon') [t7a[459]][t7a[1023]] = 'table';
          }
        } else if (document[t7a[445]]('ingametextwarning_matchedsoon') [t7a[459]][t7a[1023]] == 'table') {
          document[t7a[445]]('ingametextwarning_matchedsoon') [t7a[459]][t7a[1023]] = 'none';
        }
        if (S2w[t7a[41]] && S2w[t7a[41]][this[t7a[1547]]]) {
          this[t7a[1635]] = true;
        }
        if (this[t7a[149]][t7a[349]] && this[t7a[1635]] == false) {
          if (document[t7a[445]]('ingametextwarning_spectating') [t7a[459]][t7a[1023]] != 'table') {
            document[t7a[445]]('ingametextwarning_spectating') [t7a[459]][t7a[1023]] = 'table';
          }
        } else if (document[t7a[445]]('ingametextwarning_spectating') [t7a[459]][t7a[1023]] == 'table') {
          document[t7a[445]]('ingametextwarning_spectating') [t7a[459]][t7a[1023]] = 'none';
        }
        if (S2w[t7a[3]] > - 1 && S2w[t7a[323]] > 0 && this[t7a[149]][t7a[349]] == false) {
          this[t7a[1546]][t7a[459]][t7a[458]] = 'inherit';
          this[t7a[1624]] = true;
          n1y = Math[t7a[1411]](S2w[t7a[3]] / 30);
          if (this[t7a[1622]][t7a[552]] != n1y[t7a[418]]()) {
            this[t7a[1622]][t7a[552]] = n1y[t7a[418]]();
          }
          if (this[t7a[1623]] != 2 && this[t7a[1623]] != 3) {
            this[t7a[1623]] = 2;
            anime({
              targets: this[t7a[1546]],
              top: '10px',
              autoplay: true,
              duration: 300,
              delay: 0,
              easing: 'easeOutQuart',
              complete: () =>{
                var B9v = r8no$;
                this[B9v[1623]] = 3;
              }
            });
          }
        } else if (this[t7a[1623]] != 4 && this[t7a[1623]] != 1) {
          U3ndn.z_y(6);
          var w8u = U3ndn.I8r(1532, 14);
          U3ndn.z_y(41);
          var c7a = U3ndn.E_K(5, 12, 17, 1382);
          d7s = - this[t7a[w8u]][t7a[c7a]] + 'px';
          this[t7a[1623]] = 4;
          anime({
            targets: this[t7a[1546]],
            top: d7s,
            autoplay: true,
            duration: 200,
            delay: 0,
            easing: 'easeInQuad',
            complete: () =>{
              U3ndn.Y$U();
              var V8I = r8no$;
              this[V8I[1623]] = 1;
              this[V8I[1546]][V8I[459]][V8I[458]] = 'hidden';
            }
          });
          this[t7a[1624]] = false;
        }
        if (S2w[t7a[3]] > 10 && S2w[t7a[3]] < 55 && S2w[t7a[323]] == 0 || S2w[t7a[3]] > 10 && S2w[t7a[3]] < 85 && this[t7a[149]][t7a[349]]) {
          this[t7a[1625]][t7a[459]][t7a[458]] = 'inherit';
          this[t7a[1629]] = true;
          s1E = this[t7a[149]][t7a[342]][t7a[125]][t7a[555]];
          C8i = this[t7a[149]][t7a[342]][t7a[125]][t7a[64]];
          if (this[t7a[1626]][t7a[552]] != s1E) {
            this[t7a[1626]][t7a[552]] = s1E;
          }
          if (this[t7a[1627]][t7a[552]] != C8i) {
            this[t7a[1627]][t7a[552]] = C8i;
          }
          if (this[t7a[149]][t7a[349]]) {
            H1n = 2700;
          } else {
            H1n = 1700;
          }
          if (this[t7a[1628]] != 2 && this[t7a[1628]] != 3) {
            this[t7a[1628]] = 2;
            anime({
              targets: this[t7a[1625]],
              opacity: '1',
              autoplay: true,
              duration: 200,
              delay: 0,
              easing: 'easeOutQuad',
              complete: () =>{
                U3ndn.w30();
                var w34 = r8no$;
                this[w34[1628]] = 3;
              }
            });
            this[t7a[1626]][t7a[459]][t7a[294]] = '20px';
            anime({
              targets: this[t7a[1626]],
              left: '-20px',
              autoplay: true,
              duration: H1n,
              delay: 0,
              easing: 'cubicBezier(0.21, 0.70, 0.70, 0.21)'
            });
            this[t7a[1627]][t7a[459]][t7a[294]] = '-20px';
            anime({
              targets: this[t7a[1627]],
              left: '20px',
              autoplay: true,
              duration: H1n,
              delay: 0,
              easing: 'cubicBezier(0.21, 0.70, 0.70, 0.21)'
            });
          }
        } else if (this[t7a[1628]] != 4 && this[t7a[1628]] != 1) {
          this[t7a[1628]] = 4;
          anime({
            targets: this[t7a[1625]],
            opacity: '0',
            autoplay: true,
            duration: 200,
            delay: 0,
            easing: 'easeOutQuad',
            complete: () =>{
              var M$3 = r8no$;
              this[M$3[1628]] = 1;
              this[M$3[1625]][M$3[459]][M$3[458]] = 'hidden';
            }
          });
          this[t7a[1629]] = false;
        }
        if (S2w[t7a[4]] > - 1 && S2w[t7a[4]] < 60) {
          if (this[t7a[1545]][t7a[570]] != true) {
            this[t7a[1545]][t7a[570]] = true;
            this[t7a[1545]][t7a[571]] = true;
            f63 = '';
            if (this[t7a[149]][t7a[114]] == false) {
              if (this[t7a[848]][S2w[t7a[123]]]) {
                f63 = this[t7a[848]][S2w[t7a[123]]][t7a[568]];
              } else if (S2w[t7a[123]] == - 1) {
                f63 = '';
              } else {
                f63 = 'Unknown';
              }
            } else {
              if (S2w[t7a[123]] == 2) {
                f63 = 'Red Team';
              }
              if (S2w[t7a[123]] == 3) {
                f63 = 'Blue Team';
              }
              if (S2w[t7a[123]] == 4) {
                f63 = 'Green Team';
              }
              if (S2w[t7a[123]] == 5) {
                f63 = 'Yellow Team';
              }
              if (S2w[t7a[123]] == - 1) {
                f63 = '';
              }
            }
            this[t7a[1613]][t7a[552]] = f63;
            if (S2w[t7a[123]] == - 1) {
              this[t7a[1614]][t7a[552]] = 'DRAW';
            } else if (S2w[t7a[122]][S2w[t7a[123]]] >= this[t7a[149]][t7a[565]] || this[t7a[149]][t7a[349]]) {
              this[t7a[1614]][t7a[552]] = 'WINS';
            } else {
              this[t7a[1614]][t7a[552]] = 'SCORES';
            }
            this[t7a[1545]][t7a[459]][t7a[458]] = 'inherit';
            if (S2w[t7a[4]] > 40) {
              this[t7a[1615]][t7a[459]][t7a[521]] = 0;
              this[t7a[1615]][t7a[459]][t7a[572]] = 'scale(1.3)';
              anime({
                targets: this[t7a[1615]],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: 0,
                easing: 'easeOutElastic(1, 0.8)'
              });
              this[t7a[1613]][t7a[459]][t7a[521]] = 0;
              this[t7a[1613]][t7a[459]][t7a[572]] = 'scale(1.5)';
              anime({
                targets: this[t7a[1613]],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: 200,
                easing: 'easeOutElastic(1, 0.8)'
              });
              this[t7a[1614]][t7a[459]][t7a[521]] = 0;
              this[t7a[1614]][t7a[459]][t7a[572]] = 'scale(1.5)';
              W1y = 400;
              if (S2w[t7a[123]] == - 1) {
                W1y = 0;
              }
              anime({
                targets: this[t7a[1614]],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: W1y,
                easing: 'easeOutElastic(1, 0.8)'
              });
              this[t7a[1618]][t7a[459]][t7a[521]] = 0;
              anime({
                targets: this[t7a[1618]],
                opacity: 1,
                autoplay: true,
                duration: 250,
                delay: W1y + 50,
                easing: 'linear'
              });
            } else {
              this[t7a[1615]][t7a[459]][t7a[521]] = 1;
              this[t7a[1615]][t7a[459]][t7a[572]] = 'scale(1.0)';
              this[t7a[1613]][t7a[459]][t7a[521]] = 1;
              this[t7a[1613]][t7a[459]][t7a[572]] = 'scale(1.0)';
              this[t7a[1614]][t7a[459]][t7a[521]] = 1;
              this[t7a[1614]][t7a[459]][t7a[572]] = 'scale(1.0)';
              this[t7a[1618]][t7a[459]][t7a[521]] = 1;
            }
            q6A = null;
            Q6E = 1;
            R2u = 0;
            if (this[t7a[149]][t7a[114]] == false) {
              if (this[t7a[848]][S2w[t7a[123]]]) {
                q6A = this[t7a[848]][S2w[t7a[123]]][t7a[413]];
                Q6E = 1;
                R2u = S2w[t7a[123]];
              }
            } else if (S2w[t7a[123]] != - 1) {
              q6A = this[t7a[1631]];
              Q6E = S2w[t7a[123]];
              switch (S2w[t7a[123]]) {
                case 2:
                  R2u = 'r';
                  break;
                case 3:
                  R2u = 'b';
                  break;
                case 4:
                  R2u = 'g';
                  break;
                case 5:
                  R2u = 'y';
                  break;
              }
            }
            while (this[t7a[1616]][t7a[573]]) {
              this[t7a[1616]][t7a[517]](this[t7a[1616]][t7a[573]]);
            }
            if (q6A) {
              if (this[t7a[1630]][R2u] && this[t7a[1630]][R2u][Q6E]) {
                this[t7a[1616]][t7a[455]](this[t7a[1630]][R2u][Q6E]);
              } else {
                try {
                  N2[t7a[574]](q6A, Q6E, this[t7a[1616]], '', 200, 200, this[t7a[1630]], R2u, Q6E, 2, 0.04, 0.3);
                } catch (c1Z) {
                }
              }
            }
          }
          if (this[t7a[149]][t7a[114]] == false && S2w[t7a[123]] != - 1 && Y8D && Y8D[S2w[t7a[123]]]) {
            if (Y8D[S2w[t7a[123]]][t7a[185]]) {
              this[t7a[1617]][t7a[459]][t7a[458]] = 'inherit';
            } else {
              this[t7a[1617]][t7a[459]][t7a[458]] = 'hidden';
            }
          } else {
            this[t7a[1617]][t7a[459]][t7a[458]] = 'hidden';
          }
          D$J = '';
          e6t = '';
          c6P = [
          ];
          for (var G4V = 0; G4V < S2w[t7a[122]][t7a[47]]; G4V++) {
            if (this[t7a[149]][t7a[114]] == false) {
              if (S2w[t7a[121]][G4V]) {
                c6P[t7a[101]]({
                  id: G4V,
                  score: S2w[t7a[122]][G4V]
                });
              }
            } else {
              if (G4V < 2) {
                continue;
              }
              if (S2w[t7a[122]][G4V] != null) {
                c6P[t7a[101]]({
                  id: G4V,
                  score: S2w[t7a[122]][G4V]
                });
              }
            }
          }
          c6P[t7a[111]](function (R69, d8Z) {
            var K$S = r8no$;
            U3ndn.z_y(9);
            var r_w = U3ndn.E_K(5121, 66004, 13);
            U3ndn.Y$U();
            U3ndn.S2t(6);
            var H1z = U3ndn.E_K(95, 474);
            return d8Z[K$S[r_w]] - R69[K$S[H1z]];
          });
          for (var b2U = 0; b2U < c6P[t7a[47]]; b2U++) {
            if (b2U != 0) {
              D$J += '\r\n';
            }
            if (b2U != 0) {
              e6t += '\r\n';
            }
            z7D = '';
            if (this[t7a[149]][t7a[114]] == false) {
              if (this[t7a[848]][c6P[b2U][t7a[113]]]) {
                z7D = this[t7a[848]][c6P[b2U][t7a[113]]][t7a[568]];
              }
            } else {
              if (c6P[b2U][t7a[113]] == 2) {
                z7D = 'Red Team';
              }
              if (c6P[b2U][t7a[113]] == 3) {
                z7D = 'Blue Team';
              }
              if (c6P[b2U][t7a[113]] == 4) {
                z7D = 'Green Team';
              }
              if (c6P[b2U][t7a[113]] == 5) {
                z7D = 'Yellow Team';
              }
            }
            U3ndn.S2t(6);
            D$J += U3ndn.I8r(z7D, ':');
            v5M = c6P[b2U][t7a[569]];
            if (v5M === undefined) {
              v5M = 0;
            }
            e6t += v5M;
          }
          if (this[t7a[1620]][t7a[552]] != D$J) {
            this[t7a[1620]][t7a[552]] = D$J;
          }
          if (this[t7a[1621]][t7a[552]] != e6t) {
            this[t7a[1621]][t7a[552]] = e6t;
          }
          U3ndn.S2t(9);
          var h0a = U3ndn.E_K(2825, 36160, 13);
          m0N = 'FIRST TO ' + this[t7a[149]][t7a[h0a]] + ' WINS';
          if (this[t7a[1619]][t7a[552]] != m0N) {
            this[t7a[1619]][t7a[552]] = m0N;
          }
          if (this[t7a[149]][t7a[565]] == 999) {
            this[t7a[1619]][t7a[459]][t7a[458]] = 'hidden';
          } else {
            this[t7a[1619]][t7a[459]][t7a[458]] = 'inherit';
          }
        } else if (S2w[t7a[3]] == - 1) {
          this[t7a[1545]][t7a[570]] = false;
          this[t7a[1545]][t7a[459]][t7a[458]] = 'hidden';
        }
        if (S2w[t7a[4]] > - 1 && S2w[t7a[4]] < 10 && this[t7a[1545]][t7a[571]] == true) {
          this[t7a[1545]][t7a[571]] = false;
          anime({
            targets: this[t7a[1615]],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
          anime({
            targets: this[t7a[1613]],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
          anime({
            targets: this[t7a[1614]],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
          anime({
            targets: this[t7a[1618]],
            opacity: 0,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
        }
        var w58 = 0;
        if (S2w[t7a[3]] > - 1) {
          w58 += Q[t7a[4]];
          U3ndn.S2t(54);
          var Q98 = U3ndn.I8r(2, 16, 10, 22, 115);
          U3ndn.S2t(60);
          var w1Z = U3ndn.E_K(16, 11, 30);
          R0N = Q[t7a[Q98]] - S2w[t7a[w1Z]];
          w58 += R0N;
        } else if (S2w[t7a[4]] > - 1) {
          c3G = 520338769;
          Q60 = - 2087717463;
          q73 = 2;
          for (var g19 = 1; U3ndn.P5V(g19.toString(), g19.toString().length, 54056) !== c3G; g19++) {
            U3ndn.z_y(165);
            var w9V = U3ndn.E_K(1165, 1, 80, 15, 2);
            U3ndn.z_y(15);
            var U5F = U3ndn.E_K(7, 1, 1);
            Y0Z = Q[t7a[w9V]] * S2w[t7a[U5F]];
            q73 += 2;
          }
          if (U3ndn.v9p(q73.toString(), q73.toString().length, 39102) !== Q60) {
            U3ndn.S2t(21);
            var Z2o = U3ndn.E_K(13, 39, 17, 2, 20);
            U3ndn.S2t(194);
            var q57 = U3ndn.I8r(3, 3, 13, 20, 3);
            Y0Z = Q[t7a[Z2o]] % S2w[t7a[q57]];
          }
          U3ndn.z_y(13);
          var G4M = U3ndn.E_K(0, 7, 3);
          U3ndn.S2t(15);
          var Y1O = U3ndn.E_K(17, 0, 13);
          Y0Z = Q[t7a[G4M]] - S2w[t7a[Y1O]];
          w58 += Y0Z;
        }
        if (w58 != 0 && w58 < 98) {
          U3ndn.z_y(195);
          u5v = U3ndn.I8r(l40, l40, 1, w58, w58, 1);
          this[t7a[1632]][t7a[531]]();
          A3D = {
            sat: 1,
            blur: 0,
            brightness: 1,
            contrast: 1,
            winnerTextAlpha: 0,
            bgFaderAlpha: 0
          };
          L9L = new TWEEN[t7a[532]](A3D, this[t7a[1632]]);
          L9L[t7a[533]]({
            sat: 0.3,
            blur: 15
          }, 20);
          L9L[t7a[534]](TWEEN[t7a[537]][t7a[558]][t7a[557]]);
          L9L[t7a[559]](10);
          L9L[t7a[540]](0);
          D7e = new TWEEN[t7a[532]](A3D, this[t7a[1632]]);
          D7e[t7a[533]]({
            bgFaderAlpha: 1
          }, 6);
          D7e[t7a[534]](TWEEN[t7a[537]][t7a[558]][t7a[557]]);
          D7e[t7a[559]](52);
          L9L[t7a[560]](D7e);
          p9C = new TWEEN[t7a[532]](A3D, this[t7a[1632]]);
          p9C[t7a[533]]({
            brightness: 1,
            contrast: 1,
            sat: 1,
            blur: 0,
            bgFaderAlpha: 0
          }, 8);
          p9C[t7a[534]](TWEEN[t7a[537]][t7a[558]][t7a[535]]);
          p9C[t7a[559]](2);
          D7e[t7a[560]](p9C);
          d7a = new TWEEN[t7a[532]](A3D, this[t7a[1632]]);
          d7a[t7a[533]]({
            winnerTextAlpha: 1
          }, 5);
          d7a[t7a[534]](TWEEN[t7a[537]][t7a[558]][t7a[557]]);
          d7a[t7a[559]](25);
          d7a[t7a[540]](0);
          j6O = new TWEEN[t7a[532]](A3D, this[t7a[1632]]);
          j6O[t7a[533]]({
            winnerTextAlpha: 0
          }, 1);
          j6O[t7a[534]](TWEEN[t7a[537]][t7a[558]][t7a[557]]);
          j6O[t7a[559]](53);
          d7a[t7a[560]](j6O);
          this[t7a[1632]][t7a[548]](u5v);
          if (this[t7a[1633]]) {
            this[t7a[1633]][t7a[561]] = A3D[t7a[562]];
            this[t7a[1633]][t7a[563]] = A3D[t7a[563]];
            this[t7a[1633]][t7a[564]] = A3D[t7a[564]];
          }
          U3ndn.S2t(14);
          var n29 = U3ndn.I8r(7, 161, 461);
          this[t7a[484]][t7a[484]] = A3D[t7a[n29]] * 0.4;
          if (this[t7a[1536]]) {
            this[t7a[1536]][t7a[476]] = A3D[t7a[567]];
            this[t7a[1536]][t7a[481]] = true;
          }
          if (this[t7a[1533]]) {
            if (this[t7a[1633]]) {
              this[t7a[1533]][t7a[461]] = [
                this[t7a[484]],
                this[t7a[1633]]
              ];
            } else {
              this[t7a[1533]][t7a[461]] = [
                this[t7a[484]]
              ];
            }
          }
        } else {
          if (this[t7a[1533]]) {
            this[t7a[1533]][t7a[461]] = [
            ];
          }
          if (this[t7a[1536]]) {
            this[t7a[1536]][t7a[476]] = 0;
            this[t7a[1536]][t7a[481]] = false;
          }
        }
      }
    };
    V6D[56] = class A9R {
      constructor(I6h, O5_) {
        var T9S = [
          arguments
        ];
        T9S[4] = r8no$;
        this['updateSeconds'] = T9S[0][1];
        this['currentCount'] = 0;
        setInterval(() =>{
          var S83 = r8no$;
          this[S83[548]]();
        }, T9S[0][1] * 1000);
        this['div'] = document['createElement']('div');
        this['div']['style']['position'] = 'absolute';
        this['div']['style']['width'] = '50px';
        this['div']['style']['height'] = '20px';
        this['div']['style']['color'] = '#bbbbbb';
        this['div']['style']['top'] = '36px';
        this['div']['style']['left'] = '5px';
        this['div']['style']['fontFamily'] = 'futurept_b1';
        this['div']['style']['display'] = 'none';
        this['showing'] = false;
        T9S[0][0]['appendChild'](this['div']);
      }
      frameDone() {
        var F5f = [
          arguments
        ];
        F5f[7] = r8no$;
        if (!this['showing']) {
          return;
        }
        this['currentCount']++;
      }
      update() {
        var E0D = [
          arguments
        ];
        E0D[2] = r8no$;
        if (!this['showing']) {
          return;
        }
        U3ndn.S2t(141);
        E0D[8] = U3ndn.E_K(22, 10, 4, 7);
        U3ndn.S2t(7);
        E0D[4] = U3ndn.I8r(545, 2074, 15, 7);
        E0D[5] = this['currentCount'] * (E0D[8] / this[r8no$[E0D[4]]]);
        this['currentCount'] = 0;
        U3ndn.z_y(196);
        E0D[1] = U3ndn.I8r(3, 18, 8, 6, 2501);
        this['div']['textContent'] = E0D[5] + U3ndn.j31(E0D[1]);
      }
      show() {
        var G77 = [
          arguments
        ];
        G77[6] = r8no$;
        this['showing'] = true;
        this['div']['style']['display'] = 'block';
      }
      hide() {
        var k8Z = [
          arguments
        ];
        k8Z[1] = r8no$;
        this['showing'] = false;
        this['div']['style']['display'] = 'none';
      }
    };
    'use strict';
    V6D[2] = V6D[0][2]['Common']['Math']['b2Vec2'];
    function A(d4n, i8s) {
      'use strict';
      function m5$() {
        var W$B = [
          arguments
        ];
        W$B[7] = r8no$;
        for (W$B[2] = 0; W$B[2] < L8c[35]['length']; W$B[2]++) {
          if (L8c[35][W$B[2]]) {
            Z9y(W$B[2]);
          }
        }
        for (W$B[9] = 0; W$B[9] < L8c[59]['length']; W$B[9]++) {
          if (L8c[59][W$B[9]]) {
            p$Y(W$B[9]);
          }
        }
        L8c[27] = [
        ];
        L8c[86] = [
        ];
        L8c[31] = [
        ];
        for (W$B[3] = 0; W$B[3] < L8c[94]['length']; W$B[3]++) {
          if (L8c[94][W$B[3]]) {
            L8c[92]['removeChild'](L8c[94][W$B[3]]);
            L8c[94][W$B[3]]['destroy']({
              children: true,
              texture: true,
              baseTexture: true
            });
          }
        }
        L8c[94] = [
        ];
        for (W$B[6] = 0; W$B[6] < L8c[48]['length']; W$B[6]++) {
          if (L8c[48][W$B[6]]) {
            O4m(W$B[6]);
          }
        }
        L8c[48] = [
        ];
        if (L8c[75]) {
          for (W$B[5] = 0; W$B[5] < L8c[75]['length']; W$B[5]++) {
            L8c[92]['removeChild'](L8c[75][W$B[5]]);
            L8c[75][W$B[5]]['destroy']({
              children: true,
              texture: true,
              baseTexture: true
            });
          }
        }
        L8c[75] = [
        ];
        L8c[13] = false;
      }
      function F4J() {
        var Q3H = [
          arguments
        ];
        Q3H[1] = r8no$;
        for (Q3H[3] = 0; Q3H[3] < L8c[6]['length']; Q3H[3]++) {
          Z0B(Q3H[3]);
        }
        U3ndn.w30();
        L8c[6] = [
        ];
      }
      function Z9y(P$p) {
        var j8z = [
          arguments
        ];
        j8z[5] = r8no$;
        L8c[51]['removeChild'](L8c[35][j8z[0][0]]['offscreencontainer']);
        L8c[35][j8z[0][0]]['offscreencontainer']['destroy']({
          children: true,
          texture: true,
          baseTexture: true
        });
        L8c[41]['removeChild'](L8c[35][j8z[0][0]]['container']);
        L8c[35][j8z[0][0]]['container']['destroy']({
          children: true,
          texture: true,
          baseTexture: true
        });
        L8c[35][j8z[0][0]] = null;
      }
      function Z0B(O8e) {
        var r1d = [
          arguments
        ];
        U3ndn.w30();
        r1d[7] = r8no$;
        if (L8c[6][r1d[0][0]]) {
          r1d[1] = L8c[6][r1d[0][0]];
          for (r1d[2] = 0; r1d[2] < r1d[1]['svg']['length']; r1d[2]++) {
            if (r1d[1]['svg'][r1d[2]]) {
              r1d[9] = r1d[1]['svg'][r1d[2]];
              r1d[9]['destroy']();
            }
          }
          if (r1d[1]['texture']) {
            r1d[1]['texture']['destroy'](true);
          }
          r1d[6] = - 268011818;
          r1d[3] = - 920027443;
          r1d[5] = 2;
          for (r1d[8] = 1; U3ndn.P5V(r1d[8].toString(), r1d[8].toString().length, 54378) !== r1d[6]; r1d[8]++) {
            L8c[6][r1d[0][0]] = null;
            r1d[5] += 2;
          }
          if (U3ndn.P5V(r1d[5].toString(), r1d[5].toString().length, 40050) !== r1d[3]) {
            L8c[6][r1d[0][0]] = 1;
          }
        }
      }
      function e8(i5B, C8C, w6k) {
        var r_l = [
          arguments
        ];
        r_l[3] = r8no$;
        r_l[5] = r_l[0][2];
        r_l[2] = Math['cos'](r_l[5]);
        r_l[8] = Math['sin'](r_l[5]);
        U3ndn.S2t(15);
        r_l[7] = U3ndn.I8r(10, 312, 283);
        U3ndn.z_y(64);
        r_l[1] = U3ndn.E_K(585, 117, 34, 1);
        r_l[9] = r_l[0][1][r8no$[r_l[7]]] - r_l[0][0][r8no$[r_l[1]]];
        U3ndn.S2t(197);
        r_l[6] = U3ndn.I8r(24, 7, 21, 14, 10);
        U3ndn.S2t(117);
        r_l[16] = U3ndn.E_K(10, 1, 16, 2040, 13);
        r_l[4] = r_l[0][1][r8no$[r_l[6]]] - r_l[0][0][r8no$[r_l[16]]];
        return {
          x: r_l[2] * r_l[9] - r_l[8] * r_l[4] + r_l[0][0]['x'],
          y: r_l[8] * r_l[9] + r_l[2] * r_l[4] + r_l[0][0]['y']
        };
      }
      function L1_(c5l, e_B, E37) {
        var P4l = [
          arguments
        ];
        P4l[8] = r8no$;
        P4l[0][2] = 30;
        U3ndn.z_y(0);
        U3ndn.Y$U();
        P4l[3] = U3ndn.I8r(P4l[0][2], 15);
        P4l[9] = 2;
        L8c[6][P4l[0][0]] = {
          texture: null,
          inProgress: true,
          layerProgress: [
          ],
          svg: [
          ],
          totalSize: P4l[0][1] * P4l[3] * P4l[9]
        };
        P4l[2] = L8c[22][P4l[0][0]]['avatar']['layers'];
        P4l[5] = function (v1f) {
          var O94 = [
            arguments
          ];
          O94[9] = r8no$;
          O94[1] = P4l[2][O94[0][0]];
          if (!(O94[1]['id'] >= 0) || !(O94[1]['id'] <= 115) || Math['abs'](O94[1]['x']) > 9999 || Math['abs'](O94[1]['y']) > 9999 || O94[1]['scale'] > 999 || O94[1]['angle'] > 9999 || isNaN(O94[1]['color']) || typeof O94[1]['color'] != 'number' || typeof O94[1]['flipX'] != 'boolean' || typeof O94[1]['flipY'] != 'boolean') {
            return 'continue';
          }
          O94[8] = O94[1]['id']['toString']();
          if (O94[1]['id'] < 10) {
            U3ndn.z_y(17);
            O94[3] = U3ndn.E_K(7, 2590, 2);
            O94[8] = U3ndn.j31(O94[3]) + O94[8];
          }
          if (O94[1]['id'] < 100) {
            U3ndn.z_y(9);
            O94[7] = U3ndn.E_K(173, 688, 19);
            O94[8] = U3ndn.j31(O94[7]) + O94[8];
          }
          U3ndn.Y$U();
          O94[5] = null;
          try {
            O94[5] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][O94[1]['id']], {
              scale: O94[1]['scale'] * P4l[0][1] * P4l[3] * P4l[9],
              autoload: false
            });
          } catch (E6q) {
          }
          L8c[6][P4l[0][0]]['layerProgress'][O94[0][0]] = false;
          L8c[6][P4l[0][0]]['svg'][O94[0][0]] = O94[5];
          O94[5]['load']() ['then'](function () {
            var p7l = [
              arguments
            ];
            p7l[7] = r8no$;
            L8c[6][P4l[0][0]]['layerProgress'][O94[0][0]] = true;
            D3l(P4l[0][0]);
          });
        };
        for (P4l[7] = P4l[2]['length'] - 1; P4l[7] >= 0; P4l[7]--) {
          P4l[4] = P4l[5](P4l[7]);
          if (P4l[4] === 'continue') {
            continue;
          }
        }
      }
      function p$Y(l_$) {
        var Y5C = [
          arguments
        ];
        Y5C[2] = r8no$;
        L8c[92]['removeChild'](L8c[59][Y5C[0][0]]);
        L8c[59][Y5C[0][0]]['destroy']({
          children: true,
          texture: true,
          baseTexture: true
        });
        L8c[59][Y5C[0][0]] = null;
      }
      function O4m(S5s) {
        U3ndn.w30();
        var H5X = [
          arguments
        ];
        H5X[3] = r8no$;
        L8c[92]['removeChild'](L8c[48][H5X[0][0]]);
        L8c[48][H5X[0][0]]['destroy']({
          children: true,
          texture: true,
          baseTexture: true
        });
        L8c[48][H5X[0][0]] = null;
      }
      function C1Z(o8j, I6m) {
        var m8P = [
          arguments
        ];
        m8P[8] = r8no$;
        m8P[3] = document['createElement']('canvas');
        m8P[6] = m8P[3]['getContext']('2d');
        U3ndn.z_y(6);
        m8P[3]['width'] = U3ndn.I8r(730, 50);
        U3ndn.z_y(6);
        U3ndn.Y$U();
        m8P[3]['height'] = U3ndn.I8r(500, 50);
        m8P[5] = m8P[6]['createRadialGradient'](0, 0, 10, 0, 0, 540);
        m8P[5]['addColorStop'](0, m8P[0][0]);
        m8P[5]['addColorStop'](1, m8P[0][1]);
        m8P[6]['fillStyle'] = m8P[5];
        U3ndn.S2t(6);
        m8P[6]['fillRect'](0, 0, U3ndn.I8r(730, 50), U3ndn.E_K(500, 50));
        return new PIXI['Texture']['from'](m8P[3]);
      }
      function D3l(w9N) {
        var Z7O = [
          arguments
        ];
        Z7O[4] = r8no$;
        Z7O[6] = true;
        U3ndn.w30();
        for (Z7O[48] = 0; Z7O[48] < L8c[6][Z7O[0][0]]['layerProgress']['length']; Z7O[48]++) {
          if (L8c[6][Z7O[0][0]]['layerProgress'][Z7O[48]] == false) {
            Z7O[6] = false;
            break;
          }
        }
        if (Z7O[6] == true) {
          Z7O[2] = L8c[6][Z7O[0][0]];
          Z7O[8] = L8c[22][Z7O[0][0]]['avatar']['layers'];
          Z7O[9] = new PIXI['Sprite'];
          Z7O[1] = new PIXI['Graphics'];
          Z7O[1]['beginFill'](L8c[22][Z7O[0][0]]['avatar']['bc']);
          Z7O[1]['drawRect']( - 256, - 256, 512, 512);
          Z7O[1]['endFill']();
          Z7O[9]['addChild'](Z7O[1]);
          Z7O[3] = [
          ];
          for (Z7O[38] = Z7O[2]['svg']['length'] - 1; Z7O[38] >= 0; Z7O[38]--) {
            if (!Z7O[2]['svg'][Z7O[38]]) {
              continue;
            }
            Z7O[7] = PIXI['Texture']['from'](Z7O[2]['svg'][Z7O[38]]);
            Z7O[5] = new PIXI['Sprite'](Z7O[7]);
            Z7O[3]['push'](Z7O[5]);
            Z7O[3]['push'](Z7O[7]);
            Z7O[32] = Z7O[8][Z7O[38]];
            Z7O[5]['tint'] = Z7O[32]['color'];
            Z7O[5]['anchor']['set'](0.5);
            Z7O[5]['angle'] = Z7O[32]['angle'];
            U3ndn.S2t(41);
            Z7O[31] = U3ndn.E_K(12, 9, 738, 780);
            U3ndn.S2t(6);
            Z7O[17] = U3ndn.E_K(24, 414);
            Z7O[5]['x'] = Z7O[32][r8no$[Z7O[31]]] * Z7O[2][r8no$[Z7O[17]]];
            U3ndn.S2t(178);
            Z7O[66] = U3ndn.I8r(30, 2, 6, 14);
            U3ndn.S2t(172);
            Z7O[76] = U3ndn.I8r(1, 1, 451, 6, 7);
            Z7O[5]['y'] = Z7O[32][r8no$[Z7O[66]]] * Z7O[2][r8no$[Z7O[76]]];
            Z7O[42] = Z7O[32]['flipX'] ? - 1 : 1;
            Z7O[39] = Z7O[32]['flipY'] ? - 1 : 1;
            Z7O[5]['scale']['x'] *= Z7O[42];
            Z7O[5]['scale']['y'] *= Z7O[39];
            Z7O[9]['addChild'](Z7O[5]);
          }
          U3ndn.S2t(14);
          Z7O[97] = U3ndn.I8r(458, 458, 437);
          U3ndn.S2t(1);
          Z7O[77] = U3ndn.I8r(33, 18);
          Z7O[9]['x'] = Z7O[2][r8no$[Z7O[97]]] * Z7O[77];
          U3ndn.S2t(27);
          Z7O[13] = U3ndn.E_K(10, 27, 18, 439);
          U3ndn.z_y(17);
          Z7O[89] = U3ndn.E_K(5, 1, 9);
          Z7O[9]['y'] = Z7O[2][r8no$[Z7O[13]]] * Z7O[89];
          Z7O[58] = PIXI['RenderTexture']['create']({
            width: 512,
            height: 512
          });
          L8c[26]['render'](Z7O[9], Z7O[58]);
          L8c[6][Z7O[0][0]]['texture'] = Z7O[58];
          for (Z7O[24] = 0; Z7O[24] < Z7O[2]['svg']['length']; Z7O[24]++) {
            if (Z7O[2]['svg'][Z7O[24]]) {
              Z7O[74] = Z7O[2]['svg'][Z7O[24]];
              Z7O[74]['destroy']();
            }
          }
          for (Z7O[40] = 0; Z7O[40] < Z7O[3]['length']; Z7O[40]++) {
            Z7O[3][Z7O[40]]['destroy']();
          }
          Z7O[3] = null;
        }
      }
      function b$t() {
        function G9Y(Q45, P91, S2H, i8J, k6z) {
          var n7P = [
            arguments
          ];
          n7P[4] = r8no$;
          n7P[2] = 3;
          n7P[7] = 15;
          U3ndn.Y$U();
          n7P[6] = 13;
          n7P[9] = 7;
          n7P[3] = 3;
          n7P[8] = 0.5;
          n7P[1] = 22;
          n7P[5] = 18;
          n7P[51] = new PIXI['Container'];
          L8c[96]['addChild'](n7P[51]);
          n7P[87] = new PIXI['Text'](n7P[0][0], {
            fontFamily: 'futurept_medium',
            fontSize: n7P[7],
            fill: 14079702,
            align: n7P[0][2],
            dropShadow: true,
            dropShadowDistance: n7P[9],
            dropShadowBlur: n7P[3],
            dropShadowAlpha: n7P[8]
          });
          n7P[87]['resolution'] = n7P[2];
          n7P[87]['x'] = n7P[0][3];
          if (n7P[0][2] == 'center') {
            U3ndn.z_y(6);
            n7P[37] = U3ndn.E_K(457, 11);
            U3ndn.z_y(15);
            n7P[24] = U3ndn.I8r(9, 11, 18);
            n7P[87]['x'] -= n7P[87][r8no$[n7P[37]]] / n7P[24];
            n7P[87]['x'] += 4;
          } else if (n7P[0][2] == 'right') {
            n7P[87]['x'] -= n7P[87]['width'];
            n7P[87]['x'] += 7;
          }
          n7P[87]['y'] = n7P[0][4];
          n7P[51]['addChild'](n7P[87]);
          for (n7P[15] = 0; n7P[15] < n7P[0][1]['length']; n7P[15]++) {
            n7P[31] = new PIXI['Text'](n7P[0][1][n7P[15]], {
              fontFamily: 'futurept_medium',
              fontSize: n7P[6],
              fill: 14079702
            });
            n7P[31]['resolution'] = n7P[2];
            n7P[31]['x'] = n7P[0][3];
            if (n7P[0][2] == 'center') {
              U3ndn.z_y(60);
              n7P[60] = U3ndn.E_K(15, 2325, 2808);
              U3ndn.z_y(187);
              n7P[58] = U3ndn.I8r(11, 1, 18, 5);
              n7P[31]['x'] -= n7P[31][r8no$[n7P[60]]] / n7P[58];
            } else if (n7P[0][2] == 'right') {
              n7P[31]['x'] -= n7P[31]['width'];
            }
            U3ndn.S2t(204);
            n7P[31]['y'] = U3ndn.I8r(n7P[15], n7P[1], n7P[0][4], n7P[5]);
            n7P[51]['addChild'](n7P[31]);
          }
          return n7P[51];
        }
        var M1p = [
          arguments
        ];
        M1p[8] = r8no$;
        G9Y('TUTORIAL', [
        ], 'center', - 365, 10);
        G9Y('TO MOVE', [
          'arrow keys',
          'press up to jump'
        ], 'left', - 670, 250);
        G9Y('TO WIN', [
          'be the last player alive',
          'at the end of a round'
        ], 'center', - 360, 200);
        G9Y('TO SURVIVE', [
          'stay on the level',
          'and don\'t touch anything black'
        ], 'right', - 50, 150);
        G9Y('TO BOUNCE HIGHER', [
          'hold UP while rising',
          'hold DOWN while falling'
        ], 'left', 15, 70);
        G9Y('HOLD X TO MAKE YOURSELF HEAVIER', [
          'always hold X before hitting another player',
          'so you have more momentum going into a collision'
        ], 'center', 515, 430);
        L8c[664] = G9Y('HOLD Z TO START DRAWING AN ARROW', [
          'then use LEFT and RIGHT to aim',
          'kill this bot to proceed'
        ], 'left', 750, 50);
        L8c[654] = G9Y('CONTROL POINTS', [
          'stay inside the control point to capture it',
          'this will win you the round and kill all enemy players',
          'capture it to finish the tutorial'
        ], 'right', 1425, 40);
        L8c[654]['visible'] = false;
      }
      function O4w() {
        U3ndn.w30();
        L8c[52] = true;
      }
      var L8c = [
        arguments
      ];
      L8c[7] = r8no$;
      L8c[9] = 1;
      L8c[1] = 0.5;
      L8c[6] = [
      ];
      this['destroyOneSkin'] = Z0B;
      this['destroySkins'] = F4J;
      L8c[8] = 0;
      L8c[3] = new T3;
      L8c[2] = document['getElementById']('xpbar');
      L8c[5] = document['getElementById']('xpbarcontainer');
      L8c[4] = document['getElementById']('ingametutorial');
      L8c[89] = document['getElementById']('ingametutorial_title');
      L8c[21] = document['getElementById']('ingametutorial_text');
      L8c[49] = document['getElementById']('ingamevotewindow');
      L8c[55] = PIXI['Container'];
      L8c[25] = PIXI['Sprite'];
      L8c[0][0] = L8c[0][0];
      U3ndn.z_y(7);
      L8c[162] = U3ndn.E_K(2699, 34820, 20, 14);
      L8c[84] = L8c[0][1] == U3ndn.j31(L8c[162]);
      U3ndn.S2t(53);
      L8c[180] = U3ndn.I8r(2681, 2691, 8, 15, 446);
      L8c[28] = L8c[0][1] == U3ndn.j31(L8c[180]);
      U3ndn.z_y(166);
      L8c[195] = U3ndn.I8r(3783, 5, 1261, 3763);
      L8c[53] = L8c[0][1] == U3ndn.j31(L8c[195]);
      if (L8c[84]) {
        L8c[26] = A['thumbRenderer'];
      } else if (L8c[28]) {
        L8c[26] = A['replayRenderer'];
        L8c[26]['view']['id'] = 'replaycanvas';
      } else if (L8c[53]) {
        if (!A['editorRenderer']) {
          A['editorRenderer'] = PIXI['autoDetectRenderer']({
            width: 730,
            height: 500,
            antialias: V6D[67]['customControls']['quality'] == 3,
            resolution: window['devicePixelRatio'],
            autoDensity: true,
            powerPreference: 'high-performance'
          });
        }
        L8c[26] = A['editorRenderer'];
      } else {
        L8c[26] = A['gameRenderer'];
      }
      L8c[0][0]['appendChild'](L8c[26]['view']);
      L8c[26]['view']['classList']['add']('gamecanvas');
      L8c[26]['view']['style']['visibility'] = 'hidden';
      L8c[39] = 0;
      L8c[73] = 0;
      L8c[50] = 0;
      L8c[42] = new PIXI['Container'];
      L8c[42]['y'] = 0;
      L8c[42]['x'] = 0;
      U3ndn.Y$U();
      L8c[42]['scale']['x'] = 1;
      L8c[42]['scale']['y'] = 1;
      L8c[67] = 2;
      L8c[78] = new V6D[30];
      L8c[78]['bc'] = 16777215;
      L8c[34] = [
      ];
      L8c[56] = null;
      if (PIXI['filters']['AdjustmentFilter']) {
        L8c[56] = new PIXI['filters']['AdjustmentFilter'];
      }
      L8c[15] = new PIXI['filters']['BlurFilter'];
      L8c[57] = new PIXI['filters']['BlurFilter'](8, 3, 1);
      L8c[90] = new PIXI['filters']['FXAAFilter'];
      L8c[35] = [
      ];
      L8c[45] = [
      ];
      L8c[37] = [
      ];
      L8c[75] = [
      ];
      L8c[59] = [
      ];
      L8c[86] = [
      ];
      L8c[22] = [
      ];
      L8c[88] = - 1;
      L8c[74] = 0;
      L8c[27] = [
      ];
      L8c[31] = [
      ];
      L8c[44] = - 1;
      L8c[94] = [
      ];
      L8c[48] = [
      ];
      L8c[13] = false;
      L8c[52] = false;
      L8c[63] = false;
      L8c[16] = false;
      L8c[30] = false;
      L8c[69] = undefined;
      L8c[77] = undefined;
      A['panSmooth'] = 0.05;
      this['getCanvas'] = function () {
        var n$I = [
          arguments
        ];
        n$I[9] = r8no$;
        return L8c[26]['view'];
      };
      L8c[71] = new PIXI['Graphics'];
      L8c[93] = C1Z('#3b536b', '#2c3e50');
      L8c[71]['beginTextureFill']({
        texture: L8c[93]
      });
      U3ndn.S2t(6);
      L8c[71]['drawRect'](0, 0, U3ndn.I8r(730, 50), U3ndn.I8r(500, 50));
      L8c[42]['addChild'](L8c[71]);
      L8c[71]['x'] = - 25;
      L8c[71]['y'] = - 25;
      if (PIXI['CanvasRenderer'] && L8c[26] instanceof PIXI['CanvasRenderer']) {
        L8c[71]['beginFill'](2176846);
        U3ndn.S2t(6);
        L8c[71]['drawRect'](0, 0, U3ndn.I8r(730, 50), U3ndn.E_K(500, 50));
      }
      L8c[41] = new PIXI['Container'];
      L8c[51] = new PIXI['Container'];
      L8c[92] = new PIXI['Container'];
      L8c[72] = new PIXI['Container'];
      L8c[96] = new PIXI['Container'];
      L8c[70] = new PIXI['Container'];
      L8c[68] = new PIXI['Graphics'];
      L8c[42]['addChild'](L8c[70]);
      L8c[70]['addChild'](L8c[92]);
      L8c[70]['addChild'](L8c[96]);
      L8c[70]['addChild'](L8c[72]);
      L8c[70]['addChild'](L8c[41]);
      L8c[70]['addChild'](L8c[51]);
      L8c[70]['addChild'](L8c[68]);
      L8c[81] = new PIXI['Graphics'];
      L8c[81]['beginTextureFill']({
        texture: L8c[93]
      });
      U3ndn.S2t(6);
      L8c[81]['drawRect'](0, 0, U3ndn.E_K(730, 50), U3ndn.I8r(500, 50));
      L8c[81]['x'] = - 25;
      L8c[81]['y'] = - 25;
      L8c[42]['addChild'](L8c[81]);
      L8c[81]['alpha'] = 0;
      L8c[76] = null;
      if (L8c[53]) {
        L8c[54] = new PIXI['Graphics'];
        L8c[54]['lineStyle'](4, 16776960);
        U3ndn.z_y(6);
        L8c[54]['drawRect']( - 2, - 2, U3ndn.I8r(730, 4), U3ndn.E_K(500, 4));
        L8c[70]['addChild'](L8c[54]);
        L8c[76] = new PIXI['Graphics'];
        L8c[70]['addChild'](L8c[76]);
      }
      L8c[10] = null;
      L8c[32] = null;
      L8c[36] = null;
      L8c[46] = null;
      L8c[20] = new TWEEN['Group'];
      L8c[18] = new TWEEN['Group'];
      L8c[40] = document['getElementById']('ingamewinner');
      L8c[24] = document['getElementById']('ingamewinner_top');
      L8c[61] = document['getElementById']('ingamewinner_bottom');
      L8c[11] = document['getElementById']('ingamewinner_skin');
      L8c[43] = document['getElementById']('ingamewinner_skin_skin');
      L8c[83] = document['getElementById']('ingamewinner_skin_x');
      L8c[64] = new PIXI['Container'];
      L8c[23] = new PIXI['Text']('Chaz wins', {
        fontFamily: 'futurept_demi_oblique',
        fontSize: 45,
        fill: 16448250,
        padding: 5
      });
      L8c[23]['resolution'] = L8c[67];
      L8c[42]['addChild'](L8c[64]);
      U3ndn.z_y(64);
      L8c[744] = U3ndn.I8r(473, 473, 467, 1);
      U3ndn.S2t(115);
      L8c[740] = U3ndn.E_K(4, 2, 7, 26);
      L8c[33] = L8c[23][r8no$[L8c[744]]] + L8c[740];
      U3ndn.S2t(107);
      L8c[923] = U3ndn.I8r(94, 6, 11, 559);
      U3ndn.z_y(152);
      L8c[138] = U3ndn.E_K(20, 135, 10, 4, 9);
      L8c[91] = L8c[23][r8no$[L8c[923]]] + L8c[138];
      U3ndn.S2t(9);
      L8c[216] = U3ndn.I8r(8892, 52884, 6);
      U3ndn.z_y(186);
      L8c[926] = U3ndn.I8r(2, 4, 16, 4);
      L8c[23]['x'] = - L8c[23][r8no$[L8c[216]]] / L8c[926];
      U3ndn.z_y(38);
      L8c[251] = U3ndn.E_K(2, 25, 8, 452, 2);
      U3ndn.S2t(6);
      L8c[364] = U3ndn.I8r(0, 2);
      L8c[23]['y'] = - L8c[23][r8no$[L8c[251]]] / L8c[364];
      L8c[58] = new PIXI['Graphics'];
      L8c[58]['beginFill'](0);
      L8c[58]['alpha'] = 0.25;
      U3ndn.z_y(156);
      L8c[58]['drawRect'](U3ndn.E_K(2, L8c[33]), U3ndn.I8r(2, L8c[91]), L8c[33], L8c[91]);
      L8c[64]['addChild'](L8c[58]);
      L8c[64]['addChild'](L8c[23]);
      L8c[64]['alpha'] = 0;
      U3ndn.z_y(0);
      L8c[64]['x'] = U3ndn.E_K(730, 2);
      L8c[64]['y'] = 220;
      L8c[80] = new PIXI['Container'];
      L8c[47] = new PIXI['Text']('FIRST TO 6 WINS', {
        fontFamily: 'futurept_medium_oblique',
        fontSize: 12,
        fill: 15658734,
        padding: 1
      });
      L8c[47]['resolution'] = L8c[67];
      L8c[42]['addChild'](L8c[80]);
      U3ndn.S2t(1);
      L8c[917] = U3ndn.E_K(479, 11);
      U3ndn.z_y(6);
      L8c[772] = U3ndn.E_K(2, 8);
      L8c[33] = L8c[47][r8no$[L8c[917]]] + L8c[772];
      U3ndn.S2t(105);
      L8c[975] = U3ndn.E_K(2, 462, 394, 6);
      U3ndn.S2t(67);
      L8c[732] = U3ndn.I8r(1, 4, 50, 43, 7);
      L8c[91] = L8c[47][r8no$[L8c[975]]] + L8c[732];
      U3ndn.S2t(198);
      L8c[668] = U3ndn.E_K(9, 364, 1, 7488);
      U3ndn.S2t(199);
      L8c[314] = U3ndn.I8r(19, 3, 1, 14, 1);
      L8c[47]['x'] = - L8c[47][r8no$[L8c[668]]] / L8c[314];
      U3ndn.S2t(64);
      L8c[950] = U3ndn.E_K(23, 1, 446, 1);
      U3ndn.S2t(200);
      L8c[102] = U3ndn.I8r(4, 10, 149, 19, 3);
      L8c[47]['y'] = - L8c[47][r8no$[L8c[950]]] / L8c[102];
      L8c[14] = new PIXI['Graphics'];
      L8c[14]['beginFill'](0);
      L8c[14]['alpha'] = 0.25;
      U3ndn.z_y(156);
      L8c[14]['drawRect']( - 80, U3ndn.I8r(2, L8c[91]), 160, L8c[91]);
      L8c[80]['addChild'](L8c[14]);
      L8c[80]['addChild'](L8c[47]);
      L8c[80]['alpha'] = 0;
      U3ndn.z_y(0);
      L8c[80]['x'] = U3ndn.E_K(730, 2);
      L8c[80]['y'] = 420;
      L8c[99] = new PIXI['Container'];
      L8c[60] = new PIXI['Text'](U3ndn.j31(4121) /*Chaz:
Fantao:
FannyFlaps:*/
      , {
        fontFamily: 'futurept_medium_oblique',
        fontSize: 16,
        fill: 15658734,
        padding: 5,
        align: 'left'
      });
      L8c[97] = new PIXI['Text'](U3ndn.j31(1608) /*0
0
0*/
      , {
        fontFamily: 'futurept_medium_oblique',
        fontSize: 16,
        fill: 15658734,
        padding: 5,
        align: 'right'
      });
      L8c[97]['anchor']['set'](1, 0);
      L8c[60]['resolution'] = L8c[67];
      L8c[97]['resolution'] = L8c[67];
      L8c[42]['addChild'](L8c[99]);
      U3ndn.S2t(26);
      L8c[832] = U3ndn.E_K(17, 1872, 25978, 14);
      U3ndn.z_y(13);
      L8c[528] = U3ndn.E_K(32, 3, 15);
      L8c[33] = L8c[60][r8no$[L8c[832]]] + L8c[528];
      U3ndn.S2t(73);
      L8c[698] = U3ndn.I8r(1, 481, 12);
      U3ndn.S2t(15);
      L8c[911] = U3ndn.E_K(15, 17, 26);
      L8c[91] = L8c[60][r8no$[L8c[698]]] + L8c[911];
      U3ndn.S2t(201);
      L8c[60]['x'] = U3ndn.I8r(70, 5);
      L8c[60]['y'] = - 0;
      L8c[97]['x'] = 75;
      L8c[97]['y'] = - 0;
      L8c[38] = new PIXI['Graphics'];
      L8c[38]['beginFill'](0);
      L8c[38]['alpha'] = 0.25;
      L8c[38]['drawRect']( - 80, - 3, 160, L8c[91]);
      L8c[99]['addChild'](L8c[38]);
      L8c[99]['addChild'](L8c[60]);
      L8c[99]['addChild'](L8c[97]);
      L8c[99]['alpha'] = 0;
      U3ndn.S2t(0);
      L8c[99]['x'] = U3ndn.I8r(730, 2);
      L8c[99]['y'] = 320;
      L8c[12] = new PIXI['Container'];
      L8c[62] = new PIXI['Text']('Map X by Author Y', {
        fontFamily: 'futurept_book',
        fontSize: 11,
        fill: 16448250,
        padding: 4
      });
      L8c[62]['resolution'] = L8c[67];
      L8c[42]['addChild'](L8c[12]);
      U3ndn.z_y(45);
      L8c[648] = U3ndn.I8r(2, 5, 4342, 481);
      U3ndn.z_y(15);
      L8c[938] = U3ndn.I8r(8, 25, 23);
      L8c[33] = L8c[62][r8no$[L8c[648]]] + L8c[938];
      U3ndn.S2t(9);
      L8c[810] = U3ndn.E_K(7504, 74571, 10);
      U3ndn.z_y(6);
      L8c[916] = U3ndn.I8r(0, 5);
      L8c[91] = L8c[62][r8no$[L8c[810]]] + L8c[916];
      U3ndn.S2t(27);
      L8c[913] = U3ndn.E_K(11, 26, 10, 463);
      U3ndn.z_y(15);
      L8c[878] = U3ndn.E_K(6, 0, 4);
      L8c[62]['x'] = - L8c[62][r8no$[L8c[913]]] / L8c[878];
      U3ndn.z_y(65);
      L8c[685] = U3ndn.E_K(14, 464, 8, 397);
      U3ndn.z_y(202);
      L8c[463] = U3ndn.I8r(25, 7, 5, 12);
      L8c[62]['y'] = - L8c[62][r8no$[L8c[685]]] / L8c[463];
      L8c[29] = new PIXI['Graphics'];
      L8c[29]['beginFill'](0);
      L8c[29]['alpha'] = 0.25;
      U3ndn.z_y(156);
      L8c[29]['drawRect'](U3ndn.E_K(2, L8c[33]), U3ndn.I8r(2, L8c[91]), L8c[33], L8c[91]);
      L8c[12]['addChild'](L8c[29]);
      L8c[12]['addChild'](L8c[62]);
      L8c[12]['alpha'] = 1;
      U3ndn.z_y(7);
      L8c[183] = U3ndn.I8r(732, 5102, 3, 8);
      U3ndn.z_y(193);
      L8c[546] = U3ndn.E_K(25, 13, 12, 9, 12);
      U3ndn.S2t(1);
      L8c[532] = U3ndn.I8r(474, 6);
      U3ndn.S2t(50);
      L8c[230] = U3ndn.I8r(2, 10, 7, 119, 7);
      L8c[12]['x'] = L8c[183] - L8c[546] - L8c[12][r8no$[L8c[532]]] / L8c[230];
      U3ndn.S2t(6);
      L8c[886] = U3ndn.I8r(490, 10);
      U3ndn.S2t(1);
      L8c[235] = U3ndn.E_K(14, 9);
      U3ndn.S2t(6);
      L8c[607] = U3ndn.I8r(39, 430);
      U3ndn.z_y(1);
      L8c[996] = U3ndn.I8r(5, 3);
      L8c[12]['y'] = L8c[886] - L8c[235] - L8c[12][r8no$[L8c[607]]] / L8c[996];
      if (L8c[84] || L8c[53] || L8c[28]) {
        L8c[12]['visible'] = false;
      }
      L8c[98] = new PIXI['Container'];
      L8c[42]['addChild'](L8c[98]);
      L8c[98]['visible'] = false;
      L8c[19] = new PIXI['Text']('You are currently spectating', {
        fontFamily: 'futurept_book',
        fontSize: 14,
        fill: 15658734,
        padding: 4
      });
      L8c[19]['resolution'] = L8c[67];
      L8c[19]['x'] = 8;
      L8c[19]['y'] = 5;
      L8c[85] = new PIXI['Text']('You will join this game at the start of the next round', {
        fontFamily: 'futurept_book',
        fontSize: 12,
        fill: 15658734,
        padding: 4
      });
      L8c[85]['resolution'] = L8c[67];
      L8c[85]['x'] = 8;
      L8c[85]['y'] = 26;
      L8c[65] = new PIXI['Graphics'];
      L8c[65]['beginFill'](0);
      L8c[65]['alpha'] = 0.35;
      L8c[65]['drawRect'](0, 0, 260, 46);
      L8c[98]['addChild'](L8c[65]);
      L8c[98]['addChild'](L8c[19]);
      L8c[98]['addChild'](L8c[85]);
      L8c[98]['x'] = 5;
      L8c[98]['y'] = 40;
      L8c[82] = new PIXI['Container'];
      L8c[42]['addChild'](L8c[82]);
      L8c[82]['visible'] = false;
      L8c[87] = new PIXI['Text']('Please wait a moment', {
        fontFamily: 'futurept_book',
        fontSize: 14,
        fill: 15658734,
        padding: 4
      });
      L8c[87]['resolution'] = L8c[67];
      L8c[87]['x'] = 8;
      L8c[87]['y'] = 5;
      L8c[17] = new PIXI['Text']('You will be matched with other players shortly', {
        fontFamily: 'futurept_book',
        fontSize: 12,
        fill: 15658734,
        padding: 4
      });
      L8c[17]['resolution'] = L8c[67];
      L8c[17]['x'] = 8;
      L8c[17]['y'] = 26;
      L8c[79] = new PIXI['Graphics'];
      L8c[79]['beginFill'](0);
      L8c[79]['alpha'] = 0.35;
      L8c[79]['drawRect'](0, 0, 260, 46);
      L8c[82]['addChild'](L8c[79]);
      L8c[82]['addChild'](L8c[87]);
      L8c[82]['addChild'](L8c[17]);
      L8c[82]['x'] = 5;
      L8c[82]['y'] = 40;
      L8c[95] = new PIXI['Container'];
      L8c[42]['addChild'](L8c[95]);
      L8c[95]['visible'] = false;
      L8c[66] = new PIXI['Text']('You are about to be kicked for inactivity', {
        fontFamily: 'futurept_book',
        fontSize: 14,
        fill: 15658734,
        padding: 4
      });
      L8c[66]['resolution'] = L8c[67];
      L8c[66]['x'] = 8;
      L8c[66]['y'] = 5;
      L8c[117] = new PIXI['Text']('Press any movement key to stay in this room!', {
        fontFamily: 'futurept_book',
        fontSize: 12,
        fill: 15658734,
        padding: 4
      });
      L8c[117]['resolution'] = L8c[67];
      L8c[117]['x'] = 8;
      L8c[117]['y'] = 26;
      L8c[644] = new PIXI['Graphics'];
      L8c[644]['beginFill'](0);
      L8c[644]['alpha'] = 0.35;
      L8c[644]['drawRect'](0, 0, 260, 46);
      L8c[95]['addChild'](L8c[644]);
      L8c[95]['addChild'](L8c[66]);
      L8c[95]['addChild'](L8c[117]);
      L8c[95]['x'] = 5;
      L8c[95]['y'] = 90;
      L8c[260] = new PIXI['Graphics'];
      U3ndn.S2t(0);
      L8c[260]['x'] = U3ndn.E_K(730, 2);
      L8c[260]['y'] = 220;
      L8c[42]['addChild'](L8c[260]);
      L8c[694] = 260;
      L8c[539] = new PIXI['Graphics'];
      L8c[539]['beginFill'](0, 0.4);
      U3ndn.S2t(156);
      L8c[539]['drawRect'](U3ndn.E_K(2, L8c[694]), U3ndn.I8r(2, 50), L8c[694], 50);
      L8c[260]['addChild'](L8c[539]);
      L8c[820] = new PIXI['Graphics'];
      L8c[820]['beginFill'](0, 0.4);
      U3ndn.z_y(156);
      L8c[820]['drawRect'](U3ndn.I8r(2, L8c[694]), U3ndn.E_K(2, 25), L8c[694], 25);
      L8c[260]['addChild'](L8c[820]);
      L8c[589] = new PIXI['Graphics'];
      L8c[589]['beginFill'](0, 0.4);
      U3ndn.S2t(156);
      L8c[589]['drawRect'](U3ndn.I8r(2, L8c[694]), U3ndn.I8r(2, 20), L8c[694], 20);
      L8c[260]['addChild'](L8c[589]);
      L8c[242] = new PIXI['Text']('ARROWS', {
        fontFamily: 'futurept_medium',
        fontSize: 36,
        fill: 15658734,
        padding: 4
      });
      L8c[718] = new PIXI['Text']('5v1', {
        fontFamily: 'futurept_medium',
        fontSize: 16,
        fill: 15658734,
        padding: 4
      });
      L8c[337] = new PIXI['Text']('FIRST TO 5 WINS', {
        fontFamily: 'futurept_medium',
        fontSize: 13,
        fill: 15658734,
        padding: 4
      });
      L8c[242]['anchor']['set'](0.5, 0.5);
      L8c[718]['anchor']['set'](0.5, 0.5);
      L8c[337]['anchor']['set'](0.5, 0.5);
      L8c[242]['resolution'] = L8c[67];
      L8c[718]['resolution'] = L8c[67];
      L8c[337]['resolution'] = L8c[67];
      L8c[260]['addChild'](L8c[242]);
      L8c[260]['addChild'](L8c[718]);
      L8c[260]['addChild'](L8c[337]);
      L8c[242]['y'] = L8c[539]['y'] = 0;
      L8c[718]['y'] = L8c[820]['y'] = 44;
      L8c[337]['y'] = L8c[589]['y'] = 70;
      L8c[984] = - 1;
      L8c[666] = 2;
      L8c[517] = [
      ];
      L8c[873] = [
      ];
      for (L8c[282] = 0; L8c[282] < L8c[666]; L8c[282]++) {
        L8c[517]['push'](new Howl({
          src: GameResources['soundStrings']['capIncrease'],
          volume: 0.5,
          loop: false
        }));
        L8c[873]['push'](new Howl({
          src: GameResources['soundStrings']['capDecrease'],
          volume: 0.5,
          loop: false
        }));
      }
      L8c[872] = new V6D[13](L8c[42], L8c[67]);
      O4w();
      L8c[673] = {
        blur: 0
      };
      L8c[218] = null;
      this['blur'] = function () {
        var e8d = [
          arguments
        ];
        U3ndn.Y$U();
        e8d[9] = r8no$;
        if (L8c[218]) {
          L8c[218]['pause']();
        }
        L8c[218] = anime({
          targets: L8c[673],
          blur: '6',
          autoplay: true,
          duration: 100,
          delay: 0,
          easing: 'linear'
        });
      };
      this['unblur'] = function () {
        var D7d = [
          arguments
        ];
        D7d[3] = r8no$;
        if (L8c[218]) {
          L8c[218]['pause']();
        }
        L8c[218] = anime({
          targets: L8c[673],
          blur: '0',
          autoplay: true,
          duration: 100,
          delay: 0,
          easing: 'linear'
        });
      };
      this['panStage'] = function (o7s, u_n) {
        var m9z = [
          arguments
        ];
        m9z[9] = r8no$;
        L8c[70]['x'] += m9z[0][0];
        U3ndn.Y$U();
        L8c[70]['y'] += m9z[0][1];
      };
      this['scaleStage'] = function (k$b) {
        var p3E = [
          arguments
        ];
        p3E[5] = r8no$;
        U3ndn.S2t(17);
        p3E[22] = U3ndn.E_K(32, 4, 3);
        U3ndn.S2t(203);
        p3E[28] = U3ndn.E_K(5, 4, 1816, 2, 4380);
        U3ndn.z_y(13);
        p3E[71] = U3ndn.I8r(734, 15, 19);
        U3ndn.z_y(15);
        p3E[26] = U3ndn.E_K(9, 417, 12);
        U3ndn.S2t(50);
        p3E[52] = U3ndn.I8r(17, 17, 6, 110, 5);
        p3E[8] = ( - L8c[70][r8no$[p3E[22]]] + p3E[28]) / (p3E[71] * L8c[70][r8no$[p3E[26]]][r8no$[p3E[52]]]);
        U3ndn.S2t(55);
        p3E[70] = U3ndn.E_K(10, 5, 23, 13, 55);
        U3ndn.z_y(146);
        p3E[65] = U3ndn.E_K(15, 4000, 2, 227, 400);
        U3ndn.S2t(9);
        p3E[30] = U3ndn.E_K(8000, 79500, 10);
        U3ndn.z_y(55);
        p3E[17] = U3ndn.I8r(7, 9, 31, 11, 432);
        U3ndn.S2t(14);
        p3E[93] = U3ndn.E_K(2, 32, 24);
        p3E[6] = ( - L8c[70][r8no$[p3E[70]]] + p3E[65]) / (p3E[30] * L8c[70][r8no$[p3E[17]]][r8no$[p3E[93]]]);
        U3ndn.S2t(13);
        p3E[34] = U3ndn.E_K(365, 380, 15);
        U3ndn.z_y(53);
        p3E[73] = U3ndn.E_K(357, 46, 14, 3, 1);
        U3ndn.S2t(130);
        p3E[59] = U3ndn.E_K(57, 3, 20, 1, 36);
        p3E[3] = p3E[34] * L8c[70][r8no$[p3E[73]]][r8no$[p3E[59]]];
        U3ndn.z_y(147);
        p3E[50] = U3ndn.I8r(4, 19, 11, 45, 640);
        U3ndn.S2t(115);
        p3E[36] = U3ndn.E_K(11592, 2, 413, 5796);
        U3ndn.z_y(1);
        p3E[16] = U3ndn.I8r(55, 15);
        p3E[1] = p3E[50] * L8c[70][r8no$[p3E[36]]][r8no$[p3E[16]]];
        L8c[70]['scale']['x'] *= p3E[0][0];
        L8c[70]['scale']['y'] *= p3E[0][0];
        U3ndn.S2t(6);
        p3E[32] = U3ndn.I8r(726, 4);
        U3ndn.S2t(115);
        U3ndn.w30();
        p3E[74] = U3ndn.E_K(14, 4, 404, 35);
        U3ndn.z_y(14);
        p3E[97] = U3ndn.E_K(5, 5, 38);
        p3E[7] = p3E[32] * L8c[70][r8no$[p3E[74]]][r8no$[p3E[97]]];
        U3ndn.S2t(85);
        p3E[90] = U3ndn.E_K(1408, 9500, 5, 8);
        U3ndn.z_y(119);
        p3E[76] = U3ndn.E_K(446, 12, 407, 434, 7);
        U3ndn.S2t(155);
        p3E[24] = U3ndn.E_K(1, 2, 440, 13, 5706);
        p3E[4] = p3E[90] * L8c[70][r8no$[p3E[76]]][r8no$[p3E[24]]];
        U3ndn.S2t(1);
        p3E[9] = U3ndn.I8r(p3E[7], p3E[3]);
        U3ndn.z_y(1);
        p3E[2] = U3ndn.E_K(p3E[4], p3E[1]);
        U3ndn.S2t(137);
        this['panStage'](U3ndn.I8r(p3E[9], p3E[8]), U3ndn.E_K(p3E[2], p3E[6]));
      };
      this['getStageScale'] = function () {
        var K3Y = [
          arguments
        ];
        U3ndn.Y$U();
        K3Y[1] = r8no$;
        return L8c[70]['scale']['x'];
      };
      this['resetStage'] = function () {
        var y27 = [
          arguments
        ];
        y27[1] = r8no$;
        L8c[70]['x'] = 0;
        L8c[70]['y'] = 0;
        L8c[70]['scale']['x'] = 1;
        L8c[70]['scale']['y'] = 1;
      };
      this['screenRatioToPhysicsCoordinate'] = function (X_0, j$3) {
        var m6e = [
          arguments
        ];
        m6e[8] = r8no$;
        U3ndn.S2t(6);
        m6e[64] = U3ndn.E_K(35, 4);
        U3ndn.S2t(14);
        m6e[11] = U3ndn.E_K(5, 400, 334);
        U3ndn.z_y(78);
        m6e[87] = U3ndn.I8r(7, 14, 14, 32);
        m6e[4] = - L8c[70][r8no$[m6e[64]]] / L8c[70][r8no$[m6e[11]]][r8no$[m6e[87]]];
        U3ndn.z_y(78);
        m6e[30] = U3ndn.I8r(3, 9, 3, 733);
        U3ndn.S2t(6);
        m6e[33] = U3ndn.I8r(395, 19);
        U3ndn.z_y(14);
        m6e[21] = U3ndn.E_K(2, 46, 16);
        m6e[9] = m6e[4] + m6e[30] / L8c[70][r8no$[m6e[33]]][r8no$[m6e[21]]];
        U3ndn.z_y(6);
        m6e[15] = U3ndn.E_K(5, 35);
        U3ndn.z_y(9);
        m6e[29] = U3ndn.E_K(424, 2130, 6);
        U3ndn.S2t(193);
        m6e[12] = U3ndn.E_K(280, 19, 9, 10, 240);
        m6e[5] = - L8c[70][r8no$[m6e[15]]] / L8c[70][r8no$[m6e[29]]][r8no$[m6e[12]]];
        U3ndn.z_y(15);
        m6e[61] = U3ndn.I8r(12, 5000, 4512);
        U3ndn.z_y(12);
        m6e[65] = U3ndn.E_K(3312, 10, 5, 7452);
        U3ndn.S2t(64);
        m6e[67] = U3ndn.I8r(440, 10, 29, 4);
        m6e[3] = m6e[5] + m6e[61] / L8c[70][r8no$[m6e[65]]][r8no$[m6e[67]]];
        m6e[4] -= 365;
        m6e[9] -= 365;
        m6e[3] -= 250;
        m6e[5] -= 250;
        U3ndn.z_y(1);
        m6e[2] = U3ndn.I8r(m6e[9], m6e[4]);
        U3ndn.S2t(1);
        m6e[6] = U3ndn.E_K(m6e[3], m6e[5]);
        U3ndn.S2t(58);
        m6e[1] = U3ndn.I8r(m6e[2], m6e[4], m6e[0][0]);
        U3ndn.z_y(58);
        m6e[7] = U3ndn.E_K(m6e[6], m6e[5], m6e[0][1]);
        return {
          x: m6e[1],
          y: m6e[7]
        };
      };
      this['highlightPlatform'] = function (D3e) {
        var W34 = [
          arguments
        ];
        L8c[10] = W34[0][0];
      };
      this['highlightFixture'] = function (a1s) {
        var z8P = [
          arguments
        ];
        L8c[32] = z8P[0][0];
      };
      this['clearHighlightPlatform'] = function () {
        L8c[10] = null;
      };
      this['clearHighlightFixture'] = function () {
        U3ndn.w30();
        L8c[32] = null;
      };
      this['highlightSpawn'] = function (F52) {
        U3ndn.w30();
        var e6p = [
          arguments
        ];
        L8c[36] = e6p[0][0];
      };
      this['clearHighlightSpawn'] = function () {
        U3ndn.Y$U();
        L8c[36] = null;
      };
      this['highlightJoint'] = function (b1d) {
        var V2Z = [
          arguments
        ];
        L8c[46] = V2Z[0][0];
      };
      this['clearHighlightJoint'] = function () {
        L8c[46] = null;
      };
      this['hideSnapGrid'] = function () {
        var c2a = [
          arguments
        ];
        c2a[1] = r8no$;
        L8c[68]['clear']();
      };
      this['showSnapGrid'] = function (i3o) {
        var b2S = [
          arguments
        ];
        b2S[1] = r8no$;
        L8c[68]['clear']();
        U3ndn.S2t(0);
        b2S[5] = U3ndn.E_K(730, b2S[0][0]);
        U3ndn.S2t(0);
        b2S[4] = U3ndn.E_K(500, b2S[0][0]);
        L8c[68]['lineStyle'](0.5, 16777215, 0.35);
        U3ndn.z_y(57);
        L8c[68]['moveTo'](U3ndn.I8r(1000, 365), 250);
        U3ndn.S2t(6);
        L8c[68]['lineTo'](U3ndn.E_K(1000, 365), 250);
        U3ndn.z_y(57);
        L8c[68]['moveTo'](365, U3ndn.E_K(1000, 250));
        U3ndn.S2t(6);
        L8c[68]['lineTo'](365, U3ndn.I8r(1000, 250));
        for (b2S[2] = 1; b2S[2] < b2S[4]; b2S[2]++) {
          if (b2S[2] % 10 == 0) {
            L8c[68]['lineStyle'](0.5, 16777215, 0.3);
          } else {
            L8c[68]['lineStyle'](0.5, 16777215, 0.15);
          }
          U3ndn.S2t(57);
          L8c[68]['moveTo'](U3ndn.E_K(1000, 365), U3ndn.I8r(b2S[2], 250, b2S[0][0], U3ndn.z_y(58)));
          U3ndn.z_y(6);
          L8c[68]['lineTo'](U3ndn.E_K(1000, 365), U3ndn.I8r(b2S[2], 250, b2S[0][0], U3ndn.S2t(58)));
          U3ndn.z_y(57);
          L8c[68]['moveTo'](U3ndn.E_K(1000, 365), U3ndn.E_K(b2S[0][0], b2S[2], 250, U3ndn.z_y(192)));
          U3ndn.z_y(6);
          L8c[68]['lineTo'](U3ndn.I8r(1000, 365), U3ndn.E_K(b2S[0][0], b2S[2], 250, U3ndn.S2t(192)));
        }
        for (b2S[7] = 1; b2S[7] < b2S[5]; b2S[7]++) {
          if (b2S[7] % 10 == 0) {
            L8c[68]['lineStyle'](0.5, 16777215, 0.3);
          } else {
            L8c[68]['lineStyle'](0.5, 16777215, 0.15);
          }
          U3ndn.S2t(58);
          L8c[68]['moveTo'](U3ndn.E_K(b2S[7], 365, b2S[0][0]), U3ndn.I8r(1000, 250, U3ndn.S2t(57)));
          U3ndn.S2t(58);
          L8c[68]['lineTo'](U3ndn.I8r(b2S[7], 365, b2S[0][0]), U3ndn.E_K(1000, 250, U3ndn.S2t(6)));
          U3ndn.z_y(192);
          L8c[68]['moveTo'](U3ndn.I8r(b2S[0][0], b2S[7], 365), U3ndn.E_K(1000, 250, U3ndn.S2t(57)));
          U3ndn.S2t(192);
          L8c[68]['lineTo'](U3ndn.I8r(b2S[0][0], b2S[7], 365), U3ndn.E_K(1000, 250, U3ndn.S2t(6)));
        }
      };
      this['drawPolygonPreview'] = function (Y7n, c40, M_d, X0F, k_C) {
        var J7r = [
          arguments
        ];
        J7r[9] = r8no$;
        L8c[76]['clear']();
        while (L8c[76]['children']['length'] > 0) {
          L8c[76]['removeChildAt'](0);
        }
        if (J7r[0][0]) {
          J7r[2] = new PIXI['Graphics'];
          J7r[2]['lineStyle'](4, 16777215);
          J7r[2]['moveTo'](0, - 10);
          J7r[2]['lineTo'](0, 10);
          J7r[2]['lineStyle'](4, 0);
          J7r[2]['moveTo']( - 10, 0);
          J7r[2]['lineTo'](10, 0);
          L8c[76]['addChild'](J7r[2]);
          J7r[2]['x'] = J7r[0][0]['x'];
          J7r[2]['y'] = J7r[0][0]['y'];
          U3ndn.z_y(6);
          L8c[76]['x'] = U3ndn.E_K(J7r[0][2], 365);
          U3ndn.S2t(6);
          L8c[76]['y'] = U3ndn.E_K(J7r[0][3], 250);
          L8c[76]['rotation'] = J7r[0][4];
        }
        L8c[76]['lineStyle'](2, 7829503);
        if (J7r[0][1][0]) {
          L8c[76]['moveTo'](J7r[0][1][0][0], J7r[0][1][0][1]);
        }
        for (J7r[5] = 0; J7r[5] < J7r[0][1]['length']; J7r[5]++) {
          L8c[76]['lineTo'](J7r[0][1][J7r[5]][0], J7r[0][1][J7r[5]][1]);
        }
        L8c[26]['render'](L8c[42]);
      };
      this['clearPolygonPreview'] = function () {
        var D3m = [
          arguments
        ];
        D3m[3] = r8no$;
        L8c[76]['clear']();
        while (L8c[76]['children']['length'] > 0) {
          L8c[76]['removeChildAt'](0);
        }
      };
      this['checkAndResizeRenderer'] = function () {
        var i2z = [
          arguments
        ];
        i2z[5] = r8no$;
        U3ndn.w30();
        if (L8c[39] != L8c[0][0]['offsetWidth'] || L8c[73] != L8c[0][0]['offsetHeight']) {
          this['resizeRenderer']();
        }
      };
      this['resizeRenderer'] = function () {
        var r9V = [
          arguments
        ];
        r9V[6] = r8no$;
        L8c[39] = L8c[0][0]['offsetWidth'];
        L8c[73] = L8c[0][0]['offsetHeight'];
        U3ndn.S2t(0);
        r9V[2] = U3ndn.E_K(730, 500);
        U3ndn.z_y(0);
        r9V[1] = U3ndn.I8r(L8c[39], L8c[73]);
        r9V[7] = 0;
        r9V[3] = 0;
        r9V[5] = 0;
        if (false && L8c[28]) {
          if (r9V[1] > r9V[2]) {
            r9V[7] = L8c[39];
            U3ndn.S2t(0);
            r9V[3] = U3ndn.E_K(r9V[7], r9V[2]);
          } else {
            r9V[3] = L8c[73];
            U3ndn.z_y(4);
            r9V[7] = U3ndn.I8r(r9V[2], r9V[3]);
          }
        } else if (r9V[1] > r9V[2]) {
          r9V[3] = L8c[73];
          U3ndn.z_y(4);
          r9V[7] = U3ndn.E_K(r9V[2], r9V[3]);
        } else {
          r9V[7] = L8c[39];
          U3ndn.z_y(0);
          r9V[3] = U3ndn.I8r(r9V[7], r9V[2]);
        }
        U3ndn.z_y(0);
        r9V[5] = U3ndn.I8r(r9V[7], 730);
        if (r9V[7] > 1460) {
          L8c[67] = 4;
        } else {
          L8c[67] = 2;
        }
        U3ndn.Y$U();
        L8c[26]['resize'](r9V[7], r9V[3]);
        L8c[42]['scale']['x'] = r9V[5];
        L8c[42]['scale']['y'] = r9V[5];
        U3ndn.S2t(6);
        r9V[9] = U3ndn.E_K(423, 846);
        L8c[2]['style']['width'] = r9V[7] * 0.9 + U3ndn.j31(r9V[9]);
        if (r9V[5] < 1.5) {
          U3ndn.S2t(0);
          L8c[40]['style']['zoom'] = U3ndn.I8r(r9V[5], 1.5);
        } else {
          L8c[40]['style']['zoom'] = '1';
        }
      };
      this['forceRendererSize'] = function (k5U, A1V) {
        var N0i = [
          arguments
        ];
        N0i[5] = r8no$;
        L8c[26]['resize'](N0i[0][0], N0i[0][1]);
        U3ndn.S2t(0);
        L8c[42]['scale']['x'] = U3ndn.E_K(N0i[0][0], 730);
        U3ndn.S2t(0);
        L8c[42]['scale']['y'] = U3ndn.E_K(N0i[0][0], 730);
      };
      this['destroy'] = function () {
        var f6d = [
          arguments
        ];
        f6d[3] = r8no$;
        m5$();
        L8c[26]['clear']();
        U3ndn.w30();
        if (L8c[26]['view']['parentNode'] == L8c[0][0]) {
          L8c[0][0]['removeChild'](L8c[26]['view']);
        }
        L8c[0][0] = null;
        L8c[26] = null;
        L8c[34] = null;
        L8c[40]['style']['visibility'] = 'hidden';
        F4J();
      };
      this['replayFadeOut'] = function () {
        var z3Y = [
          arguments
        ];
        z3Y[5] = r8no$;
        U3ndn.Y$U();
        anime({
          targets: L8c[26]['view'],
          opacity: '0',
          autoplay: true,
          duration: 200,
          delay: 0,
          easing: 'linear'
        });
      };
      this['replayFadeIn'] = function () {
        U3ndn.w30();
        var o1a = [
          arguments
        ];
        o1a[7] = r8no$;
        L8c[26]['view']['style']['opacity'] = '0';
        anime({
          targets: L8c[26]['view'],
          opacity: '1',
          autoplay: true,
          duration: 200,
          delay: 20,
          easing: 'linear'
        });
      };
      this['setPlayerArray'] = function (K_1) {
        var x$C = [
          arguments
        ];
        U3ndn.w30();
        L8c[22] = x$C[0][0];
      };
      this['setLocalPlayerID'] = function (s96) {
        var C1L = [
          arguments
        ];
        L8c[88] = C1L[0][0];
      };
      this['enableTutorialText'] = function () {
        var j08 = [
          arguments
        ];
        j08[8] = r8no$;
        L8c[63] = true;
        L8c[12]['visible'] = false;
      };
      this['setCameraPans'] = function () {
        U3ndn.w30();
        L8c[30] = true;
      };
      this['showAfkWarn'] = function () {
        var Q9r = [
          arguments
        ];
        Q9r[4] = r8no$;
        L8c[95]['visible'] = true;
      };
      this['clearAfkWarn'] = function () {
        var t8a = [
          arguments
        ];
        t8a[5] = r8no$;
        L8c[95]['visible'] = false;
      };
      L8c[961] = new TWEEN['Group'];
      L8c[140] = {
        x: 0,
        y: 0
      };
      A['preShakeTime'] = 50;
      A['postShakeTime'] = 800;
      A['shakeAmount'] = 0.012;
      this['screenShake'] = function (a9J, G71) {
        U3ndn.w30();
        var o9G = [
          arguments
        ];
        o9G[7] = r8no$;
        L8c[961]['removeAll']();
        o9G[4] = new TWEEN['Tween'](L8c[140], L8c[961]);
        o9G[4]['to']({
          x: o9G[0][0],
          y: o9G[0][1]
        }, A['preShakeTime']);
        o9G[4]['easing'](TWEEN['Easing']['Cubic']['Out']);
        o9G[4]['onComplete'](function () {
          var y5Z = [
            arguments
          ];
          y5Z[6] = r8no$;
          y5Z[7] = new TWEEN['Tween'](L8c[140], L8c[961]);
          y5Z[7]['to']({
            x: 0,
            y: 0
          }, A['postShakeTime']);
          y5Z[7]['easing'](TWEEN['Easing']['Elastic']['Out']);
          y5Z[7]['start']();
        });
        o9G[4]['start']();
      };
      L8c[148] = false;
      this['tutorialTextSwitchLastScreen'] = function () {
        var e0t = [
          arguments
        ];
        U3ndn.w30();
        e0t[5] = r8no$;
        if (L8c[148]) {
          return;
        }
        L8c[654]['visible'] = true;
        L8c[664]['visible'] = false;
        L8c[762]['visible'] = true;
        L8c[148] = true;
      };
      this['render'] = function (z5L, U$U, v$e, L7W, U2m, X4g) {
        var g4R = [
          arguments
        ];
        g4R[9] = r8no$;
        L8c[8]++;
        if (!L8c[52]) {
          return;
        }
        Howler['volume'](A['masterVolume']);
        if (V6D[67]['customControls']['quality'] == 2 && !L8c[53] && !L8c[84]) {
          L8c[92]['filters'] = [
            L8c[90]
          ];
        } else {
          L8c[92]['filters'] = [
          ];
        }
        if (L8c[26]['view']['parentNode'] != L8c[0][0]) {
          L8c[0][0]['appendChild'](L8c[26]['view']);
        }
        if (L8c[53] && L8c[26]['view']['style']['border'] != 'none') {
          L8c[26]['view']['style']['border'] = 'none';
        }
        if (!L8c[53] && L8c[26]['view']['style']['border'] == 'none') {
          L8c[26]['view']['style']['border'] = '';
        }
        g4R[4] = 0;
        for (g4R[472] = 0; g4R[472] < g4R[0][1]['players']['length']; g4R[472]++) {
          if (g4R[0][1]['players'][g4R[472]]) {
            g4R[4]++;
          }
        }
        L8c[82]['visible'] = g4R[4] == 1 && g4R[0][3]['q'] && L8c[28] == false;
        L8c[98]['visible'] = L8c[16] == false && g4R[0][3]['q'] && L8c[28] == false;
        if (g4R[0][3]['q'] == 'training1') {
          L8c[12]['visible'] = false;
        }
        if (g4R[0][3]['q'] == 'training2') {
          L8c[12]['visible'] = false;
        }
        if (Math['random']() < 0.15) {
        }
        g4R[1] = false;
        if (!L8c[84] && (L8c[39] != L8c[0][0]['offsetWidth'] || L8c[73] != L8c[0][0]['offsetHeight'])) {
          this['resizeRenderer']();
          g4R[1] = true;
        }
        if (g4R[0][1]['shk'] && (g4R[0][1]['shk']['x'] != 0 || g4R[0][1]['shk']['y'] != 0)) {
          this['screenShake'](g4R[0][1]['shk']['x'], g4R[0][1]['shk']['y']);
        }
        g4R[2] = V6D[67]['getPageHeight']();
        if (g4R[2] != L8c[50] || g4R[1]) {
          U3ndn.z_y(28);
          g4R[116] = U3ndn.I8r(1, 9, 29, 38);
          U3ndn.S2t(40);
          g4R[409] = U3ndn.I8r(1, 12, 20, 1);
          U3ndn.S2t(107);
          g4R[443] = U3ndn.I8r(1251, 7, 20, 23744);
          L8c[5]['style']['top'] = (g4R[2] - L8c[73]) / g4R[116] + g4R[409] + U3ndn.j31(g4R[443]);
          L8c[50] = g4R[2];
        }
        L8c[961]['update']();
        L8c[42]['x'] = L8c[140]['x'];
        L8c[42]['y'] = L8c[140]['y'];
        if (L8c[63] && L8c[96]['children']['length'] == 0) {
          b$t();
        }
        if (!L8c[84] && !L8c[28] && !L8c[53] && !L8c[63]) {
          if (V6D[67]['customControls']['help'] && V6D[67]['getCookie']('noingamehelp') != 'true') {
            if (L8c[4]['style']['visibility'] != 'inherit') {
              L8c[4]['style']['visibility'] = 'inherit';
            }
            if (V6D[61]['modes'][g4R[0][3]['mo']] && L8c[89]['textContent'] != V6D[61]['modes'][g4R[0][3]['mo']]['tutorialTitle']) {
              L8c[89]['textContent'] = V6D[61]['modes'][g4R[0][3]['mo']]['tutorialTitle'];
              L8c[21]['textContent'] = V6D[61]['modes'][g4R[0][3]['mo']]['tutorialText'];
            }
          } else if (L8c[4]['style']['visibility'] != 'hidden') {
            L8c[4]['style']['visibility'] = 'hidden';
          }
        }
        for (g4R[612] = 0; g4R[612] < L8c[6]['length']; g4R[612]++) {
          if (L8c[6][g4R[612]] && L8c[6][g4R[612]]['texture'] && !L8c[22][g4R[612]]) {
            Z0B(g4R[612]);
          }
        }
        g4R[49] = g4R[0][1]['physics']['ppm'];
        if (g4R[0][1]['dontInterpolate'] == true) {
          g4R[0][0] = g4R[0][1];
        }
        if (g4R[0][1]['rc'] > L8c[984]) {
          if (L8c[984] != - 1) {
            m5$();
          }
          L8c[984] = g4R[0][1]['rc'];
          if (!L8c[84] && !L8c[28] && !L8c[53]) {
            g4R[99] = g4R[0][1]['mm']['n'];
            g4R[63] = g4R[0][1]['mm']['a'];
            U3ndn.z_y(133);
            g4R[757] = U3ndn.E_K(3, 6, 4, 5759, 1152);
            g4R[93] = g4R[99] + U3ndn.j31(g4R[757]) + g4R[63];
            if (L8c[62]['text'] != g4R[93]) {
              L8c[62]['text'] = g4R[93];
              U3ndn.S2t(205);
              g4R[936] = U3ndn.I8r(450, 2, 7, 16, 25);
              U3ndn.S2t(60);
              g4R[972] = U3ndn.I8r(6, 20, 28);
              L8c[62]['x'] = - L8c[62][r8no$[g4R[936]]] / g4R[972];
              U3ndn.z_y(9);
              g4R[351] = U3ndn.I8r(47, 284, 16);
              U3ndn.z_y(60);
              g4R[373] = U3ndn.E_K(6, 124, 140);
              L8c[29]['width'] = L8c[62][r8no$[g4R[351]]] + g4R[373];
              U3ndn.z_y(18);
              g4R[758] = U3ndn.E_K(20, 14, 25, 749);
              U3ndn.z_y(202);
              g4R[220] = U3ndn.I8r(204, 16, 13, 9);
              U3ndn.z_y(45);
              g4R[750] = U3ndn.E_K(18, 20, 12492, 36);
              U3ndn.S2t(125);
              g4R[951] = U3ndn.I8r(14, 15, 103, 7, 3);
              L8c[12]['x'] = g4R[758] - g4R[220] - L8c[12][r8no$[g4R[750]]] / g4R[951];
              U3ndn.z_y(29);
              g4R[304] = U3ndn.I8r(248, 4, 63);
              U3ndn.z_y(50);
              g4R[144] = U3ndn.I8r(18, 3, 10, 43, 0);
              U3ndn.z_y(15);
              g4R[667] = U3ndn.I8r(6, 475, 12);
              U3ndn.S2t(1);
              g4R[243] = U3ndn.I8r(5, 3);
              L8c[12]['y'] = g4R[304] - g4R[144] - L8c[12][r8no$[g4R[667]]] / g4R[243];
              L8c[62]['resolution'] = L8c[67];
            }
          }
        }
        g4R[21] = 0;
        if (g4R[0][1]['ftu'] > - 1) {
          g4R[21] += Q['fte'];
          U3ndn.z_y(1);
          g4R[207] = U3ndn.I8r(6, 3);
          U3ndn.z_y(13);
          g4R[349] = U3ndn.E_K(7, 10, 14);
          g4R[55] = Q[r8no$[g4R[207]]] - g4R[0][1][r8no$[g4R[349]]];
          g4R[21] += g4R[55];
        } else if (g4R[0][1]['fte'] > - 1) {
          U3ndn.z_y(105);
          g4R[906] = U3ndn.I8r(11, 11, 4, 1);
          U3ndn.S2t(9);
          g4R[873] = U3ndn.E_K(60, 1076, 18);
          g4R[14] = Q[r8no$[g4R[906]]] - g4R[0][1][r8no$[g4R[873]]];
          g4R[278] = 1298979779;
          g4R[599] = 483412798;
          g4R[638] = 2;
          for (g4R[442] = 1; U3ndn.P5V(g4R[442].toString(), g4R[442].toString().length, 78941) !== g4R[278]; g4R[442]++) {
            g4R[21] *= g4R[14];
            g4R[638] += 2;
          }
          if (U3ndn.v9p(g4R[638].toString(), g4R[638].toString().length, 72014) !== g4R[599]) {
            g4R[21] += g4R[14];
          }
        }
        if (L8c[28] != true && L8c[84] != true && L8c[53] != true && g4R[21] != 0 && g4R[21] < 98) {
          U3ndn.z_y(195);
          g4R[18] = U3ndn.E_K(g4R[0][2], g4R[0][2], 1, g4R[21], g4R[21], 1);
          L8c[20]['removeAll']();
          g4R[75] = {
            sat: 1,
            blur: 0,
            brightness: 1,
            contrast: 1,
            winnerTextAlpha: 0,
            bgFaderAlpha: 0
          };
          g4R[71] = new TWEEN['Tween'](g4R[75], L8c[20]);
          g4R[71]['to']({
            sat: 0.3,
            blur: 15
          }, 20);
          g4R[71]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[71]['delay'](10);
          g4R[71]['start'](0);
          g4R[76] = new TWEEN['Tween'](g4R[75], L8c[20]);
          g4R[76]['to']({
            sat: 0.3,
            blur: 0,
            bgFaderAlpha: 1
          }, 6);
          g4R[76]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[76]['delay'](52);
          g4R[71]['chain'](g4R[76]);
          g4R[92] = new TWEEN['Tween'](g4R[75], L8c[20]);
          g4R[92]['to']({
            brightness: 1,
            contrast: 1,
            sat: 1,
            blur: 0,
            bgFaderAlpha: 0
          }, 8);
          g4R[92]['easing'](TWEEN['Easing']['Quadratic']['Out']);
          g4R[92]['delay'](2);
          g4R[76]['chain'](g4R[92]);
          g4R[67] = new TWEEN['Tween'](g4R[75], L8c[20]);
          g4R[67]['to']({
            winnerTextAlpha: 1
          }, 5);
          g4R[67]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[67]['delay'](25);
          g4R[67]['start'](0);
          g4R[86] = new TWEEN['Tween'](g4R[75], L8c[20]);
          g4R[86]['to']({
            winnerTextAlpha: 0
          }, 1);
          g4R[86]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[86]['delay'](53);
          g4R[67]['chain'](g4R[86]);
          L8c[20]['update'](g4R[18]);
          if (L8c[56]) {
            L8c[56]['saturation'] = g4R[75]['sat'];
            L8c[56]['contrast'] = g4R[75]['contrast'];
            L8c[56]['brightness'] = g4R[75]['brightness'];
          }
          L8c[15]['quality'] = 3;
          L8c[15]['blur'] = g4R[75]['blur'];
          L8c[64]['alpha'] = 0;
          L8c[80]['alpha'] = g4R[0][3]['wl'] == 999 ? 0 : g4R[75]['winnerTextAlpha'];
          L8c[99]['alpha'] = g4R[75]['winnerTextAlpha'];
          L8c[81]['alpha'] = g4R[75]['bgFaderAlpha'];
          if (L8c[56]) {
            L8c[70]['filters'] = [
              L8c[15],
              L8c[56]
            ];
          } else {
            L8c[70]['filters'] = [
              L8c[15]
            ];
          }
          if (L8c[84] != true && L8c[28] != true) {
            g4R[52] = 'Draw!';
            if (g4R[0][3]['tea'] == false) {
              if (L8c[22][g4R[0][1]['lscr']]) {
                U3ndn.S2t(39);
                g4R[457] = U3ndn.E_K(12, 345456, 2214, 13, 15);
                U3ndn.S2t(42);
                g4R[125] = U3ndn.E_K(14, 2, 284, 14);
                U3ndn.S2t(125);
                g4R[439] = U3ndn.E_K(20, 19, 63338, 3497, 1);
                g4R[52] = L8c[22][g4R[0][1][r8no$[g4R[457]]]][r8no$[g4R[125]]] + U3ndn.j31(g4R[439]);
              }
            } else {
              if (g4R[0][1]['lscr'] == 2) {
                g4R[52] = 'Red Team Wins';
              }
              if (g4R[0][1]['lscr'] == 3) {
                g4R[52] = 'Blue Team Wins';
              }
              if (g4R[0][1]['lscr'] == 4) {
                g4R[52] = 'Green Team Wins';
              }
              if (g4R[0][1]['lscr'] == 5) {
                g4R[52] = 'Yellow Team Wins';
              }
            }
            if (L8c[23]['text'] != g4R[52]) {
              L8c[23]['text'] = g4R[52];
              U3ndn.z_y(78);
              g4R[136] = U3ndn.E_K(7, 2359, 12, 2808);
              U3ndn.z_y(1);
              g4R[165] = U3ndn.I8r(16, 14);
              L8c[23]['x'] = - L8c[23][r8no$[g4R[136]]] / g4R[165];
              U3ndn.z_y(206);
              g4R[253] = U3ndn.I8r(5148, 1246, 3, 6);
              U3ndn.S2t(15);
              g4R[374] = U3ndn.E_K(9, 14, 3);
              L8c[58]['width'] = L8c[23][r8no$[g4R[253]]] + g4R[374];
              L8c[23]['resolution'] = L8c[67];
            }
            g4R[44] = '';
            g4R[30] = '';
            g4R[45] = [
            ];
            for (g4R[962] = 0; g4R[962] < g4R[0][1]['scores']['length']; g4R[962]++) {
              if (g4R[0][3]['tea'] == false) {
                if (g4R[0][1]['players'][g4R[962]]) {
                  g4R[45]['push']({
                    id: g4R[962],
                    score: g4R[0][1]['scores'][g4R[962]]
                  });
                }
              } else if (g4R[0][1]['scores'][g4R[962]] != null) {
                g4R[45]['push']({
                  id: g4R[962],
                  score: g4R[0][1]['scores'][g4R[962]]
                });
              }
            }
            g4R[45]['sort'](function (C9G, V43) {
              var X6F = [
                arguments
              ];
              X6F[1] = r8no$;
              U3ndn.S2t(105);
              U3ndn.w30();
              X6F[2] = U3ndn.E_K(9, 575, 577, 575);
              U3ndn.z_y(1);
              X6F[8] = U3ndn.E_K(3983, 3414);
              return X6F[0][1][r8no$[X6F[2]]] - X6F[0][0][r8no$[X6F[8]]];
            });
            for (g4R[553] = 0; g4R[553] < g4R[45]['length']; g4R[553]++) {
              if (g4R[553] != 0) {
                g4R[44] += U3ndn.j31(1975) /*
*/
                ;
              }
              if (g4R[553] != 0) {
                g4R[30] += U3ndn.j31(1975) /*
*/
                ;
              }
              g4R[96] = '';
              if (g4R[0][3]['tea'] == false) {
                if (L8c[22][g4R[45][g4R[553]]['id']]) {
                  g4R[96] = L8c[22][g4R[45][g4R[553]]['id']]['userName'];
                }
              } else {
                if (g4R[45][g4R[553]]['id'] == 2) {
                  g4R[96] = 'Red Team';
                }
                if (g4R[45][g4R[553]]['id'] == 3) {
                  g4R[96] = 'Blue Team';
                }
                if (g4R[45][g4R[553]]['id'] == 4) {
                  g4R[96] = 'Green Team';
                }
                if (g4R[45][g4R[553]]['id'] == 5) {
                  g4R[96] = 'Yellow Team';
                }
              }
              U3ndn.z_y(40);
              g4R[237] = U3ndn.I8r(9, 2466, 16, 3159);
              g4R[44] += g4R[96] + U3ndn.j31(g4R[237]);
              g4R[39] = g4R[45][g4R[553]]['score'];
              if (g4R[39] === undefined) {
                g4R[39] = 0;
              }
              g4R[30] += g4R[39];
            }
            if (L8c[60]['text'] != g4R[44]) {
              L8c[60]['text'] = g4R[44];
              U3ndn.z_y(18);
              g4R[605] = U3ndn.E_K(17, 18, 1406, 1876);
              U3ndn.z_y(15);
              g4R[831] = U3ndn.E_K(10, 14, 19);
              L8c[38]['height'] = L8c[60][r8no$[g4R[605]]] + g4R[831];
              U3ndn.S2t(14);
              g4R[660] = U3ndn.I8r(5, 35, 33);
              U3ndn.z_y(126);
              g4R[990] = U3ndn.E_K(2, 1370, 938, 9, 14);
              U3ndn.S2t(153);
              g4R[703] = U3ndn.E_K(34, 1, 1, 19);
              L8c[80]['y'] = L8c[99][r8no$[g4R[660]]] + L8c[60][r8no$[g4R[990]]] + g4R[703];
            }
            if (L8c[97]['text'] != g4R[30]) {
              L8c[97]['text'] = g4R[30];
            }
            U3ndn.z_y(1);
            g4R[295] = U3ndn.E_K(24021, 21352);
            U3ndn.S2t(50);
            g4R[778] = U3ndn.E_K(7, 20, 6, 9732, 1695);
            U3ndn.z_y(87);
            g4R[347] = U3ndn.E_K(18, 17, 40230, 5, 3616660);
            g4R[53] = U3ndn.j31(g4R[295]) + g4R[0][3][r8no$[g4R[778]]] + U3ndn.j31(g4R[347]);
            if (L8c[47]['text'] != g4R[53]) {
              L8c[47]['text'] = g4R[53];
            }
          }
        } else {
          if (L8c[673]['blur'] == 0) {
            L8c[70]['filters'] = [
            ];
          } else {
            L8c[15]['blur'] = L8c[673]['blur'];
            L8c[70]['filters'] = [
              L8c[15]
            ];
          }
          L8c[64]['alpha'] = 0;
          L8c[80]['alpha'] = 0;
          L8c[99]['alpha'] = 0;
          L8c[81]['alpha'] = 0;
        }
        if (L8c[28] != true && L8c[84] != true && L8c[53] != true && g4R[0][1]['fte'] > - 1 && g4R[0][1]['fte'] < 60) {
          if (L8c[40]['animating'] != true) {
            L8c[40]['animating'] = true;
            L8c[40]['needsTweeningOut'] = true;
            g4R[83] = '';
            if (g4R[0][3]['tea'] == false) {
              if (L8c[22][g4R[0][1]['lscr']]) {
                g4R[83] = L8c[22][g4R[0][1]['lscr']]['userName'];
              } else if (g4R[0][1]['lscr'] == - 1) {
                g4R[83] = '';
              } else {
                g4R[83] = 'Unknown';
              }
            } else {
              if (g4R[0][1]['lscr'] == 2) {
                g4R[83] = 'Red Team';
              }
              if (g4R[0][1]['lscr'] == 3) {
                g4R[83] = 'Blue Team';
              }
              if (g4R[0][1]['lscr'] == 4) {
                g4R[83] = 'Green Team';
              }
              if (g4R[0][1]['lscr'] == 5) {
                g4R[83] = 'Yellow Team';
              }
              if (g4R[0][1]['lscr'] == - 1) {
                g4R[83] = '';
              }
            }
            L8c[24]['textContent'] = g4R[83];
            if (g4R[0][1]['lscr'] == - 1) {
              L8c[61]['textContent'] = 'DRAW';
            } else if (g4R[0][1]['scores'][g4R[0][1]['lscr']] >= g4R[0][3]['wl'] || g4R[0][3]['q']) {
              L8c[61]['textContent'] = 'WINS';
            } else {
              L8c[61]['textContent'] = 'SCORES';
            }
            L8c[40]['style']['visibility'] = 'inherit';
            if (g4R[0][1]['fte'] > 40) {
              L8c[11]['style']['opacity'] = 0;
              L8c[11]['style']['transform'] = 'scale(1.3)';
              anime({
                targets: L8c[11],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: 0,
                easing: 'easeOutElastic(1, 0.8)'
              });
              L8c[24]['style']['opacity'] = 0;
              L8c[24]['style']['transform'] = 'scale(1.5)';
              anime({
                targets: L8c[24],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: 200,
                easing: 'easeOutElastic(1, 0.8)'
              });
              L8c[61]['style']['opacity'] = 0;
              L8c[61]['style']['transform'] = 'scale(1.5)';
              g4R[60] = 400;
              if (g4R[0][1]['lscr'] == - 1) {
                g4R[60] = 0;
              }
              anime({
                targets: L8c[61],
                opacity: 1,
                scale: 1,
                autoplay: true,
                duration: 600,
                delay: g4R[60],
                easing: 'easeOutElastic(1, 0.8)'
              });
            } else {
              L8c[11]['style']['opacity'] = 1;
              L8c[11]['style']['transform'] = 'scale(1.0)';
              L8c[24]['style']['opacity'] = 1;
              L8c[24]['style']['transform'] = 'scale(1.0)';
              L8c[61]['style']['opacity'] = 1;
              L8c[61]['style']['transform'] = 'scale(1.0)';
            }
            g4R[32] = null;
            g4R[58] = 1;
            g4R[36] = 0;
            if (g4R[0][3]['tea'] == false) {
              if (L8c[22][g4R[0][1]['lscr']]) {
                g4R[32] = L8c[22][g4R[0][1]['lscr']]['avatar'];
                g4R[58] = 1;
                g4R[36] = g4R[0][1]['lscr'];
              }
            } else if (g4R[0][1]['lscr'] != - 1) {
              g4R[32] = L8c[78];
              g4R[58] = g4R[0][1]['lscr'];
              switch (g4R[0][1]['lscr']) {
                case 2:
                  g4R[36] = 'r';
                  break;
                case 3:
                  g4R[36] = 'b';
                  break;
                case 4:
                  g4R[36] = 'g';
                  break;
                case 5:
                  g4R[36] = 'y';
                  break;
              }
            }
            while (L8c[43]['firstChild']) {
              L8c[43]['removeChild'](L8c[43]['firstChild']);
            }
            if (g4R[32]) {
              if (L8c[34][g4R[36]] && L8c[34][g4R[36]][g4R[58]]) {
                L8c[43]['appendChild'](L8c[34][g4R[36]][g4R[58]]);
              } else {
                try {
                  N2['createImage'](g4R[32], g4R[58], L8c[43], '', 200, 200, L8c[34], g4R[36], g4R[58], 2);
                } catch (L3f) {
                }
              }
            }
          }
          if (g4R[0][3]['tea'] == false && g4R[0][1]['lscr'] != - 1 && g4R[0][4] && g4R[0][4][g4R[0][1]['lscr']]) {
            if (g4R[0][4][g4R[0][1]['lscr']]['action']) {
              L8c[83]['style']['visibility'] = 'inherit';
            } else {
              L8c[83]['style']['visibility'] = 'hidden';
            }
          } else {
            L8c[83]['style']['visibility'] = 'hidden';
          }
        } else if (g4R[0][1]['ftu'] == - 1) {
          L8c[40]['animating'] = false;
          L8c[40]['style']['visibility'] = 'hidden';
        }
        if (L8c[28] != true && L8c[84] != true && L8c[53] != true && g4R[0][1]['fte'] > - 1 && g4R[0][1]['fte'] < 10 && L8c[40]['needsTweeningOut'] == true) {
          L8c[40]['needsTweeningOut'] = false;
          anime({
            targets: L8c[11],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
          anime({
            targets: L8c[24],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
          anime({
            targets: L8c[61],
            opacity: 0,
            scale: 0.9,
            autoplay: true,
            duration: 150,
            delay: 0,
            easing: 'easeInSine'
          });
        }
        if (g4R[0][1]['ftu'] > - 1 && L8c[28] != true && L8c[84] != true && L8c[53] != true && !g4R[0][3]['q'] && g4R[0][1]['lscr'] == - 1) {
          g4R[26] = '';
          try {
            g4R[26] = V6D[61]['modes'][g4R[0][3]['mo']]['gameStartName'];
          } catch (s0W) {
          }
          if (L8c[242]['text'] != g4R[26]) {
            L8c[242]['text'] = g4R[26];
            L8c[242]['resolution'] = L8c[67];
          }
          g4R[64] = '';
          if (g4R[0][3]['tea'] == false) {
            g4R[64] = 'FREE FOR ALL';
          } else {
            g4R[11] = [
              null,
              null,
              0,
              0,
              0,
              0
            ];
            for (g4R[129] = 0; g4R[129] < g4R[0][1]['discs']['length']; g4R[129]++) {
              if (g4R[0][1]['discs'][g4R[129]]) {
                g4R[11][g4R[0][1]['discs'][g4R[129]]['team']]++;
              }
            }
            g4R[85] = false;
            for (g4R[417] = 2; g4R[417] <= 5; g4R[417]++) {
              if (g4R[11][g4R[417]]) {
                if (!g4R[85]) {
                  g4R[64] += g4R[11][g4R[417]];
                  g4R[85] = true;
                } else {
                  U3ndn.z_y(13);
                  g4R[174] = U3ndn.E_K(1648, 27, 15);
                  g4R[64] += U3ndn.j31(g4R[174]) + g4R[11][g4R[417]];
                }
              }
            }
            if (g4R[64]['length'] <= 1) {
              g4R[64] = 'TEAMS';
            }
          }
          if (L8c[718]['text'] != g4R[64]) {
            g4R[639] = 500965055;
            g4R[289] = 1298271928;
            g4R[292] = 2;
            for (g4R[801] = 1; U3ndn.v9p(g4R[801].toString(), g4R[801].toString().length, 63989) !== g4R[639]; g4R[801]++) {
              L8c[718]['text'] = g4R[64];
              g4R[292] += 2;
            }
            if (U3ndn.P5V(g4R[292].toString(), g4R[292].toString().length, 25889) !== g4R[289]) {
              L8c[718]['blur'] = g4R[64];
            }
            L8c[718]['resolution'] = L8c[67];
          }
          U3ndn.z_y(60);
          g4R[147] = U3ndn.E_K(9, 0, 2678);
          U3ndn.S2t(21);
          g4R[138] = U3ndn.E_K(14, 1031, 584, 5, 14);
          U3ndn.z_y(6);
          g4R[755] = U3ndn.E_K(2012, 2011);
          g4R[35] = U3ndn.j31(g4R[147]) + g4R[0][3][r8no$[g4R[138]]] + U3ndn.j31(g4R[755]);
          if (L8c[337]['text'] != g4R[35]) {
            L8c[337]['text'] = g4R[35];
            L8c[337]['resolution'] = L8c[67];
          }
          U3ndn.z_y(170);
          g4R[995] = U3ndn.E_K(42, 120, 18, 18, 18);
          U3ndn.z_y(103);
          g4R[776] = U3ndn.I8r(4, 3, 27, 126, 7);
          g4R[79] = g4R[995] - g4R[0][1][r8no$[g4R[776]]];
          U3ndn.z_y(195);
          g4R[12] = U3ndn.I8r(g4R[0][2], g4R[0][2], 1, g4R[79], g4R[79], 1);
          g4R[94] = {
            topAlpha: 0,
            midAlpha: 0,
            botAlpha: 0
          };
          L8c[242]['alpha'] = 0;
          L8c[539]['alpha'] = 0;
          L8c[718]['alpha'] = 0;
          L8c[820]['alpha'] = 0;
          L8c[337]['alpha'] = 0;
          L8c[589]['alpha'] = 0;
          g4R[71] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[71]['to']({
            topAlpha: 1
          }, 6);
          g4R[71]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[71]['delay'](0);
          g4R[71]['start'](0);
          g4R[82] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[82]['to']({
            topAlpha: 0
          }, 6);
          g4R[82]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[82]['delay'](40);
          g4R[71]['chain'](g4R[82]);
          g4R[76] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[76]['to']({
            midAlpha: 1
          }, 6);
          g4R[76]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[76]['delay'](3);
          g4R[76]['start'](0);
          g4R[81] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[81]['to']({
            midAlpha: 0
          }, 6);
          g4R[81]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[81]['delay'](40);
          g4R[76]['chain'](g4R[81]);
          g4R[92] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[92]['to']({
            botAlpha: 1
          }, 6);
          g4R[92]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[92]['delay'](6);
          g4R[92]['start'](0);
          g4R[29] = new TWEEN['Tween'](g4R[94], L8c[18]);
          g4R[29]['to']({
            botAlpha: 0
          }, 6);
          g4R[29]['easing'](TWEEN['Easing']['Quadratic']['In']);
          g4R[29]['delay'](40);
          g4R[92]['chain'](g4R[29]);
          L8c[18]['update'](g4R[12]);
          L8c[242]['alpha'] = g4R[94]['topAlpha'];
          L8c[539]['alpha'] = g4R[94]['topAlpha'];
          L8c[718]['alpha'] = g4R[94]['midAlpha'];
          L8c[820]['alpha'] = g4R[94]['midAlpha'];
          L8c[337]['alpha'] = g4R[94]['botAlpha'];
          L8c[589]['alpha'] = g4R[94]['botAlpha'];
          L8c[260]['visible'] = true;
        } else {
          L8c[260]['visible'] = false;
        }
        for (g4R[969] = 0; g4R[969] < L8c[35]['length']; g4R[969]++) {
          if (L8c[35][g4R[969]] && !g4R[0][1]['discs'][g4R[969]]) {
            Z9y(g4R[969]);
          }
        }
        for (g4R[969] = 0; g4R[969] < g4R[0][1]['discs']['length']; g4R[969]++) {
          if (g4R[0][1]['discs'][g4R[969]]) {
            if (!L8c[35][g4R[969]]) {
              L8c[35][g4R[969]] = {
                container: null,
                inner: null,
                innerColor: 0,
                nametext: null,
                outline: null,
                offscreencontainer: null,
                offscreenarrow: null,
                offscreentext: null,
                totalRadius: 1
              };
              if (g4R[969] == L8c[88]) {
                L8c[16] = true;
              }
              g4R[74] = 1;
              if (g4R[0][3]['mo'] == 'sl') {
                g4R[74] = 3.5;
              }
              if (g4R[0][3]['bal'][g4R[969]]) {
                U3ndn.S2t(16);
                g4R[554] = U3ndn.E_K(7, 9, 14, 27, 176);
                U3ndn.z_y(14);
                g4R[585] = U3ndn.I8r(39, 117, 97);
                g4R[87] = g4R[0][3][r8no$[g4R[554]]][g4R[969]] / g4R[585];
                g4R[87] = Math['max'](Math['min'](g4R[87], 1), - 0.94);
                g4R[74] += g4R[87];
              }
              L8c[35][g4R[969]]['totalRadius'] = g4R[74];
              g4R[23] = new PIXI['Graphics'];
              g4R[41] = null;
              g4R[73] = 4492031;
              if (L8c[84]) {
                if (g4R[0][1]['discs'][g4R[969]]['team'] == 1) {
                  g4R[73] = 1752220;
                } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 2) {
                  g4R[73] = 13840175;
                } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 3) {
                  g4R[73] = 4492031;
                } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 4) {
                  g4R[73] = 1538073;
                } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 5) {
                  g4R[73] = 16767246;
                }
                g4R[23]['beginFill'](g4R[73]);
                U3ndn.S2t(4);
                g4R[23]['drawCircle'](0, 0, U3ndn.I8r(g4R[74], g4R[49]));
                g4R[23]['endFill']();
              } else if (L8c[53]) {
                g4R[59] = g4R[0][1]['discs'][g4R[969]]['spawnTeamInfo'];
                g4R[37] = 0;
                if (g4R[59]['f']) {
                  g4R[37]++;
                }
                if (g4R[59]['r']) {
                  g4R[37]++;
                }
                if (g4R[59]['b']) {
                  g4R[37]++;
                }
                if (g4R[59]['gr']) {
                  g4R[37]++;
                }
                if (g4R[59]['ye']) {
                  g4R[37]++;
                }
                for (g4R[966] = 0; g4R[966] < g4R[37]; g4R[966]++) {
                  U3ndn.z_y(207);
                  g4R[72] = U3ndn.E_K(2, 1, g4R[37], g4R[966]);
                  g4R[57] = - 1;
                  g4R[19] = 2;
                  g4R[38] = 2;
                  g4R[17] = null;
                  U3ndn.z_y(4);
                  g4R[46] = U3ndn.E_K(g4R[74], g4R[49]);
                  if (g4R[59]['f']) {
                    g4R[59]['f'] = false;
                    g4R[17] = 1752220;
                  } else if (g4R[59]['r']) {
                    g4R[59]['r'] = false;
                    g4R[17] = 13840175;
                  } else if (g4R[59]['b']) {
                    g4R[59]['b'] = false;
                    g4R[17] = 4492031;
                  } else if (g4R[59]['gr']) {
                    g4R[59]['gr'] = false;
                    g4R[17] = 1538073;
                  } else if (g4R[59]['ye']) {
                    g4R[59]['ye'] = false;
                    g4R[17] = 16767246;
                  }
                  g4R[23]['beginFill'](g4R[17]);
                  U3ndn.z_y(4);
                  g4R[23]['drawRect'](U3ndn.E_K(g4R[46], g4R[72]), U3ndn.I8r(g4R[46], g4R[57]), U3ndn.E_K(g4R[46], g4R[19]), U3ndn.E_K(g4R[46], g4R[38]));
                  g4R[23]['endFill']();
                  U3ndn.z_y(208);
                  g4R[922] = U3ndn.I8r(2, 16, 6, 17);
                  U3ndn.S2t(7);
                  g4R[241] = U3ndn.E_K(202, 3018, 2, 16);
                  U3ndn.z_y(7);
                  g4R[985] = U3ndn.E_K(198, 532, 20, 4);
                  g4R[23]['rotation'] = g4R[922] * (Math[r8no$[g4R[241]]] / g4R[985]);
                }
                if (g4R[37] == 0) {
                  g4R[73] = 9547175;
                  g4R[23]['beginFill'](g4R[73]);
                  U3ndn.S2t(4);
                  g4R[23]['drawCircle'](0, 0, U3ndn.I8r(g4R[74], g4R[49]));
                  g4R[23]['endFill']();
                }
                if (g4R[969] == L8c[36]) {
                  g4R[23]['clear']();
                  g4R[73] = 16777215;
                  g4R[23]['beginFill'](g4R[73]);
                  U3ndn.z_y(4);
                  g4R[23]['drawCircle'](0, 0, U3ndn.I8r(g4R[74], g4R[49]));
                  g4R[23]['endFill']();
                }
              } else {
                if (L8c[22][g4R[969]] && L8c[22][g4R[969]]['avatar'] && typeof L8c[22][g4R[969]]['avatar']['bc'] == 'number') {
                  g4R[73] = L8c[22][g4R[969]]['avatar']['bc'];
                } else {
                  g4R[73] = 4492031;
                }
                g4R[23]['beginFill'](g4R[73]);
                U3ndn.S2t(4);
                g4R[23]['drawCircle'](0, 0, U3ndn.E_K(g4R[74], g4R[49]));
                g4R[23]['endFill']();
                g4R[23]['skinRendered'] = false;
                try {
                  if (L8c[22][g4R[969]] && L8c[22][g4R[969]]['avatar'] && L8c[22][g4R[969]]['avatar']['layers']) {
                    if (L8c[6][g4R[969]] && L8c[6][g4R[969]]['texture']) {
                    } else {
                      L1_(g4R[969], g4R[74], g4R[49]);
                    }
                  }
                } catch (P$H) {
                }
                if (g4R[0][1]['discs'][g4R[969]]['team'] >= 2 && g4R[0][1]['discs'][g4R[969]]['team'] <= 5) {
                  g4R[41] = new PIXI['Graphics'];
                  g4R[98] = 0;
                  if (g4R[0][1]['discs'][g4R[969]]['team'] == 2) {
                    g4R[98] = 16007990;
                  } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 3) {
                    g4R[98] = 2201331;
                  } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 4) {
                    g4R[98] = 5025616;
                  } else if (g4R[0][1]['discs'][g4R[969]]['team'] == 5) {
                    g4R[98] = 16771899;
                  }
                  g4R[41]['beginFill'](g4R[98]);
                  U3ndn.z_y(4);
                  g4R[41]['drawCircle'](0, 0, U3ndn.I8r(g4R[74], g4R[49]));
                  g4R[41]['endFill']();
                  g4R[41]['blendMode'] = PIXI['BLEND_MODES']['MULTIPLY'];
                  g4R[10] = new PIXI['Graphics'];
                  U3ndn.S2t(4);
                  g4R[10]['lineStyle'](U3ndn.I8r(g4R[49], 0.13), g4R[98]);
                  U3ndn.z_y(9);
                  g4R[10]['drawCircle'](0, 0, U3ndn.I8r(g4R[49], 1, g4R[74]));
                  g4R[23]['addChild'](g4R[10]);
                }
              }
              g4R[22] = null;
              if (g4R[0][3]['mo'] == 'v') {
                g4R[22] = new PIXI['Graphics'];
                g4R[22]['beginFill'](13421772);
                g4R[22]['drawRect'](g4R[74] * ( - Q['footHW'] * g4R[49] + Q['footOffsetX'] * g4R[49]), g4R[74] * ( - Q['footHH'] * g4R[49] + Q['footOffsetY'] * g4R[49]), g4R[74] * (Q['footHW'] * g4R[49] * 2), g4R[74] * (Q['footHH'] * g4R[49] * 2));
                g4R[22]['beginFill'](13421772);
                g4R[22]['drawRect'](g4R[74] * ( - Q['footHW'] * g4R[49] + - Q['footOffsetX'] * g4R[49]), g4R[74] * ( - Q['footHH'] * g4R[49] + Q['footOffsetY'] * g4R[49]), g4R[74] * (Q['footHW'] * g4R[49] * 2), g4R[74] * (Q['footHH'] * g4R[49] * 2));
              }
              L8c[35][g4R[969]]['inner'] = g4R[23];
              L8c[35][g4R[969]]['innerColor'] = g4R[73];
              g4R[68] = new PIXI['Container'];
              g4R[68]['addChild'](g4R[23]);
              if (g4R[41]) {
                g4R[68]['addChild'](g4R[41]);
              }
              if (g4R[22]) {
                g4R[68]['addChild'](g4R[22]);
              }
              L8c[35][g4R[969]]['container'] = g4R[68];
              if (L8c[53]) {
                g4R[15] = new PIXI['Graphics'];
                g4R[15]['beginFill'](g4R[73]);
                U3ndn.S2t(4);
                g4R[15]['drawCircle'](0, 0, U3ndn.I8r(g4R[74], g4R[49]));
                g4R[15]['endFill']();
                g4R[23]['mask'] = g4R[15];
                g4R[68]['addChild'](g4R[15]);
              }
              g4R[16] = new PIXI['Graphics'];
              g4R[16]['lineStyle'](2, 16777215, 1);
              U3ndn.S2t(29);
              g4R[16]['drawCircle'](0, 0, U3ndn.E_K(1, g4R[74], g4R[49]));
              L8c[35][g4R[969]]['outline'] = g4R[16];
              L8c[35][g4R[969]]['container']['addChild'](g4R[16]);
              g4R[47] = 'futurept_book';
              g4R[80] = '';
              if (L8c[22][g4R[969]]) {
                g4R[80] = L8c[22][g4R[969]]['userName'];
              }
              g4R[66] = {
                fontFamily: g4R[47],
                fontSize: 11,
                fill: 14737632,
                align: 'center',
                dropShadow: true,
                dropShadowDistance: 2,
                dropShadowAlpha: 0.2
              };
              if (g4R[969] == L8c[88]) {
                g4R[66]['fill'] = 16777215;
                g4R[66]['dropShadowDistance'] = 2;
                g4R[66]['dropShadowAlpha'] = 0.3;
              }
              g4R[20] = new PIXI['Text'](g4R[80], g4R[66]);
              L8c[35][g4R[969]]['container']['addChild'](g4R[20]);
              U3ndn.z_y(69);
              g4R[810] = U3ndn.E_K(36, 12, 435, 2, 7);
              U3ndn.S2t(140);
              g4R[305] = U3ndn.E_K(54, 19, 14, 2, 10);
              U3ndn.z_y(134);
              g4R[756] = U3ndn.I8r(7, 1, 29, 11, 12);
              g4R[20]['x'] = - g4R[20][r8no$[g4R[810]]] / g4R[305] + g4R[756];
              U3ndn.z_y(2);
              g4R[20]['y'] = U3ndn.I8r(1.2, g4R[74], g4R[49]);
              g4R[20]['resolution'] = L8c[67];
              L8c[35][g4R[969]]['nametext'] = g4R[20];
              g4R[88] = new PIXI['Graphics'];
              g4R[88]['lineStyle'](undefined);
              g4R[88]['beginFill'](0);
              g4R[88]['alpha'] = 0.08;
              U3ndn.S2t(29);
              g4R[88]['drawCircle'](0, 0, U3ndn.I8r(1, g4R[74], g4R[49]));
              L8c[35][g4R[969]]['container']['addChildAt'](g4R[88], 0);
              g4R[88]['x'] = 1.5;
              g4R[88]['y'] = 1.5;
              L8c[41]['addChild'](L8c[35][g4R[969]]['container']);
              g4R[56] = new PIXI['Text'](g4R[80], {
                fontFamily: g4R[47],
                fontSize: 9,
                fill: 16448250,
                align: 'center'
              });
              g4R[56]['resolution'] = L8c[67];
              U3ndn.S2t(64);
              g4R[567] = U3ndn.E_K(453, 151, 465, 1);
              U3ndn.z_y(209);
              g4R[571] = U3ndn.E_K(4, 20, 19, 16, 13);
              g4R[56]['x'] = - g4R[56][r8no$[g4R[567]]] / g4R[571];
              U3ndn.S2t(210);
              g4R[522] = U3ndn.I8r(478, 468, 4, 498, 16);
              U3ndn.S2t(6);
              g4R[399] = U3ndn.E_K(0, 2);
              g4R[56]['y'] = - g4R[56][r8no$[g4R[522]]] / g4R[399];
              g4R[40] = new PIXI['Graphics'];
              g4R[40]['beginFill'](38536);
              g4R[40]['drawPolygon']([new PIXI['Point'](0, 0),
              new PIXI['Point'](18, 10),
              new PIXI['Point'](0, 20),
              new PIXI['Point'](6, 10),
              new PIXI['Point'](0, 0)]);
              g4R[40]['pivot'] = new PIXI['Point'](9, 10);
              g4R[40]['scale']['x'] = g4R[40]['scale']['y'] = 0.7;
              g4R[89] = new PIXI['Container'];
              g4R[89]['addChild'](g4R[40]);
              g4R[89]['addChild'](g4R[56]);
              L8c[35][g4R[969]]['offscreencontainer'] = g4R[89];
              L8c[35][g4R[969]]['offscreenarrow'] = g4R[40];
              L8c[35][g4R[969]]['offscreentext'] = g4R[56];
              L8c[51]['addChild'](g4R[89]);
            }
            if (L8c[22][g4R[969]] && L8c[22][g4R[969]]['userName'] != L8c[35][g4R[969]]['offscreentext']['text']) {
              L8c[35][g4R[969]]['offscreentext']['text'] = L8c[22][g4R[969]]['userName'];
              U3ndn.z_y(9);
              g4R[175] = U3ndn.E_K(616, 8642, 15);
              U3ndn.S2t(7);
              g4R[867] = U3ndn.E_K(457, 1296, 16, 4);
              U3ndn.S2t(13);
              g4R[155] = U3ndn.E_K(0, 6, 4);
              U3ndn.S2t(211);
              g4R[903] = U3ndn.E_K(7, 10, 7, 9);
              L8c[35][g4R[969]]['offscreentext']['x'] = - L8c[35][g4R[969]][r8no$[g4R[175]]][r8no$[g4R[867]]] / g4R[155] + g4R[903];
              U3ndn.z_y(4);
              L8c[35][g4R[969]]['offscreentext']['y'] = U3ndn.E_K(g4R[49], 1.2);
              L8c[35][g4R[969]]['nametext']['text'] = L8c[22][g4R[969]]['userName'];
              U3ndn.z_y(81);
              g4R[189] = U3ndn.E_K(11248, 591, 19, 11267);
              U3ndn.z_y(6);
              g4R[535] = U3ndn.I8r(463, 5);
              U3ndn.z_y(40);
              g4R[859] = U3ndn.E_K(26, 6, 8, 26);
              L8c[35][g4R[969]]['nametext']['x'] = - L8c[35][g4R[969]][r8no$[g4R[189]]][r8no$[g4R[535]]] / g4R[859];
              U3ndn.z_y(100);
              g4R[640] = U3ndn.I8r(7696, 153332, 10, 4, 2);
              U3ndn.z_y(16);
              g4R[508] = U3ndn.E_K(12, 10, 4, 460, 15);
              U3ndn.z_y(1);
              g4R[404] = U3ndn.E_K(16, 14);
              L8c[35][g4R[969]]['nametext']['y'] = - L8c[35][g4R[969]][r8no$[g4R[640]]][r8no$[g4R[508]]] / g4R[404];
              L8c[35][g4R[969]]['inner']['clear']();
              g4R[34] = 4492031;
              if (L8c[22][g4R[969]] && L8c[22][g4R[969]]['avatar'] && L8c[22][g4R[969]]['avatar']['bc']) {
                g4R[34] = L8c[22][g4R[969]]['avatar']['bc'];
              }
              g4R[23]['beginFill'](g4R[34]);
              U3ndn.S2t(4);
              g4R[23]['drawCircle'](0, 0, U3ndn.I8r(1, g4R[49]));
              g4R[23]['endFill']();
              L8c[35][g4R[969]]['inner'] = g4R[23];
            }
            if (L8c[35][g4R[969]]['inner']['skinRendered'] == false && L8c[6][g4R[969]] && L8c[6][g4R[969]]['texture']) {
              U3ndn.z_y(212);
              g4R[27] = U3ndn.E_K(g4R[49], 30, 2, 1);
              L8c[35][g4R[969]]['inner']['clear']();
              L8c[35][g4R[969]]['inner']['beginTextureFill']({
                texture: L8c[6][g4R[969]]['texture'],
                matrix: new PIXI['Matrix'](g4R[27], 0, 0, g4R[27], - g4R[49] * L8c[35][g4R[969]]['totalRadius'], - g4R[49] * L8c[35][g4R[969]]['totalRadius'])
              });
              L8c[35][g4R[969]]['inner']['drawCircle'](0, 0, g4R[49] * L8c[35][g4R[969]]['totalRadius']);
              L8c[35][g4R[969]]['inner']['endFill']();
              L8c[35][g4R[969]]['inner']['skinRendered'] = true;
            }
            U3ndn.S2t(50);
            g4R[500] = U3ndn.E_K(11, 9, 9, 357, 34);
            U3ndn.z_y(128);
            g4R[249] = U3ndn.I8r(9087, 18, 507, 4, 4);
            g4R[7] = g4R[0][0][r8no$[g4R[500]]][g4R[969]][r8no$[g4R[249]]] * g4R[49];
            U3ndn.S2t(6);
            g4R[158] = U3ndn.E_K(6, 35);
            U3ndn.z_y(152);
            g4R[109] = U3ndn.E_K(42, 329, 9, 5, 6);
            g4R[6] = g4R[0][0][r8no$[g4R[158]]][g4R[969]][r8no$[g4R[109]]] * g4R[49];
            U3ndn.z_y(65);
            g4R[452] = U3ndn.I8r(14, 24, 6, 23);
            U3ndn.z_y(89);
            g4R[343] = U3ndn.I8r(2, 19, 96, 11, 3);
            g4R[8] = g4R[0][1][r8no$[g4R[452]]][g4R[969]][r8no$[g4R[343]]] * g4R[49];
            U3ndn.z_y(25);
            g4R[120] = U3ndn.E_K(1, 18, 738, 20, 246);
            U3ndn.S2t(15);
            g4R[764] = U3ndn.E_K(16, 44, 20);
            g4R[5] = g4R[0][1][r8no$[g4R[120]]][g4R[969]][r8no$[g4R[764]]] * g4R[49];
            g4R[3] = g4R[0][0]['discs'][g4R[969]]['a'];
            g4R[62] = g4R[0][1]['discs'][g4R[969]]['a'];
            if (g4R[0][1]['discs'][g4R[969]]['ni'] == true) {
              g4R[7] = g4R[8];
              g4R[6] = g4R[5];
              g4R[3] = g4R[62];
            }
            U3ndn.S2t(169);
            L8c[35][g4R[969]]['container']['x'] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[8], g4R[7]);
            U3ndn.z_y(169);
            L8c[35][g4R[969]]['container']['y'] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[5], g4R[6]);
            g4R[51] = Math['cos'](g4R[3]);
            g4R[70] = Math['sin'](g4R[3]);
            g4R[48] = Math['cos'](g4R[62]);
            g4R[65] = Math['sin'](g4R[62]);
            U3ndn.z_y(169);
            g4R[97] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[48], g4R[51]);
            U3ndn.z_y(169);
            g4R[31] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[65], g4R[70]);
            L8c[35][g4R[969]]['container']['rotation'] = Math['atan2'](g4R[31], g4R[97]);
            if (g4R[0][1]['discs'][g4R[969]]['a1'] && g4R[0][3]['mo'] != 'bs' && g4R[0][3]['mo'] != 'ft' && !(g4R[0][1]['discs'][g4R[969]]['ds'] > 0)) {
              L8c[35][g4R[969]]['outline']['alpha'] = Math['max'](g4R[0][1]['discs'][g4R[969]]['a1a'] / 1000, 0.25);
            } else {
              L8c[35][g4R[969]]['outline']['alpha'] = 0;
            }
            if (g4R[0][3]['mo'] == 'sp') {
              if (!L8c[35][g4R[969]]['swing']) {
                L8c[35][g4R[969]]['swing'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['container']['addChildAt'](L8c[35][g4R[969]]['swing'], 0);
                L8c[35][g4R[969]]['swingArc'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['swing']['addChild'](L8c[35][g4R[969]]['swingArc']);
              } else {
                L8c[35][g4R[969]]['swing']['clear']();
              }
              if (g4R[0][0]['discs'][g4R[969]]['swing'] && g4R[0][1]['discs'][g4R[969]]['swing']) {
                g4R[42] = g4R[0][1]['discs'][g4R[969]]['swing']['b'];
                g4R[24] = {
                  x: g4R[0][0]['discs'][g4R[969]]['swing']['p'][0],
                  y: g4R[0][0]['discs'][g4R[969]]['swing']['p'][1]
                };
                g4R[95] = e8({
                  x: 0,
                  y: 0
                }, g4R[24], g4R[0][0]['physics']['bodies'][g4R[42]]['a']);
                g4R[33] = {
                  x: g4R[95]['x'] + g4R[0][0]['physics']['bodies'][g4R[42]]['p'][0],
                  y: g4R[95]['y'] + g4R[0][0]['physics']['bodies'][g4R[42]]['p'][1]
                };
                g4R[28] = {
                  x: g4R[0][1]['discs'][g4R[969]]['swing']['p'][0],
                  y: g4R[0][1]['discs'][g4R[969]]['swing']['p'][1]
                };
                g4R[77] = e8({
                  x: 0,
                  y: 0
                }, g4R[28], g4R[0][1]['physics']['bodies'][g4R[42]]['a']);
                g4R[54] = {
                  x: g4R[77]['x'] + g4R[0][1]['physics']['bodies'][g4R[42]]['p'][0],
                  y: g4R[77]['y'] + g4R[0][1]['physics']['bodies'][g4R[42]]['p'][1]
                };
                g4R[91] = {
                };
                U3ndn.S2t(15);
                g4R[463] = U3ndn.E_K(4, 0, 3);
                U3ndn.S2t(6);
                g4R[900] = U3ndn.E_K(3, 36);
                U3ndn.z_y(64);
                g4R[650] = U3ndn.I8r(50, 2, 34, 5);
                g4R[91]['x'] = (g4R[463] - g4R[0][2]) * g4R[33][r8no$[g4R[900]]] + g4R[0][2] * g4R[54][r8no$[g4R[650]]];
                U3ndn.S2t(1);
                g4R[984] = U3ndn.E_K(7, 6);
                U3ndn.z_y(168);
                g4R[488] = U3ndn.E_K(17, 5, 16, 20, 22);
                U3ndn.S2t(15);
                g4R[973] = U3ndn.I8r(7, 50, 17);
                g4R[91]['y'] = (g4R[984] - g4R[0][2]) * g4R[33][r8no$[g4R[488]]] + g4R[0][2] * g4R[54][r8no$[g4R[973]]];
                g4R[13] = {
                };
                U3ndn.z_y(1);
                g4R[528] = U3ndn.E_K(45, 6);
                U3ndn.z_y(67);
                g4R[192] = U3ndn.E_K(1, 290, 526, 2, 20);
                U3ndn.S2t(155);
                g4R[959] = U3ndn.E_K(8, 19, 37, 17, 80);
                g4R[13]['x'] = g4R[91][r8no$[g4R[528]]] * g4R[49] - L8c[35][g4R[969]][r8no$[g4R[192]]][r8no$[g4R[959]]];
                U3ndn.S2t(14);
                g4R[240] = U3ndn.I8r(1, 23, 17);
                U3ndn.S2t(104);
                g4R[369] = U3ndn.E_K(2, 3, 130, 60, 7);
                U3ndn.S2t(49);
                g4R[221] = U3ndn.I8r(6, 1, 12, 1, 34);
                g4R[13]['y'] = g4R[91][r8no$[g4R[240]]] * g4R[49] - L8c[35][g4R[969]][r8no$[g4R[369]]][r8no$[g4R[221]]];
                L8c[35][g4R[969]]['swing']['lineStyle'](2, 13421772, 0.5);
                L8c[35][g4R[969]]['swing']['lineTo'](g4R[13]['x'], g4R[13]['y']);
                L8c[35][g4R[969]]['swing']['drawCircle'](g4R[13]['x'], g4R[13]['y'], 0.2 * g4R[49]);
              } else if (g4R[0][0]['discs'][g4R[969]]['a2'] && g4R[0][1]['discs'][g4R[969]]['a2'] && g4R[969] == L8c[88]) {
                if (g4R[0][3]['mo'] == 'sp') {
                  L8c[35][g4R[969]]['swing']['lineStyle'](2, 13421772, 0.5);
                  U3ndn.S2t(4);
                  L8c[35][g4R[969]]['swing']['drawCircle'](0, 0, U3ndn.E_K(g4R[49], 10));
                }
              }
              if (g4R[0][0]['discs'][g4R[969]]['a1a'] < g4R[0][3]['sa1t']) {
                L8c[35][g4R[969]]['swing']['lineStyle'](2, 16724787, 0.5);
                L8c[35][g4R[969]]['swing']['drawCircle'](0, 0, L8c[35][g4R[969]]['totalRadius'] * g4R[49] + 1);
              }
              g4R[43] = 4;
              g4R[50] = L8c[35][g4R[969]]['swingArc'];
              g4R[50]['clear']();
              U3ndn.z_y(4);
              g4R[50]['lineStyle'](U3ndn.E_K(g4R[43], 2), 16777215, 0.3);
              U3ndn.z_y(78);
              g4R[791] = U3ndn.E_K(16, 49, 19, 55);
              U3ndn.S2t(60);
              g4R[883] = U3ndn.E_K(10, 1656, 1785);
              U3ndn.S2t(14);
              g4R[607] = U3ndn.E_K(5, 55, 591);
              U3ndn.S2t(190);
              g4R[303] = U3ndn.E_K(2, 14, 18, 1005, 3);
              U3ndn.z_y(133);
              g4R[178] = U3ndn.E_K(4, 10, 6, 5368, 596);
              g4R[69] = (g4R[0][0][r8no$[g4R[791]]][g4R[969]][r8no$[g4R[883]]] - g4R[0][3][r8no$[g4R[607]]]) / (g4R[303] - g4R[0][3][r8no$[g4R[178]]]);
              if (g4R[69] > 0) {
                g4R[50]['arc'](0, 0, (L8c[35][g4R[969]]['totalRadius'] * g4R[49] + 1) * g4R[43], 0, 2 * Math['PI'] * g4R[69]);
                U3ndn.S2t(0);
                g4R[50]['scale']['x'] = g4R[50]['scale']['y'] = U3ndn.I8r(1, g4R[43]);
                U3ndn.z_y(213);
                g4R[779] = U3ndn.I8r(6, 8, 86, 9, 2);
                U3ndn.S2t(45);
                g4R[433] = U3ndn.I8r(20, 13, 151756, 586);
                g4R[50]['rotation'] = g4R[779] * PIXI[r8no$[g4R[433]]];
              }
            }
            if (g4R[0][3]['mo'] == 'ar' || g4R[0][3]['mo'] == 'ard') {
              if (!L8c[35][g4R[969]]['swing']) {
                L8c[35][g4R[969]]['swing'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['container']['addChildAt'](L8c[35][g4R[969]]['swing'], 0);
                L8c[35][g4R[969]]['swingArc'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['swing']['addChild'](L8c[35][g4R[969]]['swingArc']);
                L8c[35][g4R[969]]['arrowDrawing'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['container']['addChild'](L8c[35][g4R[969]]['arrowDrawing']);
              } else {
                L8c[35][g4R[969]]['swing']['clear']();
                L8c[35][g4R[969]]['swingArc']['clear']();
                L8c[35][g4R[969]]['arrowDrawing']['clear']();
              }
              if (g4R[0][0]['discs'][g4R[969]]['a1a'] < 500) {
                L8c[35][g4R[969]]['swing']['lineStyle'](2, 16724787, 0.5);
                L8c[35][g4R[969]]['swing']['drawCircle'](0, 0, L8c[35][g4R[969]]['totalRadius'] * g4R[49] + 1);
              }
              if (g4R[0][1]['discs'][g4R[969]]['ds'] == 0) {
                g4R[78] = 4;
                g4R[61] = L8c[35][g4R[969]]['swingArc'];
                g4R[61]['clear']();
                U3ndn.S2t(4);
                g4R[61]['lineStyle'](U3ndn.I8r(g4R[78], 2), 16777215, 0.3);
                U3ndn.z_y(13);
                g4R[669] = U3ndn.I8r(27, 33, 19);
                U3ndn.S2t(6);
                g4R[921] = U3ndn.I8r(17, 102);
                U3ndn.z_y(1);
                g4R[376] = U3ndn.E_K(2500, 2000);
                U3ndn.S2t(1);
                g4R[112] = U3ndn.I8r(1013, 13);
                U3ndn.S2t(114);
                g4R[306] = U3ndn.I8r(1, 6, 1499, 9000, 494);
                g4R[90] = (g4R[0][0][r8no$[g4R[669]]][g4R[969]][r8no$[g4R[921]]] - g4R[376]) / (g4R[112] - g4R[306]);
                if (g4R[90] > 0) {
                  g4R[61]['arc'](0, 0, (L8c[35][g4R[969]]['totalRadius'] * g4R[49] + 1) * g4R[78], 0, 2 * Math['PI'] * g4R[90]);
                  U3ndn.z_y(0);
                  g4R[61]['scale']['x'] = g4R[61]['scale']['y'] = U3ndn.I8r(1, g4R[78]);
                  U3ndn.z_y(201);
                  g4R[897] = U3ndn.E_K(85, 5);
                  U3ndn.S2t(64);
                  g4R[908] = U3ndn.I8r(588, 4, 583, 7);
                  g4R[61]['rotation'] = g4R[897] * PIXI[r8no$[g4R[908]]];
                }
              } else {
                g4R[84] = g4R[0][0]['discs'][g4R[969]]['ds'];
                g4R[25] = L8c[9];
                g4R[845] = L8c[1];
                U3ndn.z_y(64);
                g4R[989] = U3ndn.I8r(38, 38, 40, 1);
                U3ndn.S2t(24);
                g4R[547] = U3ndn.E_K(15, 3, 12, 159);
                U3ndn.z_y(65);
                g4R[384] = U3ndn.I8r(3, 75, 75, 1);
                g4R[130] = Math['sqrt'](g4R[0][0][r8no$[g4R[989]]][g4R[969]][r8no$[g4R[547]]]) / g4R[384];
                g4R[631] = g4R[0][0]['discs'][g4R[969]]['team'];
                L8c[35][g4R[969]]['arrowDrawing']['lineStyle'](2, 16777215, 0.3);
                U3ndn.S2t(4);
                L8c[35][g4R[969]]['arrowDrawing']['moveTo'](U3ndn.E_K(g4R[49], 0.5), U3ndn.E_K(1, g4R[49], U3ndn.z_y(137)));
                U3ndn.S2t(214);
                L8c[35][g4R[969]]['arrowDrawing']['lineTo'](U3ndn.E_K(g4R[25], g4R[130], g4R[49], 2), U3ndn.I8r(2, g4R[845], g4R[49], U3ndn.z_y(215)));
                U3ndn.S2t(4);
                L8c[35][g4R[969]]['arrowDrawing']['moveTo'](U3ndn.I8r(g4R[49], 0.5), U3ndn.E_K(g4R[49], 1));
                U3ndn.S2t(214);
                L8c[35][g4R[969]]['arrowDrawing']['lineTo'](U3ndn.I8r(g4R[25], g4R[130], g4R[49], 2), U3ndn.I8r(g4R[49], 2, g4R[845], U3ndn.S2t(216)));
                L8c[35][g4R[969]]['arrowDrawing']['lineStyle'](1, 16777215, 0.3);
                L8c[35][g4R[969]]['arrowDrawing']['moveTo'](0, 0);
                U3ndn.S2t(4);
                L8c[35][g4R[969]]['arrowDrawing']['lineTo'](U3ndn.I8r(g4R[49], 5), 0);
                g4R[429] = 13840175;
                if (g4R[0][3]['tea'] == false) {
                  if (L8c[22][g4R[969]] && L8c[22][g4R[969]]['avatar']) {
                    g4R[429] = L8c[22][g4R[969]]['avatar']['bc'];
                  }
                } else {
                  if (g4R[631] == 2) {
                    g4R[429] = 16007990;
                  }
                  if (g4R[631] == 3) {
                    g4R[429] = 2201331;
                  }
                  if (g4R[631] == 4) {
                    g4R[429] = 5025616;
                  }
                  if (g4R[631] == 5) {
                    g4R[429] = 16771899;
                  }
                }
                L8c[35][g4R[969]]['arrowDrawing']['beginFill'](g4R[429]);
                L8c[35][g4R[969]]['arrowDrawing']['lineStyle'](undefined);
                if (g4R[0][3]['mo'] == 'ard') {
                  L8c[35][g4R[969]]['arrowDrawing']['lineStyle']({
                    width: 1,
                    color: 0
                  });
                }
                U3ndn.S2t(214);
                L8c[35][g4R[969]]['arrowDrawing']['drawRect'](U3ndn.I8r(g4R[25], g4R[130], g4R[49], 2), U3ndn.I8r(2, g4R[845], g4R[49], U3ndn.z_y(215)), U3ndn.I8r(g4R[49], g4R[25], U3ndn.z_y(4)), U3ndn.I8r(g4R[49], g4R[845], U3ndn.z_y(4)));
                L8c[35][g4R[969]]['arrowDrawing']['endFill']();
                U3ndn.S2t(13);
                g4R[194] = U3ndn.I8r(101, 511, 8);
                U3ndn.S2t(102);
                g4R[923] = U3ndn.I8r(18, 2, 10, 2, 48);
                U3ndn.S2t(14);
                g4R[615] = U3ndn.E_K(1, 177, 13);
                g4R[773] = PIXI[r8no$[g4R[194]]] * g4R[0][0][r8no$[g4R[923]]][g4R[969]][r8no$[g4R[615]]];
                U3ndn.z_y(89);
                g4R[724] = U3ndn.E_K(1812, 15, 589, 17, 1795);
                U3ndn.S2t(78);
                g4R[180] = U3ndn.I8r(15, 275, 14, 287);
                U3ndn.z_y(26);
                g4R[419] = U3ndn.E_K(14, 172, 1298, 8);
                g4R[436] = PIXI[r8no$[g4R[724]]] * g4R[0][1][r8no$[g4R[180]]][g4R[969]][r8no$[g4R[419]]];
                g4R[765] = Math['cos'](g4R[773]);
                g4R[210] = Math['sin'](g4R[773]);
                g4R[355] = Math['cos'](g4R[436]);
                g4R[459] = Math['sin'](g4R[436]);
                U3ndn.z_y(169);
                g4R[140] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[355], g4R[765]);
                U3ndn.S2t(169);
                g4R[480] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[459], g4R[210]);
                L8c[35][g4R[969]]['arrowDrawing']['rotation'] = Math['atan2'](g4R[480], g4R[140]);
              }
            }
            if (g4R[0][3]['mo'] == 'ft') {
              if (!L8c[35][g4R[969]]['swing']) {
                L8c[35][g4R[969]]['swing'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['container']['addChildAt'](L8c[35][g4R[969]]['swing'], 0);
                L8c[35][g4R[969]]['swingArc'] = new PIXI['Graphics'];
                L8c[35][g4R[969]]['swing']['addChild'](L8c[35][g4R[969]]['swingArc']);
              } else {
                L8c[35][g4R[969]]['swing']['clear']();
                L8c[35][g4R[969]]['swingArc']['clear']();
              }
              g4R[560] = 4;
              g4R[628] = L8c[35][g4R[969]]['swingArc'];
              g4R[628]['clear']();
              U3ndn.S2t(4);
              g4R[628]['lineStyle'](U3ndn.E_K(g4R[560], 2), 16777215, 0.3);
              U3ndn.z_y(42);
              g4R[333] = U3ndn.I8r(184, 8, 26, 17);
              U3ndn.S2t(100);
              g4R[271] = U3ndn.E_K(106, 9211, 11, 2, 8);
              U3ndn.S2t(14);
              g4R[325] = U3ndn.E_K(1004, 1004, 999);
              g4R[576] = g4R[0][0][r8no$[g4R[333]]][g4R[969]][r8no$[g4R[271]]] / g4R[325];
              if (g4R[576] > 0) {
                g4R[628]['arc'](0, 0, (L8c[35][g4R[969]]['totalRadius'] * g4R[49] + 1) * g4R[560], 0, 2 * Math['PI'] * g4R[576]);
                U3ndn.S2t(0);
                g4R[628]['scale']['x'] = g4R[628]['scale']['y'] = U3ndn.I8r(1, g4R[560]);
                U3ndn.z_y(217);
                g4R[392] = U3ndn.I8r(11, 82, 108, 20);
                U3ndn.z_y(128);
                g4R[498] = U3ndn.I8r(8774, 16, 587, 2, 16);
                g4R[628]['rotation'] = g4R[392] * PIXI[r8no$[g4R[498]]];
              }
            }
            g4R[784] = 18;
            g4R[795] = 25;
            if (L8c[28] == false && L8c[84] == false && L8c[53] == false && L8c[30] == false && (L8c[35][g4R[969]]['container']['x'] < 0 - g4R[784] || L8c[35][g4R[969]]['container']['x'] > 730 + g4R[784] || L8c[35][g4R[969]]['container']['y'] < 0 - g4R[795])) {
              U3ndn.z_y(7);
              g4R[277] = U3ndn.E_K(23, 92, 15, 14);
              U3ndn.S2t(60);
              g4R[366] = U3ndn.E_K(10, 588, 1196);
              U3ndn.z_y(134);
              g4R[792] = U3ndn.I8r(13, 1, 8, 9, 454);
              U3ndn.z_y(5);
              g4R[483] = U3ndn.E_K(2, 10, 2, 16, 0);
              g4R[912] = g4R[277] + L8c[35][g4R[969]][r8no$[g4R[366]]][r8no$[g4R[792]]] / g4R[483];
              U3ndn.z_y(13);
              g4R[894] = U3ndn.I8r(32, 7, 19);
              U3ndn.S2t(85);
              g4R[361] = U3ndn.E_K(18, 603, 1, 13);
              U3ndn.z_y(14);
              g4R[654] = U3ndn.E_K(79, 474, 463);
              U3ndn.z_y(52);
              g4R[931] = U3ndn.E_K(11, 0, 9, 20, 1978);
              g4R[405] = g4R[894] + L8c[35][g4R[969]][r8no$[g4R[361]]][r8no$[g4R[654]]] / g4R[931];
              U3ndn.S2t(13);
              g4R[871] = U3ndn.E_K(19, 1, 10);
              U3ndn.z_y(105);
              g4R[172] = U3ndn.E_K(4, 591, 599, 197);
              U3ndn.S2t(114);
              g4R[800] = U3ndn.E_K(702, 12, 2, 5616, 470);
              U3ndn.S2t(190);
              g4R[204] = U3ndn.E_K(8, 9, 4, 0, 11);
              g4R[166] = g4R[871] + L8c[35][g4R[969]][r8no$[g4R[172]]][r8no$[g4R[800]]] / g4R[204];
              U3ndn.S2t(6);
              g4R[559] = U3ndn.I8r(2, 8);
              U3ndn.z_y(149);
              g4R[124] = U3ndn.E_K(591, 14, 1, 3588, 7176);
              U3ndn.S2t(218);
              g4R[211] = U3ndn.E_K(12, 8, 419, 29, 2);
              U3ndn.S2t(90);
              g4R[267] = U3ndn.I8r(7, 12, 9, 30);
              g4R[517] = g4R[559] + L8c[35][g4R[969]][r8no$[g4R[124]]][r8no$[g4R[211]]] / g4R[267];
              L8c[35][g4R[969]]['offscreencontainer']['visible'] = true;
              U3ndn.z_y(6);
              L8c[35][g4R[969]]['offscreencontainer']['x'] = Math['max'](U3ndn.I8r(0, g4R[912]), Math['min'](730 - g4R[912], L8c[35][g4R[969]]['container']['x']));
              U3ndn.S2t(6);
              L8c[35][g4R[969]]['offscreencontainer']['y'] = Math['max'](U3ndn.I8r(0, g4R[405]), L8c[35][g4R[969]]['container']['y']);
              U3ndn.z_y(18);
              g4R[610] = U3ndn.I8r(3, 2, 8131, 8672);
              U3ndn.z_y(97);
              g4R[456] = U3ndn.I8r(33, 19, 6, 19);
              U3ndn.S2t(5);
              g4R[642] = U3ndn.E_K(58301, 12, 17, 4, 4887);
              U3ndn.S2t(115);
              g4R[675] = U3ndn.E_K(76, 20, 34, 19);
              g4R[191] = L8c[35][g4R[969]][r8no$[g4R[610]]][r8no$[g4R[456]]] - L8c[35][g4R[969]][r8no$[g4R[642]]][r8no$[g4R[675]]];
              U3ndn.S2t(1);
              g4R[568] = U3ndn.I8r(554, 12);
              U3ndn.S2t(13);
              g4R[823] = U3ndn.I8r(32, 23, 15);
              U3ndn.S2t(1);
              g4R[954] = U3ndn.E_K(3258, 2715);
              U3ndn.S2t(1);
              g4R[230] = U3ndn.I8r(45, 5);
              g4R[338] = L8c[35][g4R[969]][r8no$[g4R[568]]][r8no$[g4R[823]]] - L8c[35][g4R[969]][r8no$[g4R[954]]][r8no$[g4R[230]]];
              g4R[426] = Math['atan2'](g4R[338], g4R[191]);
              U3ndn.z_y(78);
              g4R[957] = U3ndn.E_K(5, 1, 13, 165);
              L8c[35][g4R[969]]['offscreenarrow']['rotation'] = Math[r8no$[g4R[957]]] + g4R[426];
              U3ndn.z_y(133);
              g4R[473] = U3ndn.E_K(7, 19, 2, 124185, 6567);
              U3ndn.S2t(219);
              g4R[811] = U3ndn.E_K(2, 56, 16, 412);
              L8c[35][g4R[969]]['offscreenarrow']['x'] = Math['cos'](L8c[35][g4R[969]][r8no$[g4R[473]]][r8no$[g4R[811]]]) * g4R[166];
              U3ndn.z_y(53);
              g4R[943] = U3ndn.I8r(306, 578, 4, 4, 2);
              U3ndn.z_y(6);
              g4R[714] = U3ndn.E_K(42, 466);
              L8c[35][g4R[969]]['offscreenarrow']['y'] = Math['sin'](L8c[35][g4R[969]][r8no$[g4R[943]]][r8no$[g4R[714]]]) * g4R[517];
              if (g4R[969] == L8c[88]) {
                if (Date['now']() > L8c[74] + 500) {
                  U3ndn.z_y(45);
                  g4R[372] = U3ndn.I8r(8, 4, 16706, 539);
                  U3ndn.S2t(1);
                  g4R[975] = U3ndn.E_K(468, 429);
                  U3ndn.z_y(15);
                  g4R[299] = U3ndn.I8r(9, 746, 25);
                  U3ndn.S2t(1);
                  g4R[589] = U3ndn.E_K(11, 9);
                  U3ndn.z_y(107);
                  g4R[914] = U3ndn.I8r(19, 18, 8, 133);
                  g4R[171] = L8c[35][g4R[969]][r8no$[g4R[372]]][r8no$[g4R[975]]] / (g4R[299] / g4R[589]) - g4R[914];
                  g4R[171] *= A['panAmount'];
                  g4R[171] = Math['max'](Math['min'](1, g4R[171]), - 1);
                  L8c[3]['playSound']('discOffScreen', g4R[171], 0.15, g4R[0][5]);
                  L8c[74] = Date['now']();
                }
              }
            } else {
              L8c[35][g4R[969]]['offscreencontainer']['visible'] = false;
            }
          }
        }
        if (L8c[35][L8c[88]] && L8c[41]['getChildIndex'](L8c[35][L8c[88]]['container']) != L8c[41]['children']['length'] - 1) {
          L8c[41]['setChildIndex'](L8c[35][L8c[88]]['container'], L8c[41]['children']['length'] - 1);
        }
        for (g4R[969] = 0; g4R[969] < L8c[48]['length']; g4R[969]++) {
          if (L8c[48][g4R[969]] && !g4R[0][1]['projectiles'][g4R[969]]) {
            O4m(g4R[969]);
          }
        }
        for (g4R[969] = 0; g4R[969] < g4R[0][1]['projectiles']['length']; g4R[969]++) {
          if (g4R[0][0]['projectiles'][g4R[969]] && g4R[0][1]['projectiles'][g4R[969]]) {
            if (!L8c[48][g4R[969]]) {
              L8c[48][g4R[969]] = new PIXI['Graphics'];
              if (g4R[0][3]['mo'] == 'ar') {
                L8c[48][g4R[969]]['lineStyle'](undefined);
              }
              if (g4R[0][3]['mo'] == 'ard') {
                L8c[48][g4R[969]]['lineStyle']({
                  width: 1,
                  color: 0
                });
              }
              g4R[963] = g4R[0][1]['projectiles'][g4R[969]]['did'];
              if (g4R[0][1]['discs'][g4R[963]]) {
                g4R[558] = g4R[0][1]['discs'][g4R[963]]['team'];
              }
              g4R[260] = 13840175;
              if (g4R[0][3]['tea'] == false) {
                if (L8c[22][g4R[963]] && L8c[22][g4R[963]]['avatar']) {
                  g4R[260] = L8c[22][g4R[963]]['avatar']['bc'];
                }
              } else {
                if (g4R[558] == 2) {
                  g4R[260] = 16007990;
                }
                if (g4R[558] == 3) {
                  g4R[260] = 2201331;
                }
                if (g4R[558] == 4) {
                  g4R[260] = 5025616;
                }
                if (g4R[558] == 5) {
                  g4R[260] = 16771899;
                }
              }
              L8c[48][g4R[969]]['beginFill'](g4R[260]);
              U3ndn.S2t(4);
              g4R[806] = U3ndn.I8r(g4R[49], L8c[9]);
              U3ndn.S2t(4);
              g4R[600] = U3ndn.I8r(g4R[49], L8c[1]);
              if (g4R[0][3]['mo'] == 'ard') {
                g4R[806] -= 1;
                g4R[600] -= 1;
              }
              U3ndn.z_y(156);
              L8c[48][g4R[969]]['drawRect'](U3ndn.I8r(2, g4R[806]), U3ndn.E_K(2, g4R[600]), g4R[806], g4R[600]);
              L8c[92]['addChild'](L8c[48][g4R[969]]);
            }
            U3ndn.z_y(1);
            g4R[312] = U3ndn.E_K(130, 3);
            U3ndn.S2t(6);
            g4R[314] = U3ndn.E_K(10, 29);
            g4R[685] = g4R[0][0][r8no$[g4R[312]]][g4R[969]][r8no$[g4R[314]]] * g4R[49];
            U3ndn.z_y(14);
            g4R[581] = U3ndn.I8r(12, 120, 117);
            U3ndn.S2t(38);
            g4R[162] = U3ndn.I8r(19, 2, 8, 29, 2);
            g4R[751] = g4R[0][0][r8no$[g4R[581]]][g4R[969]][r8no$[g4R[162]]] * g4R[49];
            U3ndn.S2t(29);
            g4R[710] = U3ndn.I8r(43, 14, 6);
            U3ndn.S2t(6);
            g4R[481] = U3ndn.I8r(2, 37);
            g4R[852] = g4R[0][1][r8no$[g4R[710]]][g4R[969]][r8no$[g4R[481]]] * g4R[49];
            U3ndn.z_y(210);
            g4R[882] = U3ndn.I8r(7, 114, 14, 3, 18);
            U3ndn.z_y(15);
            g4R[465] = U3ndn.I8r(16, 30, 6);
            g4R[359] = g4R[0][1][r8no$[g4R[882]]][g4R[969]][r8no$[g4R[465]]] * g4R[49];
            g4R[515] = g4R[0][0]['projectiles'][g4R[969]]['a'];
            g4R[293] = g4R[0][1]['projectiles'][g4R[969]]['a'];
            U3ndn.S2t(169);
            L8c[48][g4R[969]]['x'] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[852], g4R[685]);
            U3ndn.S2t(169);
            L8c[48][g4R[969]]['y'] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[359], g4R[751]);
            g4R[51] = Math['cos'](g4R[515]);
            g4R[70] = Math['sin'](g4R[515]);
            g4R[48] = Math['cos'](g4R[293]);
            g4R[65] = Math['sin'](g4R[293]);
            U3ndn.z_y(169);
            g4R[97] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[48], g4R[51]);
            U3ndn.S2t(169);
            g4R[31] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[65], g4R[70]);
            L8c[48][g4R[969]]['rotation'] = Math['atan2'](g4R[31], g4R[97]);
          }
        }
        g4R[697] = [
        ];
        for (g4R[969] = 0; g4R[969] < g4R[0][1]['capZones']['length']; g4R[969]++) {
          if (g4R[0][1]['capZones'][g4R[969]]) {
            g4R[697][g4R[0][1]['capZones'][g4R[969]]['i']] = {
              capID: g4R[969]
            };
          }
        }
        U3ndn.w30();
        for (g4R[451] = g4R[0][1]['physics']['bro']['length'] - 1; g4R[451] >= 0; g4R[451]--) {
          g4R[969] = g4R[0][1]['physics']['bro'][g4R[451]];
          if (g4R[0][1]['physics']['bodies'][g4R[969]]) {
            if (!L8c[59][g4R[969]]) {
              L8c[59][g4R[969]] = new PIXI['Graphics'];
              L8c[92]['addChild'](L8c[59][g4R[969]]);
              g4R[420] = null;
              for (g4R[964] = 0; g4R[964] < g4R[0][1]['physics']['joints']['length']; g4R[964]++) {
                if (g4R[0][1]['physics']['joints'][g4R[964]]) {
                  g4R[949] = g4R[0][1]['physics']['joints'][g4R[964]];
                  if (g4R[949]['type'] == 'rv' && g4R[949]['ba'] == g4R[969] && (L8c[53] || g4R[949]['d']['dl'])) {
                    if (!g4R[420]) {
                      g4R[420] = new PIXI['Graphics'];
                    }
                    g4R[420]['lineStyle'](1, 13421772, 0.5);
                    if (L8c[46] == g4R[964]) {
                      g4R[420]['lineStyle'](1, 16033703, 0.9);
                    }
                    g4R[420]['moveTo'](0, 0);
                    g4R[420]['lineTo'](g4R[949]['aa'][0] * g4R[49], g4R[949]['aa'][1] * g4R[49]);
                    if (L8c[53]) {
                      g4R[420]['beginFill'](4521796);
                      g4R[420]['lineStyle'](undefined);
                      g4R[420]['drawCircle'](g4R[949]['aa'][0] * g4R[49], g4R[949]['aa'][1] * g4R[49], 3);
                    }
                  }
                }
              }
              for (g4R[725] = 0; g4R[725] < g4R[0][1]['physics']['bodies'][g4R[969]]['fx']['length']; g4R[725]++) {
                if (g4R[0][1]['physics']['bodies'][g4R[969]]['fx'][g4R[725]] != null) {
                  g4R[329] = g4R[0][1]['physics']['bodies'][g4R[969]]['fx'][g4R[725]];
                  g4R[346] = g4R[0][1]['physics']['fixtures'][g4R[329]]['sh'];
                  g4R[701] = g4R[0][1]['physics']['fixtures'][g4R[329]];
                  g4R[857] = g4R[0][1]['physics']['shapes'][g4R[346]];
                  g4R[266] = new PIXI['Graphics'];
                  if (g4R[697][g4R[329]]) {
                    g4R[266]['lineStyle'](3, 16777215, 1);
                    if (L8c[63]) {
                      g4R[266]['visible'] = false;
                      L8c[762] = g4R[266];
                    }
                  } else if (L8c[10] == g4R[969] || L8c[32] == g4R[329]) {
                    g4R[266]['beginFill'](16711680);
                  } else {
                    g4R[266]['beginFill'](g4R[701]['f']);
                  }
                  if (g4R[857]['type'] == 'bx') {
                    g4R[266]['drawRect']( - g4R[857]['w'] / 2 * g4R[49], - g4R[857]['h'] / 2 * g4R[49], g4R[857]['w'] * g4R[49], g4R[857]['h'] * g4R[49]);
                    U3ndn.z_y(114);
                    g4R[203] = U3ndn.E_K(56, 2, 1, 56, 59);
                    g4R[266]['x'] = g4R[857][r8no$[g4R[203]]][0] * g4R[49];
                    U3ndn.z_y(15);
                    g4R[484] = U3ndn.I8r(13, 64, 19);
                    U3ndn.S2t(72);
                    g4R[920] = U3ndn.E_K(15, 15, 31);
                    g4R[266]['y'] = g4R[857][r8no$[g4R[484]]][g4R[920]] * g4R[49];
                    g4R[266]['rotation'] = g4R[857]['a'];
                  } else if (g4R[857]['type'] == 'ci') {
                    g4R[266]['drawCircle'](0, 0, g4R[857]['r'] * g4R[49]);
                    U3ndn.z_y(1);
                    g4R[197] = U3ndn.E_K(62, 4);
                    g4R[266]['x'] = g4R[857][r8no$[g4R[197]]][0] * g4R[49];
                    U3ndn.S2t(178);
                    g4R[161] = U3ndn.I8r(13, 41, 11, 15);
                    U3ndn.z_y(15);
                    g4R[549] = U3ndn.I8r(18, 5, 22);
                    g4R[266]['y'] = g4R[857][r8no$[g4R[161]]][g4R[549]] * g4R[49];
                  } else if (g4R[857]['type'] == 'po') {
                    if (g4R[857]['v']['length'] > 0) {
                      g4R[266]['moveTo'](g4R[857]['v'][0][0] * g4R[49], g4R[857]['v'][0][1] * g4R[49]);
                      for (g4R[446] = 1; g4R[446] < g4R[857]['v']['length']; g4R[446]++) {
                        g4R[266]['lineTo'](g4R[857]['v'][g4R[446]][0] * g4R[49], g4R[857]['v'][g4R[446]][1] * g4R[49]);
                      }
                      g4R[266]['lineTo'](g4R[857]['v'][0][0] * g4R[49], g4R[857]['v'][0][1] * g4R[49]);
                    }
                  } else if (g4R[857]['type'] == 'ch') {
                    g4R[266]['endFill']();
                    g4R[266]['lineStyle'](1, g4R[701]['f'], 1);
                    g4R[266]['moveTo'](g4R[857]['v'][0][0] * g4R[49], g4R[857]['v'][0][1] * g4R[49]);
                    for (g4R[446] = 1; g4R[446] < g4R[857]['v']['length']; g4R[446]++) {
                      g4R[266]['lineTo'](g4R[857]['v'][g4R[446]][0] * g4R[49], g4R[857]['v'][g4R[446]][1] * g4R[49]);
                    }
                    if (g4R[857]['l'] == true) {
                      g4R[266]['lineTo'](g4R[857]['v'][0][0] * g4R[49], g4R[857]['v'][0][1] * g4R[49]);
                    }
                  }
                  g4R[266]['endFill']();
                  L8c[59][g4R[969]]['addChild'](g4R[266]);
                  L8c[27][g4R[346]] = g4R[266];
                  if (g4R[701]['np'] == false && V6D[67]['customControls']['quality'] == 3) {
                    g4R[807] = 0.17;
                    g4R[663] = g4R[266]['clone']();
                    U3ndn.z_y(132);
                    g4R[910] = U3ndn.I8r(47, 45, 7, 47, 1);
                    U3ndn.S2t(13);
                    g4R[848] = U3ndn.I8r(0, 16, 14);
                    g4R[663]['x'] = g4R[266][r8no$[g4R[910]]] + g4R[848];
                    U3ndn.z_y(6);
                    g4R[157] = U3ndn.E_K(25, 15);
                    U3ndn.S2t(60);
                    g4R[732] = U3ndn.E_K(9, 8, 19);
                    g4R[663]['y'] = g4R[266][r8no$[g4R[157]]] + g4R[732];
                    g4R[663]['tint'] = 0;
                    L8c[59][g4R[969]]['addChildAt'](g4R[663], 0);
                    g4R[663]['alpha'] = g4R[807];
                    if (g4R[857]['type'] == 'bx') {
                      g4R[663]['rotation'] = g4R[857]['a'];
                    }
                    g4R[663]['bodyID'] = g4R[969];
                    g4R[663]['blendMode'] = PIXI['BLEND_MODES']['NORMAL'];
                    L8c[86][g4R[346]] = g4R[663];
                  }
                }
              }
              if (g4R[420]) {
                if (L8c[53]) {
                  L8c[59][g4R[969]]['addChild'](g4R[420]);
                } else {
                  L8c[59][g4R[969]]['addChildAt'](g4R[420], 0);
                }
              }
            }
            if (L8c[59][g4R[969]]['parent'] != L8c[92]) {
              continue;
            }
            U3ndn.z_y(100);
            g4R[252] = U3ndn.E_K(61, 9493, 13, 20, 12);
            U3ndn.z_y(9);
            g4R[830] = U3ndn.I8r(528, 6816, 13);
            U3ndn.z_y(1);
            g4R[977] = U3ndn.I8r(52, 3);
            g4R[7] = g4R[0][0][r8no$[g4R[252]]][r8no$[g4R[830]]][g4R[969]][r8no$[g4R[977]]][0] * g4R[49];
            U3ndn.S2t(10);
            g4R[423] = U3ndn.I8r(796, 14, 15, 15, 56);
            U3ndn.z_y(178);
            g4R[937] = U3ndn.I8r(2, 44, 6, 8);
            U3ndn.S2t(1);
            g4R[901] = U3ndn.I8r(98, 49);
            U3ndn.S2t(57);
            g4R[151] = U3ndn.I8r(14, 15);
            g4R[6] = g4R[0][0][r8no$[g4R[423]]][r8no$[g4R[937]]][g4R[969]][r8no$[g4R[901]]][g4R[151]] * g4R[49];
            U3ndn.z_y(127);
            g4R[844] = U3ndn.E_K(55, 8317, 19, 4, 2);
            U3ndn.z_y(6);
            g4R[835] = U3ndn.E_K(32, 16);
            U3ndn.z_y(163);
            g4R[618] = U3ndn.E_K(10, 13, 159, 2);
            g4R[8] = g4R[0][1][r8no$[g4R[844]]][r8no$[g4R[835]]][g4R[969]][r8no$[g4R[618]]][0] * g4R[49];
            U3ndn.z_y(42);
            g4R[380] = U3ndn.E_K(619, 14, 47, 4);
            U3ndn.S2t(63);
            g4R[997] = U3ndn.E_K(11, 7, 13, 7740, 55);
            U3ndn.S2t(28);
            g4R[441] = U3ndn.I8r(48, 9, 47, 56);
            U3ndn.S2t(1);
            g4R[133] = U3ndn.E_K(5, 4);
            g4R[5] = g4R[0][1][r8no$[g4R[380]]][r8no$[g4R[997]]][g4R[969]][r8no$[g4R[441]]][g4R[133]] * g4R[49];
            g4R[3] = g4R[0][0]['physics']['bodies'][g4R[969]]['a'];
            g4R[62] = g4R[0][1]['physics']['bodies'][g4R[969]]['a'];
            g4R[51] = Math['cos'](g4R[3]);
            g4R[70] = Math['sin'](g4R[3]);
            g4R[48] = Math['cos'](g4R[62]);
            g4R[65] = Math['sin'](g4R[62]);
            U3ndn.S2t(169);
            g4R[97] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[48], g4R[51]);
            U3ndn.z_y(169);
            g4R[31] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[65], g4R[70]);
            U3ndn.z_y(169);
            L8c[59][g4R[969]]['x'] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[8], g4R[7]);
            U3ndn.S2t(169);
            L8c[59][g4R[969]]['y'] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[5], g4R[6]);
            L8c[59][g4R[969]]['rotation'] = Math['atan2'](g4R[31], g4R[97]);
            for (g4R[382] = g4R[0][1]['physics']['bodies'][g4R[969]]['fx']['length'] - 1; g4R[382] >= 0; g4R[382]--) {
              if (g4R[0][1]['physics']['bodies'][g4R[969]]['fx'][g4R[382]] != null) {
                g4R[933] = g4R[0][1]['physics']['bodies'][g4R[969]]['fx'][g4R[382]];
                g4R[956] = g4R[0][1]['physics']['fixtures'][g4R[933]]['sh'];
                g4R[154] = g4R[0][1]['physics']['fixtures'][g4R[933]];
                g4R[805] = g4R[0][1]['physics']['shapes'][g4R[956]];
                if (g4R[805]['sk'] == true) {
                  g4R[718] = L8c[27][g4R[956]];
                  if (g4R[805]['type'] == 'bx') {
                    g4R[239] = g4R[0][0]['physics']['shapes'][g4R[956]]['w'];
                    g4R[613] = g4R[0][1]['physics']['shapes'][g4R[956]]['w'];
                    U3ndn.S2t(173);
                    g4R[718]['width'] = U3ndn.E_K(g4R[613], g4R[0][2], g4R[239], 1, g4R[0][2], g4R[49]);
                    if (L8c[86][g4R[956]]) {
                      U3ndn.S2t(173);
                      L8c[86][g4R[956]]['width'] = U3ndn.I8r(g4R[613], g4R[0][2], g4R[239], 1, g4R[0][2], g4R[49]);
                    }
                  }
                  if (g4R[805]['type'] == 'ci') {
                    g4R[173] = g4R[0][0]['physics']['shapes'][g4R[956]]['r'];
                    g4R[729] = g4R[0][1]['physics']['shapes'][g4R[956]]['r'];
                    U3ndn.z_y(174);
                    g4R[718]['width'] = g4R[718]['height'] = U3ndn.E_K(g4R[729], g4R[173], 1, g4R[0][2], g4R[49], 2, g4R[0][2]);
                    if (L8c[86][g4R[956]]) {
                      U3ndn.z_y(174);
                      L8c[86][g4R[956]]['width'] = L8c[86][g4R[956]]['height'] = U3ndn.I8r(g4R[729], g4R[173], 1, g4R[0][2], g4R[49], 2, g4R[0][2]);
                    }
                  }
                }
              }
            }
          }
        }
        for (g4R[687] = 0; g4R[687] < L8c[86]['length']; g4R[687]++) {
          if (L8c[86][g4R[687]]) {
            g4R[248] = g4R[687];
            g4R[371] = g4R[0][0]['physics']['shapes'][g4R[248]];
            g4R[752] = L8c[86][g4R[687]]['bodyID'];
            g4R[824] = L8c[86][g4R[687]];
            if (g4R[371]['type'] == 'bx' || g4R[371]['type'] == 'ci') {
              U3ndn.z_y(17);
              g4R[606] = U3ndn.E_K(36, 7, 15);
              g4R[824]['x'] = g4R[371][r8no$[g4R[606]]][0] * g4R[49];
              U3ndn.z_y(220);
              g4R[596] = U3ndn.I8r(39, 4, 12, 10, 39);
              U3ndn.z_y(57);
              g4R[342] = U3ndn.I8r(19, 20);
              g4R[824]['y'] = g4R[371][r8no$[g4R[596]]][g4R[342]] * g4R[49];
            } else {
              g4R[824]['x'] = 0;
              g4R[824]['y'] = 0;
            }
            g4R[466] = {
              x: 2,
              y: 2
            };
            g4R[808] = e8({
              x: 0,
              y: 0
            }, g4R[466], - g4R[0][0]['physics']['bodies'][g4R[752]]['a']);
            g4R[824]['x'] += g4R[808]['x'];
            g4R[824]['y'] += g4R[808]['y'];
          }
        }
        for (g4R[181] = 0; g4R[181] < g4R[0][1]['physics']['joints']['length']; g4R[181]++) {
          if (g4R[0][1]['physics']['joints'][g4R[181]] && g4R[0][1]['physics']['joints'][g4R[181]]['type'] == 'lpj' && (L8c[53] || g4R[0][1]['physics']['joints'][g4R[181]]['d']['dl']) && !L8c[94][g4R[181]]) {
            g4R[499] = g4R[0][1]['physics']['joints'][g4R[181]];
            L8c[94][g4R[181]] = new PIXI['Graphics'];
            L8c[94][g4R[181]]['lineStyle'](1, 13421772, 0.5);
            if (L8c[46] == g4R[181]) {
              L8c[94][g4R[181]]['lineStyle'](1, 16033703, 0.9);
            }
            L8c[94][g4R[181]]['moveTo'](g4R[499]['plen'] * g4R[49], 0);
            L8c[94][g4R[181]]['lineTo']( - g4R[499]['plen'] * g4R[49], 0);
            L8c[94][g4R[181]]['rotation'] = g4R[499]['pa'];
            U3ndn.z_y(6);
            g4R[731] = U3ndn.I8r(60, 18);
            L8c[94][g4R[181]]['x'] = g4R[499][r8no$[g4R[731]]] * g4R[49];
            U3ndn.z_y(6);
            g4R[101] = U3ndn.I8r(6, 73);
            L8c[94][g4R[181]]['y'] = g4R[499][r8no$[g4R[101]]] * g4R[49];
            g4R[119] = L8c[92]['getChildIndex'](L8c[59][g4R[499]['ba']]);
            if (L8c[53]) {
              g4R[119]++;
            }
            L8c[92]['addChildAt'](L8c[94][g4R[181]], g4R[119]);
          }
          if (g4R[0][0]['physics']['joints'][g4R[181]] && g4R[0][1]['physics']['joints'][g4R[181]] && g4R[0][1]['physics']['joints'][g4R[181]]['type'] == 'd' && (L8c[53] || g4R[0][0]['physics']['joints'][g4R[181]]['d']['dl'])) {
            g4R[986] = g4R[0][0]['physics']['joints'][g4R[181]];
            g4R[513] = g4R[0][1]['physics']['joints'][g4R[181]];
            if (!L8c[94][g4R[181]]) {
              L8c[94][g4R[181]] = new PIXI['Graphics'];
              g4R[981] = L8c[92]['getChildIndex'](L8c[59][g4R[986]['ba']]);
              if (L8c[53]) {
                g4R[981]++;
              }
              L8c[92]['addChildAt'](L8c[94][g4R[181]], g4R[981]);
            } else {
              L8c[94][g4R[181]]['clear']();
            }
            g4R[712] = {
              x: g4R[986]['aa'][0],
              y: g4R[986]['aa'][1]
            };
            g4R[608] = e8({
              x: 0,
              y: 0
            }, g4R[712], g4R[0][0]['physics']['bodies'][g4R[986]['ba']]['a']);
            U3ndn.S2t(14);
            g4R[992] = U3ndn.E_K(6, 24, 35);
            U3ndn.S2t(61);
            g4R[431] = U3ndn.E_K(1, 19, 5, 817, 760);
            U3ndn.S2t(14);
            g4R[960] = U3ndn.E_K(6, 6, 47);
            U3ndn.S2t(14);
            g4R[458] = U3ndn.E_K(24, 96, 72);
            U3ndn.z_y(60);
            g4R[208] = U3ndn.I8r(6, 827, 882);
            g4R[893] = g4R[608][r8no$[g4R[992]]] + g4R[0][0][r8no$[g4R[431]]][r8no$[g4R[960]]][g4R[986][r8no$[g4R[458]]]][r8no$[g4R[208]]][0];
            U3ndn.z_y(60);
            g4R[842] = U3ndn.E_K(14, 4, 58);
            U3ndn.z_y(105);
            g4R[655] = U3ndn.I8r(7, 25, 45, 5);
            U3ndn.S2t(6);
            g4R[367] = U3ndn.I8r(3, 45);
            U3ndn.S2t(28);
            g4R[280] = U3ndn.E_K(74, 17, 4, 25);
            U3ndn.z_y(15);
            g4R[814] = U3ndn.I8r(20, 41, 12);
            U3ndn.z_y(57);
            g4R[123] = U3ndn.I8r(14, 15);
            g4R[955] = g4R[608][r8no$[g4R[842]]] + g4R[0][0][r8no$[g4R[655]]][r8no$[g4R[367]]][g4R[986][r8no$[g4R[280]]]][r8no$[g4R[814]]][g4R[123]];
            g4R[789] = {
              x: g4R[513]['aa'][0],
              y: g4R[513]['aa'][1]
            };
            g4R[227] = e8({
              x: 0,
              y: 0
            }, g4R[789], g4R[0][1]['physics']['bodies'][g4R[513]['ba']]['a']);
            U3ndn.z_y(105);
            g4R[881] = U3ndn.I8r(10, 30, 47, 15);
            U3ndn.S2t(1);
            g4R[629] = U3ndn.I8r(602, 559);
            U3ndn.S2t(40);
            g4R[979] = U3ndn.E_K(1, 312, 15, 24);
            U3ndn.z_y(6);
            g4R[929] = U3ndn.I8r(19, 57);
            U3ndn.z_y(103);
            g4R[212] = U3ndn.E_K(6, 37191, 980, 3, 19);
            g4R[529] = g4R[227][r8no$[g4R[881]]] + g4R[0][1][r8no$[g4R[629]]][r8no$[g4R[979]]][g4R[513][r8no$[g4R[929]]]][r8no$[g4R[212]]][0];
            U3ndn.S2t(131);
            g4R[168] = U3ndn.I8r(60, 1, 10, 60, 30);
            U3ndn.z_y(64);
            g4R[495] = U3ndn.E_K(35, 7, 38, 1);
            U3ndn.z_y(8);
            g4R[760] = U3ndn.E_K(8, 22, 16, 7, 12);
            U3ndn.z_y(65);
            g4R[258] = U3ndn.E_K(8, 1140, 570, 66);
            U3ndn.z_y(15);
            g4R[980] = U3ndn.E_K(2, 53, 6);
            U3ndn.S2t(42);
            g4R[244] = U3ndn.E_K(69, 18, 3, 16);
            g4R[557] = g4R[227][r8no$[g4R[168]]] + g4R[0][1][r8no$[g4R[495]]][r8no$[g4R[760]]][g4R[513][r8no$[g4R[258]]]][r8no$[g4R[980]]][g4R[244]];
            g4R[961] = 0;
            g4R[695] = 0;
            g4R[131] = 0;
            g4R[635] = 0;
            if (g4R[513]['bb'] == - 1) {
              g4R[961] = g4R[513]['ab'][0];
              g4R[695] = g4R[513]['ab'][1];
              g4R[131] = g4R[513]['ab'][0];
              g4R[635] = g4R[513]['ab'][1];
            } else {
              g4R[822] = {
                x: g4R[986]['ab'][0],
                y: g4R[986]['ab'][1]
              };
              g4R[841] = e8({
                x: 0,
                y: 0
              }, g4R[822], g4R[0][0]['physics']['bodies'][g4R[986]['bb']]['a']);
              U3ndn.S2t(9);
              g4R[768] = U3ndn.E_K(55, 401, 8);
              U3ndn.z_y(1);
              g4R[928] = U3ndn.I8r(51, 3);
              U3ndn.S2t(64);
              g4R[988] = U3ndn.I8r(1001, 1001, 76, 1);
              U3ndn.S2t(1);
              g4R[344] = U3ndn.E_K(55, 6);
              g4R[961] = g4R[841][r8no$[g4R[768]]] + g4R[0][0]['physics'][r8no$[g4R[928]]][g4R[986][r8no$[g4R[988]]]][r8no$[g4R[344]]][0];
              U3ndn.z_y(14);
              g4R[904] = U3ndn.I8r(53, 53, 39);
              U3ndn.z_y(105);
              g4R[100] = U3ndn.I8r(2, 49, 44, 49);
              U3ndn.S2t(1);
              g4R[584] = U3ndn.E_K(50, 2);
              U3ndn.S2t(77);
              g4R[195] = U3ndn.I8r(17, 6, 6, 26, 3);
              U3ndn.z_y(178);
              g4R[205] = U3ndn.E_K(39, 5, 3, 8);
              U3ndn.S2t(211);
              g4R[622] = U3ndn.E_K(15, 10, 25, 15);
              g4R[695] = g4R[841][r8no$[g4R[904]]] + g4R[0][0][r8no$[g4R[100]]][r8no$[g4R[584]]][g4R[986][r8no$[g4R[195]]]][r8no$[g4R[205]]][g4R[622]];
              g4R[849] = {
                x: g4R[513]['ab'][0],
                y: g4R[513]['ab'][1]
              };
              g4R[562] = e8({
                x: 0,
                y: 0
              }, g4R[849], g4R[0][1]['physics']['bodies'][g4R[513]['bb']]['a']);
              U3ndn.z_y(29);
              g4R[298] = U3ndn.I8r(15, 3, 8);
              U3ndn.z_y(14);
              g4R[601] = U3ndn.I8r(1, 25, 18);
              U3ndn.S2t(73);
              g4R[353] = U3ndn.E_K(1, 864, 816);
              U3ndn.z_y(65);
              g4R[939] = U3ndn.I8r(15, 80, 2, 22);
              U3ndn.S2t(16);
              g4R[524] = U3ndn.E_K(18, 8, 14, 2, 71);
              g4R[131] = g4R[562][r8no$[g4R[298]]] + g4R[0][1][r8no$[g4R[601]]][r8no$[g4R[353]]][g4R[513][r8no$[g4R[939]]]][r8no$[g4R[524]]][0];
              U3ndn.S2t(1);
              g4R[958] = U3ndn.I8r(440, 400);
              U3ndn.S2t(15);
              g4R[694] = U3ndn.I8r(9, 62, 28);
              U3ndn.S2t(1);
              g4R[829] = U3ndn.I8r(144, 96);
              U3ndn.z_y(6);
              g4R[164] = U3ndn.E_K(13, 64);
              U3ndn.z_y(18);
              g4R[804] = U3ndn.I8r(16, 11, 495, 539);
              U3ndn.z_y(78);
              g4R[953] = U3ndn.E_K(12, 19, 8, 0);
              g4R[635] = g4R[562][r8no$[g4R[958]]] + g4R[0][1][r8no$[g4R[694]]][r8no$[g4R[829]]][g4R[513][r8no$[g4R[164]]]][r8no$[g4R[804]]][g4R[953]];
            }
            U3ndn.z_y(169);
            g4R[740] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[529], g4R[893]);
            U3ndn.S2t(169);
            g4R[772] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[557], g4R[955]);
            U3ndn.z_y(169);
            g4R[143] = U3ndn.I8r(g4R[0][2], 1, g4R[0][2], g4R[131], g4R[961]);
            U3ndn.z_y(169);
            g4R[902] = U3ndn.E_K(g4R[0][2], 1, g4R[0][2], g4R[635], g4R[695]);
            L8c[94][g4R[181]]['lineStyle'](1, 13421772, 0.5);
            if (L8c[46] == g4R[181]) {
              L8c[94][g4R[181]]['lineStyle'](1, 16033703, 0.9);
            }
            U3ndn.z_y(4);
            L8c[94][g4R[181]]['moveTo'](U3ndn.E_K(g4R[49], g4R[740]), U3ndn.I8r(g4R[49], g4R[772]));
            U3ndn.z_y(4);
            L8c[94][g4R[181]]['lineTo'](U3ndn.E_K(g4R[49], g4R[143]), U3ndn.I8r(g4R[49], g4R[902]));
            if (L8c[53]) {
              L8c[94][g4R[181]]['lineStyle'](undefined);
              L8c[94][g4R[181]]['beginFill'](4521796);
              U3ndn.z_y(4);
              L8c[94][g4R[181]]['drawCircle'](U3ndn.E_K(g4R[49], g4R[740]), U3ndn.E_K(g4R[49], g4R[772]), 3);
              L8c[94][g4R[181]]['beginFill'](16729156);
              U3ndn.S2t(4);
              L8c[94][g4R[181]]['drawCircle'](U3ndn.E_K(g4R[49], g4R[143]), U3ndn.E_K(g4R[49], g4R[902]), 3);
            }
          }
        }
        for (g4R[625] = 0; g4R[625] < g4R[0][1]['capZones']['length']; g4R[625]++) {
          if (g4R[0][1]['capZones'][g4R[625]]) {
            g4R[216] = g4R[0][1]['capZones'][g4R[625]]['i'];
            g4R[930] = g4R[0][1]['physics']['fixtures'][g4R[216]]['sh'];
            g4R[401] = g4R[0][1]['physics']['shapes'][g4R[930]];
            g4R[574] = L8c[27][g4R[930]];
            g4R[574]['alpha'] = 0.8;
            if (!L8c[31][g4R[625]]) {
              L8c[31][g4R[625]] = new PIXI['Graphics'];
              g4R[574]['addChild'](L8c[31][g4R[625]]);
            }
            g4R[533] = L8c[31][g4R[625]];
            g4R[440] = Math['min'](g4R[0][1]['capZones'][g4R[625]]['p'] / g4R[0][1]['capZones'][g4R[625]]['l'], 1);
            g4R[335] = g4R[0][1]['capZones'][g4R[625]]['o'];
            g4R[224] = 13417386;
            if (g4R[0][3]['tea']) {
              if (g4R[335] == 2) {
                g4R[224] = 16007990;
              }
              if (g4R[335] == 3) {
                g4R[224] = 2201331;
              }
              if (g4R[335] == 4) {
                g4R[224] = 5025616;
              }
              if (g4R[335] == 5) {
                g4R[224] = 16771899;
              }
            } else if (L8c[22][g4R[335]] && L8c[22][g4R[335]]['avatar']) {
              g4R[224] = L8c[22][g4R[335]]['avatar']['bc'];
            }
            g4R[533]['clear']();
            g4R[533]['beginFill'](g4R[224]);
            if (g4R[401]['type'] == 'ci') {
              U3ndn.z_y(73);
              g4R[377] = U3ndn.I8r(1, 67, 6);
              g4R[287] = (g4R[401][r8no$[g4R[377]]] * g4R[49] - 1.5) * g4R[440];
              g4R[533]['drawCircle'](0, 0, g4R[287]);
            }
            if (g4R[401]['type'] == 'bx') {
              U3ndn.S2t(40);
              g4R[449] = U3ndn.E_K(59, 121, 18, 590);
              g4R[434] = (g4R[401][r8no$[g4R[449]]] * g4R[49] - 1.5) * g4R[440];
              U3ndn.z_y(48);
              g4R[727] = U3ndn.E_K(59, 20, 5, 4, 8);
              g4R[286] = (g4R[401][r8no$[g4R[727]]] * g4R[49] - 1.5) * g4R[440];
              U3ndn.S2t(156);
              g4R[533]['drawRect'](U3ndn.I8r(2, g4R[434]), U3ndn.I8r(2, g4R[286]), g4R[434], g4R[286]);
            }
            if (g4R[401]['type'] == 'po') {
              g4R[111] = 0;
              g4R[336] = 0;
              for (g4R[611] = 0; g4R[611] < g4R[401]['v']['length']; g4R[611]++) {
                g4R[111] += g4R[401]['v'][g4R[611]][0];
                g4R[336] += g4R[401]['v'][g4R[611]][1];
              }
              g4R[111] /= g4R[401]['v']['length'];
              g4R[336] /= g4R[401]['v']['length'];
              if (g4R[401]['v']['length'] > 0) {
                U3ndn.z_y(176);
                g4R[391] = U3ndn.I8r(10, 9, 2);
                U3ndn.S2t(81);
                g4R[886] = U3ndn.I8r(67, 61, 15, 82);
                g4R[196] = (g4R[111] * (g4R[391] - g4R[440]) + g4R[401][r8no$[g4R[886]]][0][0] * g4R[440]) * g4R[49];
                U3ndn.S2t(15);
                g4R[128] = U3ndn.I8r(5, 0, 4);
                U3ndn.S2t(103);
                g4R[868] = U3ndn.I8r(19, 1705, 31, 2, 6);
                U3ndn.S2t(221);
                g4R[913] = U3ndn.E_K(12, 17, 5, 11, 2);
                g4R[294] = (g4R[336] * (g4R[128] - g4R[440]) + g4R[401][r8no$[g4R[868]]][0][g4R[913]] * g4R[440]) * g4R[49];
                g4R[533]['moveTo'](g4R[196], g4R[294]);
                for (g4R[446] = 1; g4R[446] < g4R[401]['v']['length']; g4R[446]++) {
                  U3ndn.z_y(6);
                  g4R[445] = U3ndn.E_K(0, 1);
                  U3ndn.S2t(139);
                  g4R[469] = U3ndn.I8r(1, 2, 33, 58, 1);
                  g4R[196] = (g4R[111] * (g4R[445] - g4R[440]) + g4R[401][r8no$[g4R[469]]][g4R[446]][0] * g4R[440]) * g4R[49];
                  U3ndn.S2t(1);
                  g4R[418] = U3ndn.E_K(16, 15);
                  U3ndn.z_y(81);
                  g4R[636] = U3ndn.I8r(1054, 60, 16, 535);
                  U3ndn.S2t(1);
                  g4R[569] = U3ndn.E_K(19, 18);
                  g4R[294] = (g4R[336] * (g4R[418] - g4R[440]) + g4R[401][r8no$[g4R[636]]][g4R[446]][g4R[569]] * g4R[440]) * g4R[49];
                  g4R[533]['lineTo'](g4R[196], g4R[294]);
                }
                g4R[533]['closePath']();
              }
            }
            if (g4R[440] >= 1) {
              g4R[574]['tint'] = 10092441;
            }
          }
        }
        if (V6D[67]['customControls']['quality'] <= 2 && L8c[13] == false && L8c[84] == false && L8c[53] == false && L8c[63] == false) {
          g4R[630] = null;
          g4R[228] = null;
          g4R[206] = 0;
          g4R[170] = - 1;
          function w24(n$D) {
            var H_V = [
              arguments
            ];
            H_V[1] = r8no$;
            H_V[6] = g4R[0][1]['physics']['bodies'][H_V[0][0]];
            if (H_V[6]['type'] != 's') {
              return false;
            }
            for (H_V[3] = 0; H_V[3] < H_V[6]['fx']['length']; H_V[3]++) {
              H_V[5] = H_V[6]['fx'][H_V[3]];
              H_V[4] = g4R[0][1]['physics']['fixtures'][H_V[5]]['sh'];
              H_V[2] = g4R[0][1]['physics']['shapes'][H_V[4]];
              if (H_V[2]['sk'] == true) {
                return false;
              }
              if (g4R[697][H_V[5]]) {
                return false;
              }
            }
            return true;
          }
          g4R[911] = 2;
          for (g4R[451] = g4R[0][1]['physics']['bro']['length'] - 1; g4R[451] >= 0; g4R[451]--) {
            g4R[969] = g4R[0][1]['physics']['bro'][g4R[451]];
            if (g4R[0][1]['physics']['bodies'][g4R[969]]) {
              if (w24(g4R[969])) {
                if (!g4R[228]) {
                  g4R[228] = new PIXI['Container'];
                  g4R[206]++;
                  g4R[630] = PIXI['RenderTexture']['create']({
                    width: 730 + 50,
                    height: 500 + 50,
                    scaleMode: PIXI['SCALE_MODES']['LINEAR'],
                    resolution: 4
                  });
                }
                if (g4R[170] == - 1) {
                  g4R[170] = L8c[92]['getChildIndex'](L8c[59][g4R[969]]);
                }
                L8c[92]['removeChild'](L8c[59][g4R[969]]);
                g4R[228]['addChild'](L8c[59][g4R[969]]);
              } else if (g4R[228]) {
                s2W();
                if (L8c[75]['length'] >= g4R[911]) {
                  break;
                }
              }
            }
          }
          if (g4R[228]) {
            s2W();
          }
          function s2W() {
            var q0y = [
              arguments
            ];
            q0y[9] = r8no$;
            g4R[228]['x'] = 25;
            g4R[228]['y'] = 25;
            L8c[26]['render'](g4R[228], g4R[630]);
            q0y[8] = new PIXI['Sprite'](g4R[630]);
            q0y[8]['x'] = - 25;
            q0y[8]['y'] = - 25;
            L8c[75]['push'](q0y[8]);
            L8c[92]['addChildAt'](L8c[75][L8c[75]['length'] - 1], g4R[170]);
            g4R[228] = null;
            g4R[170] = - 1;
          }
          L8c[13] = true;
        }
        for (g4R[565] = 0; g4R[565] < L8c[37]['length']; g4R[565]++) {
          if (--L8c[37][g4R[565]] < 0) {
            L8c[37][g4R[565]] = 0;
          }
        }
        for (g4R[737] = 0; g4R[737] < g4R[0][1]['discDeaths']['length']; g4R[737]++) {
          g4R[198] = g4R[0][1]['discDeaths'][g4R[737]]['i'];
          if (g4R[0][1]['discDeaths'][g4R[737]]['f'] < 10 && !L8c[37][g4R[198]]) {
            L8c[37][g4R[198]] = 90;
            U3ndn.z_y(19);
            g4R[153] = U3ndn.E_K(444, 19, 18, 5, 480);
            U3ndn.z_y(1);
            g4R[199] = U3ndn.E_K(2912, 2730);
            U3ndn.z_y(17);
            g4R[415] = U3ndn.I8r(165, 10, 5);
            g4R[370] = g4R[153] * (Math[r8no$[g4R[199]]] / g4R[415]);
            g4R[686] = 0.9;
            g4R[917] = 0.8;
            g4R[916] = 3;
            g4R[330] = 2;
            g4R[479] = 18;
            if (V6D[67]['quality'] == 2) {
              g4R[479] = 15;
            } else if (V6D[67]['quality'] == 1) {
              g4R[479] = 12;
            }
            g4R[671] = 1;
            g4R[798] = [
            ];
            if (L8c[22][g4R[198]] && L8c[22][g4R[198]]['avatar']) {
              g4R[461] = L8c[22][g4R[198]]['avatar'];
              g4R[798]['push'](g4R[461]['bc']);
              g4R[798]['push'](g4R[461]['bc']);
              for (g4R[462] = 0; g4R[462] < g4R[461]['layers']['length']; g4R[462]++) {
                if (g4R[461]['layers'][g4R[462]]) {
                  g4R[798]['push'](g4R[461]['layers'][g4R[462]]['color']);
                }
              }
            }
            for (g4R[715] = 0; g4R[715] < g4R[479]; g4R[715]++) {
              g4R[982] = new PIXI['Graphics'];
              if (g4R[798][g4R[715] % g4R[798]['length']] === undefined) {
                g4R[982]['beginFill'](15794089);
              } else {
                g4R[982]['beginFill'](g4R[798][g4R[715] % g4R[798]['length']]);
              }
              g4R[242] = g4R[330] + Math['random']() * g4R[916];
              U3ndn.S2t(6);
              g4R[940] = U3ndn.E_K(0, 2);
              U3ndn.z_y(6);
              g4R[728] = U3ndn.I8r(174, 8);
              g4R[689] = Math['random']() * g4R[940] * Math[r8no$[g4R[728]]];
              g4R[340] = Math['random']() * g4R[671];
              g4R[982]['drawRect'](0, 0, g4R[242], g4R[242]);
              U3ndn.S2t(222);
              g4R[247] = U3ndn.E_K(7, 30, 1, 2, 3);
              U3ndn.S2t(6);
              g4R[437] = U3ndn.I8r(4, 35);
              g4R[982]['x'] = (g4R[0][1][r8no$[g4R[247]]][g4R[737]][r8no$[g4R[437]]] + Math['cos'](g4R[689]) * g4R[340]) * g4R[49];
              U3ndn.S2t(161);
              g4R[510] = U3ndn.E_K(46, 6, 13, 34, 46);
              U3ndn.z_y(6);
              g4R[422] = U3ndn.I8r(13, 27);
              g4R[982]['y'] = (g4R[0][1][r8no$[g4R[510]]][g4R[737]][r8no$[g4R[422]]] + Math['sin'](g4R[689]) * g4R[340]) * g4R[49];
              L8c[72]['addChild'](g4R[982]);
              U3ndn.S2t(45);
              g4R[713] = U3ndn.I8r(10, 9, 3238, 36);
              g4R[783] = - g4R[370] / g4R[713] + Math['random']() * g4R[370];
              g4R[690] = Math['atan2'](g4R[0][1]['discDeaths'][g4R[737]]['yv'], g4R[0][1]['discDeaths'][g4R[737]]['xv']);
              U3ndn.z_y(6);
              g4R[645] = U3ndn.E_K(g4R[690], g4R[783]);
              g4R[820] = Math['sqrt'](g4R[0][1]['discDeaths'][g4R[737]]['yv'] * g4R[0][1]['discDeaths'][g4R[737]]['yv'] + g4R[0][1]['discDeaths'][g4R[737]]['xv'] * g4R[0][1]['discDeaths'][g4R[737]]['xv']);
              g4R[820] *= g4R[917];
              g4R[820] = Math['min'](g4R[820], 35);
              g4R[836] = Math['random']() * g4R[686] * g4R[820];
              g4R[820] -= g4R[836];
              U3ndn.S2t(45);
              g4R[819] = U3ndn.I8r(16, 9, 5756, 40);
              g4R[668] = Math['cos'](g4R[645]) * g4R[820] / g4R[819];
              U3ndn.S2t(18);
              g4R[720] = U3ndn.E_K(12, 11, 18, 21);
              g4R[915] = Math['sin'](g4R[645]) * g4R[820] / g4R[720];
              g4R[609] = 1;
              L8c[45]['push']({
                graphics: g4R[982],
                xv: g4R[668],
                yv: g4R[915],
                alpha: g4R[609],
                shrinkPerFrame: 0.016,
                gravity: 0.04
              });
            }
            U3ndn.z_y(15);
            g4R[722] = U3ndn.I8r(19, 5940, 5464);
            U3ndn.z_y(64);
            g4R[843] = U3ndn.E_K(15, 15, 2, 1);
            g4R[132] = U3ndn.j31(g4R[722]) + Math['floor'](Math['random']() * g4R[843]);
            U3ndn.z_y(1);
            g4R[573] = U3ndn.I8r(61, 19);
            U3ndn.S2t(105);
            g4R[579] = U3ndn.I8r(14, 25, 28, 1);
            U3ndn.S2t(106);
            g4R[308] = U3ndn.I8r(19, 12, 5840, 110732, 729);
            U3ndn.S2t(18);
            g4R[681] = U3ndn.I8r(20, 9, 9, 0);
            U3ndn.z_y(15);
            g4R[749] = U3ndn.I8r(15, 18, 32);
            g4R[135] = g4R[0][1][r8no$[g4R[573]]][g4R[737]][r8no$[g4R[579]]] * g4R[49] / (g4R[308] / g4R[681]) - g4R[749];
            g4R[135] = Math['max'](Math['min'](1, g4R[135]), - 1);
            g4R[135] *= A['panAmount'];
            g4R[924] = 0.4;
            if (L8c[28]) {
              g4R[924] *= 0.5;
            }
            L8c[3]['playSound'](g4R[132], g4R[135], g4R[924], g4R[0][5]);
          }
        }
        if (g4R[0][3]['mo'] == 'v') {
          for (g4R[970] = 0; g4R[970] < g4R[0][1]['discs']['length']; g4R[970]++) {
            if (g4R[0][0]['discs'][g4R[970]] && g4R[0][1]['discs'][g4R[970]] && L8c[35][g4R[970]] && g4R[0][4] && g4R[0][4][g4R[970]]) {
              U3ndn.S2t(64);
              g4R[918] = U3ndn.E_K(5790, 1158, 574, 1);
              g4R[540] = 2.5 * L8c[35][g4R[970]][r8no$[g4R[918]]];
              g4R[315] = 2;
              g4R[444] = 0.7;
              g4R[328] = 1;
              g4R[777] = 0.1;
              g4R[745] = 0.3;
              if (g4R[0][4][g4R[970]]['right'] || g4R[0][4][g4R[970]]['up'] && !g4R[0][4][g4R[970]]['left']) {
                g4R[733] = new PIXI['Graphics'];
                g4R[733]['beginFill'](15794089);
                U3ndn.S2t(156);
                g4R[733]['drawRect'](U3ndn.E_K(2, g4R[540]), U3ndn.E_K(2, g4R[540]), g4R[540], g4R[540]);
                g4R[802] = L8c[35][g4R[970]]['container']['x'];
                U3ndn.S2t(1);
                g4R[255] = U3ndn.I8r(15, 8);
                U3ndn.S2t(65);
                g4R[821] = U3ndn.I8r(9, 582, 2, 279);
                U3ndn.z_y(6);
                g4R[861] = U3ndn.E_K(530, 13);
                U3ndn.z_y(9);
                g4R[309] = U3ndn.E_K(516, 4136, 9);
                g4R[802] += Q[r8no$[g4R[255]]] * 1.2 * L8c[35][g4R[970]][r8no$[g4R[821]]] * Math['cos'](L8c[35][g4R[970]][r8no$[g4R[861]]][r8no$[g4R[309]]]) * g4R[49];
                g4R[967] = L8c[35][g4R[970]]['container']['y'];
                U3ndn.z_y(27);
                g4R[139] = U3ndn.E_K(10, 15, 12, 14);
                U3ndn.S2t(9);
                g4R[394] = U3ndn.I8r(2895, 19686, 7);
                U3ndn.z_y(6);
                g4R[947] = U3ndn.I8r(536, 7);
                U3ndn.z_y(81);
                g4R[470] = U3ndn.E_K(494, 9, 5, 1);
                g4R[967] += Q[r8no$[g4R[139]]] * 1.2 * L8c[35][g4R[970]][r8no$[g4R[394]]] * Math['sin'](L8c[35][g4R[970]][r8no$[g4R[947]]][r8no$[g4R[470]]]) * g4R[49];
                g4R[733]['x'] = g4R[802];
                g4R[733]['y'] = g4R[967];
                L8c[72]['addChild'](g4R[733]);
                g4R[214] = Math['random']() * g4R[745] - g4R[745] / 2;
                U3ndn.S2t(6);
                g4R[834] = U3ndn.I8r(37, 4);
                U3ndn.z_y(14);
                g4R[683] = U3ndn.I8r(384, 768, 62);
                U3ndn.S2t(9);
                g4R[744] = U3ndn.I8r(189, 385, 3);
                U3ndn.z_y(13);
                g4R[283] = U3ndn.E_K(0, 18, 16);
                U3ndn.S2t(12);
                g4R[885] = U3ndn.I8r(7, 16, 8, 18);
                g4R[781] = Math['cos'](g4R[0][1][r8no$[g4R[834]]][g4R[970]][r8no$[g4R[683]]] + g4R[214] + Math[r8no$[g4R[744]]] / g4R[283]) * (g4R[315] + Math['random']() * g4R[444] - g4R[444] / g4R[885]);
                U3ndn.z_y(149);
                g4R[354] = U3ndn.E_K(33, 18, 369, 820, 5);
                U3ndn.z_y(64);
                g4R[759] = U3ndn.I8r(83, 83, 63, 1);
                U3ndn.z_y(128);
                g4R[899] = U3ndn.I8r(1908, 11, 190, 17, 17);
                U3ndn.z_y(55);
                g4R[762] = U3ndn.I8r(10, 3, 15, 7, 17);
                U3ndn.z_y(9);
                g4R[945] = U3ndn.I8r(9, 124, 14);
                g4R[707] = Math['sin'](g4R[0][1][r8no$[g4R[354]]][g4R[970]][r8no$[g4R[759]]] + g4R[214] + Math[r8no$[g4R[899]]] / g4R[762]) * (g4R[315] + Math['random']() * g4R[444] - g4R[444] / g4R[945]);
                U3ndn.z_y(60);
                g4R[460] = U3ndn.I8r(2, 7, 50);
                U3ndn.S2t(45);
                g4R[588] = U3ndn.E_K(16, 7, 13332, 120);
                U3ndn.S2t(15);
                g4R[421] = U3ndn.I8r(9, 90, 69);
                g4R[781] += g4R[0][1][r8no$[g4R[460]]][g4R[970]][r8no$[g4R[588]]] / g4R[421];
                U3ndn.S2t(223);
                g4R[475] = U3ndn.E_K(17, 2, 28, 5, 3);
                U3ndn.z_y(13);
                g4R[644] = U3ndn.I8r(119, 9, 19);
                U3ndn.z_y(14);
                g4R[246] = U3ndn.I8r(4, 4, 29);
                g4R[707] += g4R[0][1][r8no$[g4R[475]]][g4R[970]][r8no$[g4R[644]]] / g4R[246];
                g4R[152] = 1;
                L8c[45]['push']({
                  graphics: g4R[733],
                  xv: g4R[781],
                  yv: g4R[707],
                  alpha: g4R[152],
                  shrinkPerFrame: g4R[777],
                  gravity: 0.04
                });
              }
              if (g4R[0][4][g4R[970]]['left'] || g4R[0][4][g4R[970]]['up'] && !g4R[0][4][g4R[970]]['right']) {
                g4R[546] = new PIXI['Graphics'];
                g4R[546]['beginFill'](15794089);
                U3ndn.z_y(156);
                g4R[546]['drawRect'](U3ndn.I8r(2, g4R[540]), U3ndn.I8r(2, g4R[540]), g4R[540], g4R[540]);
                g4R[454] = L8c[35][g4R[970]]['container']['x'];
                U3ndn.z_y(12);
                g4R[723] = U3ndn.I8r(553, 1, 10, 56);
                U3ndn.z_y(27);
                g4R[688] = U3ndn.E_K(8, 567, 19, 39);
                U3ndn.S2t(13);
                g4R[862] = U3ndn.E_K(552, 1, 10);
                U3ndn.z_y(178);
                g4R[879] = U3ndn.E_K(7, 505, 19, 15);
                g4R[454] -= Q[r8no$[g4R[723]]] * 1.2 * L8c[35][g4R[970]][r8no$[g4R[688]]] * Math['cos'](L8c[35][g4R[970]][r8no$[g4R[862]]][r8no$[g4R[879]]]) * g4R[49];
                g4R[167] = L8c[35][g4R[970]]['container']['y'];
                U3ndn.z_y(27);
                g4R[438] = U3ndn.I8r(12, 1, 8, 26);
                U3ndn.S2t(13);
                g4R[828] = U3ndn.I8r(559, 26, 6);
                U3ndn.z_y(1);
                g4R[106] = U3ndn.I8r(560, 17);
                U3ndn.z_y(178);
                g4R[878] = U3ndn.E_K(11, 506, 16, 7);
                g4R[167] -= Q[r8no$[g4R[438]]] * 1.2 * L8c[35][g4R[970]][r8no$[g4R[828]]] * Math['sin'](L8c[35][g4R[970]][r8no$[g4R[106]]][r8no$[g4R[878]]]) * g4R[49];
                g4R[546]['x'] = g4R[454];
                g4R[546]['y'] = g4R[167];
                L8c[72]['addChild'](g4R[546]);
                U3ndn.z_y(60);
                g4R[850] = U3ndn.I8r(8, 11, 21);
                g4R[337] = Math['random']() * g4R[745] - g4R[745] / g4R[850];
                U3ndn.z_y(1);
                g4R[348] = U3ndn.E_K(287, 246);
                U3ndn.S2t(17);
                g4R[856] = U3ndn.I8r(11, 51, 2);
                U3ndn.z_y(81);
                g4R[698] = U3ndn.I8r(26, 141, 15, 1);
                U3ndn.z_y(127);
                g4R[666] = U3ndn.I8r(34, 195838, 20, 18, 16);
                U3ndn.z_y(57);
                g4R[506] = U3ndn.E_K(7, 9);
                g4R[602] = Math['cos'](g4R[0][1][r8no$[g4R[348]]][g4R[970]][r8no$[g4R[856]]] + g4R[337] + Math[r8no$[g4R[698]]] / g4R[666]) * (g4R[315] + Math['random']() * g4R[444] - g4R[444] / g4R[506]);
                U3ndn.S2t(6);
                g4R[747] = U3ndn.I8r(21, 20);
                U3ndn.S2t(53);
                g4R[511] = U3ndn.I8r(52, 4, 11, 3, 1);
                U3ndn.S2t(123);
                g4R[356] = U3ndn.I8r(2, 7, 14, 178, 1057);
                U3ndn.z_y(1);
                g4R[113] = U3ndn.E_K(12, 10);
                U3ndn.S2t(57);
                g4R[708] = U3ndn.E_K(5, 7);
                g4R[455] = Math['sin'](g4R[0][1][r8no$[g4R[747]]][g4R[970]][r8no$[g4R[511]]] + g4R[337] + Math[r8no$[g4R[356]]] / g4R[113]) * (g4R[315] + Math['random']() * g4R[444] - g4R[444] / g4R[708]);
                U3ndn.z_y(9);
                g4R[803] = U3ndn.I8r(26, 115, 6);
                U3ndn.z_y(26);
                g4R[403] = U3ndn.I8r(4, 1944, 25216, 13);
                U3ndn.z_y(210);
                g4R[678] = U3ndn.E_K(50, 29, 3, 57, 4);
                g4R[602] += g4R[0][1][r8no$[g4R[803]]][g4R[970]][r8no$[g4R[403]]] / g4R[678];
                U3ndn.z_y(8);
                g4R[179] = U3ndn.I8r(304, 35, 19, 32, 4);
                U3ndn.S2t(6);
                g4R[114] = U3ndn.I8r(8, 101);
                U3ndn.z_y(6);
                g4R[578] = U3ndn.E_K(3, 27);
                g4R[455] += g4R[0][1][r8no$[g4R[179]]][g4R[970]][r8no$[g4R[114]]] / g4R[578];
                g4R[282] = 1;
                L8c[45]['push']({
                  graphics: g4R[546],
                  xv: g4R[602],
                  yv: g4R[455],
                  alpha: g4R[282],
                  shrinkPerFrame: g4R[777],
                  gravity: 0.04
                });
              }
            }
          }
        }
        if (g4R[0][1]['sts']) {
          for (g4R[575] = 0; g4R[575] < g4R[0][1]['sts']['length']; g4R[575]++) {
            g4R[566] = g4R[0][1]['sts'][g4R[575]];
            if (g4R[566][0] == 'platBounce') {
              g4R[213] = g4R[566][1];
              g4R[313] = 120;
              g4R[213] /= 5;
              g4R[213] = Math['min'](45, g4R[213]);
              if (!g4R[0][1]['physics']['fixtures'][g4R[566][3]]) {
                continue;
              }
              g4R[485] = g4R[0][1]['physics']['fixtures'][g4R[566][3]]['f'];
              g4R[486] = 4;
              if (V6D[67]['customControls']['quality'] == 2) {
                g4R[486] = 2;
              } else if (V6D[67]['customControls']['quality'] == 1) {
                g4R[486] = 1;
              }
              for (g4R[872] = 0; g4R[872] < g4R[486]; g4R[872]++) {
                g4R[662] = new PIXI['Graphics'];
                U3ndn.z_y(58);
                g4R[730] = U3ndn.E_K(g4R[213], 2, 0.1);
                g4R[662]['beginFill'](g4R[485]);
                U3ndn.S2t(156);
                g4R[662]['drawRect'](U3ndn.E_K(2, g4R[730]), U3ndn.E_K(2, g4R[730]), g4R[730], g4R[730]);
                g4R[627] = g4R[566][2];
                if (!L8c[35][g4R[627]]) {
                  continue;
                }
                U3ndn.S2t(175);
                g4R[938] = U3ndn.E_K(15, 18, 8, 20);
                U3ndn.S2t(1);
                g4R[570] = U3ndn.I8r(301, 258);
                U3ndn.z_y(6);
                g4R[880] = U3ndn.E_K(3, 43);
                g4R[105] = g4R[566][g4R[938]] * g4R[0][1][r8no$[g4R[570]]][r8no$[g4R[880]]];
                U3ndn.z_y(15);
                g4R[665] = U3ndn.I8r(16, 108, 118);
                U3ndn.z_y(15);
                g4R[991] = U3ndn.I8r(13, 62, 32);
                U3ndn.S2t(14);
                g4R[927] = U3ndn.E_K(23, 23, 45);
                g4R[684] = g4R[566][g4R[665]] * g4R[0][1][r8no$[g4R[991]]][r8no$[g4R[927]]];
                g4R[662]['x'] = g4R[105];
                g4R[662]['y'] = g4R[684];
                L8c[72]['addChild'](g4R[662]);
                g4R[734] = g4R[566][4];
                U3ndn.S2t(6);
                g4R[946] = U3ndn.I8r(9, 173);
                U3ndn.z_y(13);
                g4R[245] = U3ndn.E_K(18, 172, 10);
                g4R[541] = g4R[313] * (Math[r8no$[g4R[946]]] / g4R[245]);
                g4R[734] += Math['random']() * g4R[541];
                U3ndn.S2t(0);
                g4R[734] -= U3ndn.E_K(g4R[541], 2);
                g4R[662]['rotation'] = g4R[734];
                U3ndn.z_y(72);
                g4R[864] = U3ndn.E_K(7, 5, 13);
                g4R[471] = (0.4 + g4R[213] * 0.005) * (g4R[864] - Math['random']() * 0.7);
                g4R[467] = Math['cos'](g4R[734]) * g4R[471];
                g4R[590] = Math['sin'](g4R[734]) * g4R[471];
                g4R[532] = 0.03;
                g4R[487] = 1;
                L8c[45]['push']({
                  graphics: g4R[662],
                  xv: g4R[467],
                  yv: g4R[590],
                  alpha: g4R[487],
                  shrinkPerFrame: g4R[532],
                  gravity: 0.02
                });
              }
            }
          }
        }
        g4R[577] = Date['now']() - L8c[44];
        g4R[501] = 1;
        if (L8c[44] == - 1) {
          U3ndn.S2t(0);
          g4R[577] = U3ndn.I8r(1, 60);
        }
        L8c[44] = Date['now']();
        U3ndn.z_y(121);
        g4R[501] = U3ndn.I8r(60, g4R[577], 1000);
        for (g4R[877] = 0; g4R[877] < L8c[45]['length']; g4R[877]++) {
          g4R[648] = L8c[45][g4R[877]];
          if (g4R[648]['graphics']['scale']['x'] <= 0) {
            L8c[72]['removeChild'](g4R[648]['graphics']);
            g4R[648]['graphics']['destroy']({
              children: true,
              texture: true,
              baseTexture: true
            });
            L8c[45]['splice'](g4R[877], 1);
            g4R[877]--;
            continue;
          }
          U3ndn.z_y(9);
          g4R[621] = U3ndn.E_K(95, 177, 3);
          U3ndn.S2t(1);
          g4R[474] = U3ndn.E_K(9, 7);
          g4R[648]['graphics']['x'] += g4R[648][r8no$[g4R[621]]] * g4R[474] * g4R[501];
          U3ndn.z_y(224);
          g4R[670] = U3ndn.E_K(1585, 18, 1744, 16, 16);
          U3ndn.z_y(72);
          g4R[693] = U3ndn.I8r(9, 18, 29);
          g4R[648]['graphics']['y'] += g4R[648][r8no$[g4R[670]]] * g4R[693] * g4R[501];
          U3ndn.S2t(1);
          g4R[160] = U3ndn.E_K(4944, 4326);
          g4R[648]['yv'] += g4R[648][r8no$[g4R[160]]] * g4R[501];
          U3ndn.z_y(192);
          g4R[648]['xv'] *= U3ndn.E_K(g4R[501], 0.02, 1);
          U3ndn.z_y(192);
          g4R[648]['yv'] *= U3ndn.E_K(g4R[501], 0.01, 1);
          g4R[648]['graphics']['rotation'] = Math['atan2'](g4R[648]['yv'], g4R[648]['xv']);
          g4R[648]['graphics']['alpha'] = g4R[648]['alpha'];
          U3ndn.S2t(90);
          g4R[323] = U3ndn.I8r(17, 9, 4307, 4952);
          g4R[648]['graphics']['scale']['x'] -= g4R[648][r8no$[g4R[323]]] * g4R[501];
          U3ndn.S2t(87);
          g4R[318] = U3ndn.E_K(6, 12, 627, 7, 25703);
          g4R[648]['graphics']['scale']['y'] -= g4R[648][r8no$[g4R[318]]] * g4R[501];
        }
        if (L8c[84] == false && L8c[53] == false && L8c[63] == false && L8c[28] == false) {
          L8c[872]['do'](g4R[0][1]['ftu'], g4R[0][1]['lscr'] == - 1);
        }
        g4R[907] = 0;
        g4R[788] = 0;
        if (g4R[0][1]['sts']) {
          for (g4R[375] = 0; g4R[375] < g4R[0][1]['sts']['length']; g4R[375]++) {
            g4R[428] = g4R[0][1]['sts'][g4R[375]];
            g4R[149] = 0;
            g4R[785] = 0;
            if (g4R[428][0] == 'capIncrease' || g4R[428][0] == 'capDecrease' || g4R[428][0] == 'capComplete') {
              g4R[659] = g4R[428][2];
              g4R[193] = g4R[0][1]['capZones'][g4R[659]]['i'];
              g4R[572] = g4R[0][1]['physics']['fixtures'][g4R[193]]['sh'];
              g4R[188] = L8c[27][g4R[572]];
              U3ndn.z_y(45);
              g4R[739] = U3ndn.E_K(11, 20, 10301, 47);
              U3ndn.z_y(27);
              g4R[711] = U3ndn.E_K(9, 615, 6, 13);
              U3ndn.S2t(162);
              g4R[412] = U3ndn.E_K(9, 1, 6, 37, 17);
              g4R[341] = g4R[188][r8no$[g4R[739]]] + g4R[188][r8no$[g4R[711]]][r8no$[g4R[412]]];
              U3ndn.S2t(225);
              g4R[149] = U3ndn.E_K(1, 730, g4R[341], 2);
              g4R[785] = g4R[428][1];
            }
            if (g4R[428][0] == 'discDisc' || g4R[428][0] == 'platBounce') {
              g4R[326] = g4R[428][2];
              if (!L8c[35][g4R[326]]) {
                continue;
              }
              g4R[386] = L8c[35][g4R[326]]['container']['x'];
              U3ndn.S2t(225);
              g4R[149] = U3ndn.E_K(1, 730, g4R[386], 2);
              U3ndn.z_y(57);
              g4R[251] = U3ndn.E_K(3, 4);
              g4R[785] = g4R[428][g4R[251]] * 0.03;
            }
            g4R[149] = Math['max'](Math['min'](1, g4R[149]), - 1);
            g4R[149] *= A['panAmount'];
            g4R[785] = Math['min'](g4R[785], 35);
            if (L8c[28]) {
              g4R[785] = Math['min'](g4R[785], 10);
              g4R[785] *= 0.5;
            }
            g4R[692] = g4R[428][0];
            if (g4R[692] == 'capDecrease') {
              if (L8c[873][g4R[788]]) {
                L8c[873][g4R[788]]['volume'](g4R[785]);
                L8c[873][g4R[788]]['stereo'](g4R[149]);
                if (!V6D[67]['mute']) {
                  L8c[873][g4R[788]]['play']();
                }
                g4R[788]++;
              }
            } else if (g4R[692] == 'capIncrease') {
              if (L8c[517][g4R[907]]) {
                L8c[517][g4R[907]]['volume'](g4R[785]);
                L8c[517][g4R[907]]['stereo'](g4R[149]);
                if (!V6D[67]['mute']) {
                  L8c[517][g4R[907]]['play']();
                }
                g4R[907]++;
              }
            } else {
              L8c[3]['playSound'](g4R[692], g4R[149], g4R[785], g4R[0][5]);
            }
          }
        }
        g4R[0][1]['sts'] = null;
        if (L8c[30] && L8c[35][0]) {
          U3ndn.z_y(6);
          g4R[398] = U3ndn.E_K(535, 8);
          U3ndn.z_y(15);
          g4R[889] = U3ndn.I8r(17, 195, 173);
          U3ndn.z_y(6);
          g4R[797] = U3ndn.E_K(183, 547);
          U3ndn.S2t(64);
          g4R[661] = U3ndn.I8r(728, 1, 722, 91);
          U3ndn.S2t(1);
          g4R[209] = U3ndn.E_K(2920, 2555);
          g4R[816] = Math['floor'](L8c[35][0][r8no$[g4R[398]]][r8no$[g4R[889]]] / g4R[797]) * g4R[661] + g4R[209];
          g4R[331] = 0;
          g4R[816] = Math['min'](g4R[816], 1095);
          if (L8c[69] == undefined) {
            L8c[69] = g4R[816];
            L8c[77] = g4R[331];
          } else {
            U3ndn.z_y(7);
            g4R[491] = U3ndn.E_K(461, 3541, 16, 9);
            g4R[272] = A[r8no$[g4R[491]]] * g4R[501];
            U3ndn.S2t(226);
            L8c[69] = U3ndn.I8r(g4R[272], g4R[272], g4R[816], 1, L8c[69]);
            U3ndn.S2t(226);
            L8c[77] = U3ndn.I8r(g4R[272], g4R[272], g4R[331], 1, L8c[77]);
          }
          U3ndn.S2t(73);
          L8c[70]['x'] = U3ndn.E_K(2, 730, L8c[69]);
        }
        L8c[26]['render'](L8c[42]);
        L8c[26]['_lastObjectRendered'] = null;
        L8c[26]['view']['style']['visibility'] = 'inherit';
        L8c[3]['resetSumVols']();
        if (L8c[84]) {
          g4R[118] = L8c[26]['extract']['image']();
          return g4R[118];
        }
      };
    }
    function X0(R3Z, h5y, E08) {
      function I5m() {
        var Z3K = [
          arguments
        ];
        Z3K[4] = r8no$;
        if (!Y1a[9][Y1a[6] + 1]) {
          l8f();
        }
        if (!Y1a[9][Y1a[6]]) {
          Y1a[6]--;
          I5m();
          return;
        }
        Y1a[63] = true;
        Y1a[64] = Y1a[9][Y1a[6]];
        Y1a[75] = Y1a[64]['startingState'];
        Y1a[75]['rc'] = Y1a[4]++;
        U3ndn.Y$U();
        Y1a[30] = Y1a[64]['inputs'];
        Y1a[62] = Y1a[64]['adminInputs'];
        Y1a[60] = Y1a[64]['playerArray'];
        for (Z3K[6] = 0; Z3K[6] < Y1a[60]['length']; Z3K[6]++) {
          if (Y1a[60][Z3K[6]]) {
            Z3K[9] = new V6D[30];
            Z3K[9]['fromObject'](Y1a[60][Z3K[6]]['avatar']);
            Y1a[60][Z3K[6]]['avatar'] = Z3K[9];
          }
        }
        Y1a[23] = [
          Y1a[75]
        ];
        try {
          Y1a[52]['destroySkins']();
        } catch (d8g) {
        }
        Y1a[52]['setPlayerArray'](Y1a[60]);
        Y1a[29] = Y1a[64]['gameSettings'];
        Y1a[77] = 0;
        Y1a[96] = Date['now']();
        D97('replayCredit', {
          mn: Y1a[64]['mn'],
          ma: Y1a[64]['ma'],
          mid: Y1a[64]['mid'],
          rxn: Y1a[64]['rxn'],
          rxa: Y1a[64]['rxa'],
          state: 1,
          force: true
        });
      }
      function E1r() {
        U3ndn.Y$U();
        var i2D = [
          arguments
        ];
        i2D[5] = anime({
          targets: Y1a[1],
          opacity: '0',
          autoplay: true,
          duration: 200,
          delay: 0,
          easing: 'linear'
        });
      }
      function l8f() {
        var u5T = [
          arguments
        ];
        u5T[4] = r8no$;
        if (Y1a[39] <= Y1a[5]) {
          return;
        }
        if (Y1a[57]) {
          return;
        }
        Y1a[57] = true;
        u5T[7] = {
          version: V6D[67]['version'],
          offset: Y1a[5]
        };
        if (V6D[67]['filterOn']) {
          u5T[7]['mode'] = V6D[67]['filterMode'];
        }
        if (Y1a[46] != null) {
          u5T[7]['startingFrom'] = Y1a[46];
        }
        $['post']('https://bonk2.io/scripts/replay_get.php', u5T[7]) ['done'](function (w_v, G4Z) {
          var b7H = [
            arguments
          ];
          b7H[4] = r8no$;
          Y1a[57] = false;
          if (b7H[0][0]['r'] == 'fail') {
          } else if (b7H[0][0]['r'] == 'success') {
            if (b7H[0][0]['replays']['length'] == 0) {
              Y1a[39] = Y1a[5];
              return;
            }
            Y1a[5] += b7H[0][0]['replays']['length'];
            for (b7H[6] = 0; b7H[6] < b7H[0][0]['replays']['length']; b7H[6]++) {
              if (b7H[6] == 0 && Y1a[38]) {
                Y1a[46] = b7H[0][0]['replays'][b7H[6]]['id'];
                Y1a[38] = false;
              }
              try {
                b7H[1] = new V6D[12];
                b7H[1]['fromDatabase'](b7H[0][0]['replays'][b7H[6]]['replaydata']);
                b7H[1]['id'] = b7H[0][0]['replays'][b7H[6]]['id'];
                Y1a[9]['push'](b7H[1]);
              } catch (e$D) {
              }
            }
            if (!Y1a[63]) {
              I5m();
            }
          }
        }) ['fail'](function (Q0w, S1C, l28) {
          var Q3o = [
            arguments
          ];
          Q3o[1] = 21646026;
          Q3o[2] = 725139106;
          Q3o[9] = 2;
          for (Q3o[6] = 1; U3ndn.v9p(Q3o[6].toString(), Q3o[6].toString().length, 61446) !== Q3o[1]; Q3o[6]++) {
            Y1a[57] = false;
            Q3o[9] += 2;
          }
          if (U3ndn.v9p(Q3o[9].toString(), Q3o[9].toString().length, 72838) !== Q3o[2]) {
            Y1a[57] = true;
          }
        });
      }
      function m6I() {
        var F$U = [
          arguments
        ];
        F$U[7] = r8no$;
        if (!Y1a[63]) {
          return;
        }
        if (V6D[67]['resetRenderer']) {
          Y1a[52]['destroy']();
          Y1a[52] = null;
          Y1a[52] = new V6D[72](Y1a[3], 'replay');
          if (Y1a[64] && Y1a[64]['playerArray']) {
            Y1a[52]['setPlayerArray'](Y1a[64]['playerArray']);
          }
          V6D[67]['resetRenderer'] = false;
        }
        if (Date['now']() > Y1a[96] + 16000) {
          Y1a[2]['nextReplay']();
          return;
        }
        if (document['hidden'] == true) {
          return;
        }
        try {
          F$U[4] = Date['now']();
          U3ndn.S2t(1);
          F$U[2] = U3ndn.E_K(F$U[4], Y1a[54]);
          F$U[2] = Math['min'](F$U[2], 100);
          Y1a[61] += F$U[2];
          Y1a[54] = F$U[4];
          U3ndn.S2t(13);
          F$U[3] = U3ndn.E_K(745, 10, 7);
          U3ndn.z_y(17);
          F$U[8] = U3ndn.E_K(18, 10, 2);
          F$U[6] = Y1a[8][r8no$[F$U[3]]] * F$U[8];
          while (Y1a[61] > 1000 / F$U[6]) {
            F$U[5] = Date['now']();
            D4I(30);
            F$U[1] = Date['now']() - F$U[5];
            U3ndn.S2t(0);
            Y1a[61] -= U3ndn.I8r(1000, F$U[6]);
            if (Y1a[23][Y1a[77]]['fte'] == 0 || Y1a[77] == Y1a[64]['es']) {
              Y1a[2]['nextReplay']();
              return;
            }
            if (Y1a[23][Y1a[77]]['fte'] == 8 || Y1a[77] + 8 == Y1a[64]['es']) {
              Y1a[52]['replayFadeOut']();
            }
          }
          U3ndn.z_y(121);
          F$U[9] = U3ndn.I8r(F$U[6], Y1a[61], 1000);
          if (Y1a[77] > 0) {
            Y1a[52]['render'](Y1a[23][Y1a[77] - 1], Y1a[23][Y1a[77]], F$U[9], Y1a[29], P8a(Y1a[77]), Y1a[77]);
          }
        } catch (w6J) {
          Y1a[2]['nextReplay']();
        }
      }
      function P8a(W66) {
        var k3M = [
          arguments
        ];
        k3M[7] = r8no$;
        U3ndn.Y$U();
        k3M[9] = [
        ];
        for (k3M[6] = 0; k3M[6] < Y1a[30]['length']; k3M[6]++) {
          if (Y1a[30][k3M[6]]) {
            for (k3M[4] = k3M[0][0]; k3M[4] >= 0; k3M[4]--) {
              if (Y1a[30][k3M[6]][k3M[4]]) {
                k3M[9][k3M[6]] = Y1a[30][k3M[6]][k3M[4]];
                break;
              }
            }
          }
        }
        return k3M[9];
      }
      function l3o() {
        var l8P = [
          arguments
        ];
        l8P[4] = anime({
          targets: Y1a[1],
          opacity: '1',
          autoplay: true,
          duration: 200,
          delay: 0,
          easing: 'linear'
        });
      }
      function D4I(q8$) {
        var j0w = [
          arguments
        ];
        j0w[4] = r8no$;
        j0w[2] = P8a(Y1a[77]);
        j0w[7] = Y1a[93]['step'](Y1a[23][Y1a[77]], j0w[2], Y1a[62][Y1a[77]], j0w[0][0], Y1a[29], Y1a[72]);
        U3ndn.w30();
        Y1a[77]++;
        Y1a[23][Y1a[77]] = j0w[7];
        if (Y1a[77] >= 60) {
          U3ndn.S2t(1);
          Y1a[23][U3ndn.E_K(Y1a[77], 60)] = null;
        }
      }
      function D97(...Y$f) {
        var G_t = [
          arguments
        ];
        G_t[7] = r8no$;
        G_t[4] = Y$f['shift']();
        for (G_t[5] = 0; G_t[5] < Y1a[44]['length']; G_t[5]++) {
          if (Y1a[44][G_t[5]]['eventName'] == G_t[4]) {
            Y1a[44][G_t[5]]['callback'](...Y$f);
          }
        }
      }
      var Y1a = [
        arguments
      ];
      Y1a[7] = r8no$;
      Y1a[2] = this;
      Y1a[1] = document['getElementById']('simpleMenuConainer_UIContainer');
      Y1a[3] = document['getElementById']('bgreplay');
      Y1a[8] = document['getElementById']('bgreplay_timescrub');
      Y1a[8]['onmouseover'] = function () {
        E1r();
      };
      Y1a[8]['onmouseout'] = function () {
        l3o();
      };
      Y1a[8]['oninput'] = function () {
      };
      Y1a[8]['onchange'] = function () {
        U3ndn.Y$U();
      };
      Y1a[9] = [
      ];
      Y1a[6] = 0;
      Y1a[4] = 0;
      Y1a[5] = 0;
      Y1a[39] = Infinity;
      Y1a[63] = false;
      Y1a[96] = 0;
      Y1a[11] = true;
      Y1a[57] = false;
      Y1a[32] = false;
      Y1a[38] = true;
      Y1a[46] = null;
      U3ndn.S2t(4);
      Y1a[55] = U3ndn.E_K(1000, 120);
      Y1a[15] = 0;
      this['nextReplay'] = function () {
        Y1a[6]++;
        I5m();
      };
      this['prevReplay'] = function () {
        Y1a[6]--;
        if (Y1a[6] < 0) {
          Y1a[6] = 0;
        }
        I5m();
      };
      this['reportReplay'] = function () {
        var n_$ = [
          arguments
        ];
        n_$[2] = r8no$;
        U3ndn.w30();
        $['post']('https://bonk2.io/scripts/replay_report.php', {
          replayid: Y1a[64]['id']
        }) ['done'](function (h0j, x8o) {
          [
            arguments
          ];
        });
        Y1a[9]['splice'](Y1a[6], 1);
        I5m();
      };
      Y1a[52] = new V6D[72](Y1a[3], 'replay');
      Y1a[93] = new Q;
      Y1a[72] = 1;
      V6D[67]['enterFrameDispatcher']['subscribe'](1, m6I);
      Y1a[54] = Date['now']();
      Y1a[61] = 0;
      l8f();
      Y1a[44] = [
      ];
      this['on'] = function (x2z, t5B) {
        var a5d = [
          arguments
        ];
        a5d[1] = r8no$;
        Y1a[44]['push']({
          eventName: a5d[0][0],
          callback: a5d[0][1]
        });
      };
      this['blur'] = function () {
        var h1O = [
          arguments
        ];
        U3ndn.Y$U();
        h1O[5] = r8no$;
        Y1a[52]['blur']();
      };
      this['unblur'] = function () {
        var p7g = [
          arguments
        ];
        p7g[9] = r8no$;
        Y1a[52]['unblur']();
      };
      this['stop'] = function () {
        var v3W = [
          arguments
        ];
        v3W[3] = r8no$;
        V6D[67]['enterFrameDispatcher']['unsubscribe'](m6I);
        Y1a[15] = Date['now']();
      };
      this['resume'] = function () {
        var U_C = [
          arguments
        ];
        U3ndn.w30();
        U_C[6] = r8no$;
        Y1a[96] = Date['now']();
        V6D[67]['enterFrameDispatcher']['unsubscribe'](m6I);
        V6D[67]['enterFrameDispatcher']['subscribe'](1, m6I);
        U_C[8] = Date['now']() - Y1a[15];
        if (U_C[8] > Y1a[55]) {
          Y1a[46] = null;
          Y1a[5] = 0;
          Y1a[38] = true;
          while (Y1a[9][Y1a[6] + 2]) {
            Y1a[9]['pop']();
          }
        }
      };
      this['destroy'] = function () {
        var g6o = [
          arguments
        ];
        g6o[3] = r8no$;
        V6D[67]['enterFrameDispatcher']['unsubscribe'](m6I);
        Y1a[52]['destroy']();
        Y1a[75] = null;
        Y1a[30] = null;
        Y1a[62] = null;
        U3ndn.w30();
        Y1a[60] = null;
        Y1a[23] = null;
        Y1a[93] = null;
      };
    }
    V6D[4] = V6D[0][2]['Dynamics']['b2BodyDef'];
    V6D[5] = V6D[0][2]['Dynamics']['b2Body'];
    V6D[27] = V6D[0][2]['Dynamics']['b2FixtureDef'];
    V6D[22] = V6D[0][2]['Dynamics']['b2Fixture'];
    V6D[10] = V6D[0][2]['Dynamics']['b2World'];
    function N2() {
    }
    V6D[35] = V6D[0][2]['Collision']['Shapes']['b2MassData'];
    function S9() {
      function i5R() {
        var h27 = [
          arguments
        ];
        h27[2] = r8no$;
        X0n[5]['style']['display'] = 'none';
      }
      function E6d(e95) {
        var y7s = [
          arguments
        ];
        y7s[1] = r8no$;
        y7s[5] = true;
        q8o(X0n[90], X0n[62], X0n[58]);
        if (y7s[0][0] == false) {
          E9o(X0n[90], X0n[62], X0n[58], y7s[5]);
        }
        X0n[95]['style']['backgroundColor'] = h0E(X0n[90], X0n[62], X0n[58]);
        U3ndn.z_y(101);
        X0n[8]['value'] = U3ndn.E_K(X0n[62], X0n[10], 1);
        X0n[91](f0e(X0n[90], X0n[62], X0n[58]));
      }
      function I1H() {
        X0n[91](X0n[68]);
        U3ndn.w30();
        i5R();
      }
      function f0e(q3k, A7K, c85) {
        var f81 = [
          arguments
        ];
        f81[7] = r8no$;
        U3ndn.z_y(91);
        f81[66] = U3ndn.E_K(85, 7, 9, 21, 14);
        U3ndn.z_y(187);
        f81[88] = U3ndn.I8r(13, 1, 32, 17);
        U3ndn.z_y(73);
        f81[85] = U3ndn.I8r(1, 5, 4);
        f81[5] = (f81[66] - Math['abs'](f81[88] * f81[0][2] - f81[85])) * f81[0][1];
        U3ndn.z_y(88);
        f81[28] = U3ndn.I8r(17, 4591, 15, 0, 18);
        U3ndn.z_y(12);
        f81[62] = U3ndn.E_K(9540, 1, 10, 960);
        U3ndn.z_y(80);
        f81[79] = U3ndn.I8r(1, 60, 9, 8, 10);
        U3ndn.z_y(6);
        f81[75] = U3ndn.E_K(0, 1);
        f81[1] = f81[5] * (f81[28] - Math['abs'](f81[0][0] / f81[62] % f81[79] - f81[75]));
        U3ndn.z_y(143);
        f81[2] = U3ndn.E_K(2, f81[5], f81[0][2]);
        f81[9] = 0;
        f81[8] = 0;
        f81[3] = 0;
        if (0 <= f81[0][0] && f81[0][0] < 60) {
          f81[9] = f81[5];
          f81[8] = f81[1];
          f81[3] = 0;
        } else if (60 <= f81[0][0] && f81[0][0] < 120) {
          f81[9] = f81[1];
          f81[8] = f81[5];
          f81[3] = 0;
        } else if (120 <= f81[0][0] && f81[0][0] < 180) {
          f81[9] = 0;
          f81[8] = f81[5];
          f81[3] = f81[1];
        } else if (180 <= f81[0][0] && f81[0][0] < 240) {
          f81[9] = 0;
          f81[8] = f81[1];
          f81[6] = 1825059578;
          f81[99] = 1659426486;
          f81[70] = 2;
          for (f81[42] = 1; U3ndn.P5V(f81[42].toString(), f81[42].toString().length, 26722) !== f81[6]; f81[42]++) {
            f81[3] = f81[5];
            f81[70] += 2;
          }
          if (U3ndn.v9p(f81[70].toString(), f81[70].toString().length, 8358) !== f81[99]) {
            f81[3] = f81[5];
          }
        } else if (240 <= f81[0][0] && f81[0][0] < 300) {
          f81[9] = f81[1];
          f81[8] = 0;
          f81[3] = f81[5];
        } else if (300 <= f81[0][0] && f81[0][0] < 360) {
          f81[9] = f81[5];
          f81[8] = 0;
          f81[3] = f81[1];
        }
        U3ndn.z_y(144);
        f81[9] = Math['round'](U3ndn.E_K(f81[9], 255, f81[2]));
        U3ndn.S2t(144);
        f81[8] = Math['round'](U3ndn.I8r(f81[8], 255, f81[2]));
        U3ndn.z_y(144);
        f81[3] = Math['round'](U3ndn.I8r(f81[3], 255, f81[2]));
        U3ndn.S2t(227);
        f81[4] = U3ndn.I8r(f81[8], f81[3], 256, f81[9], 65536);
        return f81[4];
      }
      function F0c(b6W) {
        var x6a = [
          arguments
        ];
        x6a[8] = r8no$;
        U3ndn.z_y(228);
        x6a[6] = U3ndn.I8r(16, x6a[0][0], 255);
        U3ndn.S2t(228);
        x6a[9] = U3ndn.I8r(8, x6a[0][0], 255);
        U3ndn.z_y(229);
        x6a[2] = U3ndn.E_K(x6a[0][0], 255);
        x6a[6] /= 255;
        x6a[9] /= 255;
        x6a[2] /= 255;
        x6a[1] = Math['min'](x6a[6], x6a[9], x6a[2]);
        x6a[5] = Math['max'](x6a[6], x6a[9], x6a[2]);
        U3ndn.S2t(1);
        x6a[7] = U3ndn.I8r(x6a[5], x6a[1]);
        x6a[3] = 0;
        x6a[4] = 0;
        U3ndn.w30();
        x6a[65] = 0;
        if (x6a[7] == 0) {
          x6a[3] = 0;
        } else if (x6a[5] == x6a[6]) {
          U3ndn.S2t(150);
          x6a[3] = U3ndn.E_K(x6a[2], x6a[7], 6, x6a[9]);
        } else if (x6a[5] == x6a[9]) {
          U3ndn.S2t(28);
          x6a[3] = U3ndn.I8r(2, x6a[6], x6a[7], x6a[2]);
        } else {
          U3ndn.z_y(28);
          x6a[3] = U3ndn.I8r(4, x6a[9], x6a[7], x6a[6]);
        }
        U3ndn.S2t(4);
        x6a[3] = Math['round'](U3ndn.I8r(60, x6a[3]));
        if (x6a[3] < 0) {
          x6a[3] += 360;
        }
        U3ndn.z_y(151);
        x6a[65] = U3ndn.E_K(x6a[5], x6a[1], 2);
        x6a[4] = x6a[7] == 0 ? 0 : x6a[7] / (1 - Math['abs'](2 * x6a[65] - 1));
        return {
          hue: x6a[3],
          saturation: x6a[4],
          brightness: x6a[65]
        };
      }
      function q8o(U8E, a2e, D1v) {
        var y$o = [
          arguments
        ];
        y$o[8] = r8no$;
        U3ndn.w30();
        X0n[4]['clearRect'](0, 0, X0n[3]['width'], X0n[3]['height']);
        y$o[2] = document['getElementById']('mapeditor_colorpicker_crosshaircache');
        U3ndn.z_y(74);
        y$o[1] = U3ndn.I8r(40, 368, 11, 9, 13);
        U3ndn.S2t(28);
        y$o[6] = U3ndn.E_K(5, 15, 1, 478);
        y$o[9] = y$o[0][0] / y$o[1] * X0n[3][r8no$[y$o[6]]];
        U3ndn.z_y(6);
        y$o[4] = U3ndn.I8r(28, 441);
        U3ndn.S2t(1);
        y$o[7] = U3ndn.I8r(473, 4);
        y$o[5] = X0n[3][r8no$[y$o[4]]] - y$o[0][2] * X0n[3][r8no$[y$o[7]]];
        U3ndn.S2t(1);
        y$o[3] = U3ndn.E_K(487, 19);
        U3ndn.z_y(57);
        y$o[69] = U3ndn.E_K(15, 17);
        y$o[9] -= y$o[2][r8no$[y$o[3]]] / y$o[69];
        U3ndn.S2t(133);
        y$o[59] = U3ndn.I8r(8, 16, 13, 6992, 465);
        U3ndn.S2t(72);
        y$o[91] = U3ndn.E_K(2, 16, 20);
        y$o[5] -= y$o[2][r8no$[y$o[59]]] / y$o[91];
        y$o[9] = Math['round'](y$o[9]);
        y$o[5] = Math['round'](y$o[5]);
        X0n[4]['drawImage'](y$o[2], y$o[9], y$o[5]);
      }
      function E9o(m2Y, W5v, Y0N, h8o) {
        var i7$ = [
          arguments
        ];
        i7$[9] = r8no$;
        i7$[7] = 1;
        if (i7$[0][3]) {
          i7$[5] = - 1332812359;
          i7$[4] = 490053429;
          i7$[79] = 2;
          for (i7$[53] = 1; U3ndn.v9p(i7$[53].toString(), i7$[53].toString().length, 26397) !== i7$[5]; i7$[53]++) {
            i7$[7] = 4;
            i7$[79] += 2;
          }
          if (U3ndn.P5V(i7$[79].toString(), i7$[79].toString().length, 31880) !== i7$[4]) {
            i7$[7] = 6;
          }
        }
        U3ndn.z_y(14);
        i7$[95] = U3ndn.E_K(1, 449, 19);
        i7$[6] = X0n[1][r8no$[i7$[95]]] / i7$[7];
        U3ndn.z_y(1);
        i7$[49] = U3ndn.E_K(477, 8);
        U3ndn.Y$U();
        i7$[8] = X0n[1][r8no$[i7$[49]]] / i7$[7];
        X0n[6]['clearRect'](0, 0, X0n[1]['width'], X0n[1]['height']);
        for (i7$[12] = 0; i7$[12] < i7$[8]; i7$[12]++) {
          for (i7$[75] = 0; i7$[75] < i7$[6]; i7$[75]++) {
            U3ndn.z_y(216);
            i7$[2] = U3ndn.I8r(360, i7$[6], i7$[75]);
            i7$[3] = i7$[0][1];
            U3ndn.z_y(96);
            i7$[1] = U3ndn.E_K(i7$[8], i7$[8], i7$[12]);
            if (i7$[0][3]) {
              i7$[2] += 3;
            }
            X0n[6]['fillStyle'] = h0E(i7$[2], i7$[3], i7$[1]);
            U3ndn.z_y(4);
            X0n[6]['fillRect'](U3ndn.E_K(i7$[7], i7$[75]), U3ndn.E_K(i7$[7], i7$[12]), i7$[7], i7$[7]);
          }
        }
      }
      function T22() {
        var g9S = [
          arguments
        ];
        U3ndn.Y$U();
        g9S[3] = r8no$;
        g9S[5] = f0e(X0n[90], X0n[62], X0n[58]);
        g9S[6] = X0n[20]['indexOf'](g9S[5]);
        if (g9S[6] != - 1) {
          g9S[4] = - 655736730;
          g9S[7] = 942838489;
          g9S[8] = 2;
          for (g9S[2] = 1; U3ndn.P5V(g9S[2].toString(), g9S[2].toString().length, 45311) !== g9S[4]; g9S[2]++) {
            X0n[20]['fp'](g9S[6], 6);
            g9S[8] += 2;
          }
          if (U3ndn.v9p(g9S[8].toString(), g9S[8].toString().length, 90677) !== g9S[7]) {
            X0n[20]['fp'](g9S[6], 6);
          }
          X0n[20]['splice'](g9S[6], 1);
        }
        X0n[20]['push'](g9S[5]);
        if (X0n[94]) {
          X0n[94](g9S[5]);
        }
        i5R();
      }
      function D3A(D0W) {
        var g87 = [
          arguments
        ];
        g87[2] = r8no$;
        g87[1] = [
        ];
        U3ndn.w30();
        g87[1][g87[0][0]['bc']] = 1;
        for (g87[7] = 0; g87[7] < g87[0][0]['layers']['length']; g87[7]++) {
          g87[5] = g87[0][0]['layers'][g87[7]]['color'];
          if (g87[1][g87[5]]) {
            g87[1][g87[5]]++;
          } else {
            g87[1][g87[5]] = 1;
          }
        }
        for (g87[4] in g87[1]) {
          g87[4] = parseInt(g87[4]);
          g87[3] = X0n[20]['indexOf'](g87[4]);
          if (g87[3] != - 1) {
            g87[3]++;
            U3ndn.S2t(4);
            g87[1][g87[4]] += U3ndn.I8r(1000, g87[3]);
          }
        }
        g87[9] = [
        ];
        for (g87[8] in g87[1]) {
          g87[9]['push']({
            col: parseInt(g87[8]),
            count: g87[1][g87[8]]
          });
        }
        g87[9]['sort']((x4n, H0D) =>{
          var B8e = r8no$;
          U3ndn.z_y(15);
          var x4S = U3ndn.I8r(10, 176, 5);
          U3ndn.Y$U();
          U3ndn.S2t(222);
          var f_B = U3ndn.I8r(17, 144, 11, 11, 19);
          return H0D[B8e[x4S]] - x4n[B8e[f_B]];
        });
        while (X0n[7]['firstChild']) {
          X0n[7]['removeChild'](X0n[7]['lastChild']);
        }
        for (g87[90] = 0; g87[90] < g87[9]['length']; g87[90]++) {
          g87[6] = document['createElement']('div');
          g87[6]['classList']['add']('skineditor_colorpicker_existingtile');
          g87[6]['style']['backgroundColor'] = V6D[67]['numToHex'](g87[9][g87[90]]['col']);
          g87[6]['name'] = g87[9][g87[90]]['col'];
          X0n[7]['appendChild'](g87[6]);
          g87[6]['onmousedown'] = function () {
            var g1W = [
              arguments
            ];
            g1W[3] = r8no$;
            g1W[1] = F0c(this['name']);
            X0n[90] = g1W[1]['hue'];
            U3ndn.w30();
            X0n[58] = g1W[1]['brightness'];
            X0n[62] = g1W[1]['saturation'];
            E6d(false);
          };
        }
      }
      function h0E(f59, I$E, R4C) {
        var L6I = [
          arguments
        ];
        L6I[5] = r8no$;
        U3ndn.S2t(57);
        L6I[8] = U3ndn.E_K(13, 14);
        U3ndn.S2t(108);
        L6I[3] = U3ndn.E_K(16, 66, 12, 17, 0);
        U3ndn.z_y(129);
        L6I[50] = U3ndn.I8r(4, 1, 0, 17, 9);
        L6I[7] = (L6I[8] - Math['abs'](L6I[3] * L6I[0][2] - L6I[50])) * L6I[0][1];
        U3ndn.z_y(187);
        L6I[60] = U3ndn.E_K(10, 1, 26, 15);
        U3ndn.S2t(5);
        L6I[48] = U3ndn.I8r(1152, 16, 19, 4, 57);
        U3ndn.S2t(1);
        L6I[34] = U3ndn.E_K(20, 18);
        U3ndn.S2t(60);
        L6I[63] = U3ndn.I8r(3, 1, 5);
        L6I[1] = L6I[7] * (L6I[60] - Math['abs'](L6I[0][0] / L6I[48] % L6I[34] - L6I[63]));
        U3ndn.S2t(143);
        L6I[2] = U3ndn.I8r(2, L6I[7], L6I[0][2]);
        L6I[6] = 0;
        L6I[9] = 0;
        L6I[4] = 0;
        if (0 <= L6I[0][0] && L6I[0][0] < 60) {
          L6I[6] = L6I[7];
          L6I[9] = L6I[1];
          L6I[4] = 0;
        } else if (60 <= L6I[0][0] && L6I[0][0] < 120) {
          L6I[6] = L6I[1];
          L6I[9] = L6I[7];
          L6I[4] = 0;
        } else if (120 <= L6I[0][0] && L6I[0][0] < 180) {
          L6I[6] = 0;
          L6I[9] = L6I[7];
          L6I[4] = L6I[1];
        } else if (180 <= L6I[0][0] && L6I[0][0] < 240) {
          L6I[6] = 0;
          L6I[9] = L6I[1];
          L6I[4] = L6I[7];
        } else if (240 <= L6I[0][0] && L6I[0][0] < 300) {
          L6I[6] = L6I[1];
          L6I[9] = 0;
          L6I[4] = L6I[7];
        } else if (300 <= L6I[0][0] && L6I[0][0] < 360) {
          L6I[6] = L6I[7];
          L6I[9] = 0;
          L6I[4] = L6I[1];
        }
        U3ndn.z_y(144);
        L6I[6] = Math['round'](U3ndn.E_K(L6I[6], 255, L6I[2]));
        U3ndn.z_y(144);
        L6I[9] = Math['round'](U3ndn.I8r(L6I[9], 255, L6I[2]));
        U3ndn.S2t(144);
        L6I[4] = Math['round'](U3ndn.I8r(L6I[4], 255, L6I[2]));
        U3ndn.z_y(29);
        L6I[75] = U3ndn.E_K(168, 8, 16);
        U3ndn.z_y(6);
        L6I[61] = U3ndn.I8r(4115, 19);
        U3ndn.z_y(45);
        L6I[62] = U3ndn.I8r(18, 15, 1108806, 4122);
        U3ndn.z_y(26);
        L6I[95] = U3ndn.E_K(20, 633, 1963, 4);
        return U3ndn.j31(L6I[75]) + L6I[6] + U3ndn.j31(L6I[61]) + L6I[9] + U3ndn.j31(L6I[62]) + L6I[4] + U3ndn.j31(L6I[95]);
      }
      function R5t(d4i) {
        var E27 = [
          arguments
        ];
        E27[6] = r8no$;
        E27[1] = E27[0][0]['target']['getBoundingClientRect']();
        U3ndn.S2t(108);
        E27[7] = U3ndn.E_K(10, 1099, 5, 16, 127);
        U3ndn.S2t(24);
        E27[9] = U3ndn.I8r(33, 10, 2, 249);
        E27[3] = E27[0][0][r8no$[E27[7]]] - E27[1][r8no$[E27[9]]];
        U3ndn.S2t(97);
        E27[5] = U3ndn.E_K(923, 14, 101, 4);
        U3ndn.S2t(1);
        E27[14] = U3ndn.E_K(3829, 3282);
        E27[2] = E27[0][0][r8no$[E27[5]]] - E27[1][r8no$[E27[14]]];
        U3ndn.z_y(8);
        E27[25] = U3ndn.E_K(4914, 451, 7, 4212, 11);
        E27[4] = E27[3] / E27[1][r8no$[E27[25]]];
        U3ndn.z_y(7);
        E27[70] = U3ndn.I8r(8442, 159587, 18, 19);
        E27[8] = E27[2] / E27[1][r8no$[E27[70]]];
        U3ndn.S2t(4);
        X0n[90] = U3ndn.E_K(360, E27[4]);
        U3ndn.S2t(1);
        X0n[58] = U3ndn.I8r(1, E27[8]);
        E6d(true);
      }
      var X0n = [
        arguments
      ];
      X0n[2] = r8no$;
      X0n[5] = document['getElementById']('skineditor_colorpicker');
      X0n[1] = document['getElementById']('skineditor_colorpicker_canvas');
      X0n[3] = document['getElementById']('skineditor_colorpicker_canvas_crosshair');
      X0n[6] = X0n[1]['getContext']('2d');
      X0n[4] = X0n[3]['getContext']('2d');
      X0n[8] = document['getElementById']('skineditor_colorpicker_brightness_slider');
      X0n[7] = document['getElementById']('skineditor_colorpicker_existingcontainer');
      X0n[9] = document['getElementById']('skineditor_colorpicker_righttile');
      X0n[95] = document['getElementById']('skineditor_colorpicker_lefttile');
      X0n[80] = false;
      X0n[31] = document['getElementById']('skineditor_colorpicker_savebutton');
      X0n[51] = document['getElementById']('skineditor_colorpicker_cancelbutton');
      X0n[20] = [
      ];
      X0n[10] = 1;
      X0n[31]['onclick'] = T22;
      X0n[51]['onclick'] = I1H;
      V6D[67]['setButtonSounds']([X0n[31]]);
      X0n[51]['onmousedown'] = V6D[67]['bbs'];
      X0n[51]['onmouseenter'] = V6D[67]['bhs'];
      X0n[90] = 0;
      X0n[58] = 0;
      X0n[62] = 0;
      X0n[91] = null;
      X0n[94] = null;
      X0n[68] = 0;
      X0n[8]['onchange'] = function () {
        var y$J = [
          arguments
        ];
        y$J[4] = r8no$;
        U3ndn.S2t(166);
        y$J[3] = U3ndn.I8r(733, 14, 733, 734);
        X0n[62] = this[r8no$[y$J[3]]] * X0n[10];
        E6d(false);
      };
      X0n[8]['oninput'] = function () {
        var P2q = [
          arguments
        ];
        P2q[6] = r8no$;
        U3ndn.z_y(6);
        P2q[9] = U3ndn.E_K(742, 6);
        X0n[62] = this[r8no$[P2q[9]]] * X0n[10];
        E6d(false);
      };
      X0n[1]['onmousedown'] = function (x7i) {
        var m3A = [
          arguments
        ];
        m3A[1] = r8no$;
        X0n[80] = true;
        R5t(m3A[0][0]);
        U3ndn.Y$U();
        window['onmouseup'] = function () {
          var w7T = [
            arguments
          ];
          w7T[4] = r8no$;
          X0n[80] = false;
          U3ndn.Y$U();
          window['onmouseup'] = null;
          E6d(false);
        };
      };
      X0n[1]['onmousemove'] = function (r1N) {
        var v_j = [
          arguments
        ];
        if (X0n[80] == false) {
          return;
        }
        R5t(v_j[0][0]);
      };
      this['showColorPicker'] = function (K1l, t26, I7f, r2B) {
        var B8j = [
          arguments
        ];
        B8j[5] = r8no$;
        X0n[9]['style']['backgroundColor'] = V6D[67]['numToHex'](B8j[0][0]);
        U3ndn.w30();
        B8j[8] = F0c(B8j[0][0]);
        X0n[90] = B8j[8]['hue'];
        X0n[58] = B8j[8]['brightness'];
        X0n[62] = B8j[8]['saturation'];
        X0n[91] = B8j[0][2];
        X0n[94] = B8j[0][3];
        X0n[68] = B8j[0][0];
        E6d(false);
        D3A(B8j[0][1]);
        X0n[5]['style']['display'] = 'block';
      };
      this['wipeColorHistory'] = function () {
        X0n[20] = [
        ];
      };
      X0n[42] = - 518044287;
      X0n[30] = - 1847543060;
      X0n[23] = 2;
      for (X0n[27] = 1; U3ndn.v9p(X0n[27].toString(), X0n[27].toString().length, 33897) !== X0n[42]; X0n[27]++) {
        this[r8no$[5206]] = i5R;
        X0n[23] += 2;
      }
      if (U3ndn.v9p(X0n[23].toString(), X0n[23].toString().length, 39156) !== X0n[30]) {
        this['closeColorPicker'] = i5R;
      }
    }
    V6D[62] = V6D[0][2]['Collision']['Shapes']['b2PolygonShape'];
    V6D[19] = V6D[0][2]['Collision']['Shapes']['b2CircleShape'];
    V6D[36] = V6D[0][2]['Dynamics']['b2DebugDraw'];
    V6D[32] = V6D[0][2]['Common']['Math']['b2Math'];
    V6D[54] = V6D[0][2]['Dynamics']['Joints']['b2RevoluteJointDef'];
    V6D[74] = V6D[0][2]['Dynamics']['Joints']['b2RevoluteJoint'];
    V6D[55] = V6D[0][2]['Dynamics']['Joints']['b2PrismaticJointDef'];
    V6D[58] = V6D[0][2]['Dynamics']['Joints']['b2PrismaticJoint'];
    V6D[92] = V6D[0][2]['Dynamics']['Joints']['b2DistanceJoint'];
    function u4() {
      function d9b() {
        var S_a = [
          arguments
        ];
        S_a[1] = r8no$;
        u6U();
        anime({
          targets: H9Y[544],
          opacity: 0,
          top: '300px',
          autoplay: true,
          duration: 150,
          easing: 'easeInQuad',
          complete: function () {
            var A5M = [
              arguments
            ];
            U3ndn.Y$U();
            A5M[7] = r8no$;
            H9Y[544]['style']['visibility'] = 'hidden';
            H9Y[544]['style']['top'] = 0;
          }
        });
        H9Y[231]['style']['visibility'] = 'inherit';
        H9Y[231]['style']['opacity'] = 0;
        anime({
          targets: H9Y[231],
          opacity: 1,
          autoplay: true,
          duration: 100,
          delay: 100,
          easing: 'easeInOutCubic'
        });
        H9Y[33]['style']['left'] = '-150px';
        anime({
          targets: H9Y[33],
          left: 0,
          autoplay: true,
          duration: 400,
          easing: 'easeOutBack'
        });
        H9Y[14]['style']['right'] = '-150px';
        anime({
          targets: H9Y[14],
          right: 0,
          autoplay: true,
          duration: 400,
          easing: 'easeOutBack'
        });
        H9Y[80]['style']['opacity'] = 0;
        anime({
          targets: H9Y[80],
          opacity: 1,
          autoplay: true,
          duration: 300,
          delay: 200,
          easing: 'linear'
        });
      }
      function q_d(b4m) {
        var k5i = [
          arguments
        ];
        k5i[7] = r8no$;
        if (k5i[0][0]['r'] != 'success') {
          return;
        }
        if (k5i[0][0]['requests']['length'] == 0) {
          k5i[9] = H9Y[31]['insertRow']();
          k5i[5] = k5i[9]['insertCell'](0);
          k5i[5]['textContent'] = 'None';
          k5i[5]['classList']['add']('friends_cell_name');
        } else {
          for (k5i[78] = 0; k5i[78] < k5i[0][0]['requests']['length']; k5i[78]++) {
            k5i[8] = k5i[0][0]['requests'][k5i[78]];
            k5i[4] = H9Y[31]['insertRow']();
            k5i[1] = k5i[4]['insertCell'](0);
            k5i[1]['textContent'] = k5i[8]['name'];
            k5i[1]['classList']['add']('friends_cell_name');
            k5i[3] = k5i[4]['insertCell'](1);
            k5i[2] = document['createElement']('div');
            k5i[2]['textContent'] = 'DELETE';
            k5i[2]['classList']['add']('friends_request_button');
            k5i[2]['classList']['add']('brownButton');
            k5i[2]['classList']['add']('brownButton_classic');
            k5i[2]['classList']['add']('buttonShadow');
            k5i[2]['playerID'] = k5i[8]['id'];
            k5i[2]['onclick'] = M0w;
            k5i[2]['onmousedown'] = V6D[67]['bcs'];
            k5i[2]['onmouseover'] = V6D[67]['bhs'];
            k5i[3]['appendChild'](k5i[2]);
            k5i[6] = k5i[4]['insertCell'](2);
            k5i[74] = document['createElement']('div');
            k5i[74]['textContent'] = 'ACCEPT';
            k5i[74]['classList']['add']('friends_request_button');
            k5i[74]['classList']['add']('brownButton');
            k5i[74]['classList']['add']('brownButton_classic');
            k5i[74]['classList']['add']('buttonShadow');
            k5i[74]['playerID'] = k5i[8]['id'];
            k5i[74]['onclick'] = g6p;
            k5i[74]['onmousedown'] = V6D[67]['bcs'];
            k5i[74]['onmouseover'] = V6D[67]['bhs'];
            k5i[6]['appendChild'](k5i[74]);
          }
        }
        k5i[14] = false;
        k5i[94] = false;
        for (k5i[53] = 0; k5i[53] < k5i[0][0]['friends']['length']; k5i[53]++) {
          k5i[49] = k5i[0][0]['friends'][k5i[53]];
          k5i[60] = null;
          if (k5i[49]['roomid'] == null) {
            k5i[94] = true;
            k5i[60] = H9Y[97];
          } else {
            k5i[14] = true;
            k5i[60] = H9Y[10];
          }
          k5i[51] = k5i[60]['insertRow']();
          k5i[96] = k5i[51]['insertCell'](0);
          k5i[96]['classList']['add']('friends_cell_name');
          k5i[96]['textContent'] = k5i[49]['name'];
          k5i[34] = k5i[51]['insertCell'](1);
          k5i[26] = document['createElement']('div');
          k5i[26]['textContent'] = 'REMOVE';
          k5i[26]['playerID'] = k5i[49]['id'];
          k5i[26]['classList']['add']('friends_request_button');
          k5i[26]['classList']['add']('brownButton');
          k5i[26]['classList']['add']('brownButton_classic');
          k5i[26]['classList']['add']('buttonShadow');
          k5i[26]['onclick'] = o4k;
          k5i[26]['onmousedown'] = V6D[67]['bcs'];
          k5i[26]['onmouseover'] = V6D[67]['bhs'];
          k5i[34]['appendChild'](k5i[26]);
          k5i[10] = k5i[51]['insertCell'](2);
          if (k5i[49]['roomid'] == null) {
            k5i[10]['classList']['add']('friends_empty_cell');
          } else {
            k5i[33] = document['createElement']('div');
            k5i[33]['textContent'] = 'JOIN';
            k5i[33]['classList']['add']('friends_request_button');
            k5i[33]['classList']['add']('brownButton');
            k5i[33]['classList']['add']('brownButton_classic');
            k5i[33]['classList']['add']('buttonShadow');
            k5i[33]['roomID'] = k5i[49]['roomid'];
            k5i[33]['onclick'] = F31;
            k5i[33]['onmousedown'] = V6D[67]['bcs'];
            k5i[33]['onmouseover'] = V6D[67]['bhs'];
            k5i[10]['appendChild'](k5i[33]);
          }
        }
        if (k5i[14] == false) {
          k5i[54] = H9Y[10]['insertRow']();
          k5i[27] = k5i[54]['insertCell'](0);
          k5i[27]['textContent'] = 'None';
          k5i[27]['classList']['add']('friends_cell_name');
        }
        if (k5i[94] == false) {
          k5i[20] = H9Y[97]['insertRow']();
          k5i[70] = k5i[20]['insertCell'](0);
          k5i[70]['textContent'] = 'None';
          k5i[70]['classList']['add']('friends_cell_name');
        }
      }
      function O6v() {
        var S8a = [
          arguments
        ];
        S8a[4] = r8no$;
        H9Y[107] = false;
        H9Y[365]['style']['visibility'] = 'hidden';
        w4K();
      }
      function A6q() {
        var W3p = [
          arguments
        ];
        W3p[6] = r8no$;
        H9Y[866]['blur']();
        H9Y[69]['style']['visibility'] = 'inherit';
        H9Y[69]['style']['opacity'] = '0';
        anime({
          targets: H9Y[69],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        H9Y[74] = true;
        U3ndn.z_y(1);
        W3p[2] = U3ndn.I8r(58, 11);
        U3ndn.S2t(154);
        W3p[3] = U3ndn.E_K(11, 20, 8, 5, 351);
        H9Y[349] = H9Y[881][r8no$[W3p[2]]] - W3p[3];
        F49(H9Y[349]);
        H9Y[59]['textContent'] = 'NEWS';
        H9Y[16]['textContent'] = 'NEWS';
        localStorage['setItem']('newscount', H9Y[881]['length']);
        H9Y[37] = false;
      }
      function c9I() {
        var a45 = [
          arguments
        ];
        a45[1] = r8no$;
        H9Y[231]['style']['visibility'] = 'hidden';
        U3ndn.Y$U();
        w4K();
      }
      function i2h(Q0c, c_E, A9x) {
        var A2S = [
          arguments
        ];
        U3ndn.Y$U();
        A2S[6] = {
          action: 'join',
          quick: A2S[0][2],
          address: A2S[0][0],
          password: undefined,
          roomName: 'joinname',
          server: A2S[0][1],
          mo: 'b'
        };
        H9Y[119] = A2S[0][0];
        H_N(A2S[6]);
      }
      function k44() {
        var J0$ = [
          arguments
        ];
        J0$[1] = r8no$;
        while (H9Y[31]['rows']['length'] > 0) {
          H9Y[31]['deleteRow'](0);
        }
        while (H9Y[10]['rows']['length'] > 0) {
          H9Y[10]['deleteRow'](0);
        }
        while (H9Y[97]['rows']['length'] > 0) {
          H9Y[97]['deleteRow'](0);
        }
        V6D[67]['activateButtonSpinner'](H9Y[86]);
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: H9Y[24],
          task: 'getfriends'
        }) ['fail'](function (o6S, I_G, o$x) {
          var G4s = [
            arguments
          ];
          G4s[6] = r8no$;
          V6D[67]['deactivateButtonSpinner'](H9Y[86]);
        }) ['done']((U52, r2q) =>{
          var n43 = r8no$;
          V6D[67][n43[1074]](H9Y[86]);
          q_d(U52);
          if (typeof U52[n43[1105]] == 'object') {
            V6D[67][n43[1105]] = U52[n43[1105]];
          }
        });
      }
      function E$4() {
        var y8F = [
          arguments
        ];
        y8F[6] = r8no$;
        y8F[9] = H9Y[635];
        while (y8F[9]['rows']['length'] > 1) {
          y8F[9]['deleteRow'](1);
        }
        y8F[2] = [
          ['Left',
          'left1',
          'left2',
          'left3'],
          [
            'Right',
            'right1',
            'right2',
            'right3'
          ],
          [
            'Up',
            'up1',
            'up2',
            'up3'
          ],
          [
            'Down',
            'down1',
            'down2',
            'down3'
          ],
          [
            'Heavy',
            'heavy1',
            'heavy2',
            'heavy3'
          ],
          [
            'Special',
            'swing1',
            'swing2',
            'swing3'
          ]
        ];
        y8F[7] = function (w3c) {
          var T6W = [
            arguments
          ];
          T6W[3] = r8no$;
          T6W[9] = y8F[9]['insertRow']();
          T6W[2] = T6W[9]['insertCell'](0);
          T6W[2]['style']['width'] = '17%';
          T6W[2]['textContent'] = y8F[2][T6W[0][0]][0];
          T6W[6] = T6W[9]['insertCell'](1);
          T6W[6]['style']['width'] = '27%';
          T6W[6]['textContent'] = H9Y[396][H9Y[504][y8F[2][T6W[0][0]][1]]];
          T6W[6]['classList']['add']('redefineControls_selectionCell');
          T6W[7] = T6W[9]['insertCell'](2);
          T6W[7]['style']['width'] = '27%';
          T6W[7]['textContent'] = H9Y[396][H9Y[504][y8F[2][T6W[0][0]][2]]];
          T6W[7]['classList']['add']('redefineControls_selectionCell');
          T6W[4] = T6W[9]['insertCell'](3);
          T6W[4]['style']['width'] = '27%';
          T6W[4]['textContent'] = H9Y[396][H9Y[504][y8F[2][T6W[0][0]][3]]];
          U3ndn.Y$U();
          T6W[4]['classList']['add']('redefineControls_selectionCell');
          T6W[6]['onclick'] = function () {
            var x1O = [
              arguments
            ];
            x1O[6] = r8no$;
            H9Y[311] = y8F[2][T6W[0][0]][1];
            T6W[6]['textContent'] = '...';
            $(document) ['off']('keydown', Z6I);
            $(document) ['on']('keydown', Z6I);
          };
          T6W[7]['onclick'] = function () {
            var c$7 = [
              arguments
            ];
            c$7[3] = r8no$;
            H9Y[311] = y8F[2][T6W[0][0]][2];
            T6W[7]['textContent'] = '...';
            $(document) ['off']('keydown', Z6I);
            $(document) ['on']('keydown', Z6I);
          };
          T6W[4]['onclick'] = function () {
            var X5h = [
              arguments
            ];
            X5h[2] = r8no$;
            H9Y[311] = y8F[2][T6W[0][0]][3];
            T6W[4]['textContent'] = '...';
            U3ndn.w30();
            $(document) ['off']('keydown', Z6I);
            $(document) ['on']('keydown', Z6I);
          };
        };
        for (y8F[4] = 0; y8F[4] < y8F[2]['length']; y8F[4]++) {
          y8F[7](y8F[4]);
        }
      }
      function h3s() {
        var o_L = [
          arguments
        ];
        o_L[6] = r8no$;
        V6D[67]['quickMode'] = 'bonkquick';
        U3ndn.w30();
        if (V6D[67]['classic']) {
          p9X();
          V6D[67]['rlc']();
        } else {
          C_d();
        }
        b5n();
      }
      function z2e() {
        var z5V = [
          arguments
        ];
        z5V[7] = r8no$;
        if (H9Y[491]['value'] != H9Y[210]['value']) {
          H9Y[314]['textContent'] = 'Failed: New passwords don\'t match!';
          H9Y[314]['style']['paddingTop'] = '36px';
          N97();
          return;
        }
        if (!(H9Y[491]['value']['length'] > 0)) {
          H9Y[314]['textContent'] = 'Failed: New password blank';
          H9Y[314]['style']['paddingTop'] = '36px';
          N97();
          return;
        }
        $['post']('https://bonk2.io/scripts/account_changepassword.php', {
          token: H9Y[24],
          oldpass: H9Y[669]['value'],
          newpass: H9Y[491]['value']
        }) ['done']((L5k, n$_) =>{
          var e$d = r8no$;
          V6D[67][e$d[1074]](H9Y[797]);
          if (L5k[e$d[61]] == 'success') {
            j6S();
          } else {
            N97();
            if (L5k[e$d[661]] == 'ratelimited') {
              H9Y[314][e$d[552]] = 'Failed: You are doing that too much, please try again in 24 hours';
              H9Y[314][e$d[459]][e$d[1125]] = '27px';
            }
            if (L5k[e$d[661]] == 'token') {
              H9Y[314][e$d[552]] = 'Failed: Please log out and in again and try again';
              H9Y[314][e$d[459]][e$d[1125]] = '27px';
            }
            if (L5k[e$d[661]] == 'server_error_1' || L5k[e$d[661]] == 'server_error_2') {
              H9Y[314][e$d[552]] = 'Failed: Please try again';
              H9Y[314][e$d[459]][e$d[1125]] = '36px';
            }
            if (L5k[e$d[661]] == 'oldpass_wrong') {
              H9Y[314][e$d[552]] = 'Failed: Old password is incorrect!';
              H9Y[314][e$d[459]][e$d[1125]] = '36px';
            }
          }
        }) ['fail'](function (F_7, H18, i2R) {
          var R5w = [
            arguments
          ];
          R5w[5] = r8no$;
          V6D[67]['deactivateButtonSpinner'](H9Y[797]);
          H9Y[314]['textContent'] = 'Failed: Please try again';
          H9Y[314]['style']['paddingTop'] = '36px';
        });
        V6D[67]['activateButtonSpinner'](H9Y[797]);
      }
      function t2d() {
        var X3K = [
          arguments
        ];
        X3K[3] = r8no$;
        if (H9Y[453]) {
          H9Y[453]['tabbed'](false);
        }
      }
      function p9X() {
        var m98 = [
          arguments
        ];
        m98[4] = r8no$;
        U3ndn.w30();
        quickPlayWindow['style']['pointerEvents'] = 'none';
        anime({
          targets: quickPlayWindow,
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var m2X = [
              arguments
            ];
            m2X[6] = r8no$;
            quickPlayWindow['style']['visibility'] = 'hidden';
            quickPlayWindow['style']['pointerEvents'] = 'auto';
          }
        });
      }
      function Q__(A3V) {
        var V6O = [
          arguments
        ];
        V6O[5] = r8no$;
        if (V6O[0][0] == 'fast') {
          H9Y[60]['style']['bottom'] = '-70px';
          H9Y[45]['style']['top'] = '-40px';
        }
        if (V6O[0][0] == 'slow') {
          anime({
            targets: H9Y[60],
            bottom: '-70px',
            autoplay: true,
            duration: 120,
            easing: 'easeInSine'
          });
          anime({
            targets: H9Y[45],
            top: '-40px',
            autoplay: true,
            duration: 120,
            easing: 'easeInSine'
          });
        }
      }
      function O9P() {
        H9Y[72] = false;
      }
      function j5G() {
        var Y3B = [
          arguments
        ];
        Y3B[8] = r8no$;
        H9Y[8]['style']['display'] = 'none';
        Q__('slow');
        H9Y[866]['stop']();
        H9Y[2]['stopMusic']();
        U3ndn.Y$U();
        H9Y[72] = true;
      }
      function o7F() {
        var F_Y = [
          arguments
        ];
        F_Y[3] = r8no$;
        V6D[67]['quickMode'] = 'arrowsquick';
        if (V6D[67]['classic']) {
          p9X();
          V6D[67]['rlc']();
        } else {
          C_d();
        }
        U3ndn.Y$U();
        b5n();
      }
      function C3E() {
        var K4x = [
          arguments
        ];
        U3ndn.w30();
        K4x[6] = r8no$;
        K4x[8] = V6D[67]['getCookie']('noguide');
        if (K4x[8]) {
          return false;
        }
        return true;
      }
      function F$v() {
        var y3_ = [
          arguments
        ];
        y3_[7] = r8no$;
        H9Y[204]['style']['visibility'] = 'hidden';
        H9Y[968]['style']['visibility'] = 'hidden';
        V6D[67]['activateButtonSpinner'](H9Y[79]);
        U3ndn.w30();
        $['post']('https://bonk2.io/scripts/login_legacy.php', {
          username: H9Y[73]['value'],
          password: H9Y[52]['value'],
          remember: H9Y[67]['checked']
        }) ['fail'](function (i1y, b1r, s8X) {
          U3ndn.w30();
          var d$8 = [
            arguments
          ];
          d$8[1] = r8no$;
          V6D[67]['deactivateButtonSpinner'](H9Y[79]);
        }) ['done']((x9L, s76) =>{
          var s0j;
          var T0Y;
          var z7g;
          var B6L;
          var Z_1 = r8no$;
          V6D[67][Z_1[1074]](H9Y[79]);
          var Z7F = x9L;
          if (Z7F[Z_1[61]] == 'success') {
            H9Y[24] = Z7F[Z_1[826]];
            H9Y[672][Z_1[1100]](H9Y[24]);
            V6D[67][Z_1[679]] = Z7F[Z_1[679]];
            V6D[67][Z_1[568]] = Z7F[Z_1[1112]];
            V6D[67][Z_1[638]] = false;
            V6D[67][Z_1[655]] = parseInt(Z7F[Z_1[113]]);
            V6D[67][Z_1[413]] = new V6D[30];
            V6D[67][Z_1[413]][Z_1[1039]](Z7F[Z_1[413]]);
            for (var S3Y = 0; S3Y < 5; S3Y++) {
              V6D[67][Z_1[1004]][S3Y] = new V6D[30];
              U3ndn.S2t(6);
              s0j = U3ndn.I8r(S3Y, 1);
              if (Z7F['avatar' + s0j]) {
                V6D[67][Z_1[1004]][S3Y][Z_1[1039]](Z7F['avatar' + s0j]);
              }
            }
            U3ndn.z_y(6);
            var A3a = U3ndn.I8r(988, 15);
            U3ndn.z_y(230);
            var S9C = U3ndn.E_K(7, 10, 9, 4, 2);
            V6D[67][Z_1[1003]] = Z7F[Z_1[A3a]] - S9C;
            V6D[67][Z_1[371]] = new V6D[85];
            V6D[67][Z_1[371]][Z_1[1114]](Z7F[Z_1[1115]]);
            w7c();
            V6D[67][Z_1[1105]] = Z7F[Z_1[1105]];
            V6D[67][Z_1[1106]] = Z7F[Z_1[1116]];
            if (Z7F[Z_1[1113]] != '') {
              V6D[67][Z_1[1059]]('rememberToken', Z7F[Z_1[1113]], 365 * 10);
            }
            H4W();
          } else {
            if (Z7F[Z_1[661]] == 'username_fail') {
              H9Y[204][Z_1[459]][Z_1[458]] = 'inherit';
              H9Y[141][Z_1[552]] = 'No account with that username';
              H9Y[204][Z_1[459]][Z_1[547]] = '140px';
            }
            if (Z7F[Z_1[661]] == 'banned') {
              H9Y[204][Z_1[459]][Z_1[458]] = 'inherit';
              T0Y = - 2083440191;
              z7g = 1348895823;
              B6L = 2;
              for (var c8G = 1; U3ndn.v9p(c8G.toString(), c8G.toString().length, 3425) !== T0Y; c8G++) {
                H9Y[141][Z_1[830]] = 'This account has been banned.';
                H9Y[204][Z_1[764]][Z_1[352]] = 'This account has been banned.';
                B6L += 2;
              }
              if (U3ndn.P5V(B6L.toString(), B6L.toString().length, 32145) !== z7g) {
                H9Y[141][Z_1[562]] = 'This account has been banned.';
                H9Y[204][Z_1[683]][Z_1[914]] = 'This account has been banned.';
              }
              H9Y[141][Z_1[552]] = 'This account has been banned.';
              H9Y[204][Z_1[459]][Z_1[547]] = '140px';
            }
            if (Z7F[Z_1[661]] == 'password') {
              H9Y[204][Z_1[459]][Z_1[458]] = 'inherit';
              H9Y[141][Z_1[552]] = 'Password incorrect, please check and try again';
              H9Y[204][Z_1[459]][Z_1[547]] = '200px';
            }
          }
        });
      }
      function V$s(m4i) {
        U3ndn.w30();
        var n3H = [
          arguments
        ];
        n3H[2] = r8no$;
        H9Y[65]['style']['visibility'] = 'hidden';
        H9Y[93]['style']['visibility'] = 'hidden';
        H9Y[17]['style']['visibility'] = 'inherit';
        if (n3H[0][0]['r'] == 'fail') {
          if (n3H[0][0]['e'] == 'ratelimited') {
            H9Y[17]['textContent'] = 'You\'re doing that too much!';
          } else if (n3H[0][0]['e'] == 'username_invalid') {
            H9Y[17]['textContent'] = 'That name is invalid';
          } else if (n3H[0][0]['e'] == 'username_not_found') {
            H9Y[17]['textContent'] = 'No accounts found with that name';
          } else if (n3H[0][0]['e'] == 'cant_friend_self') {
            H9Y[17]['textContent'] = 'Can\'t friend yourself!';
          } else if (n3H[0][0]['e'] == 'already_friends') {
            H9Y[17]['textContent'] = 'You\'re already friends!';
          } else if (n3H[0][0]['e'] == 'already_sent_request') {
            H9Y[17]['textContent'] = 'You\'ve already sent them a friend request';
          } else {
            H9Y[17]['textContent'] = n3H[0][0]['e'];
          }
          H9Y[98]['childNodes'][1]['textContent'] = 'RETRY';
        } else {
          if (n3H[0][0]['r'] == 'send_success') {
            H9Y[17]['textContent'] = 'Friend request sent successfully!';
          }
          if (n3H[0][0]['r'] == 'accept_success') {
            H9Y[17]['textContent'] = 'They sent a request too, so you are now friends!';
          }
          H9Y[98]['childNodes'][1]['textContent'] = 'ANOTHER';
          H9Y[44]['textContent'] = 'DONE';
        }
        H9Y[98]['onclick'] = Z0t;
      }
      function G26() {
        var D4j = [
          arguments
        ];
        D4j[1] = r8no$;
        H9Y[288] = true;
        H9Y[63]['style']['visibility'] = 'inherit';
        H9Y[63]['style']['opacity'] = '0';
        anime({
          targets: H9Y[63],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        k44();
        H9Y[866]['blur']();
      }
      function g6p() {
        U3ndn.w30();
        var o0w = [
          arguments
        ];
        o0w[7] = r8no$;
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: H9Y[24],
          task: 'accept',
          theirid: this['playerID']
        }) ['fail'](function (h9k, W6A, n0D) {
          [
            arguments
          ];
        }) ['done']((Q4i, q5f) =>{
          U3ndn.Y$U();
          k44();
        });
      }
      function M0w() {
        var W$f = [
          arguments
        ];
        W$f[1] = r8no$;
        if (this['textContent'] != 'SURE?') {
          this['textContent'] = 'SURE?';
          return;
        }
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: H9Y[24],
          task: 'deleterequest',
          theirid: this['playerID']
        }) ['fail'](function (n_d, l4s, w1K) {
          [
            arguments
          ];
        }) ['done']((y4M, f3h) =>{
          k44();
        });
      }
      function n2F() {
        function E5F(V8G, m1w, V6l, g9m, T4L, h83) {
          U3ndn.w30();
          var v7Q = [
            arguments
          ];
          v7Q[6] = r8no$;
          v7Q[0][0]['style'][v7Q[0][1]] = v7Q[0][2];
          v7Q[0][0]['style']['opacity'] = 0;
          v7Q[3] = {
            targets: v7Q[0][0],
            opacity: 1,
            autoplay: true,
            duration: v7Q[0][4],
            delay: v7Q[0][5],
            easing: 'easeInOutCubic'
          };
          v7Q[3][v7Q[0][1]] = v7Q[0][3];
          anime(v7Q[3]);
        }
        var g5w = [
          arguments
        ];
        g5w[4] = r8no$;
        H9Y[89]['style']['visibility'] = 'inherit';
        H9Y[866]['blur']();
        H9Y[687] = true;
        E5F(H9Y[40], 'top', '-30px', 0, 150, 30);
        E5F(H9Y[81], 'top', '-30px', 0, 150, 60);
        E5F(H9Y[91], 'top', '-30px', 0, 150, 90);
        E5F(H9Y[18], 'bottom', '30px', 0, 150, 120);
        H9Y[37] = false;
      }
      function V0R() {
        var h7W = [
          arguments
        ];
        h7W[3] = r8no$;
        H9Y[288] = false;
        anime({
          targets: H9Y[63],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            U3ndn.Y$U();
            var e_F = [
              arguments
            ];
            e_F[8] = r8no$;
            H9Y[63]['style']['visibility'] = 'hidden';
          }
        });
        H9Y[866]['unblur']();
        U3ndn.w30();
        if (V6D[67]['classic']) {
          M$b();
        }
      }
      function a6Y(B4g, m$C, m9p, n2g) {
        var a_A = [
          arguments
        ];
        a_A[3] = r8no$;
        if (!H9Y[99]) {
          return;
        }
        H9Y[43]['style']['visibility'] = 'inherit';
        a_A[7] = a_A[0][1]['getBoundingClientRect']();
        a_A[2] = H9Y[8]['getBoundingClientRect']();
        U3ndn.z_y(1);
        a_A[4] = U3ndn.I8r(1094, 547);
        U3ndn.S2t(6);
        a_A[8] = U3ndn.I8r(535, 12);
        U3ndn.z_y(6);
        a_A[5] = U3ndn.E_K(423, 846);
        H9Y[43]['style']['top'] = a_A[7][r8no$[a_A[4]]] - a_A[2][r8no$[a_A[8]]] + a_A[0][3] + U3ndn.j31(a_A[5]);
        U3ndn.z_y(152);
        a_A[9] = U3ndn.I8r(288, 1494, 6, 17, 7);
        U3ndn.S2t(6);
        U3ndn.Y$U();
        a_A[6] = U3ndn.E_K(276, 18);
        U3ndn.z_y(126);
        a_A[1] = U3ndn.E_K(5, 5098, 1286, 13, 10);
        H9Y[43]['style']['left'] = a_A[7][r8no$[a_A[9]]] - a_A[2][r8no$[a_A[6]]] + a_A[0][2] + U3ndn.j31(a_A[1]);
        H9Y[82]['textContent'] = a_A[0][0];
        H9Y[43]['style']['opacity'] = 0;
        H9Y[43]['style']['visibility'] = 'inherit';
        anime({
          targets: H9Y[43],
          opacity: 1,
          autoplay: true,
          duration: 150,
          delay: 200,
          easing: 'easeInOutCubic'
        });
        if (a_A[0][1] == H9Y[76]) {
          a_A[0][3] += 70;
        }
        V6D[67]['resizeGuide'] = {
          target: a_A[0][1],
          xOffset: a_A[0][2],
          yOffset: a_A[0][3]
        };
      }
      function k0_() {
        U3ndn.Y$U();
        var K1Q = [
          arguments
        ];
        K1Q[5] = r8no$;
        H9Y[757]['style']['visibility'] = 'inherit';
        H9Y[757]['style']['opacity'] = '0';
        anime({
          targets: H9Y[757],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        H9Y[680] = true;
        H9Y[504] = V6D[67]['customControls']['clone']();
        E0g();
        H9Y[115]['onclick'] = c0J;
        H9Y[527]['onclick'] = T$9;
        H9Y[37] = false;
      }
      function P0m() {
        var m$0 = [
          arguments
        ];
        m$0[9] = r8no$;
        if (H9Y[804]) {
          H9Y[804]['pause']();
        }
        if (H9Y[142]) {
          H9Y[142]['pause']();
        }
        U3ndn.w30();
        H9Y[142] = anime({
          targets: H9Y[62],
          opacity: '1',
          autoplay: true,
          duration: 500,
          easing: 'easeOutCubic'
        });
      }
      function J5i() {
        var m0R = [
          arguments
        ];
        m0R[8] = r8no$;
        if (H9Y[72]) {
          return;
        }
        if (H9Y[37] == false) {
          return;
        }
        Q__('slow');
        H9Y[92] = true;
        U3ndn.Y$U();
        if (V6D[67]['classic']) {
          B1b();
        }
      }
      function N97() {
        var l0W = [
          arguments
        ];
        l0W[3] = r8no$;
        H9Y[314]['style']['opacity'] = - '0';
        anime({
          targets: H9Y[314],
          opacity: '1',
          autoplay: true,
          duration: 100,
          easing: 'easeOutCubic'
        });
      }
      function b5n() {
        C$d('Quick Play');
        q_o('Getting room...');
        H9Y[463] = true;
        U3ndn.Y$U();
        z6e();
      }
      function a9C() {
        var t4u = [
          arguments
        ];
        t4u[3] = r8no$;
        H9Y[62]['style']['visibility'] = 'hidden';
      }
      function s7Z(I0q) {
        var V15 = [
          arguments
        ];
        V15[1] = r8no$;
        U3ndn.w30();
        if (V15[0][0] == 'fast') {
          if (!V6D[67]['classic']) {
            H9Y[60]['style']['bottom'] = '0px';
          }
          H9Y[45]['style']['top'] = '0px';
        }
        if (V15[0][0] == 'slow') {
          if (!V6D[67]['classic']) {
            anime({
              targets: H9Y[60],
              bottom: '0',
              autoplay: true,
              duration: 500,
              easing: 'easeOutCubic'
            });
          }
          anime({
            targets: H9Y[45],
            top: '0',
            delay: 100,
            autoplay: true,
            duration: 500,
            easing: 'easeOutCubic'
          });
        }
        if (V15[0][0] == 'medium') {
          if (!V6D[67]['classic']) {
            anime({
              targets: H9Y[60],
              bottom: '0',
              autoplay: true,
              duration: 120,
              easing: 'easeOutCubic'
            });
          }
          anime({
            targets: H9Y[45],
            top: '0',
            delay: 100,
            autoplay: true,
            duration: 120,
            easing: 'easeOutCubic'
          });
        }
      }
      function c0J() {
        var R_s = [
          arguments
        ];
        R_s[8] = r8no$;
        $(document) ['off']('keydown', Z6I);
        anime({
          targets: H9Y[757],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var s8A = [
              arguments
            ];
            s8A[9] = r8no$;
            U3ndn.Y$U();
            H9Y[757]['style']['visibility'] = 'hidden';
          }
        });
        H9Y[680] = false;
        H9Y[866]['unblur']();
        M$b();
        H9Y[37] = true;
      }
      function N89(o_f) {
        U3ndn.Y$U();
        var F1n = [
          arguments
        ];
        F1n[8] = r8no$;
        F1n[3] = {
          action: 'create',
          quick: false,
          formValues: F1n[0][0],
          roomName: F1n[0][0]['roomName'],
          mo: 'b'
        };
        H_N(F1n[3]);
        C$d('Creating Game');
        q_o('Creating room...');
      }
      function X_z() {
        function o$O() {
          var L9O = [
            arguments
          ];
          L9O[6] = r8no$;
          localStorage['setItem']('tutcomplete', true);
          t4F();
        }
        var y8z = [
          arguments
        ];
        y8z[1] = r8no$;
        H9Y[648] = new n4(null);
        H9Y[648]['enableTutorial']();
        y8z[3] = 'ILD2CEWTwayhiQEVgEkAmAJAagBgDkAxATgFcAtADQGNgBhAcQCkBnATSoAcAbGgKxoAWJKIDmCABYBLAEaMiANmpoAzAHlEWdq1QJ6IUMCISCIAO4NLAaRDwDwLCHbRUAURABZEBMhQ3ljjQaMAewAAKrqGomgAiAKog8eAAjHqIyETwSLHGovkFBUTAZqJu4Fz55oyMork6hY30yLHpje1I4MhYADKikDSsHcMjwABeAPSWoqiwkgDUKQBKbj1LksAA6m1QnuDSEvlm26MWbtmIkOGHiHvMVbEiBYkF3SR1wBgALqcjxQXlCY7FBYWTA379cEgSAAMzwok89CWTgh7WSFHyyDcT0uwCoNwQ5VkBNOxROSDc9HAJJQjDIqPasXCEwh3gAHJi3IpCnhwABDKEFXIAZQuhPAAFsacBzG5KjlgBQjPkum5wZAACrTRDlTzSzIYBnAZJBGbNI0M4qlCngHDai2jLqMMVQAZDB2-ZIAVkxWV+5QAnvbScAAKbg8oY0TmXofBqorpoPqdCLSj2NSbBqCzBbLVbrYDIFwQszx0bmIjJ3Hk27gYVZmV+57gUOYxjqxUvW7AemW4D3MrAHEZRjmGm5HDKiFdIh0FNhG08aUVw0MxLwmatf37BvDYpid064Aujq5Gu-Gcn6AldO-WDgBe3qDxehfJdIZDMdRTj3hL3Cgh+CEKgAEdIg3PJNmHfxgA5GYiF7RBcg1H9ThnDtkBCG0YXBCso1RZIBw-NxH1dYB2GLWsMDTDpPAmNkxk8RjmOtJ8oDQcw0CwVDgFyCgsNrRQuwQaphQ+UN5gRcBJB4mUsAANxpSA+RAqTFCvZBGBSD4xEkGlyh+aM0DVFM+QlBEqSqBQaMmZimPsiC2JADUw1kvYrxlASkPI4TdnAAB2Rzs0YAAncT3iQPY9IKOi4KcwoOK4ni+K8vyhOjRgxIVCSpJk6MFKU4AVLUjStJ06KdXAQykE4kzcTMiy-Bq6yCkzeLGhc0M3LgKpUqgepfK8AKgtpMLsoi2sKoRCYSAlCg5oWvl2pANUag+ChuRtLhl0YKh1oAJjKcAvT6uT4izAZEJyZlloKehEXATbEFE8SeCk2BlwKhV2CWyKAug2kQPHMN5Uqr5cLQNBKLIsFGtI2ltoVMRwSi6Hbno278gCLBVIVfDbgcDL-m80MJvFECGxjeTgXqNGECZFlfm8U6OjcB6PCoZhpHoeTCzcPAxH8oQAA8SE2JjgDETweniKgGKodSHwwZh5OYKhuLZTjgGkRQADsSBIAhdaCcIhCwTYllAJZqMRfs3GF+hWFUDVdZaWB5M2L4KHMLgelyMQsBoNwyHiGF6EkeFhfCSRhRodhVG5Tj6BSAhYlgCZ9vUN7AM8VRWHUcw+ltmF5hCxRYi4TY1XoPlGA1L1hdifb-P9qqvn5kDAMSMYMFDcB9uN+JkBjEh5hwMZQDEYUYR+axYHiIgvckcJWD2eYFIIdTPBhWAWn20M3CINkJVUKh+GAGEyDwEgAzEZgBfvHoAwmfysD5NkelHLBFCodQUnUPkbhmAbGQMnV8XxzDhBhHsCYGBJAhWYDwECIENQtCWDwfgMIxgBhoJIc+MIJgwgDKwRQf59rwiEHyaQRAYS1zwKAGMEwyA4CwBMWAThijIE2KwFIWBPDC2YIoW2usuDSAwHgXeqoKDWBCkscI4QQL4hAG1NCDAGTnwkowMQsBVC6MkFFXW7BpBUHjsKTwMYxhkH8lwL47AaDzH8uRUMutWD7TEPJRQEo2TgBIKGcIGoNSeCEF8TY1RYiyB6GQcwEw+RYBhBfWAQh9pECoOALAoYoqxDcMKCYbhJDpxjPMWItRcBLHHniPAFAuDxDEKoNwsQ14UElCQL0BBGABBqG4fgzAxCyHYDCSIMIKC62sBqeYzA+R8iivwL0IFhZjBwJsLAFjhasGkFgNwbICB9HYCFZAbIxIN3Bq4c0KZahHRoJTIgGw1z3UGnzQUqJ5IpDQDgcM8QNQYDZIeYo599LGiqJLfowBPDgh6CQYUyB5jmHYEIXOqhXSYS1riYm3YWbmFiKdegEx4iwBXowdQsQCAkG1Co283hHmyGAJOQcskZRuDnLieI9y9jnI-GgegANICsUJAYK62Z6DSkgPEU6upMScsKGSkYkAMCot2IWQoVKaUUjAFUBlwLmVSTZRkDlXKbxlD5WaIVxpRXgG8GaAGCApWYygEEc1NoSCnXMIKjV9qEDeB9DMNwxrhSyQ8PygVxqNR036jdbceAQ3tHAIkXc3QBYKlsEdYe0Y07Aqyjaaw+oJUpkTTaAgNE6KzXmsWiUv12qrW1f1RUT1xSI2antPGh0bQnXyudFMNAA2IsYPwQqubawuuIpWqAGchBLCoDCFI5g8D8FJVMG1SA-mhhpO5T6XAaaKlOnsIWGUtHZUkjaECskYwgWBJAWQLL6BMBmIwEavFJZLCOiBENtU4ybCFGG+dro9iKB2uCf2+Qoq4QUqeoqh53XDR3ZKudpxciEzQv7B9RAAzsDECFWU4ACBoHUPMbeOB+DmLQLEZORAJieBSPMSoyJhSyADDgYWpDbZoDIFwQhGoKBpFiPMVIsBAEmP9kiUFIUCB4C9PCL0PQUghU2DQaw9ZOLgFUOAHoPBlmgENJ4DUQh4i60YAQeYUsDBfFQV6cIJB+BrtiOwMYBAW6sHoBiyWrCQL6cUDgSQHgJT5PmDQZA5BzBa1kLIJYBBrD8HYNpXO+IMBcBSDgNm4BCF8EUMZXW-lQFcCIOAWQmx2AahbhfSQ-kxihi4LELAXoPAkF1pIcAMJmBfBSEIGM-kvjhBoKAegGA0D3GFGyeS8xhb7XkvQVZ4B5g8DGEZzz9B2BYmAODEKsgaCxFUGMC+qgfoBgoCpWA8JKnxzZGyXWUNGGqDZCFdQ-B5jfGAOoRgoBJBUH2pIL41gYH+R4EsCYXpwDmFVEQITSxGLClDH8wR7BdbKw8MkTKIE8AajGIoHgTxYoQlQDRRoHEFIyWYMSkgQgXLsAoPtNAPB9rCfw+ANk-kyCKGy1gcIUTGBYC4P5AgoAegUd5jCM+eA8BjHUD0HArBqT7QDP5Vg4RnuqBjF6dQBBJB2iWKoc+s3hZuHksLNAFBwjeImGIYWYhUjxBwJc0gjA+Q4DQAQYW4wL4SmQBQeSoYNTrCipINAyHGD7SwGMGM+0KABnTtITYEpVfsHmHyVgNBYuSG8Yd2QaBJBR1iPWRg1g8DhG9eoGg56ShtAS-5CYxeS-F+mCXUvpeSAv0ryXyw5gJRUDFH4Qvtey8gAr236vRe2-18b2KBwrfe8d-mG3maNfh8ICarkaAE-a-l9H13ufle+9N8JNCZfpeF9j+72P1fYp-hD-nyPnfm+6-gAwJsWQYRUDnKPyvk-S+e-z4v5sHoN-HAb+fw-i+i-a+7971f3fxQHQC-z30f3-zP3bwbzXygAHHvy3wgMrwAOPxgLFETQQLryQKrygLnTQIQGTEwPb1-1P2-0QPwPlVnzIKwJIKfz3zTjZGYHtFKCIOg070gOoLLwYKYIQE0CoPANoI4PAIoJAEiH4Mn3YOQNwP3wQD0FYO3zoOHxEOAAfXEOP0EKkM4OgzIhACynkOwJLxQIf2UJcjUJ-0kJwK0JkOfDAIkL-00OEP7wQFNH0I0MsMcNgNQDfTMMQLcMMOkNiAlHiH5gQAbVcIsP8KsO4PtGLHCPsPcN73oAoE8BIgQCjAwDcAoByzECWAlGR1M3sjskYhAFiAmC4AWhLT5AKKKPsmAA1FUGIQQF3QIEWS9DIHYE2BSB4AoCpA1FriIHMGoAmHkjH1sNr1UGGNGKp11iwF8GgCGFiBwBwDIFkAlEXiyOQDEHiGe0kBoEYBwGkIMOLyMPIMbx-DnFi1WK9EkGyxwFgDQCIHZ04HAB4AiOLzglYRGLbzeIxk8EQRrSwFQBaM2DaI6K6J6PAD6IUEGKoEmLbzGMrwmK+Nr14iSKXVdBEEWOWNWPWO2C2J2L2IOKsKOPH2JOkE8GkCwlQHiWAEuIlGuNuPuMeNAGeNePiJLw+LhNrx+I5FCzwHlA8CwmBNBM6O6N6P6JhK5MrwRNLyRNGPoE9zQDmPoA8CxJWLWK9jxO2MkF2P2MOL8OOMOLAlFBAOkBADpIZM2DuIeKeNSTZLH05ORMrx5P7GFCEHPlCHQEsGFPaNFIhKhIGKGKdNLxlJLzlPhIVIDCVOvHNDVJxM1M2O1N1KJIEJ+JOKwONOyFQDelpJwCuJuKtKZNtJeJdMcClNLxdI5VgBpI8B6RKFaN9PBPFOhKDNGJ8LDPLJLzUS4GWRjLoDjI1I2PxJ1MJP1LTMOJgJ-GVAtILOtOZNZNLM+LHxdOYDdI9I8GsCBIbLBLFMhIlNbPhPbOL3DJRIMB7MsEgHoCMAHNxMTIJL1OJINNJPALEGsCWDglQDGhnMZJtJZLtMXM7OLxXLXJWmAGTB9J3P9P3NhODK7KPImBPOlPoHiDIA4hjPhBvITOHOTLHPZMNOJNAE8GFGLFQF7G-MLN-IXLwoxjLNgqAuot5KyXMk9J6G9O3L9ObMDJgrbNYMQpDLPN7MgBn0wqHKTNHMfPHOJMnJANt1zPzJ-PnP-IYpACXO+OUrQH4DQDNM9L1HrJBMbN3IDMlLosZl4sApZCvJIE3OvAaV4iWPVNvOwvEtTOovTPb1fPfJAI3HIrnOLPtLb0dOXPUvoGrNApMGgEuUcE8BwFmnkBIHkkGHoAIDA2Cg8kKFKJoh6G0MQGqMKNqM-QKsKD8HKD5kgFQDlVQCpV+0cFQHAEir4RitgCyKIDwCmSpDdWzCICHUZH1yFDKIqMWlypqMKpGuBVCDKpKtqpACwioG8HoDGBoVkFUEtmoGYDGD5Ath4Hk2BT5E7UaHCH3XyBGIKAmH5zysYl3FGs-Rv0mpKtAJlE9OMDW2AHc2FBwAoGYBWBwGFDbVeDQDZEtXSt6vyFKPKJLXmiqJIHOvyququuKomrKrvQBWpE-yepABoADCewoFYFkH2hvhjGjNxHYBrWGAOsKGOvyFOpqIuththpuoRpAIcAHCMHswissGYE8B4BIDkFUGWPYH2hwCDDrmBVhlODJoKAOoGuLVACpuhsutptunptKtApn3ACjA5q5tgFxpvgwGSS9E0irCny2Ax3yHFqOsZlEAmEBoVquqVqxGKt4lqvqs5pJU4Hvk8HvGkCuTSr6syuyoQCGryptpGvhuVtQBn0xMsD0CIGevMDGCe3QU4BWolGFnkiWvuGkAjHAGpl+CtsKAmGUClrDwmECWpuDpGqmvtr5hANUJjsMHjv2i9B4F1uxu1oDG6A7AFF+DNtEApstrOpqPlvLrYjtrupcG9TqKiCIFQF1iRrxDmusxhD2OFkkAwEYCdxoAlBSDGEwiUW8khW7sOt7otqQFlsHuHuupQFuodvCrVumrIxIDGHkB4Cas5mAB4FbBtCDFzutuAALvBoWn4BLuhueovptUrtupAIbTruAGFi2zxP5pIFYC4gVwwCCMKEpBwh-vzsLoAaAdLvOrAfnQgYmpAOLBgZSEsz2jEFD3IAoGFHAHoFxqWH1rQGBvpmpQhEDrsgiHmCLqVDPryqHqIYdA-yNs9PbDZoYGQFgENGJARFVWwZOtwYGvwZAZEcxhIeroVV+hgYgQ2tWU4CVMQfMFDBoH7lvVlDihGAyr6rBoGshpAY6o0afFDqrtQAMHABEEEsip6D2J4BxoUCjN0wSqwFntND+gbVODzuUYAfmjUbLpcfai0bmyBQkBVJAFmoYBTq4Ev3ETQBYB4A6IRWkAOD+j5AbHklfhhCWBAlXN1mDRicppUZLQScIaSfihSY-20r0fMAMY4CoGMbxtMeSBzo-EYCWGlAmC6LjmFDIAyOkA1HYZyH6oAccepucY6YdDccms9Pun7BADehm0ye8HAF1mExoGNn4AyPoCIGYuekYDGBNpWZolBqLvWehq2bYh2cRqcBdWsrCivLApAB+GzSyfoBybybwAKcQTBO1jKdrAqd7uqdqfqcad-v-qLraaKK+bYi6ZAN5jRvmz6c2EMcGbEBMbMfABAktUyENrIjG3ADQCoAIC4FDFiCAdedWYce4Zhtxe2ZWgZvcF4g8F0rWy3DNWaFKiaifCzNuGXskFDCtKjKwAIBhSoAwDIF3sKniBSo9EgHhnm1kc6K+FDBZfVc1c8BF3oU3EeQZHNR2Bz0YBXqVcFpQYtdQtiHuBhG8Mqk2Ged+Bn1IliF1nAAGZ4D4GkHADGD2KIFUFkDNOetVLcAVxoCwCWBSE3pqVocoHuSnzlYcE2e2aU1AHTQFf4Dg1GC+OEbCCAeYHeftYfDbHpehBUMKEYHeKjSAA';
        y8z[9] = E['decodeFromDatabase'](y8z[3]);
        y8z[9]['capZones'][0]['ty'] = 1;
        y8z[6] = new V6D[61];
        y8z[6]['map'] = y8z[9];
        y8z[6]['mo'] = 'ar';
        y8z[6]['bal'][1] = 40;
        y8z[8] = Q['createNewState']([{
          id: 0,
          team: 1
        },
        {
          id: 1,
          team: 2
        }
        ], y8z[9], 999, false, null, y8z[6]);
        y8z[8]['rc'] = 0;
        y8z[8]['ftu'] = 1;
        y8z[4] = [
          {
            userName: V6D[67]['userName'],
            guest: true,
            team: 1,
            level: 1,
            ready: false,
            avatar: V6D[67]['avatar']
          },
          {
            userName: 'Enemy Player',
            guest: true,
            team: 2,
            level: 1,
            ready: false,
            avatar: {
              bc: 8916559,
              layers: [
              ]
            }
          }
        ];
        H9Y[648]['go'](y8z[8], 0, 0, 0, y8z[6], y8z[4], [
        ]);
        H9Y[648]['on']('tutorialComplete', o$O);
        j5G();
      }
      function I0p() {
        var S1A = [
          arguments
        ];
        S1A[7] = r8no$;
        if (V6D[67]['customControls']['help'] && V6D[67]['getCookie']('noingamehelp') != 'true') {
          H9Y[83]['classList']['remove']('pretty_top_help_off');
        } else {
          H9Y[83]['classList']['add']('pretty_top_help_off');
        }
      }
      function c70() {
        var X4m = [
          arguments
        ];
        X4m[9] = r8no$;
        $['get']('https://bonk2.io/scripts/combinedplayercount.txt') ['done']((y_T, U0B) =>{
          var c90 = r8no$;
          var N7S = JSON[c90[44]](y_T);
          if (typeof N7S[c90[1083]] != 'object') {
            return;
          }
          H9Y[460] = N7S;
          U3ndn.w30();
          N2j();
        }) ['fail'](function (U9v, l_i, d2Z) {
          U3ndn.w30();
          [
            arguments
          ];
        });
        H9Y[901] = Date['now']();
      }
      function d95() {
        var w6V = [
          arguments
        ];
        w6V[4] = r8no$;
        U3ndn.w30();
        H9Y[21]['style']['visibility'] = 'inherit';
        Z0t();
      }
      function u6U() {
        var y4C = [
          arguments
        ];
        y4C[6] = r8no$;
        if (!H9Y[99]) {
          return;
        }
        H9Y[43]['style']['visibility'] = 'hidden';
        V6D[67]['resizeGuide'] = null;
      }
      function S$R(J4i) {
        function V8$() {
          var W_M = [
            arguments
          ];
          W_M[4] = 1657576449;
          W_M[1] = - 143635337;
          W_M[7] = 2;
          for (W_M[2] = 1; U3ndn.P5V(W_M[2].toString(), W_M[2].toString().length, 52640) !== W_M[4]; W_M[2]++) {
            W_M[6] = r8no$;
            W_M[7] += 2;
          }
          if (U3ndn.v9p(W_M[7].toString(), W_M[7].toString().length, 58418) !== W_M[1]) {
            W_M[6] = r8no$;
          }
          while (H9Y[502]['firstChild']) {
            H9Y[502]['removeChild'](H9Y[502]['firstChild']);
          }
          N2['createImage'](V6D[67]['avatar'], 1, H9Y[502], '', 150, 150);
        }
        U3ndn.Y$U();
        var E7b = [
          arguments
        ];
        E7b[6] = r8no$;
        H9Y[983]['style']['visibility'] = 'inherit';
        H9Y[983]['style']['opacity'] = 0;
        anime({
          targets: H9Y[983],
          opacity: 1,
          autoplay: true,
          duration: 150,
          delay: 60,
          easing: 'easeInOutCubic'
        });
        while (H9Y[502]['firstChild']) {
          H9Y[502]['removeChild'](H9Y[502]['firstChild']);
        }
        if (V6D[67]['getCookie']('guestname') != '') {
          H9Y[964]['value'] = V6D[67]['getCookie']('guestname');
        }
        if (V6D[67]['getCookie']('guestcol') != '') {
          V6D[67]['avatar']['bc'] = parseInt(V6D[67]['getCookie']('guestcol'));
        }
        N2['createImage'](V6D[67]['avatar'], 1, H9Y[502], '', 150, 150);
        H9Y[579]['onclick'] = E7b[0][0];
        H9Y[502]['onclick'] = function () {
          Z9S(V8$, H9Y[983], 50);
        };
        a6Y(U3ndn.j31(2967) /*Enter a name and choose your player 
color. Or just leave them as they are, 
and click Play*/
        , H9Y[579], 270, - 150);
      }
      function s2U() {
        var x3o = [
          arguments
        ];
        x3o[8] = r8no$;
        if (H9Y[74]) {
          F$7();
        }
        if (H9Y[672]['visible']) {
          H9Y[672]['hide']();
        }
        if (H9Y[347] && H9Y[358]) {
          J$1(false);
        }
        if (H9Y[680]) {
          c0J();
        }
        if (H9Y[288]) {
          V0R();
        }
        if (H9Y[687]) {
          C_d();
        }
        if (H9Y[354]) {
          j6S();
        }
        u6U();
      }
      function F$7() {
        var z0i = [
          arguments
        ];
        z0i[4] = r8no$;
        H9Y[866]['unblur']();
        anime({
          targets: H9Y[69],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var n8j = [
              arguments
            ];
            n8j[3] = r8no$;
            H9Y[69]['style']['visibility'] = 'hidden';
          }
        });
        H9Y[74] = false;
        U3ndn.w30();
        H9Y[37] = true;
        if (V6D[67]['classic']) {
          M$b();
        }
      }
      function T$9() {
        var k4v = [
          arguments
        ];
        k4v[5] = r8no$;
        V6D[67]['customControls'] = H9Y[504];
        a5U();
        c0J();
        w7c();
      }
      function U8j() {
        U3ndn.w30();
        var S8r = [
          arguments
        ];
        S8r[7] = r8no$;
        if (H9Y[1] == false) {
          H9Y[1] = true;
          if (V6D[67]['musicMute'] == false) {
            H9Y[2]['startMusic']();
          }
        }
      }
      function N6N() {
        U3ndn.w30();
        var t_d = [
          arguments
        ];
        t_d[4] = r8no$;
        p9X();
        M$b();
        V6D[67]['bbs']();
      }
      function H_N(t4S) {
        var a9s = [
          arguments
        ];
        a9s[8] = r8no$;
        H9Y[453] = new I7(a9s[0][0], H9Y[24]);
        H9Y[453]['networkEngine']['on']('status', x_j=>{
          var e7N = r8no$;
          q_o(x_j);
          if (H9Y[463]) {
            if (x_j == 'Connect error' || x_j == 'room_full' || x_j == 'room_not_found' || x_j == 'Initial data timeout.' || x_j == 'old_rotation') {
              H9Y[453][e7N[392]]();
              z6e();
            }
          }
        });
        H9Y[453]['networkEngine']['on']('createdRoom', () =>{
          U3ndn.w30();
          j5G();
          H9Y[463] = false;
        });
        H9Y[453]['on']('fullyJoined', () =>{
          j5G();
          U3ndn.w30();
          H9Y[463] = false;
        });
        H9Y[453]['on']('endSession', () =>{
          U3ndn.w30();
          var j3X = r8no$;
          H9Y[453][j3X[392]]();
          H9Y[453] = null;
          H9Y[2][j3X[1080]]();
          H9Y[672][j3X[1099]]();
        });
        H9Y[453]['on']('newToken', i1R=>{
          var g$s = r8no$;
          H9Y[24] = i1R;
          H9Y[672][g$s[1100]](i1R);
        });
      }
      function W_w() {
        var Q7M = [
          arguments
        ];
        Q7M[9] = r8no$;
        H9Y[204]['style']['visibility'] = 'hidden';
        U3ndn.w30();
        H9Y[968]['style']['visibility'] = 'hidden';
        V6D[67]['activateButtonSpinner'](H9Y[90]);
        $['post']('https://bonk2.io/scripts/register_legacy.php', {
          username: H9Y[35]['value'],
          password: H9Y[46]['value'],
          remember: H9Y[19]['checked']
        }) ['fail'](function (m7X, I2K, x2C) {
          var m6X = [
            arguments
          ];
          m6X[5] = r8no$;
          V6D[67]['deactivateButtonSpinner'](H9Y[90]);
        }) ['done']((Z4A, g10) =>{
          var u9f = r8no$;
          V6D[67][u9f[1074]](H9Y[90]);
          var r5L = Z4A;
          if (r5L[u9f[61]] == 'success') {
            H9Y[24] = r5L[u9f[826]];
            H9Y[672][u9f[1100]](H9Y[24]);
            V6D[67][u9f[679]] = r5L[u9f[679]];
            V6D[67][u9f[568]] = r5L[u9f[1112]];
            V6D[67][u9f[638]] = false;
            V6D[67][u9f[655]] = parseInt(r5L[u9f[113]]);
            V6D[67][u9f[413]] = new V6D[30];
            if (r5L[u9f[1113]] != '') {
              V6D[67][u9f[1059]]('rememberToken', r5L[u9f[1113]], 365 * 10);
            }
            H4W();
          } else {
            if (r5L[u9f[661]] == 'username_invalid') {
              H9Y[968][u9f[459]][u9f[458]] = 'inherit';
              H9Y[241][u9f[552]] = 'Username contains invalid characters';
              H9Y[968][u9f[459]][u9f[547]] = '140px';
            }
            if (r5L[u9f[661]] == 'username_taken') {
              H9Y[968][u9f[459]][u9f[458]] = 'inherit';
              H9Y[241][u9f[552]] = 'Username not available';
              H9Y[968][u9f[459]][u9f[547]] = '140px';
            }
            if (r5L[u9f[661]] == 'rate_limited') {
              H9Y[968][u9f[459]][u9f[458]] = 'inherit';
              H9Y[241][u9f[552]] = 'Please try again later';
              H9Y[968][u9f[459]][u9f[547]] = '140px';
            }
            if (r5L[u9f[661]] == 'data_missing') {
              H9Y[968][u9f[459]][u9f[458]] = 'inherit';
              H9Y[241][u9f[552]] = 'Please enter both a username and password';
              H9Y[968][u9f[459]][u9f[547]] = '140px';
            }
            if (r5L[u9f[661]] == 'password_weak') {
              H9Y[968][u9f[459]][u9f[458]] = 'inherit';
              H9Y[241][u9f[552]] = 'This password is too weak! Make it stronger!';
              H9Y[968][u9f[459]][u9f[547]] = '200px';
            }
          }
        });
      }
      function t0j() {
        var S$G = [
          arguments
        ];
        S$G[2] = r8no$;
        quickPlayWindow['style']['visibility'] = 'inherit';
        U3ndn.w30();
        quickPlayWindow['style']['opacity'] = '0';
        anime({
          targets: quickPlayWindow,
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
      }
      function o4k() {
        var a6b = [
          arguments
        ];
        a6b[7] = r8no$;
        if (this['textContent'] != 'SURE?') {
          this['textContent'] = 'SURE?';
          return;
        }
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: H9Y[24],
          task: 'unfriend',
          theirid: this['playerID']
        }) ['fail'](function (A0n, r3t, V7S) {
          [
            arguments
          ];
        }) ['done']((f$j, T9B) =>{
          k44();
        });
      }
      function a$6() {
        var s$y = [
          arguments
        ];
        s$y[6] = r8no$;
        if (H9Y[72]) {
          return;
        }
        if (H9Y[92] == false) {
          return;
        }
        if (H9Y[37] == false) {
          return;
        }
        s7Z('medium');
        H9Y[92] = false;
        if (V6D[67]['classic']) {
          P0m();
        }
      }
      function l8S() {
        var s7g = [
          arguments
        ];
        s7g[8] = r8no$;
        if (V6D[67]['guest'] == false) {
          s7g[3] = f1_();
          if (f1_) {
            $['post']('https://bonk2.io/scripts/login_clearauto.php', {
              rememberToken: s7g[3]
            });
          }
          V6D[67]['setCookie']('rememberToken', '', - 999);
          H9Y[672]['clearToken']();
        }
        Q__('slow');
        s2U();
        w4K();
        V6D[67]['avatar'] = new V6D[30];
        V6D[67]['avatar']['randomBC'](V6D[67]);
        V6D[67]['activeAvatarNumber'] = 0;
        for (s7g[1] = 1; s7g[1] < 5; s7g[1]++) {
          V6D[67]['allAvatars'][s7g[1]] = new V6D[30];
        }
        V6D[67]['allAvatars'][0] = V6D[67]['avatar'];
        V6D[67]['loggedIn'] = false;
        H9Y[24] = '';
        V6D[67]['friends'] = [
        ];
        V6D[67]['mapsVotedFor'] = [
        ];
        V6D[67]['legacyFriendsString'] = '';
        H9Y[37] = false;
        U3ndn.Y$U();
        if (V6D[67]['classic']) {
          a9C();
        }
      }
      function h$$() {
        U3ndn.w30();
        var C3l = [
          arguments
        ];
        C3l[6] = r8no$;
        H9Y[52]['value'] = '';
        H9Y[35]['value'] = '';
        H9Y[46]['value'] = '';
      }
      function F31() {
        var N0D = [
          arguments
        ];
        U3ndn.Y$U();
        N0D[4] = r8no$;
        u80(this['roomID']);
      }
      function r_t() {
        var X1E = [
          arguments
        ];
        X1E[5] = r8no$;
        N2['createImage'](V6D[67]['avatar'], 1, H9Y[11], '', 33, 33, null, null, null, 4);
      }
      function Z0t() {
        var L75 = [
          arguments
        ];
        L75[5] = r8no$;
        H9Y[65]['value'] = '';
        H9Y[65]['focus']();
        H9Y[98]['childNodes'][1]['textContent'] = 'SEND';
        H9Y[44]['textContent'] = 'CANCEL';
        H9Y[65]['style']['visibility'] = 'inherit';
        H9Y[93]['style']['visibility'] = 'inherit';
        U3ndn.w30();
        H9Y[17]['style']['visibility'] = 'hidden';
        H9Y[98]['onclick'] = n85;
      }
      function b1x(L8F) {
        var W$0 = [
          arguments
        ];
        W$0[4] = r8no$;
        V6D[67]['xp'] = W$0[0][0]['xp'];
        V6D[67]['userName'] = W$0[0][0]['username'];
        V6D[67]['guest'] = false;
        V6D[67]['dbid'] = parseInt(W$0[0][0]['id']);
        V6D[67]['avatar'] = new V6D[30];
        V6D[67]['avatar']['fromString'](W$0[0][0]['avatar']);
        for (W$0[9] = 0; W$0[9] < 5; W$0[9]++) {
          V6D[67]['allAvatars'][W$0[9]] = new V6D[30];
          U3ndn.S2t(6);
          W$0[5] = U3ndn.E_K(W$0[9], 1);
          if (W$0[0][0]['avatar' + W$0[5]]) {
            V6D[67]['allAvatars'][W$0[9]]['fromString'](W$0[0][0]['avatar' + W$0[5]]);
          }
        }
        U3ndn.S2t(129);
        W$0[6] = U3ndn.I8r(2, 3, 2006, 19, 13);
        U3ndn.z_y(15);
        W$0[3] = U3ndn.E_K(19, 0, 18);
        V6D[67]['activeAvatarNumber'] = W$0[0][0][r8no$[W$0[6]]] - W$0[3];
        V6D[67]['customControls'] = new V6D[85];
        V6D[67]['customControls']['unserialize'](W$0[0][0]['controls']);
        w7c();
        V6D[67]['friends'] = W$0[0][0]['friends'];
        V6D[67]['legacyFriendsString'] = W$0[0][0]['legacyFriends'];
        H9Y[24] = W$0[0][0]['token'];
        H9Y[672]['recvToken'](H9Y[24]);
        H9Y[365]['style']['visibility'] = 'hidden';
        h$$();
        U3ndn.w30();
        s_M();
      }
      function s5n() {
        var o3e = [
          arguments
        ];
        o3e[9] = r8no$;
        H9Y[2]['startMusic']();
      }
      function f1_() {
        var u$k = [
          arguments
        ];
        u$k[9] = r8no$;
        U3ndn.Y$U();
        u$k[1] = V6D[67]['getCookie']('rememberToken');
        if (u$k[1] && u$k[1] != '') {
          return u$k[1];
        }
        return false;
      }
      function w7c() {
        var A$8 = [
          arguments
        ];
        A$8[3] = r8no$;
        if (V6D[67]['customControls']['stats']) {
          V6D[67]['simpleFPS']['show']();
        } else {
          V6D[67]['simpleFPS']['hide']();
        }
        U3ndn.S2t(64);
        A$8[5] = U3ndn.E_K(390, 3, 306, 2);
        U3ndn.z_y(119);
        A$8[8] = U3ndn.E_K(767, 18, 444, 454, 13);
        U3ndn.S2t(1);
        A$8[9] = U3ndn.I8r(18, 15);
        A$8[4] = V6D[67][r8no$[A$8[5]]][r8no$[A$8[8]]] == A$8[9];
        if (A['gameRenderer']['options']['antialias'] != A$8[4]) {
          A['gameRenderer'] = PIXI['autoDetectRenderer']({
            width: 730,
            height: 500,
            antialias: A$8[4],
            resolution: window['devicePixelRatio'],
            autoDensity: true,
            powerPreference: 'high-performance'
          });
          V6D[67]['resetRenderer'] = true;
          V6D[67]['avatarCache']['clear']();
        }
        if (H9Y[453]) {
          H9Y[453]['updateLocalInputKeys']();
        }
      }
      function z6e() {
        U3ndn.w30();
        var e$$ = [
          arguments
        ];
        e$$[8] = r8no$;
        $['post']('https://bonk2.io/scripts/matchmaking_query.php', {
          version: V6D[67]['version'],
          mode: V6D[67]['quickMode'],
          excludeaddresses: V6D[67]['quickExcludeAddresses']['join']('#'),
          token: H9Y[24]
        }) ['done']((B0K, k9E) =>{
          var J8h = r8no$;
          var b09 = B0K;
          if (b09[J8h[61]] == 'fail') {
            throw new Error(b09[J8h[661]]);
          }
          if (b09[J8h[61]] == 'join') {
            V6D[67][J8h[1098]][J8h[101]](b09[J8h[759]]);
            q_o('Joining a game...');
            i2h(b09[J8h[759]], b09[J8h[755]], V6D[67][J8h[1097]]);
          }
          if (b09[J8h[61]] == 'create') {
            q_o('Creating a game...');
            V6D[67][J8h[755]] = b09[J8h[755]];
            V6D[67][J8h[817]] = b09[J8h[817]];
            V6D[67][J8h[818]] = b09[J8h[818]];
            V6D[67][J8h[819]] = b09[J8h[819]];
            V6D[67][J8h[655]] = 0;
            S2b();
          }
        }) ['fail'](function (H5C, f$7, W9g) {
          var l7M = [
            arguments
          ];
          throw new Error(l7M[0][2]);
        });
      }
      function Q$k() {
        var Z0k = [
          arguments
        ];
        Z0k[2] = r8no$;
        V6D[67]['quickMode'] = 'grapplequick';
        if (V6D[67]['classic']) {
          p9X();
          V6D[67]['rlc']();
        } else {
          C_d();
        }
        b5n();
      }
      function a5U() {
        var J0r = [
          arguments
        ];
        J0r[3] = r8no$;
        if (V6D[67]['guest'] == false) {
          $['post']('https://bonk2.io/scripts/account_savecontrols.php', {
            controls: V6D[67]['customControls']['serialize'](),
            token: H9Y[24]
          }) ['done']((k2o, E$0) =>{
            k2o;
          }) ['fail'](function (S_7, G3t, r5Z) {
            var x70 = [
              arguments
            ];
            throw new Error(x70[0][2]);
          });
        }
      }
      function N12() {
        var f3K = [
          arguments
        ];
        f3K[2] = r8no$;
        H9Y[160]['style']['display'] = 'inherit';
        H9Y[160]['style']['opacity'] = '0';
        anime({
          targets: H9Y[160],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        H9Y[669]['value'] = '';
        H9Y[491]['value'] = '';
        H9Y[210]['value'] = '';
        H9Y[314]['textContent'] = 'Change your account password here. You can only change one account password every 24 hours.';
        H9Y[314]['style']['paddingTop'] = '12px';
        H9Y[354] = true;
      }
      function F49(y5z) {
        var n1K = [
          arguments
        ];
        n1K[7] = r8no$;
        H9Y[39]['textContent'] = H9Y[881][n1K[0][0]]['date'];
        H9Y[96]['textContent'] = H9Y[881][n1K[0][0]]['news'];
        U3ndn.Y$U();
        if (H9Y[881][n1K[0][0] - 1]) {
          H9Y[77]['classList']['remove']('brownButtonDisabled');
        } else {
          H9Y[77]['classList']['add']('brownButtonDisabled');
        }
        if (H9Y[881][n1K[0][0] + 1]) {
          H9Y[75]['classList']['remove']('brownButtonDisabled');
        } else {
          H9Y[75]['classList']['add']('brownButtonDisabled');
        }
      }
      function N6g(l5I) {
        var c2w = [
          arguments
        ];
        U3ndn.S2t(6);
        c2w[6] = U3ndn.I8r(1260, 9);
        return c2w[0][0] + U3ndn.j31(c2w[6]);
      }
      function O03() {
        var p8m = [
          arguments
        ];
        p8m[2] = r8no$;
        p8m[1] = parseInt(localStorage['getItem']('newscount'));
        U3ndn.w30();
        if (p8m[1] && p8m[1] < H9Y[881]['length']) {
          H9Y[59]['textContent'] = '* NEWS *';
          H9Y[16]['textContent'] = '* NEWS *';
        }
      }
      function i_u() {
        var u3c = [
          arguments
        ];
        u3c[2] = r8no$;
        if (!H9Y[99]) {
          return;
        }
        H9Y[43]['style']['visibility'] = 'hidden';
        H9Y[99] = false;
        V6D[67]['setCookie']('noguide', true, 999);
      }
      function A34(v7i) {
        var p97 = [
          arguments
        ];
        p97[1] = r8no$;
        U3ndn.w30();
        H9Y[365]['style']['visibility'] = 'inherit';
        H9Y[161]['textContent'] = 'Automatically logging you in...';
        H9Y[873]['onclick'] = O6v;
        H9Y[107] = true;
        $['post']('https://bonk2.io/scripts/login_auto.php', {
          rememberToken: p97[0][0]
        }) ['done']((J78, z0I) =>{
          U3ndn.w30();
          var v5F = r8no$;
          if (H9Y[107] == false) {
            return;
          }
          H9Y[107] = false;
          var c7$ = J78;
          if (c7$[v5F[61]] == 'success') {
            b1x(c7$);
          } else {
            H9Y[161][v5F[552]] = 'Auto login failed! Please log in again.';
            V6D[67][v5F[1059]]('rememberToken', '', - 999);
          }
        }) ['fail'](function (I4U, A8h, L$U) {
          U3ndn.w30();
          var x2B = [
            arguments
          ];
          throw new Error(x2B[0][2]);
        });
      }
      function k$G() {
        var k7Z = [
          arguments
        ];
        k7Z[4] = r8no$;
        H9Y[358] = true;
        H9Y[347]['show'](H9Y[24]);
        H9Y[37] = false;
      }
      function B1b() {
        var C2F = [
          arguments
        ];
        C2F[7] = r8no$;
        if (H9Y[804]) {
          H9Y[804]['pause']();
        }
        if (H9Y[142]) {
          H9Y[142]['pause']();
        }
        U3ndn.w30();
        H9Y[804] = anime({
          targets: H9Y[62],
          opacity: '0',
          autoplay: true,
          duration: 120,
          easing: 'easeInSine'
        });
      }
      function Z6I(t27) {
        var P8C = [
          arguments
        ];
        U3ndn.w30();
        P8C[9] = r8no$;
        if (P8C[0][0]['keyCode'] == 27) {
          $(document) ['off']('keydown', Z6I);
          E$4();
          return;
        }
        if (P8C[0][0]['keyCode'] == 46) {
          $(document) ['off']('keydown', Z6I);
          H9Y[504][H9Y[311]] = 999;
          E$4();
          return;
        }
        $(document) ['off']('keydown', Z6I);
        H9Y[504][H9Y[311]] = P8C[0][0]['keyCode'];
        E$4();
      }
      function t4F() {
        var l$t = [
          arguments
        ];
        l$t[2] = r8no$;
        H9Y[648]['destroy']();
        H9Y[648] = null;
        U3ndn.Y$U();
        if (V6D[67]['loggedIn']) {
          H9Y[2]['returnToMain']();
        } else {
          H9Y[8]['style']['display'] = 'block';
          H9Y[866]['resume']();
          if (V6D[67]['musicMute'] == false) {
            H9Y[2]['startMusic']();
          }
          w4K();
          O9P();
        }
      }
      function M9V() {
        var e73 = [
          arguments
        ];
        e73[3] = - 1014260376;
        e73[6] = - 1588730633;
        e73[8] = 2;
        U3ndn.Y$U();
        for (e73[2] = 1; U3ndn.P5V(e73[2].toString(), e73[2].toString().length, 55666) !== e73[3]; e73[2]++) {
          e73[5] = r8no$;
          e73[8] += 2;
        }
        if (U3ndn.P5V(e73[8].toString(), e73[8].toString().length, 17880) !== e73[6]) {
          e73[5] = r8no$;
        }
        e73[5] = r8no$;
        if (H9Y[32]['textContent'] == 'Friends From Flash Version +') {
          (function () {
            var R$P = [
              arguments
            ];
            R$P[7] = r8no$;
            H9Y[32]['textContent'] = 'Friends From Flash Version -';
            R$P[1] = V6D[67]['legacyFriendsString']['split']('#');
            R$P[1]['shift']();
            e73[4] = H9Y[85];
            if (R$P[1]['length'] == 0) {
              R$P[4] = e73[4]['insertRow']();
              R$P[6] = R$P[4]['insertCell'](0);
              R$P[6]['textContent'] = 'None';
              R$P[6]['classList']['add']('friends_cell_name');
            } else {
              R$P[3] = function (g0C) {
                var A_g = [
                  arguments
                ];
                A_g[1] = r8no$;
                A_g[8] = e73[4]['insertRow']();
                A_g[7] = A_g[8]['insertCell'](0);
                A_g[7]['classList']['add']('friends_cell_name');
                A_g[7]['textContent'] = R$P[1][A_g[0][0]];
                A_g[2] = A_g[8]['insertCell'](1);
                A_g[5] = document['createElement']('div');
                A_g[5]['textContent'] = 'SEND REQUEST';
                A_g[5]['classList']['add']('friends_sendrequest_button');
                A_g[5]['classList']['add']('brownButton');
                A_g[5]['classList']['add']('brownButton_classic');
                A_g[5]['classList']['add']('buttonShadow');
                A_g[5]['onclick'] = function () {
                  var U4T = [
                    arguments
                  ];
                  U4T[1] = r8no$;
                  d95();
                  H9Y[65]['value'] = R$P[1][A_g[0][0]];
                };
                A_g[5]['onmousedown'] = V6D[67]['bcs'];
                A_g[5]['onmouseover'] = V6D[67]['bhs'];
                A_g[2]['appendChild'](A_g[5]);
              };
              for (R$P[9] = 0; R$P[9] < R$P[1]['length']; R$P[9]++) {
                R$P[3](R$P[9]);
              }
            }
          }());
        } else {
          H9Y[32]['textContent'] = 'Friends From Flash Version +';
          while (H9Y[85]['rows']['length'] > 0) {
            H9Y[85]['deleteRow'](0);
          }
        }
      }
      function m3N() {
        var c5f = [
          arguments
        ];
        c5f[3] = r8no$;
        H9Y[38]['classList']['remove']('pretty_top_replay_fav_disabled');
        H9Y[38]['classList']['remove']('pretty_top_replay_fav_checked');
        if (H9Y[41]['mid'] > 0 && V6D[67]['guest'] == false) {
        } else {
          H9Y[38]['classList']['add']('pretty_top_replay_fav_disabled');
        }
      }
      function C$d(L3y) {
        var q4H = [
          arguments
        ];
        q4H[2] = r8no$;
        U3ndn.Y$U();
        H9Y[642]['style']['opacity'] = '0';
        H9Y[642]['style']['visibility'] = 'inherit';
        anime({
          targets: H9Y[642],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        H9Y[451]['innerHTML'] = '';
        H9Y[735] = [
        ];
        H9Y[769]['textContent'] = q4H[0][0];
        H9Y[672]['disableMouseEvents']();
      }
      function w4K() {
        var p$P = [
          arguments
        ];
        p$P[6] = r8no$;
        H9Y[544]['style']['visibility'] = 'inherit';
        H9Y[544]['style']['opacity'] = '0';
        anime({
          targets: H9Y[544],
          opacity: 1,
          autoplay: true,
          duration: 100,
          easing: 'easeInOutCubic'
        });
        H9Y[131]['onclick'] = t7m;
        H9Y[747]['onclick'] = d9b;
        a6Y(U3ndn.j31(384) /*Looks like you're new here.
 Click "Play as Guest" so you don't have 
to make an account*/
        , H9Y[131], - 57, - 300);
        U3ndn.w30();
        H9Y[447]['style']['left'] = '-200px';
        anime({
          targets: H9Y[447],
          left: 0,
          autoplay: true,
          duration: 400,
          easing: 'easeOutBack'
        });
        H9Y[703]['style']['right'] = '-200px';
        anime({
          targets: H9Y[703],
          right: 0,
          autoplay: true,
          duration: 400,
          easing: 'easeOutBack'
        });
      }
      function s_M() {
        var N$S = [
          arguments
        ];
        N$S[9] = r8no$;
        V6D[67]['loggedIn'] = true;
        if (V6D[67]['guest']) {
          H9Y[13]['textContent'] = 'Guest';
          H9Y[56]['classList']['add']('blueButtonDisabled');
          H9Y[78]['classList']['add']('brownButton_disabled_classic');
          H9Y[78]['classList']['remove']('brownButton_classic');
        } else {
          U3ndn.S2t(48);
          N$S[3] = U3ndn.I8r(1496, 1482, 741, 9, 11);
          H9Y[13]['textContent'] = U3ndn.j31(N$S[3]) + V6D[67]['level']();
          H9Y[56]['classList']['remove']('blueButtonDisabled');
          H9Y[78]['classList']['remove']('brownButton_disabled_classic');
          H9Y[78]['classList']['add']('brownButton_classic');
        }
        H9Y[34]['textContent'] = V6D[67]['userName'];
        r_t();
        U3ndn.w30();
        O03();
        s7Z('slow');
        H9Y[866]['unblur']();
        I0p();
        H9Y[37] = true;
        a6Y(U3ndn.j31(1037) /*This is the main menu. Click
Quick Play to join a multiplayer game!*/
        , H9Y[12], 180, - 30);
        if (window['autoJoin']) {
          N$S[4] = {
            action: 'join',
            quick: false,
            address: window['autoJoin']['address'],
            password: '',
            bypass: window['autoJoin']['passbypass'],
            server: window['autoJoin']['server']
          };
          H_N(N$S[4]);
          C$d('Auto Joining...');
          window['autoJoin'] = null;
        }
        if (V6D[67]['classic']) {
          M$b();
        }
        U8j();
      }
      function v9m() {
        var E2L = [
          arguments
        ];
        E2L[1] = r8no$;
        U3ndn.w30();
        H9Y[7]['stop']();
      }
      function n9L(N3m) {
        var q_V = [
          arguments
        ];
        U3ndn.Y$U();
        q_V[9] = r8no$;
        q_V[0][0] = q_V[0][0]['substring'](0, q_V[0][0]['length'] - 2);
        return parseInt(q_V[0][0]);
      }
      function M$b() {
        var W$X = [
          arguments
        ];
        W$X[7] = r8no$;
        U3ndn.w30();
        H9Y[62]['style']['visibility'] = 'inherit';
        H9Y[62]['style']['opacity'] = '1';
      }
      function j6S() {
        var s_0 = [
          arguments
        ];
        s_0[1] = r8no$;
        H9Y[354] = false;
        H9Y[669]['value'] = '';
        H9Y[491]['value'] = '';
        H9Y[210]['value'] = '';
        U3ndn.w30();
        anime({
          targets: H9Y[160],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var V8a = [
              arguments
            ];
            V8a[7] = r8no$;
            U3ndn.w30();
            H9Y[160]['style']['display'] = 'none';
          }
        });
        M$b();
      }
      function n85() {
        var P6i = [
          arguments
        ];
        P6i[8] = r8no$;
        P6i[5] = H9Y[65]['value'];
        V6D[67]['activateButtonSpinner'](H9Y[98]);
        U3ndn.w30();
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: H9Y[24],
          task: 'send',
          theirname: P6i[5]
        }) ['fail'](function (Q8M, r15, l_a) {
          var h0T = [
            arguments
          ];
          h0T[2] = r8no$;
          U3ndn.Y$U();
          V6D[67]['deactivateButtonSpinner'](H9Y[98]);
        }) ['done']((Z2u, s3h) =>{
          U3ndn.w30();
          var Q2l = r8no$;
          V6D[67][Q2l[1074]](H9Y[98]);
          V$s(Z2u);
        });
      }
      function N2j() {
        var l0s = [
          arguments
        ];
        l0s[6] = r8no$;
        if (!H9Y[460]) {
          H9Y[508]['textContent'] = '? online';
          H9Y[197] = '? online';
          H9Y[649] = '? online';
          H9Y[880] = '? online';
          H9Y[95]['textContent'] = '? players online';
          H9Y[58]['textContent'] = '? players online';
          H9Y[48]['textContent'] = '? players online';
          H9Y[50]['textContent'] = '? online';
        } else {
          l0s[1] = H9Y[460]['bonk'];
          l0s[3] = H9Y[460]['car'];
          U3ndn.S2t(1);
          l0s[8] = U3ndn.E_K(3255, 2170);
          U3ndn.S2t(6);
          l0s[4] = U3ndn.I8r(218, 2829);
          H9Y[508]['textContent'] = l0s[1][r8no$[l0s[8]]] + U3ndn.j31(l0s[4]);
          U3ndn.z_y(1);
          l0s[9] = U3ndn.E_K(17376, 16290);
          U3ndn.S2t(7);
          l0s[2] = U3ndn.E_K(3049, 39443, 14, 14);
          H9Y[197]['textContent'] = l0s[1][r8no$[l0s[9]]] + U3ndn.j31(l0s[2]);
          U3ndn.z_y(29);
          l0s[5] = U3ndn.I8r(331, 9, 84);
          U3ndn.S2t(105);
          l0s[7] = U3ndn.E_K(3, 3059, 3043, 437);
          H9Y[649]['textContent'] = l0s[1][r8no$[l0s[5]]] + U3ndn.j31(l0s[7]);
          U3ndn.S2t(14);
          l0s[28] = U3ndn.E_K(1, 181, 907);
          U3ndn.z_y(97);
          l0s[60] = U3ndn.I8r(14, 9, 3031, 11);
          H9Y[880]['textContent'] = l0s[1][r8no$[l0s[28]]] + U3ndn.j31(l0s[60]);
          U3ndn.z_y(130);
          l0s[83] = U3ndn.E_K(136, 19, 31, 5, 1084);
          U3ndn.S2t(17);
          l0s[68] = U3ndn.I8r(1263, 159, 8);
          H9Y[95]['textContent'] = l0s[1][r8no$[l0s[83]]] + U3ndn.j31(l0s[68]);
          U3ndn.z_y(78);
          l0s[13] = U3ndn.I8r(4, 19558, 6, 20634);
          U3ndn.S2t(203);
          l0s[12] = U3ndn.E_K(3, 10, 1274, 10, 27170);
          H9Y[58]['textContent'] = l0s[1][r8no$[l0s[13]]] + U3ndn.j31(l0s[12]);
          U3ndn.S2t(6);
          l0s[56] = U3ndn.E_K(218, 871);
          U3ndn.z_y(93);
          l0s[61] = U3ndn.I8r(5720, 5689, 1429, 16, 15);
          H9Y[48]['textContent'] = l0s[1][r8no$[l0s[56]]] + U3ndn.j31(l0s[61]);
          U3ndn.S2t(14);
          l0s[94] = U3ndn.I8r(1, 109, 981);
          U3ndn.S2t(105);
          l0s[79] = U3ndn.E_K(8, 3034, 3053, 1517);
          H9Y[50]['textContent'] = l0s[1][r8no$[l0s[94]]] + U3ndn.j31(l0s[79]);
          U3ndn.z_y(165);
          l0s[31] = U3ndn.E_K(10783, 7, 21200, 4, 11);
          U3ndn.S2t(9);
          l0s[29] = U3ndn.E_K(1086, 19544, 19);
          U3ndn.z_y(15);
          l0s[47] = U3ndn.E_K(5, 991, 0);
          parent['document']['getElementById']('header_bonk_playercount') ['textContent'] = U3ndn.j31(l0s[31]) + l0s[1][r8no$[l0s[29]]] + U3ndn.j31(l0s[47]);
          U3ndn.z_y(147);
          l0s[26] = U3ndn.I8r(18, 5, 15, 1342, 5550);
          U3ndn.z_y(1);
          l0s[15] = U3ndn.E_K(16320, 15232);
          U3ndn.z_y(6);
          l0s[33] = U3ndn.E_K(100, 896);
          parent['document']['getElementById']('header_car_playercount') ['textContent'] = U3ndn.j31(l0s[26]) + l0s[3][r8no$[l0s[15]]] + U3ndn.j31(l0s[33]);
        }
      }
      function E0g() {
        var v$A = [
          arguments
        ];
        v$A[1] = r8no$;
        E$4();
        H9Y[993]['checked'] = V6D[67]['customControls']['filter'];
        U3ndn.S2t(132);
        v$A[2] = U3ndn.E_K(1, 27, 15, 359, 1);
        U3ndn.z_y(92);
        v$A[6] = U3ndn.I8r(50, 467, 25, 10, 7);
        U3ndn.z_y(57);
        v$A[8] = U3ndn.I8r(10, 11);
        H9Y[215]['selectedIndex'] = V6D[67][r8no$[v$A[2]]][r8no$[v$A[6]]] - v$A[8];
        U3ndn.Y$U();
        H9Y[224]['checked'] = V6D[67]['customControls']['stats'];
        if (V6D[67]['guest']) {
          H9Y[612]['classList']['add']('settings_change_password_label_disable');
        } else {
          H9Y[612]['classList']['remove']('settings_change_password_label_disable');
        }
      }
      function J$1(x0_ = true) {
        var o4c = [
          arguments
        ];
        o4c[1] = r8no$;
        H9Y[866]['unblur']();
        H9Y[347]['hideEditorIfShowing']();
        if (x0_) {
          anime({
            targets: document['getElementById']('skinmanager'),
            opacity: '0',
            autoplay: true,
            duration: 130,
            easing: 'easeOutCubic',
            complete: function () {
              var q9l = [
                arguments
              ];
              q9l[4] = r8no$;
              document['getElementById']('skinmanager') ['style']['visibility'] = 'hidden';
            }
          });
        } else {
          document['getElementById']('skinmanager') ['style']['visibility'] = 'hidden';
        }
        H9Y[358] = false;
        r_t();
        H9Y[37] = true;
        if (V6D[67]['classic']) {
          M$b();
        }
      }
      function q_o(w7O) {
        var a23 = [
          arguments
        ];
        a23[3] = r8no$;
        H9Y[735]['push'](a23[0][0]);
        while (H9Y[735]['length'] > 6) {
          H9Y[735]['shift']();
        }
        a23[6] = '';
        for (a23[9] = 0; a23[9] < H9Y[735]['length']; a23[9]++) {
          if (a23[9] > 0) {
            a23[6] += '<br />';
          }
          a23[6] += H9Y[735][a23[9]];
        }
        H9Y[451]['innerHTML'] = a23[6];
        H9Y[451]['scrollTop'] = H9Y[451]['scrollHeight'];
      }
      function S2b() {
        U3ndn.w30();
        var r4l = [
          arguments
        ];
        r4l[9] = r8no$;
        r4l[4] = 'b';
        if (V6D[67]['quickMode'] == 'arrowsquick') {
          r4l[4] = 'ar';
        } else if (V6D[67]['quickMode'] == 'training1') {
          r4l[4] = 'bs';
        } else if (V6D[67]['quickMode'] == 'grapplequick') {
          r4l[4] = 'sp';
        }
        r4l[7] = {
          action: 'create',
          quick: V6D[67]['quickMode'],
          formValues: {
            hidden: 0,
            maxLevel: 999,
            maxPlayers: 4,
            minLevel: 0,
            password: '',
            roomName: 'Quick Game'
          },
          roomName: 'Quick Game',
          mo: r4l[4]
        };
        H_N(r4l[7]);
      }
      function P4v() {
        anime({
          targets: H9Y[983],
          opacity: 0,
          autoplay: true,
          duration: 150,
          easing: 'easeInOutCubic',
          complete: function () {
            var a1Y = [
              arguments
            ];
            a1Y[1] = r8no$;
            U3ndn.w30();
            H9Y[983]['style']['visibility'] = 'hidden';
          }
        });
        w4K();
      }
      function E7P() {
        U3ndn.w30();
        var I8v = [
          arguments
        ];
        I8v[3] = r8no$;
        H9Y[21]['style']['visibility'] = 'hidden';
      }
      function t7m() {
        anime({
          targets: H9Y[544],
          opacity: 0,
          top: '300px',
          autoplay: true,
          duration: 150,
          easing: 'easeInQuad',
          complete: function () {
            var f$C = [
              arguments
            ];
            f$C[4] = r8no$;
            H9Y[544]['style']['visibility'] = 'hidden';
            H9Y[544]['style']['top'] = 0;
          }
        });
        S$R(a83);
      }
      function C_d() {
        var G5w = [
          arguments
        ];
        G5w[6] = r8no$;
        H9Y[89]['style']['visibility'] = 'hidden';
        H9Y[866]['unblur']();
        H9Y[687] = false;
        u6U();
        U3ndn.w30();
        H9Y[37] = true;
      }
      function x3Q(N6Z) {
        var q_J = [
          arguments
        ];
        q_J[4] = r8no$;
        if (!H9Y[72]) {
          return;
        }
        q_J[8] = H9Y[5]['getBoundingClientRect']();
        U3ndn.S2t(41);
        q_J[2] = U3ndn.E_K(20, 18, 10, 1026);
        U3ndn.z_y(13);
        q_J[7] = U3ndn.I8r(539, 26, 18);
        q_J[9] = q_J[0][0][r8no$[q_J[2]]] - q_J[8][r8no$[q_J[7]]];
        if (q_J[9] < 50 && !H9Y[64]) {
          anime({
            targets: H9Y[45],
            top: '0px',
            autoplay: true,
            duration: 120,
            easing: 'easeOutSine'
          });
          H9Y[64] = true;
        } else if (q_J[9] > 50 && H9Y[64]) {
          anime({
            targets: H9Y[45],
            top: '-40px',
            autoplay: true,
            duration: 120,
            easing: 'easeInSine'
          });
          H9Y[64] = false;
        }
      }
      function p24() {
        var F_T = [
          arguments
        ];
        F_T[3] = r8no$;
        U3ndn.w30();
        if (V6D[67]['mute'] == true) {
          H9Y[42]['classList']['add']('pretty_top_volume_off');
        } else {
          H9Y[42]['classList']['remove']('pretty_top_volume_off');
        }
        if (V6D[67]['musicMute'] == true) {
          H9Y[51]['classList']['add']('pretty_top_volume_music_off');
        } else {
          H9Y[51]['classList']['remove']('pretty_top_volume_music_off');
        }
      }
      function c2B() {
        var C5C = [
          arguments
        ];
        C5C[5] = r8no$;
        anime({
          targets: H9Y[642],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var n1Q = [
              arguments
            ];
            U3ndn.w30();
            n1Q[2] = r8no$;
            H9Y[642]['style']['visibility'] = 'hidden';
          }
        });
        H9Y[672]['enableMouseEvents']();
      }
      function i9q() {
        U3ndn.w30();
        var G4$ = [
          arguments
        ];
        G4$[7] = r8no$;
        if (H9Y[648]) {
          t4F();
        } else if (H9Y[453]) {
          H9Y[453]['closeClicked']();
        } else {
          l8S();
        }
      }
      function H4W() {
        var n6d = [
          arguments
        ];
        n6d[8] = r8no$;
        H9Y[231]['style']['visibility'] = 'hidden';
        h$$();
        H9Y[62]['appendChild'](H9Y[57]);
        s_M();
      }
      function m6k() {
        var J$m = [
          arguments
        ];
        J$m[1] = r8no$;
        V6D[67]['quickMode'] = 'training1';
        if (V6D[67]['classic']) {
          p9X();
          V6D[67]['rlc']();
        } else {
          C_d();
        }
        b5n();
        i_u();
      }
      function a83() {
        U3ndn.w30();
        var I3X = [
          arguments
        ];
        I3X[9] = r8no$;
        V6D[67]['guest'] = true;
        V6D[67]['userName'] = H9Y[964]['value'];
        V6D[67]['setCookie']('guestname', V6D[67]['userName'], 999);
        V6D[67]['setCookie']('guestcol', V6D[67]['avatar']['bc'], 999);
        anime({
          targets: H9Y[983],
          opacity: 0,
          top: '300px',
          autoplay: true,
          duration: 150,
          easing: 'easeInOutCubic',
          complete: function () {
            var G0h = [
              arguments
            ];
            G0h[7] = r8no$;
            H9Y[983]['style']['visibility'] = 'hidden';
            U3ndn.Y$U();
            H9Y[983]['style']['top'] = '0px';
          }
        });
        H9Y[62]['insertBefore'](H9Y[57], H9Y[12]);
        s_M();
      }
      function u80(J5e, X2G) {
        var K_h = [
          arguments
        ];
        K_h[3] = r8no$;
        C$d('Joining Game');
        q_o('Fetching address...');
        H9Y[254] = K_h[0][0];
        H9Y[151] = K_h[0][1];
        $['post']('https://bonk2.io/scripts/getroomaddress.php', {
          id: K_h[0][0]
        }) ['fail'](function (M7j, M92, I17) {
          [
            arguments
          ];
          q_o('Address fetch failed');
        }) ['done']((o7z, s6m) =>{
          var W1k;
          var u3b = r8no$;
          var Z0X = o7z;
          if (Z0X[u3b[61]] == 'success') {
            if (Z0X[u3b[113]] != H9Y[254]) {
              return;
            }
            q_o('Got address, connecting...');
            W1k = {
              action: 'join',
              quick: false,
              address: Z0X[u3b[759]],
              password: H9Y[151],
              roomName: 'test join name',
              server: Z0X[u3b[755]],
              mo: 'b'
            };
            H_N(W1k);
          } else {
            q_o('Error: ' + Z0X[u3b[661]]);
          }
        });
      }
      function Z9S(a9I, z1N, S_s) {
        var C4z = [
          arguments
        ];
        C4z[6] = r8no$;
        if (H9Y[94]) {
          H9Y[94]['parentNode']['removeChild'](H9Y[94]);
          H9Y[94] = null;
          return;
        }
        H9Y[94] = document['createElement']('div');
        H9Y[94]['classList']['add']('sm_pickerContainer');
        H9Y[94]['classList']['add']('windowShadow');
        U3ndn.w30();
        U3ndn.z_y(60);
        C4z[5] = U3ndn.I8r(7, 22835, 24111);
        H9Y[94]['style']['top'] = C4z[0][2] + U3ndn.j31(C4z[5]);
        for (C4z[2] = 0; C4z[2] < V6D[67]['colors']['length']; C4z[2]++) {
          C4z[7] = document['createElement']('div');
          C4z[7]['classList']['add']('sm_pickerColorContainer');
          H9Y[94]['appendChild'](C4z[7]);
          C4z[8] = document['createElement']('div');
          C4z[8]['classList']['add']('sm_pickerColorInner');
          C4z[8]['style']['backgroundColor'] = V6D[67]['numToHex'](V6D[67]['colors'][C4z[2]]);
          C4z[7]['appendChild'](C4z[8]);
          C4z[8]['colorVal'] = V6D[67]['colors'][C4z[2]];
          C4z[8]['onclick'] = function () {
            var L44 = [
              arguments
            ];
            U3ndn.w30();
            L44[9] = r8no$;
            V6D[67]['avatar']['bc'] = this['colorVal'];
            C4z[0][0](this['colorVal']);
            L44[2] = anime({
              targets: H9Y[94],
              left: '-270px',
              opacity: 0,
              autoplay: true,
              duration: 120,
              easing: 'easeInCubic',
              complete: function () {
                var k2$ = [
                  arguments
                ];
                U3ndn.w30();
                k2$[3] = r8no$;
                H9Y[94]['parentNode']['removeChild'](H9Y[94]);
                H9Y[94] = null;
              }
            });
          };
        }
        C4z[0][1]['appendChild'](H9Y[94]);
        H9Y[94]['style']['left'] = '-270px';
        H9Y[94]['style']['opacity'] = '0';
        C4z[4] = anime({
          targets: H9Y[94],
          left: '-290px',
          opacity: 1,
          autoplay: true,
          duration: 120,
          easing: 'easeInOutCubic'
        });
      }
      function K3y() {
        var Q$r = [
          arguments
        ];
        U3ndn.w30();
        Q$r[7] = r8no$;
        if (H9Y[453]) {
          H9Y[453]['tabbed'](true);
        }
      }
      var H9Y = [
        arguments
      ];
      H9Y[6] = r8no$;
      H9Y[2] = this;
      H9Y[4] = Math['round'](Math['random']());
      H9Y[1] = false;
      H9Y[8] = document['getElementById']('mainmenuelements');
      H9Y[5] = document['getElementById']('bonkiocontainer');
      anime({
        targets: H9Y[5],
        opacity: 1,
        autoplay: true,
        duration: 300,
        delay: 0,
        easing: 'linear'
      });
      H9Y[9] = document['getElementById']('quickPlayWindow');
      H9Y[3] = document['getElementById']('quickPlayWindow_close');
      H9Y[3]['onclick'] = N6N;
      H9Y[3]['onmouseover'] = V6D[67]['bhs'];
      H9Y[55] = document['getElementById']('quickPlayWindow_ClassicButton');
      H9Y[88] = document['getElementById']('quickPlayWindow_ArrowsButton');
      H9Y[54] = document['getElementById']('quickPlayWindow_GrappleButton');
      H9Y[95] = document['getElementById']('quickPlayWindow_ClassicPlayerCount');
      H9Y[58] = document['getElementById']('quickPlayWindow_ArrowsPlayerCount');
      H9Y[48] = document['getElementById']('quickPlayWindow_GrapplePlayerCount');
      H9Y[62] = document['getElementById']('classic_mid');
      H9Y[12] = document['getElementById']('classic_mid_quickplay');
      H9Y[87] = document['getElementById']('classic_mid_customgame');
      H9Y[16] = document['getElementById']('classic_mid_news');
      H9Y[71] = document['getElementById']('classic_mid_skins');
      H9Y[78] = document['getElementById']('classic_mid_friendlist');
      H9Y[57] = document['getElementById']('classic_mid_tutorial');
      H9Y[22] = document['getElementById']('prettymenu');
      H9Y[60] = document['getElementById']('pretty_bottom');
      H9Y[25] = document['getElementById']('pretty_top');
      H9Y[45] = document['getElementById']('pretty_top_bar');
      H9Y[11] = document['getElementById']('pretty_top_small_preview');
      H9Y[13] = document['getElementById']('pretty_top_level');
      H9Y[34] = document['getElementById']('pretty_top_name');
      H9Y[50] = document['getElementById']('pretty_top_playercount');
      H9Y[61] = document['getElementById']('pretty_top_exit');
      H9Y[30] = document['getElementById']('pretty_top_settings');
      H9Y[42] = document['getElementById']('pretty_top_volume');
      H9Y[51] = document['getElementById']('pretty_top_volume_music');
      H9Y[83] = document['getElementById']('pretty_top_help');
      H9Y[43] = document['getElementById']('newPlayerGuideContainer');
      H9Y[82] = document['getElementById']('newPlayerGuide_text');
      H9Y[53] = document['getElementById']('newPlayerGuide_close');
      H9Y[53]['onclick'] = i_u;
      H9Y[72] = false;
      H9Y[64] = false;
      H9Y[37] = false;
      H9Y[92] = false;
      H9Y[99] = false;
      H9Y[59] = document['getElementById']('pretty_newsbutton');
      H9Y[56] = document['getElementById']('pretty_friendsbutton');
      H9Y[27] = document['getElementById']('pretty_tutorialbutton');
      H9Y[76] = document['getElementById']('pretty_playbutton');
      H9Y[20] = document['getElementById']('pretty_skinsbutton');
      H9Y[23] = document['getElementById']('pretty_top_replay');
      H9Y[15] = document['getElementById']('pretty_top_replay_back');
      H9Y[66] = document['getElementById']('pretty_top_replay_next');
      H9Y[26] = document['getElementById']('pretty_top_replay_report');
      H9Y[68] = document['getElementById']('pretty_top_replay_report_tooltip');
      H9Y[84] = document['getElementById']('pretty_top_replay_text');
      H9Y[38] = document['getElementById']('pretty_top_replay_fav');
      H9Y[70] = document['getElementById']('pretty_top_replay_fav_tooltip');
      H9Y[41] = null;
      V6D[67]['setButtonSounds']([H9Y[61],
      H9Y[30],
      H9Y[42],
      H9Y[51],
      H9Y[83],
      H9Y[23],
      H9Y[15],
      H9Y[66]]);
      H9Y[18] = document['getElementById']('sm_gameChoiceCustom');
      H9Y[40] = document['getElementById']('sm_gameChoiceClassic');
      H9Y[81] = document['getElementById']('sm_gameChoiceArrows');
      H9Y[91] = document['getElementById']('sm_gameChoiceGrapple');
      H9Y[40]['onclick'] = h3s;
      H9Y[81]['onclick'] = o7F;
      V6D[67]['setRollFunctions'](H9Y[40]);
      V6D[67]['setRollFunctions'](H9Y[81]);
      V6D[67]['setRollFunctions'](H9Y[18]);
      H9Y[5]['onmousemove'] = x3Q;
      H9Y[5]['addEventListener']('mouseleave', J5i);
      H9Y[5]['addEventListener']('mouseenter', a$6);
      p24();
      H9Y[12]['onmousedown'] = V6D[67]['bcs'];
      H9Y[87]['onmousedown'] = V6D[67]['bcs'];
      H9Y[16]['onmousedown'] = V6D[67]['bcs'];
      H9Y[71]['onmousedown'] = V6D[67]['bcs'];
      H9Y[78]['onmousedown'] = V6D[67]['bcs'];
      H9Y[57]['onmousedown'] = V6D[67]['bcs'];
      H9Y[12]['onmouseover'] = V6D[67]['bhs'];
      H9Y[87]['onmouseover'] = V6D[67]['bhs'];
      H9Y[16]['onmouseover'] = V6D[67]['bhs'];
      H9Y[71]['onmouseover'] = V6D[67]['bhs'];
      H9Y[78]['onmouseover'] = V6D[67]['bhs'];
      H9Y[57]['onmouseover'] = V6D[67]['bhs'];
      H9Y[5]['onclick'] = () =>{
        var I49 = r8no$;
        if (H9Y[231][I49[459]][I49[458]] != 'inherit') {
          if (H9Y[52][I49[748]] != '') {
            H9Y[52][I49[748]] = '';
          }
          if (H9Y[46][I49[748]] != '') {
            H9Y[46][I49[748]] = '';
          }
        }
      };
      H9Y[76]['onclick'] = function () {
        if (H9Y[687] == false) {
          s2U();
          n2F();
        } else {
          C_d();
        }
      };
      H9Y[42]['onclick'] = function (W2I) {
        var H4a = [
          arguments
        ];
        H4a[6] = r8no$;
        if (H4a[0][0]['target'] != H9Y[42]) {
          return;
        }
        V6D[67]['mute'] = !V6D[67]['mute'];
        localStorage['setItem']('mute', V6D[67]['mute']);
        p24();
      };
      H9Y[51]['onclick'] = function (X$Q) {
        var G6C = [
          arguments
        ];
        U3ndn.Y$U();
        G6C[7] = r8no$;
        V6D[67]['musicMute'] = !V6D[67]['musicMute'];
        localStorage['setItem']('musicmute', V6D[67]['musicMute']);
        p24();
        if (H9Y[2]['showing']()) {
          if (V6D[67]['musicMute']) {
            H9Y[2]['stopMusic']();
          } else {
            H9Y[2]['startMusic']();
          }
        }
      };
      H9Y[83]['onclick'] = function () {
        var U0C = [
          arguments
        ];
        U0C[5] = r8no$;
        V6D[67]['customControls']['help'] = !V6D[67]['customControls']['help'];
        a5U();
        I0p();
        V6D[67]['setCookie']('noingamehelp', V6D[67]['customControls']['help'], 999);
      };
      H9Y[23]['onmouseenter'] = function () {
        var g0r = [
          arguments
        ];
        g0r[5] = r8no$;
        if (!H9Y[72]) {
          H9Y[15]['style']['visibility'] = 'inherit';
          H9Y[66]['style']['visibility'] = 'inherit';
          H9Y[84]['style']['visibility'] = 'inherit';
          H9Y[26]['style']['visibility'] = 'inherit';
          H9Y[38]['style']['visibility'] = 'inherit';
          m3N();
          B1b();
        }
      };
      H9Y[23]['onmouseleave'] = function () {
        var e7j = [
          arguments
        ];
        e7j[5] = r8no$;
        H9Y[15]['style']['visibility'] = 'hidden';
        H9Y[66]['style']['visibility'] = 'hidden';
        U3ndn.w30();
        H9Y[84]['style']['visibility'] = 'hidden';
        H9Y[26]['style']['visibility'] = 'hidden';
        H9Y[38]['style']['visibility'] = 'hidden';
        P0m();
      };
      H9Y[15]['onclick'] = function () {
        var j$i = [
          arguments
        ];
        U3ndn.w30();
        j$i[5] = r8no$;
        H9Y[866]['prevReplay']();
      };
      H9Y[66]['onclick'] = function () {
        U3ndn.Y$U();
        var R_x = [
          arguments
        ];
        R_x[5] = r8no$;
        H9Y[866]['nextReplay']();
      };
      H9Y[23]['onclick'] = function () {
        var x0J = [
          arguments
        ];
        U3ndn.w30();
        x0J[8] = r8no$;
        if (H9Y[453]) {
          H9Y[453]['networkEngine']['sendArmRecord']();
        }
      };
      H9Y[38]['onmouseover'] = function () {
        var v1G = [
          arguments
        ];
        v1G[5] = r8no$;
        H9Y[70]['style']['visibility'] = 'inherit';
        V6D[67]['bhs']();
      };
      H9Y[38]['onmouseout'] = function () {
        var O4$ = [
          arguments
        ];
        O4$[9] = r8no$;
        H9Y[70]['style']['visibility'] = 'hidden';
      };
      H9Y[38]['onclick'] = function () {
        var m08 = [
          arguments
        ];
        m08[6] = r8no$;
        if (V6D[67]['guest']) {
          return;
        }
        if (!H9Y[41]) {
          return;
        }
        if (!(H9Y[41]['mid'] > 0)) {
          return;
        }
        $['post']('https://bonk2.io/scripts/map_fave.php', {
          token: H9Y[24],
          mapid: H9Y[41]['mid'],
          action: 'f'
        });
        H9Y[38]['classList']['add']('pretty_top_replay_fav_checked');
      };
      H9Y[26]['onmouseover'] = function () {
        var y7H = [
          arguments
        ];
        y7H[5] = r8no$;
        H9Y[68]['style']['visibility'] = 'inherit';
        V6D[67]['bhs']();
      };
      H9Y[26]['onmouseout'] = function () {
        U3ndn.Y$U();
        var A0T = [
          arguments
        ];
        A0T[7] = r8no$;
        H9Y[68]['style']['visibility'] = 'hidden';
      };
      H9Y[26]['onclick'] = function () {
        var g05 = [
          arguments
        ];
        U3ndn.w30();
        g05[6] = r8no$;
        H9Y[866]['reportReplay']();
      };
      H9Y[42]['onmouseover'] = function () {
        var y8I = [
          arguments
        ];
        y8I[7] = r8no$;
        H9Y[51]['style']['visibility'] = 'inherit';
      };
      H9Y[42]['onmouseout'] = function () {
        var P15 = [
          arguments
        ];
        P15[3] = r8no$;
        H9Y[51]['style']['visibility'] = 'hidden';
      };
      H9Y[94] = null;
      H9Y[33] = document['getElementById']('loginwindow');
      H9Y[79] = document['getElementById']('loginwindow_submitbutton');
      H9Y[79]['onmousedown'] = V6D[67]['bcs'];
      H9Y[79]['onmouseover'] = V6D[67]['bhs'];
      H9Y[73] = document['getElementById']('loginwindow_username');
      H9Y[52] = document['getElementById']('loginwindow_password');
      H9Y[47] = document['getElementById']('loginwindow_explain');
      H9Y[67] = document['getElementById']('loginwindow_remember_checkbox');
      H9Y[67]['onclick'] = V6D[67]['rlc'];
      H9Y[14] = document['getElementById']('registerwindow');
      H9Y[90] = document['getElementById']('registerwindow_submitbutton');
      H9Y[90]['onmousedown'] = V6D[67]['bcs'];
      H9Y[90]['onmouseover'] = V6D[67]['bhs'];
      H9Y[35] = document['getElementById']('registerwindow_username');
      H9Y[46] = document['getElementById']('registerwindow_password');
      H9Y[19] = document['getElementById']('registerwindow_remember_checkbox');
      H9Y[19]['onclick'] = V6D[67]['rlc'];
      H9Y[80] = document['getElementById']('account_close');
      H9Y[80]['onclick'] = c9I;
      H9Y[80]['onmousedown'] = V6D[67]['bbs'];
      H9Y[80]['onmouseover'] = V6D[67]['bhs'];
      H9Y[69] = document['getElementById']('newswindow');
      H9Y[36] = document['getElementById']('news_close');
      H9Y[36]['onclick'] = F$7;
      H9Y[36]['onmousedown'] = V6D[67]['bbs'];
      H9Y[36]['onmouseover'] = V6D[67]['bhs'];
      H9Y[39] = document['getElementById']('newswindow_title');
      H9Y[96] = document['getElementById']('newswindow_content');
      H9Y[77] = document['getElementById']('newswindow_back');
      H9Y[75] = document['getElementById']('newswindow_forward');
      H9Y[63] = document['getElementById']('friendsContainer');
      H9Y[29] = document['getElementById']('friends_close');
      H9Y[29]['onclick'] = V0R;
      H9Y[29]['onmousedown'] = V6D[67]['bbs'];
      H9Y[31] = document['getElementById']('friends_requests_table');
      H9Y[10] = document['getElementById']('friends_online_table');
      H9Y[97] = document['getElementById']('friends_offline_table');
      H9Y[85] = document['getElementById']('friends_legacy_table');
      H9Y[32] = document['getElementById']('friends_title_legacy');
      H9Y[32]['onclick'] = M9V;
      H9Y[86] = document['getElementById']('friends_refresh_button');
      H9Y[86]['onmousedown'] = V6D[67]['bcs'];
      H9Y[86]['onmouseover'] = V6D[67]['bhs'];
      H9Y[28] = document['getElementById']('friends_add_button');
      H9Y[28]['onmousedown'] = V6D[67]['bcs'];
      H9Y[28]['onmouseover'] = V6D[67]['bhs'];
      H9Y[21] = document['getElementById']('friendsSendWindowContainer');
      H9Y[44] = document['getElementById']('friendsSendWindow_cancel');
      H9Y[98] = document['getElementById']('friendsSendWindow_send');
      H9Y[65] = document['getElementById']('friendsSendWindow_name');
      H9Y[93] = document['getElementById']('friendsSendWindow_label');
      H9Y[17] = document['getElementById']('friendsSendWindow_responselabel');
      V6D[67]['setButtonSounds']([H9Y[98]]);
      H9Y[44]['onmouseover'] = V6D[67]['bhs'];
      H9Y[44]['onmousedown'] = V6D[67]['bbs'];
      H9Y[89] = document['getElementById']('sm_gameChoiceWindow');
      H9Y[24] = '';
      H9Y[49] = 'ar';
      H9Y[74] = false;
      H9Y[680] = false;
      H9Y[358] = false;
      H9Y[288] = false;
      H9Y[687] = false;
      H9Y[354] = false;
      H9Y[901] = 0;
      H9Y[460] = null;
      H9Y[508] = document['getElementById']('sm_gameChoiceQuickClassicCount');
      H9Y[197] = document['getElementById']('sm_gameChoiceQuickArrowsCount');
      H9Y[195] = document['getElementById']('sm_gameChoiceQuickGrappleCount');
      H9Y[649] = document['getElementById']('sm_gameChoiceQuickSimpleCount');
      H9Y[880] = document['getElementById']('sm_gameChoiceCustomCount');
      H9Y[648] = null;
      H9Y[866] = new X0(null, null, null);
      H9Y[866]['blur']();
      H9Y[866]['on']('replayCredit', function (k3y) {
        function z3o() {
          var B$D = [
            arguments
          ];
          B$D[4] = r8no$;
          if (H9Y[84]['style']['visibility'] != 'inherit' && k0f[0][0]['force'] != true) {
            return;
          }
          k0f[0][0]['force'] = false;
          while (H9Y[84]['firstChild']) {
            H9Y[84]['removeChild'](H9Y[84]['lastChild']);
          }
          if (k0f[0][0]['state'] == 1) {
            B$D[5] = document['createElement']('span');
            B$D[5]['textContent'] = k0f[0][0]['mn'];
            B$D[2] = document['createElement']('span');
            B$D[2]['textContent'] = ' by ';
            B$D[2]['style']['opacity'] = '0.6';
            B$D[7] = document['createElement']('span');
            B$D[7]['textContent'] = k0f[0][0]['ma'];
            H9Y[84]['appendChild'](B$D[5]);
            H9Y[84]['appendChild'](B$D[2]);
            H9Y[84]['appendChild'](B$D[7]);
            if (k0f[0][0]['rxn'] != '') {
              k0f[0][0]['state'] = 2;
            }
            return;
          }
          U3ndn.Y$U();
          if (k0f[0][0]['state'] == 2) {
            B$D[8] = document['createElement']('span');
            B$D[8]['textContent'] = '...based on ';
            B$D[8]['style']['opacity'] = '0.6';
            B$D[5] = document['createElement']('span');
            B$D[5]['textContent'] = k0f[0][0]['rxn'];
            B$D[2] = document['createElement']('span');
            B$D[2]['textContent'] = ' by ';
            B$D[2]['style']['opacity'] = '0.6';
            B$D[7] = document['createElement']('span');
            B$D[7]['textContent'] = k0f[0][0]['rxa'];
            H9Y[84]['appendChild'](B$D[8]);
            H9Y[84]['appendChild'](B$D[5]);
            H9Y[84]['appendChild'](B$D[2]);
            H9Y[84]['appendChild'](B$D[7]);
            k0f[0][0]['state'] = 1;
            return;
          }
        }
        var k0f = [
          arguments
        ];
        H9Y[41] = k0f[0][0];
        clearInterval(H9Y[773]);
        H9Y[773] = setInterval(z3o, 2500);
        z3o();
        m3N();
      });
      H9Y[347] = new H3;
      H9Y[347]['on']('hideSkinManager', J$1);
      H9Y[27]['addEventListener']('click', () =>{
        s2U();
        X_z();
      });
      H9Y[57]['addEventListener']('click', () =>{
        s2U();
        U3ndn.w30();
        a9C();
        X_z();
      });
      H9Y[18]['addEventListener']('click', () =>{
        var L0N = r8no$;
        s2U();
        H9Y[866][L0N[484]]();
        H9Y[672][L0N[640]]();
        H9Y[37] = false;
      });
      H9Y[87]['addEventListener']('click', () =>{
        U3ndn.Y$U();
        var G$C = r8no$;
        s2U();
        a9C();
        H9Y[866][G$C[484]]();
        H9Y[672][G$C[640]]();
        H9Y[37] = false;
      });
      H9Y[12]['addEventListener']('click', () =>{
        U3ndn.Y$U();
        a9C();
        t0j();
      });
      H9Y[30]['addEventListener']('click', () =>{
        var f_T = r8no$;
        if (H9Y[680]) {
          c0J();
        } else {
          s2U();
          H9Y[866][f_T[484]]();
          k0_();
        }
      });
      H9Y[20]['addEventListener']('click', () =>{
        U3ndn.Y$U();
        var E5_ = r8no$;
        s2U();
        H9Y[866][E5_[484]]();
        k$G();
      });
      H9Y[71]['addEventListener']('click', () =>{
        var A4g = r8no$;
        s2U();
        a9C();
        H9Y[866][A4g[484]]();
        k$G();
      });
      H9Y[56]['onmousedown'] = V6D[67]['bcs'];
      H9Y[59]['onmousedown'] = V6D[67]['bcs'];
      H9Y[30]['onmousedown'] = V6D[67]['bcs'];
      H9Y[27]['onmousedown'] = V6D[67]['bcs'];
      H9Y[61]['onmousedown'] = V6D[67]['bcs'];
      H9Y[61]['onmousedown'] = V6D[67]['bcs'];
      H9Y[76]['onmousedown'] = V6D[67]['bcs'];
      H9Y[20]['onmousedown'] = V6D[67]['bcs'];
      H9Y[18]['onmousedown'] = V6D[67]['bcs'];
      H9Y[40]['onmousedown'] = V6D[67]['bcs'];
      H9Y[81]['onmousedown'] = V6D[67]['bcs'];
      H9Y[55]['onclick'] = h3s;
      H9Y[88]['onclick'] = o7F;
      H9Y[54]['onclick'] = Q$k;
      H9Y[55]['onmouseenter'] = V6D[67]['rlh'];
      H9Y[88]['onmouseenter'] = V6D[67]['rlh'];
      H9Y[54]['onmouseenter'] = V6D[67]['rlh'];
      H9Y[804] = null;
      H9Y[142] = null;
      H9Y[61]['addEventListener']('click', () =>{
        i9q();
      });
      H9Y[61]['onmousedown'] = V6D[67]['bbs'];
      H9Y[79]['addEventListener']('click', F6E=>{
        U3ndn.w30();
        F$v();
      });
      H9Y[90]['addEventListener']('click', () =>{
        U3ndn.Y$U();
        W_w();
      });
      H9Y[59]['addEventListener']('click', () =>{
        s2U();
        A6q();
      });
      H9Y[16]['addEventListener']('click', () =>{
        a9C();
        s2U();
        A6q();
      });
      H9Y[77]['addEventListener']('click', () =>{
        var z7q = r8no$;
        U3ndn.z_y(1);
        H9Y[349] = Math[z7q[192]](0, U3ndn.E_K(H9Y[349], 1));
        F49(H9Y[349]);
      });
      H9Y[77]['onmousedown'] = V6D[67]['bcs'];
      H9Y[77]['onmouseover'] = V6D[67]['bhs'];
      H9Y[75]['addEventListener']('click', () =>{
        var p7W = r8no$;
        H9Y[349] = Math[p7W[193]](H9Y[881][p7W[47]] - 1, H9Y[349] + 1);
        F49(H9Y[349]);
      });
      H9Y[75]['onmousedown'] = V6D[67]['bcs'];
      H9Y[75]['onmouseover'] = V6D[67]['bhs'];
      H9Y[56]['addEventListener']('click', () =>{
        U3ndn.w30();
        s2U();
        G26();
      });
      H9Y[78]['addEventListener']('click', () =>{
        s2U();
        a9C();
        G26();
      });
      H9Y[86]['onclick'] = k44;
      H9Y[28]['onclick'] = d95;
      H9Y[44]['onclick'] = E7P;
      H9Y[98]['onclick'] = n85;
      V6D[67]['activateButtonSpinner'] = function (j5S) {
        U3ndn.w30();
        var o3a = [
          arguments
        ];
        o3a[6] = r8no$;
        if (o3a[0][0]['nodeName'] == 'SPAN') {
          o3a[0][0] = o3a[0][0]['parentNode'];
        }
        clearTimeout(o3a[0][0]['spinnerTimeout']);
        o3a[0][0]['spinnerTimeout'] = setTimeout(function () {
          var m0q = [
            arguments
          ];
          m0q[9] = r8no$;
          V6D[67]['deactivateButtonSpinner'](o3a[0][0]);
        }, 5000);
        o3a[0][0]['style']['pointerEvents'] = 'none';
        o3a[0][0]['childNodes'][3]['style']['display'] = 'block';
        o3a[0][0]['childNodes'][1]['style']['display'] = 'none';
      };
      V6D[67]['deactivateButtonSpinner'] = function (W91) {
        var d1q = [
          arguments
        ];
        d1q[2] = r8no$;
        if (d1q[0][0]['nodeName'] == 'SPAN') {
          d1q[0][0] = d1q[0][0]['parentNode'];
        }
        clearTimeout(d1q[0][0]['spinnerTimeout']);
        U3ndn.Y$U();
        d1q[0][0]['spinnerTimeout'] = null;
        d1q[0][0]['style']['pointerEvents'] = 'auto';
        d1q[0][0]['childNodes'][3]['style']['display'] = 'none';
        d1q[0][0]['childNodes'][1]['style']['display'] = 'block';
      };
      H9Y[119] = '';
      H9Y[453] = null;
      H9Y[463] = false;
      H9Y[254] = - 1;
      H9Y[151] = '';
      H9Y[642] = document['getElementById']('sm_connectingContainer');
      H9Y[735] = [
      ];
      H9Y[769] = document['getElementById']('sm_connectingWindow_topbar');
      H9Y[451] = document['getElementById']('sm_connectingWindow_text');
      H9Y[408] = document['getElementById']('sm_connectingWindowCancelButton');
      H9Y[408]['addEventListener']('click', function () {
        var q3v = [
          arguments
        ];
        q3v[4] = r8no$;
        U3ndn.w30();
        if (H9Y[453]) {
          H9Y[453]['destroy']();
          H9Y[453] = null;
        }
        c2B();
        H9Y[866]['unblur']();
        if (V6D[67]['classic']) {
          M$b();
        }
      });
      H9Y[408]['onmousedown'] = V6D[67]['bbs'];
      H9Y[408]['onmouseover'] = V6D[67]['bhs'];
      H9Y[2] = this;
      H9Y[672] = new D_;
      H9Y[672]['on']('create', t1A=>{
        U3ndn.Y$U();
        N89(t1A);
      });
      H9Y[672]['on']('joinRoom', (c1L, I0B) =>{
        U3ndn.w30();
        u80(c1L, I0B);
      });
      H9Y[672]['on']('roomListHidden', () =>{
        U3ndn.w30();
        var v1P = r8no$;
        H9Y[866][v1P[486]]();
        H9Y[37] = true;
        if (V6D[67][v1P[1076]]) {
          M$b();
        }
      });
      H9Y[881] = [
      ];
      H9Y[881]['push']({
        date: '2019-11-19',
        news: 'News window added. Login added. Fixed bug with shrinking platforms not working. Minor usability improvements.'
      });
      H9Y[881]['push']({
        date: '2019-11-20',
        news: 'Room list now shows gamemode.'
      });
      H9Y[881]['push']({
        date: '2019-11-22',
        news: 'Teams added. There can now be up to 4 teams, and collisions between friendly players can be turned on or off. Any bugs please email bugs@bonk.io'
      });
      H9Y[881]['push']({
        date: '2019-11-27',
        news: 'Added background replays to the main menu. Type \'record\' into in game chat to record that round and send it to the main menu. Added buttons to join individual teams. Fixed bug where level select window would get stuck open after being kicked. '
      });
      H9Y[881]['push']({
        date: '2019-11-29',
        news: 'Added menu music. Very large physics impacts will now knock you off your grapple in swing mode. When logged in, your maps and your favourites can now be selected from the Level Select window. Bug fixes.'
      });
      H9Y[881]['push']({
        date: '2019-12-07',
        news: 'Skins added. No editor, please use the old one for now. Swing mode improved, you can now only swing for a limited time until you let go. Better visuals to show how much longer you can hold on for. Will be tweaked and balanced. Fixed the game not running on devices that don\'t support WebGL. Fixed some players not colliding after switching back to FFA from Teams.'
      });
      H9Y[881]['push']({
        date: '2019-12-09',
        news: 'Fixed quick play logging you out. Fixed some skins not rendering in lobby. Fixed some skins rendering incorrectly. If your skin still doesn\'t look right please email bugs@bonk.io with your account name. Added sound for chat messages. Improved team skins to remove any ambiguity for which team you\'re on. Performance improvements for skin rendering in lobby.'
      });
      H9Y[881]['push']({
        date: '2019-12-12',
        news: 'More skin fixes and bug fixes. Restructured the main menu a bit. '
      });
      H9Y[881]['push']({
        date: '2019-12-13',
        news: 'Registration added.'
      });
      H9Y[881]['push']({
        date: '2019-12-16',
        news: '\'Remember me\' functionality added for accounts when logging in/registering.'
      });
      H9Y[881]['push']({
        date: '2019-12-19',
        news: 'Added forward/back/map credits to main menu replays. Fixed skins and the game appearing blurry on high resolution screens with display scaling. Fixed a memory leak that could cause the game to crash. Stars now shown on the news button to show there\'s news since the last time you played.'
      });
      H9Y[881]['push']({
        date: '2019-12-23',
        news: 'Added ability to customise the controls. They are saved to your account.'
      });
      H9Y[881]['push']({
        date: '2020-01-07',
        news: 'Fixed another bug with skins rendering incorrectly. Added profanity filter.'
      });
      H9Y[881]['push']({
        date: '2020-01-09',
        news: 'Swing renamed to grapple. Added alternate grapple mode, where you will grab on to whatever is closest, in any direction, as opposed to only sideways from your momentum like in regular grapple mode. Comments: bugs@bonk.io'
      });
      H9Y[881]['push']({
        date: '2020-01-13',
        news: 'Added experimental Arrows mode.'
      });
      H9Y[881]['push']({
        date: '2020-01-16',
        news: 'Ready ding added. Added friend system. Unlike Bonk 1, two players must both agree to be friends before they can see each other in the room list. Due to this your old friends have not been transferred to Bonk 2, but you can send them requests manually. There are some bugs, you can\'t join anyone in quick play or in a passworded room from the friends window yet. Issues? bugs@bonk.io '
      });
      H9Y[881]['push']({
        date: '2020-01-21',
        news: 'Arrow life increased from 3 seconds to 6. Grapple aim assist graphics no longer shown for enemy players. Swapped the add/refresh buttons on the friends window around. More visibility improvements for team skin colors. Arrows now same color as skin base color, or team color if playing teams. Team hits are now always off in team games. Arrows no longer hit friendly players. In arrows mode, added a delay at the start of each round before you can fire. Fixed arrows glitching when they come to a stop. Fixed arrow aim graphics not rotating smoothly.'
      });
      H9Y[881]['push']({
        date: '2020-01-22',
        news: 'Fixed \'initial data timeout\' bug when joining rooms. Added arrow picks category to the level select window. Made or know any good maps for Arrows? Email bugs@bonk.io and maybe it\'ll get on the list. Fixed team spawning. Map request chat text visibility improved. Arrows aim assist line slightly longer. Delay before you can fire at the start of an arrows round halved. '
      });
      H9Y[881]['push']({
        date: '2020-01-22 (2)',
        news: 'Fixed a bug causing lag and game crashes. '
      });
      H9Y[881]['push']({
        date: '2020-01-25',
        news: U3ndn.j31(1561) /*Added options to display FPS, and toggle anti aliasing -  "High quality graphics". The host of a custom room can now choose to make someone else the host, and give up being the host themself, without leaving. If you are scrolled up in the lobby chat, it no longer scrolls down to the bottom every time a message is received. When clicking [Load] on a requested map, the link changes color to show you previously clicked it. The lobby can be visually resized by dragging the bottom right corner. */ 
      });
      H9Y[881]['push']({
        date: '2020-01-30',
        news: 'Added Arrows mode quick play. Improved tutorial. Improved sound handling to prevent crashes and excessively loud sounds. New music added. Reduced the speed at which you can turn your aim in arrows mode from 6 to 5. This makes it easier to make small adjustments, and makes it strategically more important to keep track of which way you and your opponents last fired.'
      });
      H9Y[881]['push']({
        date: '2020-02-03',
        news: 'Fixed off screen chirp sound. Added 2 maps to arrows picks. Fixed recording replays in quick play crashing the game. Another skin rendering bug fix. Guests skin color is now randomised.'
      });
      H9Y[881]['push']({
        date: '2020-02-07',
        news: 'Added skin manager and skin editor. Friending someone in a custom game lobby now sends them a notification in the chat. Time taken to be kicked for being AFK in a quick play game greatly reduced.'
      });
      H9Y[881]['push']({
        date: '2020-02-13',
        news: 'When spawning in the same spawn as other players, you\'re now always drawn on top. Countdown added when starting a game. Added button sounds and general polish.'
      });
      H9Y[881]['push']({
        date: '2020-02-14',
        news: 'Reduced volume of some sounds. More polish. 2 more maps in arrows picks. '
      });
      H9Y[881]['push']({
        date: '2020-02-15',
        news: 'Fixed bug with team spawns not working correctly. Reduced time arrows stay on screen from 6 seconds to 5 seconds. Fixed blank screen bug when tabbing out mid game.'
      });
      H9Y[881]['push']({
        date: '2020-02-20',
        news: 'XP is now earned and progress towards your next level shown above the game. Currently 100xp is earned for each round won, this may be adjusted. Added new \'Fresh\' maplist to map load window. '
      });
      H9Y[881]['push']({
        date: '2020-02-26',
        news: 'Added text at the start of each round displaying the game mode, teams configuration and round win limit.  '
      });
      H9Y[881]['push']({
        date: '2020-03-01',
        news: 'Changed the main menu music to an experimental background drone. The light hearted music didn\'t really fit the game as well as it did in Bonk 1, and most users had it turned off, so trying a more serious tone. Comments bugs@bonk.io'
      });
      H9Y[881]['push']({
        date: '2020-03-01 (2)',
        news: 'Tuned some of the game sounds to harmonize with each other and reduced the player death sound volume. Comments bugs@bonk.io'
      });
      H9Y[881]['push']({
        date: '2020-03-05',
        news: 'Added death arrows mode.'
      });
      H9Y[881]['push']({
        date: '2020-03-16',
        news: 'Added more maps to arrows picks, and updated arrows quick play to use all of arrows picks. Level editor is coming next, hence the lack of updates.'
      });
      H9Y[881]['push']({
        date: '2020-04-21',
        news: 'Level editor is very nearly finished! This update makes some minor engine tweaks live so some of the new features of the editor can be tested in public. Expect more updates soon.'
      });
      H9Y[881]['push']({
        date: '2020-04-23',
        news: 'Added shadows to physical objects and players in game. Fixed death arrows black outline being outside the actual arrow. Fixed chat losing focus when going from in game to lobby. More engine tweaks.'
      });
      H9Y[881]['push']({
        date: '2020-04-23 (2)',
        news: 'Fixed bug in todays update causing game lockups and crashes. 1 map removed from arrows quick play.'
      });
      H9Y[881]['push']({
        date: '2020-04-25',
        news: 'Map editor released. For now you can save maps to your account but not release them publicly, this will come once a better voting/ranking system has been put in place. You can still load/suggest these maps in custom games. There will be bugs, please report them to bugs@bonk.io, along with any thoughts on the editor and new features. Please be aware that at this early stage there\'s a possibility that any maps you make may be deleted if there are significant changes in the future to the way maps are saved, so please don\'t spend too long on any masterpieces at this point. You currently have the ability to load anyones maps and save them to your account, though the original map makers credit will be saved with the map too. This is part of a system that will hopefully allow players to make variants/improvements to existing maps, without stealing them or not giving credit. '
      });
      H9Y[881]['push']({
        date: '2020-04-27',
        news: 'Fixed jump height being lower than in Bonk 1, controls may also feel more responsive now. Added a \'complex physics\' option to the Map Editor. Added an Anti-Tunnel option for platforms. Added more map size options. Maps now spawn green/yellow team players at green/yellow team spawns, unless the map doesn\'t have any green/yellow spawns, in which case it will spawn them at red/blue spawns. Fixed lots of editor bugs: joint draw line not being saved, rod joint softness 0 causing crashes, and a crash caused by polygons.'
      });
      H9Y[881]['push']({
        date: '2020-04-28',
        news: 'Main menu replays now give credit to the original map creator if it\'s not an original map. Added a snap grid to the editor, its size can be set in the Map Properties.'
      });
      H9Y[881]['push']({
        date: '2020-04-30',
        news: 'Map load window now auto refreshes your own maps when you open it. Publicly releasing and voting on maps is coming soon.'
      });
      H9Y[881]['push']({
        date: '2020-05-05',
        news: 'Added ability to publish maps, vote, and hotlist added. A previous update warned not to spend too long on maps because they may get wiped in a future update, this hasn\'t happened and there\'s no longer a risk of it. There\'s going to be some experimentation with the voting and ranking systems, right now you can only thumbs up maps, you can do it multiple times and you are encouraged to do it for maps you repeatedly play. Improved quality of results when searching for maps. Searching is currently only for B1 maps and will be added for B2 maps soon.'
      });
      H9Y[881]['push']({
        date: '2020-05-12',
        news: 'UI redesigned. Music added back in. Lots more polish coming. Added /mute and /unmute commands.'
      });
      H9Y[881]['push']({
        date: '2020-05-13',
        news: 'Fixed UI bug on low resolution devices. Fixed lobby and editor being able to be resized beyond the boundaries of the game.'
      });
      H9Y[881]['push']({
        date: '2020-05-16',
        news: 'Mostly fixed the game freezing after returning to it from a different browser tab. Players joining rooms with teams locked now always join as spectators. Fixed lobby chat not scrolling down to the bottom when returning from a game. In game chat opacity and font weight changed to block the game less and be more readable. Commands can be issued from in game chat. Chatting in quick play games resets AFK timer, and timer relaxed to be less strict. Changed mute behaviour so that anyone can mute anyone else, rather than only the host muting someone for the whole room. High quality graphics now defaults to off for ChromeOS devices.'
      });
      H9Y[881]['push']({
        date: '2020-05-21',
        news: 'Added searching for Bonk 2 maps, and adding maps to your favourites. Use /fav or /unfav in lobby or in game.'
      });
      H9Y[881]['push']({
        date: '2020-06-03',
        news: 'Streamlined game for new players. New simple game mode added for new players. Fixed map load window opening too large on some low resolution devices.'
      });
      H9Y[881]['push']({
        date: '2020-06-08',
        news: 'Menu menu top and bottom bars hide when moving mouse outside the game. Fixed auto login and fetching main menu replays sometimes failing. Fixed friend window opening too large on some low resolution devices.'
      });
      H9Y[881]['push']({
        date: '2020-06-11',
        news: 'Network optimisations and improvements. Any bugs: bugs@bonk.io'
      });
      H9Y[881]['push']({
        date: '2020-06-15',
        news: 'Greatly reduced lag, slowdown and memory usage that got progressively worse the longer you had been in game. Grapple Prox is now Grapple, and old Grapple has been removed. Map creators can now mark their maps as designed for a particular mode, and this is shown in the map load window. Added experimental fresh list for Bonk 2 maps.'
      });
      H9Y[881]['push']({
        date: '2020-06-18',
        news: 'Added room linking.'
      });
      H9Y[881]['push']({
        date: '2020-06-19',
        news: 'Added a new type of cap zone that is triggered by other physics objects instead of players, and will cause a team to instantly win. These can be used to easily make team based maps where for example getting a ball through a goal wins the round for the team.'
      });
      H9Y[881]['push']({
        date: '2020-06-23',
        news: 'Large FPS improvements especially when high quality graphics are enabled. Skins look sharper. Colored bands removed in team games, but colored outline thickness increased. Play buttons on main menu scale better. Reduced in game chat to 5 lines to help reduce blocking.'
      });
      H9Y[881]['push']({
        date: '2020-06-26',
        news: 'More big FPS improvements. Fixed the map load window and editor displaying incorrectly on Firefox.'
      });
      H9Y[881]['push']({
        date: '2020-07-04',
        news: 'Fixed skins displaying incorrectly in quick play, and fixed the tutorial not working. Replays now only capture the last 10 seconds up until the record button was pressed, to better highlight great moments rather than full rounds. Increased the power of the boosters on VTOL mode to make flying a bit easier.'
      });
      H9Y[881]['push']({
        date: '2020-08-10',
        news: 'Improved map voting to prompt players to vote in game, and changed to one vote per account.'
      });
      H9Y[881]['push']({
        date: '2020-08-11',
        news: 'Map load window updated to show more map information.'
      });
      H9Y[881]['push']({
        date: '2020-08-14',
        news: 'By default the space key now activates heavy, and a third set of keyboard controls can be configured. Small improvements to the custom game room list.'
      });
      H9Y[881]['push']({
        date: '2020-08-19',
        news: 'After each round the winners skin is now shown, and round transition animations have been tidied up. The game window no longer fills the entire screen on large monitors. Background gradient changed to be lighter so it\'s the same as in the old version of Bonk. Fixed \'player left\' messages sometimes not appearing in in-game chat.'
      });
      H9Y[881]['push']({
        date: '2020-08-22',
        news: 'Sound volumes increased to be the same as in Bonk 1. Small changes to the movement physics to put them back to how they are in Bonk 1: if you\'re moving up a slope you\'ll jump higher, and if you\'re moving down a slope you wont jump as high. If you\'re holding X and a direction key you\'ll change direction slightly slower than you did before. Performance optimisations to reduce frame rate drops and sounds sometimes being delayed. Screen shake increased to be about the same as in Bonk 1, and black bars at the edges of the screen during shake fixed. Max replay length increased to 15 seconds, and introduced a minimum length of 5 seconds. '
      });
      H9Y[881]['push']({
        date: '2020-08-25',
        news: 'Tweaked the sounds to allow some distortion and make bounce and collide sounds louder. Changed the high quality graphics option in the settings to instead be low/medium/high. On high the jagged edges that used to appear on some platforms has been fixed. Medium uses a fast anti aliasing method that\'s not as smooth but is a good compromise. Low has no anti aliasing and should give good framerates on most devices.'
      });
      H9Y[881]['push']({
        date: '2020-08-27',
        news: 'Added platform bounce particles. Changed death particles to be the same colors as the players skin. Added a button in the map editor to instantly test your map in game, with whoever else is in the room. Small visual improvements to the map editor UI. Fixed bug where white borders sometimes appear on the right and bottom edges of backgrounds. Fixed bug where the game would zoom right in at the end of each round.'
      });
      H9Y[881]['push']({
        date: '2020-09-19',
        news: 'Added football mode.'
      });
      H9Y[881]['push']({
        date: '2020-10-02',
        news: 'Classic quick play is now the same dynamic map rotation as in Bonk 1. Mid round countdown timer added. Support added for flying maps. Fixed players not being removed from the pitch in football mode when leaving mid game. Fixed bug causing jump to sometimes not work. Fixed bug in some Bonk 1 maps where rotation joints would sometimes be in the wrong position. This fix may have changed some rotation joints in existing Bonk 2 maps, unfortunately this is necessary to make the physics consistent across both versions of the game. '
      });
      H9Y[881]['push']({
        date: '2020-10-16',
        news: 'UI colors are back to the classic Bonk 1 style. Polished some menu and UI items. Fixed bug causing sounds to distort and eventually stop playing. Fixed bug causing the same replays to sometimes repeat. Custom game search bar removed.'
      });
      H9Y[881]['push']({
        date: '2020-10-19',
        news: 'Changed the default level select category from Fresh to Hot. When getting a link to share a custom room, the link is now automatically copied for you. Fixed bug in the editor where renaming a newly created spawn point would actually rename whatever you had selected previously. Fixed bug in the editor causing not all shapes to be deleted when deleting a body, which meant the \'physics shapes\' count was incorrect. Any maps that already have this bug will still have it, but the extra shapes that are stuck won\'t cause any performance slowdown. '
      });
      H9Y[881]['push']({
        date: '2020-10-24',
        news: 'Map voting now takes place after a game has finished, rather than between rounds. You can also favourite maps from this window, doing this will count as an upvote.'
      });
      H9Y[881]['push']({
        date: '2020-10-27',
        news: 'Editor updated so the dropdown for choosing the mode the map is intended for is more visible. When making a map it\'s important that you set this and don\'t just leave it! You can now delete your maps from the level select window, and also remove maps from your favourites list. Added a mute button to the player dropdown menu in the lobby, and added some mouse sounds that were missing.'
      });
      H9Y[881]['push']({
        date: '2020-10-28',
        news: 'Fixed bug causing some in game sounds to play twice. Mid round winner text font changed. Guest names and skin colors are now saved locally.'
      });
      H9Y[881]['push']({
        date: '2020-10-30',
        news: 'The hot list on the map load window is now separated into 3 categories: General, Grapple, and Death Arrows. Searching will still search all maps. Edits and Fresh have been removed. Added a count for the number of players currently online to the top bar.'
      });
      H9Y[881]['push']({
        date: '2020-11-04',
        news: 'In game chat restyled. Improvements to the lobby: when players minimise the browser or change browser tab their network bar will now turn grey to indicate this. Added a team lock button. Each players ping is now visible under their network bar, in milliseconds (ms). Lower number is better.  Small UI bugfixes and optimisations.'
      });
      H9Y[881]['push']({
        date: '2020-11-09',
        news: 'Grapple quick play released. The map rotation is currently a static rotation of 29 maps, and more will be added after in-game FPS has been improved.'
      });
      H9Y[881]['push']({
        date: '2020-12-03',
        news: 'Bugs? bugs@bonk.io! FPS improved especially on certain maps. Very large circles in maps may have pixelated edges as a result of the optimisations. Fixed bug causing phantom blue players to appear in quick play. Fixed bug causing players with no score to not show up in the score list in quick play. Fixed bug causing some players to see all skins, and the football pitch, as white. Improved appearance of skins to remove jagged edges. Improved team skins to have clearer colors. In arrows modes, heavy can no longer be used at the same time as drawing an arrow. Improved arrows aiming graphics. VTOL removed.'
      });
      H9Y[881]['push']({
        date: '2020-12-04',
        news: 'Fixed bug causing the camera to zoom in at the end of rounds for some players.'
      });
      H9Y[881]['push']({
        date: '2020-12-04 (2)',
        news: 'Fixed Simple quick play not working. Fixed death particles in team games not being the correct team colors. Fixed some minor UI bugs.'
      });
      H9Y[881]['push']({
        date: '2020-12-10',
        news: 'Added players skins next to each of their messages in the lobby to make keeping track of who\'s saying what much easier. Fixed arrows in team games not using team colors.'
      });
      H9Y[881]['push']({
        date: '2020-12-16',
        news: 'Replaced the FPS counter with a more simple one after discovering the old one was actually causing an FPS drop of about 5% itself. Improvements to the tutorial. Tutorial button is now top of the list for guests. Simplified the map load window to only have two categories for Bonk 2 maps - Hot and Death Arrows. The category is determined automatically: the \'For mode\' setting in the editor no longer affects which category your map will be shown in. Small editor improvements to the color picker and list of shapes. The type of shape is shown as a C, R or P, and it\'s shown in light grey if it\'s no physics. Lobby layout improved slightly.'
      });
      H9Y[881]['push']({
        date: '2020-12-23',
        news: 'Added mode filters to the custom game room list. Improvements to the skin editor, layers can now be any color you like. Dragging with the mouse across the preview with a layer selected will reposition the layer, and scrolling while the mouse is held down will scale the layer. If you also hold the shift key you will rotate the layer. Rooms with friends in them are now sorted by distance. Removed simple game mode. Fixed the game displaying incorrectly on some browsers with high zoom or display scaling settings. More polish to the UI.'
      });
      H9Y[881]['push']({
        date: '2021-01-11',
        news: 'RIP Flash :( Migrated to main domain. Fixed scaling issues on some high resolution devices caused by last update. Small bugfixes and improvements to the map editor. Friends list now shows friends from the Flash version of the game, so you can send them friend requests.'
      });
      H9Y[881]['push']({
        date: '2021-01-14',
        news: 'Fixed \'Stay logged in\' not working. Fixed issue with Bonk 1: My Maps and Bonk 1: My Favs lists not loading any more maps when you scrolled to the bottom, and with some map results showing up out of order. '
      });
      H9Y[881]['push']({
        date: '2021-01-18',
        news: 'Significant FPS improvements. Fixed map suggestions in custom games not working.'
      });
      H9Y[881]['push']({
        date: '2021-01-28',
        news: 'Reworked the grapple physics to be more reliable and consistent. Fixed bugs causing players and capture zones to sometimes but not always block grapples. Added a \'No grapple\' option for shapes in the editor, so you can easily set shapes to not be grappleable. The hack of using capture zones set to instant win will still also accomplish this, but you should update any maps to use \'No grapple\' instead because this hack may not work in the future. Added an \'inner grapple\' option for shapes in the editor, which allows players to grapple the edge of a platform from inside it. Fixed a GPU memory leak when the browser window was resized.'
      });
      H9Y[881]['push']({
        date: '2021-02-01',
        news: 'Added a report button for replays on the main menu. Minor map editor bugfixes and UI tweaks.'
      });
      H9Y[881]['push']({
        date: '2021-02-04',
        news: 'Replaced Bonk 1: Hot with Bonk 1: Top Rated. Fixed a bug where the map search parameters would be different to what the UI was showing.'
      });
      H9Y[881]['push']({
        date: '2021-02-18',
        news: 'Small bugfixes and optimisations. Changes to the maps in Arrows Quick Play: removed Trianglezzz by jorray. Added Stone Pillars by Team Arrows Ram, Partition Demolition by Team Arrows Ram, Cliffside by TheRedKirby, Arrow Grounds 2.0 by Ranker_717, and Arrows Warzone #4 by GudStrat.'
      });
      H9Y[881]['push']({
        date: '2021-05-07',
        news: 'Fixed the lobby chat sometimes failing to scroll down. When a room host leaves a room, they now have the option to end the room instead of transferring host to someone else.'
      });
      H9Y[881]['push']({
        date: '2021-05-11',
        news: 'Fixed exploit allowing arrows to be invisible.'
      });
      H9Y[881]['push']({
        date: '2021-05-18',
        news: U3ndn.j31(3092) /*•Fixed the empty blue player bug, this was also causing desyncs in quick play. 
•Hovering over the replay buttons now hides the brown main menu buttons. 
•Fixed the brown main menu buttons sometimes being hidden after returning from quick play.
•You can now double click rooms in the room list to join them, and hit the enter key after typing in a room password to connect.*/
      });
      H9Y[881]['push']({
        date: '2021-05-25',
        news: U3ndn.j31(787) /*•Fixed bug where two arrows fired at the same time appear as the same color.
•Added a button to favourite the map currently playing in the main menu replay
•Fixed bug where maps saved with grid sizes with decimal points in them would be rounded, so the grid didn't line up when the map was loaded back into the editor*/
      });
      H9Y[881]['push']({
        date: '2021-08-02',
        news: U3ndn.j31(3233) /*•Option to 'end room' when leaving a room you're hosting only shows if there are other players still present.
•Fixed bug in the skin rendering that could cause crashes.
•Improved the main menu appearance.*/
      });
      H9Y[881]['push']({
        date: '2021-08-20',
        news: U3ndn.j31(3091) /*•Added Picks category to the Map List. These maps are hand chosen by moderators. Please talk with them about any maps you think deserve to be on the Picks list, and work with them to get your maps good enough for the Picks list!
•Fixed custom game room links not working
•Fixed minor graphical issue with map like bars*/
      });
      H9Y[881]['push']({
        date: '2022-01-07',
        news: '•Added ability to change your account password, do it from the settings menu.'
      });
      H9Y[881]['push']({
        date: '2022-08-17',
        news: U3ndn.j31(1905) /*•Updated the classic quick play map rotation, thanks to Oo 0 oO for helping with this. The quickplay matchmaking algorithm is being adjusted over the next few days to place a higher priority on similar skill level and a lower priority on geographical distance.
•Added /roomname, /roompass, and /clearroompass commands to change custom room name and password settings from within the room.
•Added /clear command to clear the chat*/
      });
      H9Y[396] = [
        '',
        '',
        '',
        'CANCEL',
        '',
        '',
        'HELP',
        '',
        'BACK_SPACE',
        'TAB',
        '',
        '',
        'CLEAR',
        'ENTER',
        'ENTER_SPECIAL',
        '',
        'SHIFT',
        'CONTROL',
        'ALT',
        'PAUSE',
        'CAPS_LOCK',
        'KANA',
        'EISU',
        'JUNJA',
        'FINAL',
        'HANJA',
        '',
        'ESCAPE',
        'CONVERT',
        'NONCONVERT',
        'ACCEPT',
        'MODECHANGE',
        'SPACE',
        'PAGE_UP',
        'PAGE_DOWN',
        'END',
        'HOME',
        'LEFT ARROW',
        'UP ARROW',
        'RIGHT ARROW',
        'DOWN ARROW',
        'SELECT',
        'PRINT',
        'EXECUTE',
        'PRINTSCREEN',
        'INSERT',
        'DELETE',
        '',
        '0',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        'COLON',
        'SEMICOLON',
        'LESS_THAN',
        'EQUALS',
        'GREATER_THAN',
        'QUESTION_MARK',
        'AT',
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
        'O',
        'P',
        'Q',
        'R',
        'S',
        'T',
        'U',
        'V',
        'W',
        'X',
        'Y',
        'Z',
        'OS_KEY',
        '',
        'CONTEXT_MENU',
        '',
        'SLEEP',
        'NUMPAD0',
        'NUMPAD1',
        'NUMPAD2',
        'NUMPAD3',
        'NUMPAD4',
        'NUMPAD5',
        'NUMPAD6',
        'NUMPAD7',
        'NUMPAD8',
        'NUMPAD9',
        'NUMPAD *',
        'NUMPAD +',
        'SEPARATOR',
        'NUMPAD -',
        'NUMPAD DEL',
        '/',
        'F1',
        'F2',
        'F3',
        'F4',
        'F5',
        'F6',
        'F7',
        'F8',
        'F9',
        'F10',
        'F11',
        'F12',
        'F13',
        'F14',
        'F15',
        'F16',
        'F17',
        'F18',
        'F19',
        'F20',
        'F21',
        'F22',
        'F23',
        'F24',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        'NUM_LOCK',
        'SCROLL_LOCK',
        'WIN_OEM_FJ_JISHO',
        'WIN_OEM_FJ_MASSHOU',
        'WIN_OEM_FJ_TOUROKU',
        'WIN_OEM_FJ_LOYA',
        'WIN_OEM_FJ_ROYA',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        'CIRCUMFLEX',
        'EXCLAMATION',
        'DOUBLE_QUOTE',
        'HASH',
        'DOLLAR',
        'PERCENT',
        'AMPERSAND',
        'UNDERSCORE',
        'OPEN_PAREN',
        'CLOSE_PAREN',
        'ASTERISK',
        'PLUS',
        'PIPE',
        'HYPHEN_MINUS',
        'OPEN_CURLY_BRACKET',
        'CLOSE_CURLY_BRACKET',
        'TILDE',
        '',
        '',
        '',
        '',
        'VOLUME_MUTE',
        'VOLUME_DOWN',
        'VOLUME_UP',
        '',
        '',
        ';',
        '=',
        ',',
        '-',
        '.',
        '/',
        '\'',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        'OPEN_BRACKET',
        'BACK_SLASH',
        'CLOSE_BRACKET',
        'QUOTE',
        '',
        'META',
        'ALTGR',
        '',
        'WIN_ICO_HELP',
        'WIN_ICO_00',
        '',
        'WIN_ICO_CLEAR',
        '',
        '',
        'WIN_OEM_RESET',
        'WIN_OEM_JUMP',
        'WIN_OEM_PA1',
        'WIN_OEM_PA2',
        'WIN_OEM_PA3',
        'WIN_OEM_WSCTRL',
        'WIN_OEM_CUSEL',
        'WIN_OEM_ATTN',
        'WIN_OEM_FINISH',
        'WIN_OEM_COPY',
        'WIN_OEM_AUTO',
        'WIN_OEM_ENLW',
        'WIN_OEM_BACKTAB',
        'ATTN',
        'CRSEL',
        'EXSEL',
        'EREOF',
        'PLAY',
        'ZOOM',
        '',
        'PA1',
        'WIN_OEM_CLEAR',
        ''
      ];
      H9Y[396][999] = '';
      this['showGuestOrAccount'] = function () {
        var l$p = [
          arguments
        ];
        l$p[6] = r8no$;
        U3ndn.w30();
        H9Y[8]['style']['display'] = 'block';
      };
      this['showGuest'] = function () {
      };
      this['returnToMain'] = function () {
        var b0i = [
          arguments
        ];
        b0i[1] = r8no$;
        H9Y[8]['style']['display'] = 'block';
        c2B();
        H9Y[866]['resume']();
        O03();
        if (V6D[67]['musicMute'] == false) {
          this['startMusic']();
        }
        O9P();
        s7Z('slow');
        if (V6D[67]['classic']) {
          M$b();
        }
      };
      c70();
      setInterval(c70, 120000);
      V6D[67]['anTime'] = 200;
      V6D[67]['anDel'] = 100;
      this['hide'] = function () {
        var v7l = [
          arguments
        ];
        U3ndn.Y$U();
        v7l[7] = r8no$;
        H9Y[8]['style']['display'] = 'none';
        H9Y[866]['stop']();
        this['stopMusic']();
      };
      this['showing'] = function () {
        var x2G = [
          arguments
        ];
        x2G[8] = r8no$;
        U3ndn.S2t(220);
        x2G[3] = U3ndn.I8r(5967, 12, 9, 351, 5967);
        U3ndn.z_y(6);
        x2G[1] = U3ndn.E_K(73, 950);
        U3ndn.z_y(9);
        x2G[6] = U3ndn.I8r(81480, 892206, 11);
        return H9Y[8][r8no$[x2G[3]]][r8no$[x2G[1]]] != U3ndn.j31(x2G[6]);
      };
      this['startMusic'] = function () {
        var k$g = [
          arguments
        ];
        k$g[5] = r8no$;
        if (H9Y[7]) {
          H9Y[7]['off']('fade', v9m);
          H9Y[7]['off']('end', s5n);
          H9Y[7]['stop']();
        }
        if (++H9Y[4] > 1) {
          H9Y[4] = 0;
        }
        k$g[4] = '';
        if (H9Y[4] == 0) {
          k$g[4] = 'sound/128_wmb.mp3';
        } else {
          k$g[4] = 'sound/128_vdp.mp3';
        }
        H9Y[7] = new Howl({
          src: [
            k$g[4]
          ],
          volume: 0.4,
          loop: false
        });
        H9Y[7]['on']('end', s5n);
        H9Y[7]['play']();
      };
      this['stopMusic'] = function () {
        var Y5K = [
          arguments
        ];
        Y5K[6] = r8no$;
        U3ndn.w30();
        if (H9Y[7]) {
          H9Y[7]['fade'](H9Y[7]['_volume'], 0, 2000);
          H9Y[7]['on']('fade', v9m);
        }
      };
      this['straightIntoTutorial'] = function () {
        U3ndn.w30();
        X_z();
      };
      H9Y[757] = document['getElementById']('settingsContainer');
      H9Y[115] = document['getElementById']('settings_cancelButton');
      H9Y[738] = document['getElementById']('settings_close');
      H9Y[738]['onclick'] = c0J;
      H9Y[738]['onmousedown'] = V6D[67]['bbs'];
      H9Y[738]['onmouseover'] = V6D[67]['bhs'];
      H9Y[115]['onmousedown'] = V6D[67]['bbs'];
      H9Y[115]['onmouseover'] = V6D[67]['bhs'];
      H9Y[527] = document['getElementById']('settings_saveButton');
      H9Y[527]['onmousedown'] = V6D[67]['bcs'];
      H9Y[527]['onmouseover'] = V6D[67]['bhs'];
      H9Y[635] = document['getElementById']('redefineControls_table');
      H9Y[993] = document['getElementById']('settings_filterprofanity_checkbox');
      H9Y[224] = document['getElementById']('settings_fps_checkbox');
      H9Y[215] = document['getElementById']('settings_graphicsquality');
      H9Y[612] = document['getElementById']('settings_change_password_label');
      H9Y[993]['onchange'] = function (f0u) {
        var P_r = [
          arguments
        ];
        P_r[8] = r8no$;
        U3ndn.Y$U();
        H9Y[504]['filter'] = this['checked'];
      };
      H9Y[215]['onchange'] = function (c8F) {
        var b70 = [
          arguments
        ];
        b70[3] = r8no$;
        H9Y[504]['quality'] = parseInt(this['value']);
      };
      H9Y[224]['onchange'] = function (h8m) {
        U3ndn.Y$U();
        var A$S = [
          arguments
        ];
        A$S[2] = r8no$;
        H9Y[504]['stats'] = this['checked'];
      };
      H9Y[612]['onclick'] = function (e2O) {
        [
          arguments
        ];
        c0J();
        U3ndn.Y$U();
        a9C();
        N12();
      };
      H9Y[311] = 'left2';
      H9Y[160] = document['getElementById']('passwordChangeContainer');
      H9Y[499] = document['getElementById']('passwordChange_cancelButton');
      H9Y[246] = document['getElementById']('passwordChange_close');
      H9Y[797] = document['getElementById']('passwordChange_saveButton');
      H9Y[314] = document['getElementById']('passwordChange_statuslabel');
      H9Y[669] = document['getElementById']('passwordChange_oldpass');
      H9Y[491] = document['getElementById']('passwordChange_newpass1');
      H9Y[210] = document['getElementById']('passwordChange_newpass2');
      H9Y[499]['onclick'] = j6S;
      H9Y[246]['onclick'] = j6S;
      H9Y[797]['onclick'] = z2e;
      H9Y[365] = document['getElementById']('autoLoginContainer');
      H9Y[873] = document['getElementById']('autoLogin_cancelButton');
      H9Y[161] = document['getElementById']('autoLogin_text');
      H9Y[544] = document['getElementById']('guestOrAccountContainer');
      H9Y[131] = document['getElementById']('guestOrAccountContainer_guestButton');
      H9Y[747] = document['getElementById']('guestOrAccountContainer_accountButton');
      H9Y[447] = document['getElementById']('guestOrAccountContainer_guestBox');
      H9Y[703] = document['getElementById']('guestOrAccountContainer_accountBox');
      V6D[67]['setRollFunctions'](H9Y[131]);
      V6D[67]['setRollFunctions'](H9Y[747]);
      H9Y[131]['onmousedown'] = V6D[67]['bcs'];
      H9Y[747]['onmousedown'] = V6D[67]['bcs'];
      H9Y[983] = document['getElementById']('guestContainer');
      H9Y[284] = document['getElementById']('guest_close');
      H9Y[284]['onclick'] = P4v;
      H9Y[284]['onmousedown'] = V6D[67]['bbs'];
      H9Y[284]['onmouseover'] = V6D[67]['bhs'];
      H9Y[579] = document['getElementById']('guestPlayButton');
      V6D[67]['setRollFunctions'](H9Y[579]);
      H9Y[579]['onmousedown'] = V6D[67]['bcs'];
      H9Y[502] = document['getElementById']('guest_skinbox');
      H9Y[964] = document['getElementById']('guest_nametext');
      H9Y[231] = document['getElementById']('accountContainer');
      H9Y[204] = document['getElementById']('loginfieldtip');
      H9Y[141] = document['getElementById']('loginfieldtip_text');
      H9Y[968] = document['getElementById']('registerfieldtip');
      H9Y[241] = document['getElementById']('registerfieldtip_text');
      H9Y[613] = f1_();
      H9Y[107] = false;
      if (H9Y[613]) {
        A34(H9Y[613]);
      } else {
        w4K();
      }
      Q__('fast');
      document['addEventListener']('visibilitychange', A42=>{
        var L0H = r8no$;
        if (document[L0H[1132]] == 'visible') {
          t2d();
        } else {
          K3y();
        }
      });
    }
    V6D[15] = V6D[0][2]['Dynamics']['Joints']['b2DistanceJointDef'];
    V6D[29] = V6D[0][2]['Dynamics']['Joints']['b2GearJointDef'];
    function K_(Y3_, O3o, M5u, K7Z) {
      function K85() {
        n5f();
      }
      function s4R() {
        x5P();
        U3ndn.w30();
        R5c('favouriteMap');
        L5D();
      }
      function P49(p90, c9g, h2d, Q8G, F6Q) {
        var q7K = [
          arguments
        ];
        q7K[3] = r8no$;
        q7K[9] = document['createElement']('div');
        U3ndn.z_y(1);
        q7K[7] = U3ndn.I8r(873, 8);
        U3ndn.S2t(63);
        q7K[6] = U3ndn.E_K(18, 4, 3, 73076, 1380);
        U3ndn.z_y(13);
        q7K[2] = U3ndn.E_K(87, 789, 10);
        U3ndn.S2t(231);
        q7K[1] = U3ndn.I8r(4, 3065, 13, 20, 9);
        q7K[8] = S7y[65][r8no$[q7K[7]]] + S7y[65][r8no$[q7K[6]]] >= S7y[65][r8no$[q7K[2]]] - q7K[1];
        q7K[4] = document['createElement']('span');
        q7K[4]['style']['color'] = q7K[0][1];
        q7K[4]['classList']['add']('newbonklobby_chat_status');
        q7K[4]['appendChild'](document['createTextNode'](q7K[0][0] + ' '));
        q7K[9]['appendChild'](q7K[4]);
        if (q7K[0][3]) {
          q7K[5] = document['createElement']('span');
          q7K[5]['appendChild'](document['createTextNode']('[' + q7K[0][3] + ']'));
          q7K[5]['classList']['add']('newbonklobby_chat_link');
          q7K[5]['onclick'] = q7K[0][4];
          q7K[9]['appendChild'](q7K[5]);
        }
        S7y[65]['appendChild'](q7K[9]);
        if (S7y[65]['childElementCount'] > 250) {
          S7y[65]['removeChild'](S7y[65]['firstChild']);
        }
        if (q7K[8]) {
          S7y[65]['scrollTop'] = S7y[65]['scrollHeight'];
        }
        if (q7K[0][2]) {
          V6D[67]['playChatSound']();
        }
      }
      function s_P() {
        var s4w = [
          arguments
        ];
        s4w[9] = r8no$;
        t7o();
        S7y[89]['value'] = '';
        U3ndn.Y$U();
        S7y[94]['style']['visibility'] = 'inherit';
        S7y[63]['style']['visibility'] = 'hidden';
      }
      function X_M(w9w) {
        var t8S = [
          arguments
        ];
        t8S[1] = r8no$;
        if (!S7y[0][1][t8S[0][0]]) {
          return;
        }
        t8S[8] = S7y[0][1][t8S[0][0]]['userName'];
        S7y[8]['sendFriended'](t8S[0][0]);
        if (S7y[52][t8S[8]]) {
          P49('* You and ' + t8S[8] + ' are now friends', '#00675d', true);
          S7y[74] = setTimeout(function () {
            U3ndn.w30();
            var s5S = [
              arguments
            ];
            s5S[3] = r8no$;
            V6D[67]['updateFriends'](S7y[2]);
          }, 1000);
        } else {
          S7y[3][t8S[8]] = true;
        }
        $['post']('https://bonk2.io/scripts/friends.php', {
          token: S7y[2],
          task: 'send',
          theirname: t8S[8]
        }) ['fail'](function (A2C, V8i, O9i) {
          [
            arguments
          ];
        }) ['done']((b75, Z8v) =>{
        });
        S7y[52][t8S[8]] = undefined;
      }
      function r3c() {
        var I93 = [
          arguments
        ];
        I93[1] = r8no$;
        if (S7y[0][0]['autoJoinID'] == '') {
          return;
        }
        I93[7] = S7y[0][0]['autoJoinID']['toString']();
        while (I93[7]['length'] < 6) {
          U3ndn.S2t(14);
          I93[5] = U3ndn.E_K(2, 520, 2339);
          I93[7] = U3ndn.j31(I93[5]) + I93[7];
        }
        U3ndn.z_y(62);
        I93[2] = U3ndn.I8r(14, 443, 1751, 10, 872);
        U3ndn.z_y(90);
        I93[6] = U3ndn.E_K(5, 15, 9028, 9802);
        I93[4] = U3ndn.j31(I93[2]) + I93[7] + S7y[0][0][r8no$[I93[6]]];
        P49('* Send this link to your friends so they can join this game directly', '#0955c7', false);
        P49('* Your clipboard has been set to:', '#0955c7', false);
        P49('* ' + I93[4], '#0955c7', true);
        e5A(I93[4]);
      }
      function Z0l(T8i) {
        var t3G = [
          arguments
        ];
        t3G[6] = r8no$;
        if (S7y[1]['showingMapEditor']()) {
          return;
        }
        U3ndn.Y$U();
        if (S7y[8]['hostID'] == S7y[8]['getLSID']()) {
          S7y[0][2]['map'] = t3G[0][0];
          S7y[8]['sendMapAdd'](t3G[0][0]);
          S7y[1]['updateGameSettings']();
        } else {
          S7y[8]['sendMapSuggest'](t3G[0][0]);
        }
      }
      function N7V() {
        var v7$ = [
          arguments
        ];
        v7$[6] = r8no$;
        if (S7y[0][0]['hostID'] == S7y[0][0]['getLSID']()) {
          S7y[82]['show'](S7y[0][2]['map']);
          S7y[1]['hide']();
        }
      }
      function D3q() {
        U3ndn.Y$U();
        P49('* Countdown aborted!', '#0955c7', false);
      }
      function K_Z() {
        var F80 = [
          arguments
        ];
        F80[8] = r8no$;
        U3ndn.Y$U();
        if (S7y[0][2]['tea'] == false) {
          S7y[8]['changeOwnTeam'](1);
        } else {
          S7y[8]['changeOwnTeam'](2);
        }
      }
      function o7L(z_X) {
        var R08 = [
          arguments
        ];
        R08[9] = r8no$;
        if (R08[0][0]['keyCode'] == 13) {
          n1z();
        }
      }
      function M8B(r2w) {
        var W4p = [
          arguments
        ];
        if (W4p[0][0] == 'chat_rate_limit') {
          P49('* You\'re doing that too much!', '#cc4444', true);
        }
      }
      function C6P() {
        var j18 = [
          arguments
        ];
        j18[5] = r8no$;
        if (S7y[0][0]['hostID'] == S7y[0][0]['getLSID']()) {
          if (S7y[0][2]['tea'] == false) {
            S7y[0][2]['tea'] = true;
          } else if (S7y[0][2]['tea'] == true) {
            S7y[0][2]['tea'] = false;
            for (j18[7] = 0; j18[7] < S7y[0][1]['length']; j18[7]++) {
              if (S7y[0][1][j18[7]] && S7y[0][1][j18[7]]['team'] != 0) {
                S7y[0][1][j18[7]]['team'] = 1;
              }
            }
          }
          S7y[8]['sendTeamSettingsChange'](S7y[0][2]['tea']);
          S7y[1]['updateGameSettings']();
          S7y[1]['updatePlayers']();
        }
      }
      function t7o() {
        U3ndn.w30();
        var Q3l = [
          arguments
        ];
        Q3l[5] = r8no$;
        while (S7y[65]['firstChild']) {
          S7y[65]['removeChild'](S7y[65]['firstChild']);
        }
      }
      function y9n() {
        U3ndn.w30();
        var k4Y = [
          arguments
        ];
        k4Y[9] = r8no$;
        S7y[8]['changeOwnTeam'](3);
      }
      function D63() {
        var r7J = [
          arguments
        ];
        U3ndn.w30();
        r7J[2] = r8no$;
        S7y[8]['changeOwnTeam'](4);
      }
      function R5c(...b7e) {
        var Y_e = [
          arguments
        ];
        Y_e[3] = r8no$;
        Y_e[6] = b7e['shift']();
        for (Y_e[5] = 0; Y_e[5] < S7y[16]['length']; Y_e[5]++) {
          if (S7y[16][Y_e[5]]['eventName'] == Y_e[6]) {
            S7y[16][Y_e[5]]['callback'](...b7e);
            if (!S7y[16]) {
              break;
            }
          }
        }
      }
      function w1X() {
        U3ndn.Y$U();
        n5f();
      }
      function r4I() {
        var D6m = [
          arguments
        ];
        D6m[8] = r8no$;
        S7y[49]['element']['parentNode']['removeChild'](S7y[49]['element']);
        S7y[49]['element'] = null;
        S7y[49]['id'] = - 1;
        S7y[49]['playerElement']['classList']['remove']('newbonklobby_playerentry_menuhighlighted');
        S7y[71]['removeEventListener']('mousemove', K2W);
        S7y[71]['onclick'] = null;
      }
      function L5D() {
        U3ndn.w30();
        anime({
          targets: S7y[63],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            U3ndn.Y$U();
            var V81 = [
              arguments
            ];
            V81[7] = r8no$;
            S7y[63]['style']['visibility'] = 'hidden';
          }
        });
      }
      function R5y(v4I) {
        var j6E = [
          arguments
        ];
        j6E[6] = r8no$;
        if (S7y[88]['value'] == '') {
          return;
        }
        S7y[0][2]['wl'] = parseInt(S7y[88]['value']);
        S7y[0][2]['wl'] = Math['min'](Math['max'](1, S7y[0][2]['wl']), 9);
        if (isNaN(S7y[0][2]['wl'])) {
          S7y[0][2]['wl'] = 3;
        }
        S7y[88]['value'] = S7y[0][2]['wl'];
        S7y[8]['sendWL'](S7y[0][2]['wl']);
      }
      function K9N(P9E, v5Q, K29) {
        var z1O = [
          arguments
        ];
        z1O[3] = r8no$;
        S7y[84]['textContent'] = z1O[0][2];
        S7y[84]['style']['visibility'] = 'inherit';
        U3ndn.S2t(13);
        z1O[6] = U3ndn.I8r(7, 29, 16);
        U3ndn.w30();
        U3ndn.S2t(78);
        z1O[5] = U3ndn.E_K(9, 13, 15, 1258);
        S7y[84]['style']['left'] = z1O[0][0] - $(S7y[84]) ['width']() - z1O[6] + U3ndn.j31(z1O[5]);
        U3ndn.z_y(6);
        z1O[1] = U3ndn.E_K(106, 1163);
        S7y[84]['style']['top'] = z1O[0][1] + U3ndn.j31(z1O[1]);
      }
      function a1A() {
        var x14 = [
          arguments
        ];
        x14[5] = r8no$;
        S7y[8]['changeOwnTeam'](0);
      }
      function K2W(e1x) {
        var m7T = [
          arguments
        ];
        m7T[8] = r8no$;
        if (!S7y[49]['element']) {
          return;
        }
        m7T[2] = S7y[49]['element']['getBoundingClientRect']();
        U3ndn.S2t(127);
        m7T[7] = U3ndn.I8r(19247, 12932971, 14, 6, 8);
        U3ndn.z_y(179);
        m7T[6] = U3ndn.I8r(368, 7, 2, 283, 1470);
        U3ndn.z_y(87);
        m7T[5] = U3ndn.I8r(7, 20, 18, 3, 63);
        U3ndn.z_y(15);
        m7T[4] = U3ndn.I8r(7, 3822, 3535);
        U3ndn.S2t(26);
        m7T[58] = U3ndn.I8r(10, 0, 68, 7);
        m7T[9] = m7T[0][0][r8no$[m7T[7]]] - m7T[2][r8no$[m7T[6]]] - (m7T[2][r8no$[m7T[5]]] - m7T[2][r8no$[m7T[4]]]) / m7T[58];
        U3ndn.S2t(6);
        m7T[89] = U3ndn.E_K(1008, 6);
        U3ndn.z_y(6);
        m7T[88] = U3ndn.E_K(274, 273);
        U3ndn.S2t(1);
        m7T[25] = U3ndn.E_K(8205, 7658);
        U3ndn.z_y(178);
        U3ndn.w30();
        m7T[48] = U3ndn.I8r(1057, 63, 2, 8);
        U3ndn.S2t(130);
        m7T[86] = U3ndn.E_K(8, 20, 7, 4, 1);
        m7T[3] = m7T[0][0][r8no$[m7T[89]]] - m7T[2][r8no$[m7T[88]]] + (m7T[2][r8no$[m7T[25]]] - m7T[2][r8no$[m7T[48]]]) / m7T[86];
        U3ndn.S2t(33);
        m7T[1] = Math['sqrt'](U3ndn.E_K(m7T[9], m7T[3], m7T[9], m7T[3]));
        if (m7T[1] > 250) {
        }
      }
      function I3Z() {
        var Y4r = [
          arguments
        ];
        Y4r[9] = r8no$;
        S7y[8]['changeOwnTeam'](5);
      }
      function h8H(x$I) {
        var q7G = [
          arguments
        ];
        q7G[5] = r8no$;
        if (S7y[8]['hostID'] == S7y[8]['getLSID']()) {
          S7y[0][2]['map'] = q7G[0][0];
          S7y[8]['sendMapAdd'](q7G[0][0]);
          S7y[1]['updateGameSettings']();
        } else {
          S7y[8]['sendMapSuggest'](q7G[0][0]);
        }
      }
      function y_P() {
        var A5t = [
          arguments
        ];
        U3ndn.w30();
        A5t[8] = r8no$;
        L5D();
        V6D[67]['bbs']();
      }
      function s0H(m$3) {
        var w8D = [
          arguments
        ];
        w8D[5] = r8no$;
        if (w8D[0][0]['target'] == S7y[49]['playerElement'] || w8D[0][0]['target']['parentNode'] && w8D[0][0]['target']['parentNode'] == S7y[49]['element'] || w8D[0][0]['target'] == S7y[49]['element'] || w8D[0][0]['target']['parentNode'] && w8D[0][0]['target']['parentNode'] == S7y[49]['element']) {
        } else {
          r4I();
        }
      }
      function P5i() {
        var R7f = [
          arguments
        ];
        R7f[5] = r8no$;
        if (S7y[8]['getLSID']() == S7y[8]['hostID']) {
          S7y[8]['doTeamLock'](!S7y[0][2]['tl']);
        }
      }
      function p9q(p18) {
        var e53 = [
          arguments
        ];
        e53[7] = r8no$;
        P49('* Game starting in ' + e53[0][0], '#0955c7', false);
        U3ndn.Y$U();
        V6D[67]['playCountdownSound']();
      }
      function Q9P() {
        var A03 = [
          arguments
        ];
        A03[2] = r8no$;
        S7y[69]['show'](false);
      }
      function o5x() {
        var x5A = [
          arguments
        ];
        x5A[8] = r8no$;
        S7y[8]['setReady'](!S7y[0][1][S7y[0][0]['getLSID']()]['ready']);
      }
      function d3v() {
        var Q4m = [
          arguments
        ];
        U3ndn.w30();
        Q4m[2] = r8no$;
        if (S7y[62] > 0) {
          S7y[8]['sendStartCountdown'](S7y[62]);
        } else {
          R5c('startGame');
        }
        S7y[62]--;
        if (S7y[62] >= 0) {
          S7y[60] = setTimeout(d3v, 1000);
        }
      }
      function n1z() {
        var e1n = [
          arguments
        ];
        e1n[6] = r8no$;
        U3ndn.Y$U();
        if (document['activeElement'] == S7y[35]) {
          S7y[69]['doSearch']();
        }
        if (document['activeElement'] == S7y[89]) {
          if (S7y[89]['value']['substring'](0, 1) == '/') {
            R5c('processCommand', S7y[89]['value']);
          } else if (S7y[89]['value'] != '') {
            S7y[8]['chatMessage'](S7y[89]['value']);
          }
          S7y[89]['value'] = '';
          S7y[89]['blur']();
          S7y[94]['style']['visibility'] = 'inherit';
          S7y[89]['style']['pointerEvents'] = 'none';
        } else {
          S7y[89]['focus']();
          S7y[94]['style']['visibility'] = 'hidden';
          S7y[89]['style']['pointerEvents'] = 'auto';
        }
      }
      function n5f() {
        var H9U = [
          arguments
        ];
        H9U[9] = r8no$;
        S7y[84]['style']['visibility'] = 'hidden';
      }
      function e5A(p3P) {
        var z7_ = [
          arguments
        ];
        z7_[2] = r8no$;
        z7_[1] = document['createElement']('textarea');
        z7_[1]['value'] = z7_[0][0];
        z7_[1]['setAttribute']('readonly', '');
        z7_[1]['style'] = {
          position: 'absolute',
          left: '-9999px'
        };
        document['body']['appendChild'](z7_[1]);
        z7_[1]['select']();
        document['execCommand']('copy');
        document['body']['removeChild'](z7_[1]);
      }
      function x5P() {
        var q6P = [
          arguments
        ];
        q6P[5] = r8no$;
        S7y[8]['sendMapVote'](S7y[0][2]['map']['m']['dbid'], 1);
        V6D[67]['mapsVotedFor'][S7y[0][2]['map']['m']['dbid']] = true;
        U3ndn.Y$U();
        L5D();
      }
      function c8d(s_4) {
        var S_b = [
          arguments
        ];
        S_b[5] = r8no$;
        S_b[8] = V6D[61]['modes'][S7y[0][2]['mo']]['lobbyDescription'];
        U3ndn.S2t(6);
        S_b[3] = U3ndn.I8r(18, 276);
        U3ndn.S2t(1);
        S_b[2] = U3ndn.E_K(3234, 2940);
        S_b[9] = $(S_b[0][0]['target']) ['position']() [r8no$[S_b[3]]] + $(S_b[0][0]['target']) ['parent']() ['position']() [r8no$[S_b[2]]];
        U3ndn.z_y(220);
        S_b[4] = U3ndn.I8r(564, 7, 9, 421, 282);
        U3ndn.S2t(13);
        S_b[1] = U3ndn.I8r(537, 15, 5);
        S_b[6] = $(S_b[0][0]['target']) ['position']() [r8no$[S_b[4]]] + $(S_b[0][0]['target']) ['parent']() ['position']() [r8no$[S_b[1]]];
        K9N(S_b[9], S_b[6], S_b[8]);
      }
      function P4s() {
        U3ndn.Y$U();
        var k2c = [
          arguments
        ];
        k2c[6] = r8no$;
        S7y[8]['changeOwnTeam'](2);
      }
      function M_k() {
        var m79 = [
          arguments
        ];
        m79[9] = 728685239;
        m79[1] = 671346170;
        m79[2] = 2;
        for (m79[6] = 1; U3ndn.v9p(m79[6].toString(), m79[6].toString().length, 37106) !== m79[9]; m79[6]++) {
          m79[3] = r8no$;
          m79[2] += 2;
        }
        U3ndn.Y$U();
        if (U3ndn.P5V(m79[2].toString(), m79[2].toString().length, 17193) !== m79[1]) {
          m79[3] = r8no$;
        }
        if (S7y[0][0]['hostID'] == S7y[0][0]['getLSID']()) {
          m79[8] = V6D[61]['lobbyModes']['indexOf'](S7y[0][2]['mo']);
          m79[8]++;
          if (m79[8] >= V6D[61]['lobbyModes']['length']) {
            m79[8] = 0;
          }
          S7y[0][2]['mo'] = V6D[61]['lobbyModes'][m79[8]];
          if (S7y[0][2]['mo'] == 'f') {
            S7y[0][2]['ga'] = 'f';
            S7y[0][2]['tea'] = true;
            S7y[8]['sendTeamSettingsChange'](S7y[0][2]['tea']);
            S7y[1]['updatePlayers']();
          } else {
            S7y[0][2]['ga'] = 'b';
          }
          S7y[8]['sendGAMO'](S7y[0][2]['ga'], S7y[0][2]['mo']);
          S7y[1]['updateGameSettings']();
        }
      }
      function q1G(S6L) {
        var N6r = [
          arguments
        ];
        N6r[3] = r8no$;
        U3ndn.z_y(115);
        N6r[7] = U3ndn.E_K(90, 15, 287, 42);
        U3ndn.z_y(1);
        N6r[8] = U3ndn.E_K(312, 18);
        N6r[2] = $(N6r[0][0]['target']) ['position']() [r8no$[N6r[7]]] + $(N6r[0][0]['target']) ['parent']() ['position']() [r8no$[N6r[8]]];
        U3ndn.z_y(78);
        N6r[1] = U3ndn.I8r(20, 40, 8, 559);
        U3ndn.z_y(14);
        U3ndn.Y$U();
        N6r[6] = U3ndn.I8r(2, 68, 513);
        N6r[5] = $(N6r[0][0]['target']) ['position']() [r8no$[N6r[1]]] + $(N6r[0][0]['target']) ['parent']() ['position']() [r8no$[N6r[6]]];
        K9N(N6r[2], N6r[5], 'The editor hasn\'t been added to this game yet. In the meantime, you can still create maps on Bonk 1 and they will instantly be playable here.');
      }
      function O68() {
        var Z$3 = [
          arguments
        ];
        Z$3[4] = r8no$;
        S7y[8]['sendMapVote'](S7y[0][2]['map']['m']['dbid'], 0);
        V6D[67]['mapsVotedFor'][S7y[0][2]['map']['m']['dbid']] = true;
        L5D();
      }
      function S1I() {
        var h7f = [
          arguments
        ];
        h7f[7] = r8no$;
        if (S7y[0][0]['hostID'] != S7y[0][0]['getLSID']()) {
          return;
        }
        h7f[2] = 0;
        for (h7f[9] = 0; h7f[9] < S7y[0][1]['length']; h7f[9]++) {
          if (S7y[0][1][h7f[9]]) {
            h7f[2]++;
          }
        }
        if (h7f[2] == 1) {
          R5c('startGame');
        } else if (S7y[62] == - 1) {
          S7y[62] = 3;
          d3v();
          S7y[41]['textContent'] = 'ABORT';
        } else {
          S7y[62] = - 1;
          S7y[8]['sendAbortCountdown']();
          clearTimeout(S7y[60]);
          S7y[41]['textContent'] = 'START';
        }
      }
      var S7y = [
        arguments
      ];
      S7y[6] = r8no$;
      S7y[1] = this;
      this['visible'] = false;
      S7y[0][1] = S7y[0][1];
      S7y[0][2] = S7y[0][2];
      S7y[8] = S7y[0][0];
      S7y[9] = [
      ];
      S7y[7] = [
      ];
      S7y[5] = [
      ];
      S7y[2] = S7y[0][3];
      S7y[4] = '';
      S7y[3] = [
      ];
      S7y[52] = [
      ];
      S7y[71] = document['getElementById']('bonkiocontainer');
      S7y[29] = document['getElementById']('newbonklobby');
      S7y[94] = document['getElementById']('newbonklobby_chat_lowerinstruction');
      S7y[89] = document['getElementById']('newbonklobby_chat_input');
      S7y[65] = document['getElementById']('newbonklobby_chat_content');
      S7y[86] = document['getElementById']('newbonklobby_settingsbox');
      S7y[84] = document['getElementById']('newbonklobby_tooltip');
      S7y[17] = document['getElementById']('newbonklobby_modetext');
      S7y[28] = document['getElementById']('newbonklobby_maptext');
      S7y[73] = document['getElementById']('newbonklobby_mapauthortext');
      S7y[44] = document['getElementById']('newbonklobby_mappreviewcontainer');
      S7y[88] = document['getElementById']('newbonklobby_roundsinput');
      S7y[88]['oninput'] = R5y;
      S7y[17]['onmouseover'] = c8d;
      S7y[17]['onmouseout'] = w1X;
      S7y[53] = document['getElementById']('newbonklobby_specbox_elementcontainer');
      S7y[83] = document['getElementById']('newbonklobby_playerbox_elementcontainer');
      S7y[59] = document['getElementById']('newbonklobby_playerbox_middleline');
      S7y[54] = document['getElementById']('newbonklobby_playerbox_leftelementcontainer');
      S7y[32] = document['getElementById']('newbonklobby_playerbox_rightelementcontainer');
      S7y[35] = document['getElementById']('maploadwindowsearchinput');
      S7y[50] = document['getElementById']('newbonklobby_teambuttonscontainer');
      S7y[67] = document['getElementById']('newbonklobby_ffabutton');
      S7y[18] = document['getElementById']('newbonklobby_specbutton');
      S7y[77] = document['getElementById']('newbonklobby_teambuttonscontainer');
      S7y[97] = document['getElementById']('newbonklobby_redbutton');
      S7y[47] = document['getElementById']('newbonklobby_bluebutton');
      S7y[39] = document['getElementById']('newbonklobby_greenbutton');
      S7y[26] = document['getElementById']('newbonklobby_yellowbutton');
      S7y[66] = document['getElementById']('newbonklobby_teamlockbutton');
      S7y[63] = document['getElementById']('newbonklobby_votewindow_container');
      S7y[21] = document['getElementById']('newbonklobby_votewindow_close');
      S7y[51] = document['getElementById']('newbonklobby_votewindow_thumbcontainer');
      S7y[19] = document['getElementById']('newbonklobby_votewindow_maptitle_name');
      S7y[24] = document['getElementById']('newbonklobby_votewindow_maptitle_author');
      S7y[72] = document['getElementById']('newbonklobby_votewindow_votebutton_up');
      S7y[92] = document['getElementById']('newbonklobby_votewindow_votebutton_down');
      S7y[10] = document['getElementById']('newbonklobby_votewindow_votebutton_favourite');
      S7y[61] = document['getElementById']('newbonklobby_votewindow_votecount_up');
      S7y[36] = document['getElementById']('newbonklobby_votewindow_votecount_down');
      S7y[72]['onclick'] = x5P;
      S7y[92]['onclick'] = O68;
      S7y[10]['onclick'] = s4R;
      newbonklobby_votewindow_close['onclick'] = y_P;
      newbonklobby_votewindow_close['onmouseover'] = V6D[67]['bhs'];
      V6D[67]['setButtonSounds']([S7y[72],
      S7y[92],
      S7y[10]]);
      V6D[67]['setButtonSounds']([S7y[67],
      S7y[18],
      S7y[97],
      S7y[47],
      S7y[39],
      S7y[26],
      S7y[66]]);
      S7y[20] = [
      ];
      S7y[55] = [
      ];
      S7y[14] = [
      ];
      S7y[91] = [
      ];
      S7y[49] = {
        id: - 1,
        element: null
      };
      S7y[75] = null;
      S7y[34] = null;
      S7y[41] = document['getElementById']('newbonklobby_startbutton');
      S7y[68] = document['getElementById']('newbonklobby_mapbutton');
      S7y[25] = document['getElementById']('newbonklobby_readybutton');
      S7y[11] = document['getElementById']('newbonklobby_modebutton');
      S7y[85] = document['getElementById']('newbonklobby_editorbutton');
      S7y[42] = document['getElementById']('newbonklobby_linkbutton');
      S7y[81] = document['getElementById']('newbonklobby_teamsbutton');
      S7y[31] = document['getElementById']('newbonklobby_teams_middletext');
      V6D[67]['setButtonSounds']([S7y[41],
      S7y[68],
      S7y[25],
      S7y[11],
      S7y[81],
      S7y[85],
      S7y[42]]);
      S7y[41]['onclick'] = S1I;
      S7y[68]['onclick'] = Q9P;
      S7y[11]['onclick'] = M_k;
      S7y[25]['onclick'] = o5x;
      S7y[42]['onclick'] = r3c;
      S7y[85]['onclick'] = N7V;
      S7y[81]['onclick'] = C6P;
      S7y[67]['onclick'] = K_Z;
      S7y[18]['onclick'] = a1A;
      S7y[97]['onclick'] = P4s;
      S7y[47]['onclick'] = y9n;
      S7y[39]['onclick'] = D63;
      S7y[26]['onclick'] = I3Z;
      S7y[66]['onclick'] = P5i;
      S7y[8]['on']('status', M8B);
      S7y[8]['on']('countdown', p9q);
      S7y[8]['on']('countdownaborted', D3q);
      S7y[69] = new S$(S7y[2]);
      S7y[69]['on']('mapChosen', Z0l);
      S7y[82] = new A$(S7y[69], S7y[2]);
      S7y[82]['on']('backPressed', function (q4R) {
        var p4d = [
          arguments
        ];
        p4d[7] = r8no$;
        if (S7y[0][0]['hostID'] == S7y[0][0]['getLSID']()) {
          h8H(p4d[0][0]);
        }
        S7y[1]['show']();
      });
      S7y[82]['on']('testMap', function (Z19) {
        U3ndn.Y$U();
        var z6$ = [
          arguments
        ];
        R5c('testMap', z6$[0][0]);
      });
      s_P();
      this['wipeChatContent'] = t7o;
      S7y[62] = - 1;
      S7y[16] = [
      ];
      this['on'] = function (f77, P0w) {
        var Y$D = [
          arguments
        ];
        Y$D[9] = r8no$;
        S7y[16]['push']({
          eventName: Y$D[0][0],
          callback: Y$D[0][1]
        });
      };
      this['showStatusMessage'] = P49;
      this['recvMapSuggest'] = function (L6J, R7U) {
        var J_N = [
          arguments
        ];
        J_N[3] = r8no$;
        S7y[9]['push'](J_N[0][0]);
        J_N[5] = document['createElement']('div');
        U3ndn.S2t(13);
        J_N[91] = U3ndn.I8r(46, 836, 17);
        U3ndn.S2t(1);
        J_N[69] = U3ndn.E_K(1390, 18);
        U3ndn.S2t(17);
        J_N[35] = U3ndn.E_K(1, 863, 2);
        U3ndn.z_y(72);
        J_N[21] = U3ndn.I8r(9, 17, 31);
        J_N[8] = S7y[65][r8no$[J_N[91]]] + S7y[65][r8no$[J_N[69]]] >= S7y[65][r8no$[J_N[35]]] - J_N[21];
        J_N[2] = '';
        if (S7y[0][1][J_N[0][1]]) {
          J_N[2] = S7y[0][1][J_N[0][1]]['userName'];
        }
        J_N[4] = document['createElement']('br');
        J_N[4]['classList']['add']('newbonklobby_chat_br');
        J_N[6] = document['createElement']('span');
        J_N[6]['classList']['add']('newbonklobby_chat_msg_name');
        J_N[6]['appendChild'](document['createTextNode']('* ' + J_N[2]));
        J_N[9] = document['createElement']('span');
        J_N[9]['classList']['add']('newbonklobby_mapsuggest_low');
        J_N[9]['appendChild'](document['createTextNode'](' requests '));
        J_N[7] = document['createElement']('span');
        J_N[7]['classList']['add']('newbonklobby_mapsuggest_high');
        J_N[7]['appendChild'](document['createTextNode'](J_N[0][0]['m']['n']));
        J_N[1] = document['createElement']('span');
        J_N[1]['classList']['add']('newbonklobby_mapsuggest_low');
        J_N[1]['appendChild'](document['createTextNode'](' by '));
        J_N[95] = document['createElement']('span');
        J_N[95]['classList']['add']('newbonklobby_mapsuggest_high');
        J_N[95]['appendChild'](document['createTextNode'](J_N[0][0]['m']['a'] + ' '));
        J_N[20] = document['createElement']('span');
        J_N[20]['classList']['add']('newbonklobby_mapsuggest_high');
        J_N[20]['classList']['add']('newbonklobby_chat_link');
        J_N[20]['appendChild'](document['createTextNode']('[Load]'));
        V6D[67]['setButtonSounds']([J_N[20]]);
        U3ndn.S2t(28);
        J_N[18] = U3ndn.E_K(46, 5, 19, 24);
        U3ndn.S2t(18);
        J_N[82] = U3ndn.I8r(14, 3, 10, 0);
        J_N[20]['suggestID'] = S7y[9][r8no$[J_N[18]]] - J_N[82];
        J_N[20]['onclick'] = function () {
          var t8K = [
            arguments
          ];
          t8K[4] = r8no$;
          if (S7y[8]['hostID'] != S7y[8]['getLSID']()) {
            return;
          }
          this['style']['color'] = '#7a199a';
          t8K[2] = this['suggestID'];
          S7y[0][2]['map'] = S7y[9][t8K[2]];
          U3ndn.Y$U();
          S7y[1]['updateGameSettings']();
          S7y[8]['sendMapAdd'](S7y[9][t8K[2]]);
        };
        J_N[5]['appendChild'](J_N[6]);
        J_N[5]['appendChild'](J_N[9]);
        J_N[5]['appendChild'](J_N[7]);
        J_N[5]['appendChild'](J_N[1]);
        J_N[5]['appendChild'](J_N[95]);
        J_N[5]['appendChild'](J_N[20]);
        S7y[65]['appendChild'](J_N[5]);
        if (S7y[65]['childElementCount'] > 250) {
          S7y[65]['removeChild'](S7y[65]['firstChild']);
        }
        if (J_N[8]) {
          S7y[65]['scrollTop'] = S7y[65]['scrollHeight'];
        }
        V6D[67]['playChatSound']();
      };
      this['recvMapSuggestClient'] = function (g9N, M1k, i_0) {
        var B1h = [
          arguments
        ];
        B1h[7] = r8no$;
        B1h[6] = document['createElement']('div');
        B1h[8] = '';
        if (S7y[0][1][B1h[0][2]]) {
          B1h[8] = S7y[0][1][B1h[0][2]]['userName'];
        }
        U3ndn.z_y(42);
        B1h[63] = U3ndn.E_K(7801, 20, 433, 6);
        U3ndn.S2t(85);
        B1h[17] = U3ndn.E_K(1378, 8232, 3, 6);
        U3ndn.z_y(19);
        B1h[90] = U3ndn.E_K(0, 3, 18, 3, 848);
        U3ndn.z_y(57);
        B1h[56] = U3ndn.I8r(14, 19);
        B1h[9] = S7y[65][r8no$[B1h[63]]] + S7y[65][r8no$[B1h[17]]] >= S7y[65][r8no$[B1h[90]]] - B1h[56];
        B1h[5] = document['createElement']('span');
        B1h[5]['classList']['add']('newbonklobby_chat_msg_name');
        B1h[5]['appendChild'](document['createTextNode']('* ' + B1h[8]));
        B1h[4] = document['createElement']('span');
        B1h[4]['classList']['add']('newbonklobby_mapsuggest_low');
        B1h[4]['appendChild'](document['createTextNode'](' requests '));
        B1h[3] = document['createElement']('span');
        B1h[3]['classList']['add']('newbonklobby_mapsuggest_high');
        B1h[3]['appendChild'](document['createTextNode'](B1h[0][0]));
        B1h[2] = document['createElement']('span');
        B1h[2]['classList']['add']('newbonklobby_mapsuggest_low');
        U3ndn.Y$U();
        B1h[2]['appendChild'](document['createTextNode'](' by '));
        B1h[1] = document['createElement']('span');
        B1h[1]['classList']['add']('newbonklobby_mapsuggest_high');
        B1h[1]['appendChild'](document['createTextNode'](B1h[0][1] + ' '));
        B1h[6]['appendChild'](B1h[5]);
        B1h[6]['appendChild'](B1h[4]);
        B1h[6]['appendChild'](B1h[3]);
        B1h[6]['appendChild'](B1h[2]);
        B1h[6]['appendChild'](B1h[1]);
        S7y[65]['appendChild'](B1h[6]);
        if (S7y[65]['childElementCount'] > 250) {
          S7y[65]['removeChild'](S7y[65]['firstChild']);
        }
        if (B1h[9]) {
          S7y[65]['scrollTop'] = S7y[65]['scrollHeight'];
        }
        V6D[67]['playChatSound']();
      };
      this['recvChatMessage'] = function (x2H, A0o, X9h) {
        var v8g = [
          arguments
        ];
        v8g[5] = r8no$;
        if (S7y[65]['childElementCount'] > 150) {
          S7y[65]['removeChild'](S7y[65]['firstChild']);
        }
        v8g[4] = document['createElement']('div');
        U3ndn.Y$U();
        S7y[65]['appendChild'](v8g[4]);
        U3ndn.z_y(1);
        v8g[35] = U3ndn.I8r(11245, 10380);
        U3ndn.S2t(45);
        v8g[33] = U3ndn.E_K(10, 12, 161588, 1358);
        U3ndn.z_y(6);
        v8g[58] = U3ndn.E_K(846, 20);
        U3ndn.S2t(182);
        v8g[88] = U3ndn.I8r(3, 10, 15);
        v8g[1] = S7y[65][r8no$[v8g[35]]] + S7y[65][r8no$[v8g[33]]] >= S7y[65][r8no$[v8g[58]]] - v8g[88];
        v8g[2] = '#448aff';
        if (S7y[0][1][v8g[0][1]] && S7y[0][1][v8g[0][1]]['avatar']) {
          v8g[2] = V6D[67]['numToHex'](S7y[0][1][v8g[0][1]]['avatar']['bc']);
        }
        v8g[8] = document['createElement']('div');
        v8g[8]['classList']['add']('newbonklobby_chat_msg_colorbox');
        v8g[4]['appendChild'](v8g[8]);
        if (S7y[5][v8g[0][1]] && S7y[5][v8g[0][1]][1]) {
          v8g[8]['appendChild'](S7y[5][v8g[0][1]][1]['cloneNode'](true));
        } else {
          try {
            N2['createImage'](S7y[0][1][v8g[0][1]]['avatar'], 1, v8g[8], 'newbonklobby_chat_msg_avatar', 12, 12, S7y[5], v8g[0][1], 1, 2, 0.1, 0.5);
          } catch (O_j) {
          }
        }
        v8g[6] = document['createElement']('span');
        v8g[6]['classList']['add']('newbonklobby_chat_msg_name');
        v8g[4]['appendChild'](v8g[6]);
        v8g[7] = document['createTextNode'](v8g[0][0] + ': ');
        v8g[6]['appendChild'](v8g[7]);
        v8g[3] = document['createElement']('span');
        v8g[3]['classList']['add']('newbonklobby_chat_msg_txt');
        v8g[9] = document['createTextNode'](v8g[0][2]);
        v8g[3]['appendChild'](v8g[9]);
        v8g[4]['appendChild'](v8g[3]);
        if (v8g[1]) {
          S7y[65]['scrollTop'] = S7y[65]['scrollHeight'];
        }
        V6D[67]['playChatSound']();
        S7y[4] = v8g[0][0];
      };
      this['handlePlayerJoined'] = function (d7e) {
        var I1f = [
          arguments
        ];
        I1f[7] = r8no$;
        P49('* ' + I1f[0][0] + ' has joined the game', '#cc3333', true);
        this['updatePlayers']();
      };
      this['handlePlayerLeft'] = function (x82) {
        U3ndn.Y$U();
        var F4f = [
          arguments
        ];
        F4f[3] = r8no$;
        P49('* ' + F4f[0][0] + ' has left the game', '#cc3333', true);
        this['updatePlayers']();
      };
      this['handleHostLeft'] = function (C_z, H1t) {
        var X7K = [
          arguments
        ];
        X7K[7] = r8no$;
        if (X7K[0][1] == - 1) {
          P49('* ' + X7K[0][0] + ' has left the game and closed the room.', '#cc3333', true);
        } else {
          X7K[9] = '';
          if (S7y[0][1][X7K[0][1]]) {
            X7K[9] = S7y[0][1][X7K[0][1]]['userName'];
          }
          P49('* ' + X7K[0][0] + ' has left the game and ' + X7K[9] + ' is now the game host.', '#cc3333', true);
        }
        if (X7K[0][1] == S7y[8]['getLSID']()) {
          P49('* You are now the host of this game.', '#800d6e', false);
        }
        this['updatePlayers']();
        this['updateGameSettings']();
      };
      this['handleHostChange'] = function (f9z, F0G) {
        var d5o = [
          arguments
        ];
        d5o[3] = r8no$;
        d5o[4] = '';
        if (S7y[0][1][d5o[0][0]]) {
          d5o[4] = S7y[0][1][d5o[0][0]]['userName'];
        }
        d5o[6] = '';
        if (S7y[0][1][d5o[0][1]]) {
          d5o[6] = S7y[0][1][d5o[0][1]]['userName'];
        }
        P49('* ' + d5o[4] + ' has given host privileges to ' + d5o[6] + ', who is now the game host.', '#cc3333', true);
        if (d5o[0][1] == S7y[8]['getLSID']()) {
          P49('* You are now the host of this game', '#800d6e', false);
        }
        this['updatePlayers']();
        this['updateGameSettings']();
      };
      this['updatePlayers'] = function () {
        var X86 = [
          arguments
        ];
        X86[8] = r8no$;
        if (!this['visible']) {
          return;
        }
        for (X86[5] = 0; X86[5] < S7y[20]['length']; X86[5]++) {
          if (S7y[20][X86[5]]) {
            S7y[20][X86[5]]['parentNode']['removeChild'](S7y[20][X86[5]]);
          }
        }
        S7y[20] = [
        ];
        S7y[55] = [
        ];
        X86[3] = function (T7C) {
          var E55 = [
            arguments
          ];
          E55[5] = r8no$;
          if (S7y[0][1][E55[0][0]]) {
            E55[8] = document['createElement']('div');
            E55[8]['classList']['add']('newbonklobby_playerentry');
            E55[8]['onmouseenter'] = V6D[67]['rlh'];
            E55[8]['onmousedown'] = V6D[67]['rlc'];
            if (S7y[0][1][E55[0][0]]['team'] == 0 || S7y[0][1][E55[0][0]]['team'] == 1 && S7y[0][2]['tea'] == true || V6D[61]['modes'][S7y[0][2]['mo']]['forceTeamCount'] == 2 && S7y[0][1][E55[0][0]]['team'] >= 4) {
              S7y[53]['appendChild'](E55[8]);
            } else if (V6D[61]['modes'][S7y[0][2]['mo']]['forceTeamCount'] == 2) {
              if (S7y[0][1][E55[0][0]]['team'] == 3) {
                S7y[54]['appendChild'](E55[8]);
                E55[8]['oneLevelDeeper'] = true;
              }
              if (S7y[0][1][E55[0][0]]['team'] == 2) {
                S7y[32]['appendChild'](E55[8]);
                E55[8]['oneLevelDeeper'] = true;
              }
            } else {
              S7y[83]['insertBefore'](E55[8], S7y[59]);
              E55[8]['classList']['add']('newbonklobby_playerentry_half');
            }
            E55[2] = document['createElement']('div');
            E55[2]['classList']['add']('newbonklobby_playerentry_avatar');
            E55[8]['appendChild'](E55[2]);
            if (S7y[7][E55[0][0]] && S7y[7][E55[0][0]][S7y[0][1][E55[0][0]]['team']]) {
              E55[2]['appendChild'](S7y[7][E55[0][0]][S7y[0][1][E55[0][0]]['team']]);
            } else {
              try {
                N2['createImage'](S7y[0][1][E55[0][0]]['avatar'], S7y[0][1][E55[0][0]]['team'], E55[2], '', 36, 36, S7y[7], E55[0][0], S7y[0][1][E55[0][0]]['team'], 2, 0.08, 0.3);
              } catch (l3F) {
              }
            }
            E55[9] = document['createElement']('div');
            E55[52] = - 338545695;
            E55[62] = - 1975131517;
            E55[18] = 2;
            for (E55[41] = 1; U3ndn.P5V(E55[41].toString(), E55[41].toString().length, 60233) !== E55[52]; E55[41]++) {
              E55[9]['SetRadius']['help']('');
              E55[8]['createTextNode'](E55[9]);
              E55[18] += 2;
            }
            if (U3ndn.P5V(E55[18].toString(), E55[18].toString().length, 68946) !== E55[62]) {
              E55[9]['classList']['add']('newbonklobby_playerentry_name');
              E55[8]['appendChild'](E55[9]);
            }
            E55[9]['textContent'] = S7y[0][1][E55[0][0]]['userName'];
            E55[4] = document['createElement']('div');
            E55[4]['classList']['add']('newbonklobby_playerentry_level');
            E55[8]['appendChild'](E55[4]);
            if (S7y[0][1][E55[0][0]]['guest']) {
              E55[4]['textContent'] = 'Guest';
            } else {
              U3ndn.z_y(6);
              E55[59] = U3ndn.I8r(75, 1429);
              U3ndn.z_y(6);
              E55[73] = U3ndn.I8r(635, 4);
              E55[4]['textContent'] = U3ndn.j31(E55[59]) + S7y[0][1][E55[0][0]][r8no$[E55[73]]];
            }
            E55[3] = document['createElement']('div');
            E55[3]['classList']['add']('newbonklobby_playerentry_balance');
            E55[8]['appendChild'](E55[3]);
            if (S7y[0][2]['bal'][E55[0][0]] && S7y[0][2]['bal'][E55[0][0]] != 0) {
              if (S7y[0][2]['bal'][E55[0][0]] > 0) {
                E55[3]['classList']['add']('newbonklobby_playerentry_balance_buff');
                U3ndn.z_y(1);
                E55[69] = U3ndn.E_K(952, 11);
                U3ndn.S2t(17);
                E55[65] = U3ndn.I8r(7, 175, 9);
                U3ndn.z_y(18);
                E55[79] = U3ndn.E_K(11, 18, 13349, 14840);
                E55[3]['textContent'] = U3ndn.j31(E55[69]) + S7y[0][2][r8no$[E55[65]]][E55[0][0]] + U3ndn.j31(E55[79]);
              } else {
                E55[3]['classList']['add']('newbonklobby_playerentry_balance_nerf');
                U3ndn.S2t(168);
                E55[49] = U3ndn.I8r(8, 14, 2, 2316, 2483);
                U3ndn.z_y(14);
                E55[13] = U3ndn.E_K(53, 371, 1477);
                E55[3]['textContent'] = S7y[0][2][r8no$[E55[49]]][E55[0][0]] + U3ndn.j31(E55[13]);
              }
            }
            E55[1] = document['createElement']('img');
            E55[1]['src'] = 'graphics/ping_5.png';
            E55[1]['classList']['add']('newbonklobby_playerentry_ping');
            E55[8]['appendChild'](E55[1]);
            E55[7] = document['createElement']('div');
            E55[7]['classList']['add']('newbonklobby_playerentry_pingtext');
            E55[8]['appendChild'](E55[7]);
            S7y[55][E55[0][0]] = {
              img: E55[1],
              text: E55[7]
            };
            if (S7y[0][1][E55[0][0]]['ready']) {
              E55[6] = document['createElement']('img');
              E55[6]['src'] = 'graphics/readytick.png';
              E55[6]['classList']['add']('newbonklobby_playerentry_ready');
              E55[8]['appendChild'](E55[6]);
            }
            E55[22] = document['createElement']('img');
            E55[22]['src'] = 'graphics/host_0.png';
            E55[22]['classList']['add']('newbonklobby_playerentry_host');
            E55[8]['appendChild'](E55[22]);
            S7y[14][E55[0][0]] = E55[22];
            S7y[20][E55[0][0]] = E55[8];
            E55[8]['onclick'] = function () {
              function S0c(n1q) {
                var m2D = [
                  arguments
                ];
                U3ndn.Y$U();
                m2D[2] = r8no$;
                if (m2D[0][0] < 0) {
                  U3ndn.S2t(13);
                  m2D[1] = U3ndn.E_K(305, 3675, 20);
                  U3ndn.z_y(6);
                  m2D[5] = U3ndn.E_K(124, 1360);
                  return U3ndn.j31(m2D[1]) + Math['abs'](m2D[0][0]) + U3ndn.j31(m2D[5]);
                } else if (m2D[0][0] > 0) {
                  U3ndn.z_y(81);
                  m2D[6] = U3ndn.I8r(23832, 2978, 19, 23851);
                  U3ndn.z_y(29);
                  m2D[7] = U3ndn.I8r(1214, 2, 135);
                  return U3ndn.j31(m2D[6]) + m2D[0][0] + U3ndn.j31(m2D[7]);
                } else {
                  return 'NERF/BUFF';
                }
              }
              var Y2y = [
                arguments
              ];
              Y2y[3] = r8no$;
              if (S7y[49]['element']) {
                r4I();
              }
              S7y[71]['addEventListener']('mousemove', K2W);
              S7y[71]['onclick'] = s0H;
              E55[8]['classList']['add']('newbonklobby_playerentry_menuhighlighted');
              Y2y[4] = document['createElement']('div');
              Y2y[4]['classList']['add']('newbonklobby_playerentry_menu');
              if (E55[8]['oneLevelDeeper']) {
                E55[8]['parentNode']['parentNode']['parentNode']['appendChild'](Y2y[4]);
              } else {
                E55[8]['parentNode']['parentNode']['appendChild'](Y2y[4]);
              }
              U3ndn.S2t(93);
              Y2y[32] = U3ndn.I8r(635, 1, 15, 3, 15);
              Y2y[7] = S7y[8][r8no$[Y2y[32]]] == S7y[8]['getLSID']();
              Y2y[9] = E55[0][0] == S7y[8]['getLSID']();
              Y2y[2] = S7y[0][2]['tl'];
              Y2y[1] = S7y[0][1][E55[0][0]]['team'];
              Y2y[8] = false;
              if (Y2y[7] && !Y2y[9]) {
                Y2y[5] = document['createElement']('div');
                Y2y[5]['classList']['add']('newbonklobby_playerentry_menu_button');
                Y2y[5]['classList']['add']('brownButton');
                Y2y[5]['classList']['add']('brownButton_classic');
                Y2y[5]['classList']['add']('buttonShadow');
                Y2y[5]['textContent'] = 'KICK';
                V6D[67]['setButtonSounds']([Y2y[5]]);
                Y2y[4]['appendChild'](Y2y[5]);
                Y2y[8] = true;
                Y2y[5]['onclick'] = function () {
                  var Q0m = [
                    arguments
                  ];
                  Q0m[6] = r8no$;
                  U3ndn.w30();
                  if (Y2y[5]['textContent'] == 'KICK') {
                    Y2y[5]['textContent'] = 'SURE?';
                  } else {
                    S7y[8]['banPlayer'](E55[0][0]);
                    r4I();
                  }
                };
              }
              if (!Y2y[9]) {
                Y2y[6] = document['createElement']('div');
                Y2y[6]['classList']['add']('newbonklobby_playerentry_menu_button');
                Y2y[6]['classList']['add']('brownButton');
                Y2y[6]['classList']['add']('buttonShadow');
                if (S7y[0][1][E55[0][0]]['mute']) {
                  Y2y[6]['textContent'] = 'UNMUTE';
                  Y2y[6]['classList']['add']('newbonklobby_playerentry_menu_button_warn');
                } else {
                  Y2y[6]['textContent'] = 'MUTE';
                  Y2y[6]['classList']['add']('brownButton_classic');
                }
                V6D[67]['setButtonSounds']([Y2y[6]]);
                Y2y[4]['appendChild'](Y2y[6]);
                Y2y[8] = true;
                Y2y[6]['onclick'] = function () {
                  var i0h = [
                    arguments
                  ];
                  i0h[4] = r8no$;
                  if (Y2y[6]['textContent'] == 'UNMUTE') {
                    Y2y[6]['textContent'] = 'MUTE';
                    S7y[0][1][E55[0][0]]['mute'] = false;
                    Y2y[6]['classList']['remove']('newbonklobby_playerentry_menu_button_warn');
                    Y2y[6]['classList']['add']('brownButton_classic');
                  } else {
                    S7y[0][1][E55[0][0]]['mute'] = true;
                    Y2y[6]['textContent'] = 'UNMUTE';
                    Y2y[6]['classList']['add']('newbonklobby_playerentry_menu_button_warn');
                    Y2y[6]['classList']['remove']('brownButton_classic');
                  }
                };
              }
              if (Y2y[7] || !Y2y[2] && Y2y[9]) {
                Y2y[84] = document['createElement']('div');
                Y2y[84]['classList']['add']('newbonklobby_playerentry_menu_button');
                Y2y[84]['classList']['add']('brownButton');
                Y2y[84]['classList']['add']('brownButton_classic');
                Y2y[84]['classList']['add']('buttonShadow');
                V6D[67]['setButtonSounds']([Y2y[84]]);
                Y2y[4]['appendChild'](Y2y[84]);
                Y2y[8] = true;
                Y2y[84]['textContent'] = 'MOVE TO...';
                Y2y[84]['onclick'] = function () {
                  var e6T = [
                    arguments
                  ];
                  e6T[3] = r8no$;
                  e6T[4] = document['createElement']('div');
                  e6T[4]['classList']['add']('newbonklobby_playerentry_menu_submenu');
                  Y2y[4]['appendChild'](e6T[4]);
                  e6T[7] = document['createElement']('div');
                  e6T[7]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[7]['classList']['add']('brownButton');
                  e6T[7]['classList']['add']('brownButton_classic');
                  e6T[7]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[7]);
                  e6T[7]['textContent'] = 'SPECTATE';
                  if (Y2y[1] == 0) {
                    e6T[7]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[7]['onclick'] = function () {
                    var I0s = [
                      arguments
                    ];
                    I0s[8] = r8no$;
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](0);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 0);
                    }
                  };
                  e6T[2] = document['createElement']('div');
                  U3ndn.Y$U();
                  e6T[2]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[2]['classList']['add']('brownButton');
                  e6T[2]['classList']['add']('brownButton_classic');
                  e6T[2]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[2]);
                  e6T[2]['textContent'] = 'FREE FOR ALL';
                  if (Y2y[1] == 1 || S7y[0][2]['tea'] == true) {
                    e6T[2]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[2]['onclick'] = function () {
                    var H1D = [
                      arguments
                    ];
                    H1D[4] = r8no$;
                    U3ndn.w30();
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](1);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 1);
                    }
                  };
                  e6T[5] = document['createElement']('div');
                  e6T[5]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[5]['classList']['add']('brownButton');
                  e6T[5]['classList']['add']('brownButton_classic');
                  e6T[5]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[5]);
                  e6T[5]['textContent'] = 'RED TEAM';
                  if (Y2y[1] == 2 || S7y[0][2]['tea'] == false) {
                    e6T[5]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[5]['onclick'] = function () {
                    var U$3 = [
                      arguments
                    ];
                    U3ndn.w30();
                    U$3[3] = r8no$;
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](2);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 2);
                    }
                  };
                  e6T[8] = document['createElement']('div');
                  e6T[8]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[8]['classList']['add']('brownButton');
                  e6T[8]['classList']['add']('brownButton_classic');
                  e6T[8]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[8]);
                  e6T[8]['textContent'] = 'BLUE TEAM';
                  if (Y2y[1] == 3 || S7y[0][2]['tea'] == false) {
                    e6T[8]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[8]['onclick'] = function () {
                    var H6S = [
                      arguments
                    ];
                    H6S[6] = r8no$;
                    U3ndn.w30();
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](3);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 3);
                    }
                  };
                  e6T[9] = document['createElement']('div');
                  e6T[9]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[9]['classList']['add']('brownButton');
                  e6T[9]['classList']['add']('brownButton_classic');
                  e6T[9]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[9]);
                  e6T[9]['textContent'] = 'GREEN TEAM';
                  if (Y2y[1] == 4 || S7y[0][2]['tea'] == false) {
                    e6T[9]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[9]['onclick'] = function () {
                    var z90 = [
                      arguments
                    ];
                    z90[5] = r8no$;
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](4);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 4);
                    }
                  };
                  e6T[6] = document['createElement']('div');
                  e6T[6]['classList']['add']('newbonklobby_playerentry_menu_button');
                  e6T[6]['classList']['add']('brownButton');
                  e6T[6]['classList']['add']('brownButton_classic');
                  e6T[6]['classList']['add']('buttonShadow');
                  e6T[4]['appendChild'](e6T[6]);
                  e6T[6]['textContent'] = 'YELLOW TEAM';
                  if (Y2y[1] == 5 || S7y[0][2]['tea'] == false) {
                    e6T[6]['classList']['add']('brownButtonDisabled');
                  }
                  e6T[6]['onclick'] = function () {
                    var N5n = [
                      arguments
                    ];
                    N5n[1] = r8no$;
                    if (Y2y[9]) {
                      S7y[8]['changeOwnTeam'](5);
                    } else {
                      S7y[8]['changeOtherTeam'](E55[0][0], 5);
                    }
                  };
                  V6D[67]['setButtonSounds']([e6T[7],
                  e6T[2],
                  e6T[5],
                  e6T[8],
                  e6T[9],
                  e6T[6]]);
                };
              }
              if (Y2y[7] && !Y2y[9]) {
                Y2y[11] = document['createElement']('div');
                Y2y[11]['classList']['add']('newbonklobby_playerentry_menu_button');
                Y2y[11]['classList']['add']('brownButton');
                Y2y[11]['classList']['add']('brownButton_classic');
                Y2y[11]['classList']['add']('buttonShadow');
                V6D[67]['setButtonSounds']([Y2y[11]]);
                Y2y[4]['appendChild'](Y2y[11]);
                Y2y[8] = true;
                Y2y[11]['textContent'] = 'GIVE HOST';
                Y2y[11]['playerID'] = E55[0][0];
                Y2y[11]['onclick'] = function () {
                  var B3k = [
                    arguments
                  ];
                  B3k[2] = r8no$;
                  if (this['textContent'] == 'SURE?') {
                    S7y[8]['sendHostChange'](this['playerID']);
                    r4I();
                  } else {
                    this['textContent'] = 'SURE?';
                    return;
                  }
                };
              }
              if (Y2y[7]) {
                Y2y[21] = document['createElement']('div');
                Y2y[21]['classList']['add']('newbonklobby_playerentry_balancecontainer');
                Y2y[21]['classList']['add']('brownButton');
                Y2y[21]['classList']['add']('brownButton_classic');
                Y2y[4]['appendChild'](Y2y[21]);
                V6D[67]['setButtonSounds']([Y2y[21]]);
                Y2y[88] = S7y[0][2]['bal'][E55[0][0]];
                if (isNaN(Y2y[88]) || Y2y[88] == undefined || Y2y[88] == null) {
                  Y2y[88] = 0;
                }
                Y2y[74] = document['createElement']('div');
                Y2y[74]['textContent'] = S0c(Y2y[88]);
                Y2y[74]['classList']['add']('newbonklobby_playerentry_balancetext');
                Y2y[21]['appendChild'](Y2y[74]);
                Y2y[56] = document['createElement']('input');
                Y2y[56]['setAttribute']('type', 'range');
                Y2y[56]['setAttribute']('min', - 100);
                Y2y[56]['setAttribute']('max', 100);
                Y2y[56]['setAttribute']('step', 5);
                Y2y[56]['setAttribute']('value', Y2y[88]);
                Y2y[56]['classList']['add']('compactSlider');
                Y2y[56]['classList']['add']('slider');
                Y2y[56]['classList']['add']('newbonklobby_playerentry_balanceslider');
                Y2y[56]['textCompanion'] = Y2y[74];
                Y2y[21]['appendChild'](Y2y[56]);
                Y2y[56]['addEventListener']('input', function () {
                  var e1V = [
                    arguments
                  ];
                  e1V[4] = r8no$;
                  this['textCompanion']['textContent'] = S0c(this['value']);
                });
                Y2y[56]['addEventListener']('change', function () {
                  var Q6A = [
                    arguments
                  ];
                  Q6A[1] = r8no$;
                  Q6A[9] = parseInt(this['value']);
                  S7y[8]['sendBalance'](E55[0][0], Q6A[9]);
                  S7y[0][2]['bal'][E55[0][0]] = Q6A[9];
                  S7y[1]['updatePlayers']();
                });
              }
              if (V6D[67]['guest'] == false && S7y[0][1][E55[0][0]]['guest'] == false && E55[0][0] != S7y[8]['getLSID']()) {
                Y2y[67] = V6D[67]['areWeFriends'](S7y[0][1][E55[0][0]]['userName']);
                Y2y[8] = true;
                Y2y[63] = document['createElement']('div');
                Y2y[63]['friendName'] = S7y[0][1][E55[0][0]]['userName'];
                Y2y[63]['friendShortID'] = E55[0][0];
                Y2y[63]['classList']['add']('newbonklobby_playerentry_menu_button');
                Y2y[63]['classList']['add']('brownButton');
                Y2y[63]['classList']['add']('buttonShadow');
                Y2y[63]['classList']['add']('brownButton_classic');
                V6D[67]['setButtonSounds']([Y2y[63]]);
                Y2y[4]['appendChild'](Y2y[63]);
                if (Y2y[67]) {
                  Y2y[63]['textContent'] = 'UNFRIEND';
                  Y2y[63]['onclick'] = function () {
                    U3ndn.Y$U();
                    var c3i = [
                      arguments
                    ];
                    c3i[6] = r8no$;
                    if (Y2y[63]['textContent'] == 'UNFRIEND') {
                      Y2y[63]['textContent'] = 'SURE?';
                    } else {
                      r4I();
                      $['post']('https://bonk2.io/scripts/friends.php', {
                        token: S7y[2],
                        task: 'unfriend',
                        theirid: V6D[67]['friendNameToID'](this['friendName'])
                      }) ['fail'](function (E3H, R3H, N1S) {
                        [
                          arguments
                        ];
                      }) ['done']((P_P, R6l) =>{
                      });
                      V6D[67]['locallyRemoveFriend'](this['friendName']);
                    }
                  };
                } else {
                  if (S7y[52][S7y[0][1][E55[0][0]]['userName']]) {
                    Y2y[63]['textContent'] = 'ACCEPT FRIEND';
                  } else {
                    Y2y[63]['textContent'] = 'ADD FRIEND';
                  }
                  Y2y[63]['onclick'] = function () {
                    var v6r = [
                      arguments
                    ];
                    v6r[7] = r8no$;
                    X_M(this['friendShortID']);
                    r4I();
                  };
                }
              }
              Y2y[96] = E55[8]['parentNode']['parentNode']['getBoundingClientRect']();
              Y2y[92] = E55[8]['getBoundingClientRect']();
              Y2y[16] = {
              };
              Y2y[48] = Y2y[4]['getBoundingClientRect']();
              U3ndn.z_y(9);
              Y2y[55] = U3ndn.E_K(78, 467, 13);
              U3ndn.z_y(6);
              Y2y[77] = U3ndn.E_K(537, 10);
              Y2y[16]['top'] = Y2y[92][r8no$[Y2y[55]]] - Y2y[96][r8no$[Y2y[77]]];
              U3ndn.z_y(119);
              Y2y[82] = U3ndn.E_K(98, 16, 294, 33, 2);
              U3ndn.z_y(6);
              Y2y[93] = U3ndn.E_K(18, 277);
              Y2y[16]['right'] = Y2y[92][r8no$[Y2y[82]]] - Y2y[96][r8no$[Y2y[93]]];
              U3ndn.z_y(7);
              Y2y[64] = U3ndn.I8r(1107, 18728, 4, 18);
              U3ndn.z_y(9);
              Y2y[34] = U3ndn.E_K(1118, 7818, 8);
              Y2y[16]['bottom'] = Y2y[92][r8no$[Y2y[64]]] - Y2y[96][r8no$[Y2y[34]]];
              U3ndn.S2t(90);
              Y2y[49] = U3ndn.E_K(13, 11, 1152, 1470);
              U3ndn.S2t(1);
              Y2y[59] = U3ndn.I8r(5880, 5586);
              Y2y[16]['left'] = Y2y[92][r8no$[Y2y[49]]] - Y2y[96][r8no$[Y2y[59]]];
              U3ndn.S2t(6);
              Y2y[72] = U3ndn.E_K(282, 12);
              U3ndn.S2t(126);
              Y2y[81] = U3ndn.I8r(5, 407, 148, 18, 4);
              U3ndn.S2t(13);
              Y2y[99] = U3ndn.I8r(15, 292, 13);
              U3ndn.S2t(7);
              Y2y[43] = U3ndn.I8r(283, 247, 12, 2);
              U3ndn.z_y(9);
              Y2y[85] = U3ndn.E_K(4116, 65562, 16);
              U3ndn.S2t(6);
              Y2y[44] = U3ndn.I8r(0, 4);
              U3ndn.S2t(1);
              Y2y[36] = U3ndn.E_K(17766, 16497);
              Y2y[4]['style']['left'] = Y2y[16][r8no$[Y2y[72]]] + (Y2y[92][r8no$[Y2y[81]]] - Y2y[92][r8no$[Y2y[99]]]) - (Y2y[48][r8no$[Y2y[43]]] - Y2y[48][r8no$[Y2y[85]]]) - Y2y[44] + U3ndn.j31(Y2y[36]);
              U3ndn.S2t(205);
              Y2y[86] = U3ndn.E_K(537, 3, 11, 11, 7);
              U3ndn.z_y(190);
              Y2y[94] = U3ndn.I8r(6, 16, 6, 561, 30);
              U3ndn.z_y(136);
              Y2y[78] = U3ndn.E_K(3, 12, 4504, 8, 527);
              U3ndn.S2t(1);
              Y2y[15] = U3ndn.E_K(11, 7);
              U3ndn.z_y(185);
              Y2y[68] = U3ndn.I8r(16, 5, 1262, 4981, 20);
              Y2y[4]['style']['top'] = Y2y[16][r8no$[Y2y[86]]] - (Y2y[92][r8no$[Y2y[94]]] - Y2y[92][r8no$[Y2y[78]]]) - Y2y[15] + U3ndn.j31(Y2y[68]);
              S7y[49]['id'] = E55[0][0];
              S7y[49]['element'] = Y2y[4];
              S7y[49]['playerElement'] = E55[8];
              if (Y2y[8] == false) {
                r4I();
              }
            };
          }
        };
        for (X86[9] = 0; X86[9] < S7y[0][1]['length']; X86[9]++) {
          X86[3](X86[9]);
        }
        this['updatePings']();
      };
      this['updatePings'] = function () {
        var X0K = [
          arguments
        ];
        X0K[9] = r8no$;
        for (X0K[1] = 0; X0K[1] < S7y[0][1]['length']; X0K[1]++) {
          if (S7y[0][1][X0K[1]] && S7y[55][X0K[1]] && S7y[14][X0K[1]]) {
            X0K[8] = S7y[0][1][X0K[1]]['ping'];
            U3ndn.z_y(1);
            X0K[5] = U3ndn.I8r(637, 5);
            X0K[4] = S7y[8][r8no$[X0K[5]]] == X0K[1];
            X0K[3] = S7y[0][1][X0K[1]]['tabbed'];
            X0K[6] = 1;
            if (X0K[8] <= 100) {
              X0K[6] = 5;
            }
            if (X0K[8] > 100 && X0K[8] <= 200) {
              X0K[6] = 4;
            }
            if (X0K[8] > 200 && X0K[8] <= 300) {
              X0K[6] = 3;
            }
            if (X0K[8] > 300 && X0K[8] <= 400) {
              X0K[6] = 2;
            }
            if (X0K[8] > 400) {
              X0K[6] = 1;
            }
            if (X0K[3]) {
              X0K[6] = 'tab';
            }
            if (S7y[55][X0K[1]]['lastSet'] != X0K[6]) {
              U3ndn.S2t(1);
              X0K[2] = U3ndn.E_K(26470, 23823);
              U3ndn.S2t(46);
              X0K[7] = U3ndn.I8r(3291, 14, 35, 9, 4);
              S7y[55][X0K[1]]['img']['src'] = U3ndn.j31(X0K[2]) + X0K[6] + U3ndn.j31(X0K[7]);
              S7y[55][X0K[1]]['lastSet'] = X0K[6];
            }
            if (X0K[6] == 'tab') {
              S7y[55][X0K[1]]['text']['textContent'] = 'Tab';
            } else if (X0K[8] === undefined) {
              S7y[55][X0K[1]]['text']['textContent'] = '-ms';
            } else {
              U3ndn.z_y(14);
              X0K[79] = U3ndn.E_K(2, 484, 3143);
              S7y[55][X0K[1]]['text']['textContent'] = X0K[8] + U3ndn.j31(X0K[79]);
            }
            if (X0K[4]) {
              if (S7y[14][X0K[1]]['lastSet'] != X0K[6]) {
                U3ndn.z_y(6);
                X0K[13] = U3ndn.E_K(1264, 2527);
                U3ndn.z_y(81);
                X0K[34] = U3ndn.E_K(3287, 2476, 5, 4);
                S7y[14][X0K[1]]['src'] = U3ndn.j31(X0K[13]) + X0K[6] + U3ndn.j31(X0K[34]);
                S7y[14][X0K[1]]['lastSet'] = X0K[6];
              }
            } else if (S7y[14][X0K[1]]['lastSet'] != 0) {
              S7y[14][X0K[1]]['src'] = 'graphics/host_0.png';
              S7y[14][X0K[1]]['lastSet'] = 0;
            }
          }
        }
      };
      this['setGameSettings'] = function (T82) {
        U3ndn.w30();
        var O$M = [
          arguments
        ];
        S7y[0][2] = O$M[0][0];
      };
      this['updateGameSettings'] = function () {
        var L6e = [
          arguments
        ];
        L6e[5] = r8no$;
        if (!this['visible']) {
          return;
        }
        if (S7y[0][2]['tl'] && S7y[8]['getLSID']() != S7y[8]['hostID']) {
          S7y[67]['classList']['add']('brownButtonDisabled');
          S7y[18]['classList']['add']('brownButtonDisabled');
          S7y[97]['classList']['add']('brownButtonDisabled');
          S7y[47]['classList']['add']('brownButtonDisabled');
          S7y[39]['classList']['add']('brownButtonDisabled');
          S7y[26]['classList']['add']('brownButtonDisabled');
        } else {
          S7y[67]['classList']['remove']('brownButtonDisabled');
          S7y[18]['classList']['remove']('brownButtonDisabled');
          S7y[97]['classList']['remove']('brownButtonDisabled');
          S7y[47]['classList']['remove']('brownButtonDisabled');
          S7y[39]['classList']['remove']('brownButtonDisabled');
          S7y[26]['classList']['remove']('brownButtonDisabled');
          S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_warn');
          S7y[66]['classList']['add']('brownButton_classic');
        }
        if (S7y[8]['getLSID']() == S7y[8]['hostID']) {
          S7y[41]['classList']['remove']('brownButtonDisabled');
          S7y[11]['classList']['remove']('brownButtonDisabled');
          S7y[85]['classList']['remove']('brownButtonDisabled');
        } else {
          S7y[41]['classList']['add']('brownButtonDisabled');
          S7y[11]['classList']['add']('brownButtonDisabled');
          S7y[85]['classList']['add']('brownButtonDisabled');
        }
        if (S7y[0][2]['tl']) {
          S7y[66]['classList']['add']('newbonklobby_teamlockbutton_warn');
          S7y[66]['classList']['remove']('brownButton_classic');
          S7y[66]['classList']['remove']('brownButtonDisabled');
          if (S7y[8]['getLSID']() == S7y[8]['hostID']) {
            S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_nomouse');
          } else {
            S7y[66]['classList']['add']('newbonklobby_teamlockbutton_nomouse');
          }
        } else if (S7y[8]['getLSID']() == S7y[8]['hostID']) {
          S7y[66]['classList']['add']('brownButton_classic');
          S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_warn');
          S7y[66]['classList']['remove']('brownButtonDisabled');
          S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_nomouse');
        } else {
          S7y[66]['classList']['add']('brownButtonDisabled');
          S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_warn');
          S7y[66]['classList']['remove']('newbonklobby_teamlockbutton_nomouse');
        }
        if (V6D[61]['modes'][S7y[0][2]['mo']]['forceTeamCount'] == 2) {
          S7y[50]['classList']['add']('newbonklobby_teambuttonscontainer_2');
          S7y[39]['style']['display'] = 'none';
          S7y[26]['style']['display'] = 'none';
        } else {
          S7y[50]['classList']['remove']('newbonklobby_teambuttonscontainer_2');
          S7y[39]['style']['display'] = 'block';
          S7y[26]['style']['display'] = 'block';
        }
        if (V6D[61]['modes'][S7y[0][2]['mo']]['forceTeams']) {
          S7y[68]['style']['visibility'] = 'hidden';
          S7y[81]['style']['visibility'] = 'hidden';
          S7y[85]['style']['visibility'] = 'hidden';
          S7y[44]['style']['visibility'] = 'hidden';
          S7y[28]['style']['visibility'] = 'hidden';
          S7y[73]['style']['visibility'] = 'hidden';
        } else {
          S7y[68]['style']['visibility'] = 'inherit';
          S7y[81]['style']['visibility'] = 'inherit';
          S7y[85]['style']['visibility'] = 'inherit';
          S7y[44]['style']['visibility'] = 'inherit';
          S7y[28]['style']['visibility'] = 'inherit';
          S7y[73]['style']['visibility'] = 'inherit';
        }
        L6e[9] = Z7['createImage'](S7y[0][2]['map'], 0.16);
        L6e[9]['classList']['add']('newbonklobby_mapthumb');
        L6e[9]['classList']['add']('windowShadow');
        L6e[9]['id'] = 'newbonklobby_mapthumb_image';
        L6e[7] = document['getElementById']('newbonklobby_mapthumb_image');
        if (L6e[7]) {
          L6e[7]['parentNode']['removeChild'](L6e[7]);
          L6e[7] = null;
        }
        S7y[44]['appendChild'](L6e[9]);
        S7y[17]['textContent'] = V6D[61]['modes'][S7y[0][2]['mo']]['lobbyName'];
        S7y[28]['textContent'] = S7y[0][2]['map']['m']['n'];
        S7y[73]['textContent'] = S7y[0][2]['map']['m']['a'];
        S7y[88]['value'] = S7y[0][2]['wl'];
        U3ndn.z_y(9);
        L6e[1] = U3ndn.I8r(637, 6375, 11);
        S7y[88]['disabled'] = S7y[8][r8no$[L6e[1]]] != S7y[8]['getLSID']();
        if (S7y[0][2]['tea']) {
          S7y[31]['textContent'] = 'TEAMS ON';
          S7y[77]['style']['visibility'] = 'inherit';
          S7y[67]['style']['visibility'] = 'hidden';
        } else {
          S7y[31]['textContent'] = 'TEAMS OFF';
          S7y[77]['style']['visibility'] = 'hidden';
          S7y[67]['style']['visibility'] = 'inherit';
        }
        if (S7y[8]['getLSID']() == S7y[8]['hostID']) {
          S7y[81]['classList']['remove']('brownButtonDisabled');
        } else {
          S7y[81]['classList']['add']('brownButtonDisabled');
        }
        n5f();
      };
      this['maybeShowVoteWindow'] = function () {
        var F8x = [
          arguments
        ];
        F8x[9] = r8no$;
        if (V6D[67]['guest'] == false && S7y[0][2]['map']['m']['dbv'] == 2 && !V6D[67]['mapsVotedFor'][S7y[0][2]['map']['m']['dbid']] && S7y[0][2]['map']['m']['dbid'] > 0) {
          S7y[1]['showVoteWindow']();
        }
      };
      this['showVoteWindow'] = function () {
        var u8S = [
          arguments
        ];
        u8S[3] = r8no$;
        u8S[8] = Z7['createImage'](S7y[0][2]['map'], 0.2);
        u8S[8]['classList']['add']('windowShadow');
        u8S[8]['id'] = 'newbonklobby_votewindow_image';
        u8S[7] = document['getElementById']('newbonklobby_votewindow_image');
        if (u8S[7]) {
          u8S[7]['parentNode']['removeChild'](u8S[7]);
          u8S[7] = null;
        }
        S7y[51]['appendChild'](u8S[8]);
        S7y[19]['textContent'] = S7y[0][2]['map']['m']['n'];
        S7y[24]['textContent'] = S7y[0][2]['map']['m']['a'];
        u8S[1] = S7y[0][2]['map']['m']['vu'];
        if (!isNaN(u8S[1])) {
          if (u8S[1] > 100000) {
            u8S[1] /= 1000;
            u8S[1] = Math['floor'](u8S[1]);
            U3ndn.z_y(220);
            u8S[2] = U3ndn.I8r(56115, 8, 20, 2941, 11223);
            u8S[1] = u8S[1] + U3ndn.j31(u8S[2]);
          } else if (u8S[1] > 1000) {
            u8S[1] /= 100;
            u8S[1] = Math['floor'](u8S[1]);
            u8S[1] /= 10;
            U3ndn.S2t(104);
            u8S[6] = U3ndn.I8r(11, 18, 1493, 288, 8);
            u8S[1] = u8S[1] + U3ndn.j31(u8S[6]);
          }
        }
        u8S[9] = S7y[0][2]['map']['m']['vd'];
        if (!isNaN(u8S[9])) {
          if (u8S[9] > 100000) {
            u8S[9] /= 1000;
            u8S[9] = Math['floor'](u8S[9]);
            U3ndn.z_y(78);
            u8S[4] = U3ndn.I8r(11, 37, 16, 3751);
            u8S[9] = u8S[9] + U3ndn.j31(u8S[4]);
          } else if (u8S[9] > 1000) {
            u8S[9] /= 100;
            u8S[9] = Math['floor'](u8S[9]);
            u8S[9] /= 10;
            U3ndn.z_y(1);
            u8S[5] = U3ndn.E_K(3750, 9);
            u8S[9] = u8S[9] + U3ndn.j31(u8S[5]);
          }
        }
        U3ndn.z_y(73);
        u8S[38] = U3ndn.I8r(1, 6587, 5646);
        S7y[61]['textContent'] = U3ndn.j31(u8S[38]) + u8S[1];
        U3ndn.S2t(62);
        u8S[59] = U3ndn.I8r(9, 2269, 2273, 4, 2260);
        S7y[36]['textContent'] = U3ndn.j31(u8S[59]) + u8S[9];
        S7y[63]['style']['visibility'] = 'inherit';
        S7y[63]['style']['opacity'] = '0';
        anime({
          targets: S7y[63],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
      };
      this['showingMapLoadWindow'] = function () {
        var T12 = [
          arguments
        ];
        T12[1] = r8no$;
        return S7y[69]['visible'];
      };
      this['closeMapLoadWindow'] = function () {
        var c_c = [
          arguments
        ];
        c_c[7] = r8no$;
        S7y[69]['hide']();
      };
      this['showingMapEditor'] = function () {
        var R$g = [
          arguments
        ];
        U3ndn.w30();
        R$g[5] = r8no$;
        S7y[82]['getShowing']();
      };
      this['closeMapEditor'] = function () {
        var c4R = [
          arguments
        ];
        c4R[1] = r8no$;
        S7y[82]['hide']();
      };
      this['recvFriended'] = function (C04) {
        var T6w = [
          arguments
        ];
        U3ndn.Y$U();
        T6w[4] = r8no$;
        if (!S7y[0][1][T6w[0][0]]) {
          return;
        }
        T6w[8] = S7y[0][1][T6w[0][0]]['userName'];
        if (S7y[52][T6w[8]]) {
          return;
        }
        if (S7y[3][T6w[8]]) {
          P49('* ' + T6w[8] + ' accepted your friend request', '#00675d', true);
          S7y[74] = setTimeout(function () {
            var v$W = [
              arguments
            ];
            v$W[1] = r8no$;
            V6D[67]['updateFriends'](S7y[2]);
          }, 1000);
          S7y[3][T6w[8]] = undefined;
        } else {
          P49('* ' + T6w[8] + ' sent you a friend request', '#00675d', true, 'Accept', function () {
            var F4I = [
              arguments
            ];
            F4I[6] = r8no$;
            U3ndn.w30();
            X_M(T6w[0][0]);
            this['parentNode']['removeChild'](this);
            V6D[67]['bcs']();
          });
          S7y[52][T6w[8]] = true;
        }
      };
      this['recvNewToken'] = function (s09) {
        var N4H = [
          arguments
        ];
        U3ndn.Y$U();
        S7y[2] = N4H[0][0];
      };
      this['returnFromTesting'] = function () {
        var g3U = [
          arguments
        ];
        g3U[4] = r8no$;
        S7y[82]['show'](S7y[0][2]['map']);
      };
      this['show'] = function () {
        var O7K = [
          arguments
        ];
        O7K[8] = r8no$;
        this['visible'] = true;
        $(document) ['off']('keydown', o7L);
        $(document) ['on']('keydown', o7L);
        this['updatePlayers']();
        this['updateGameSettings']();
        O7K[3] = false;
        O7K[9] = document['getElementById']('ingamechatinputtext');
        if (O7K[9]['value'] != '') {
          S7y[89]['value'] = O7K[9]['value'];
          O7K[3] = true;
          S7y[94]['style']['visibility'] = 'hidden';
          O7K[9]['value'] = '';
        }
        S7y[29]['style']['opacity'] = 0;
        S7y[29]['style']['display'] = 'block';
        O7K[5] = Date['now']();
        S7y[65]['scrollTop'] = S7y[65]['scrollHeight'];
        if (S7y[34]) {
          S7y[34]['pause']();
        }
        S7y[75] = anime({
          targets: S7y[29],
          opacity: 1,
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic',
          complete: function () {
            var Z4r = [
              arguments
            ];
            Z4r[5] = r8no$;
            U3ndn.Y$U();
            if (O7K[3]) {
              S7y[89]['focus']();
            }
          }
        });
      };
      this['hide'] = function () {
        var Y_j = [
          arguments
        ];
        U3ndn.Y$U();
        Y_j[6] = r8no$;
        this['visible'] = false;
        $(document) ['off']('keydown', o7L);
        S7y[41]['textContent'] = 'START';
        Y_j[4] = Date['now']();
        if (S7y[75]) {
          S7y[75]['pause']();
        }
        S7y[34] = anime({
          targets: S7y[29],
          opacity: 0,
          autoplay: true,
          duration: 150,
          easing: 'easeInCubic',
          complete: function () {
            var x7c = [
              arguments
            ];
            x7c[3] = r8no$;
            S7y[29]['style']['display'] = 'none';
          }
        });
      };
      this['destroy'] = function () {
        var t1L = [
          arguments
        ];
        t1L[4] = r8no$;
        S7y[29]['style']['display'] = 'none';
        $(document) ['off']('keydown', o7L);
        S7y[8] = null;
        S7y[0][1] = null;
        S7y[0][2] = null;
        S7y[71]['removeEventListener']('mousemove', K2W);
        S7y[71] = null;
        for (t1L[7] = 0; t1L[7] < S7y[20]['length']; t1L[7]++) {
          if (S7y[20][t1L[7]]) {
            S7y[20][t1L[7]]['parentNode']['removeChild'](S7y[20][t1L[7]]);
          }
        }
        S7y[69]['destroy']();
        S7y[69] = null;
        S7y[82]['destroy']();
        S7y[82] = null;
        S7y[7] = null;
        S7y[5] = null;
        if (S7y[74]) {
          clearTimeout(S7y[74]);
        }
        if (S7y[60]) {
          clearTimeout(S7y[60]);
        }
      };
    }
    V6D[88] = V6D[0][2]['Collision']['b2AABB'];
    function p_(G8Y) {
      function Y2U(i4s, Q0u) {
        U3ndn.Y$U();
        var D0P = [
          arguments
        ];
        D0P[6] = r8no$;
        D0P[3] = true;
        for (D0P[61] = 0; D0P[61] < e8l[57][D0P[0][0]]['layerProgress']['length']; D0P[61]++) {
          if (e8l[57][D0P[0][0]]['layerProgress'][D0P[61]] == false) {
            D0P[3] = false;
            break;
          }
        }
        if (D0P[3] == true) {
          D0P[9] = e8l[57][D0P[0][0]];
          D0P[4] = e8l[21][D0P[0][0]]['avatar']['layers'];
          D0P[8] = new PIXI['Sprite'];
          D0P[5] = new PIXI['Graphics'];
          D0P[1] = e8l[21][D0P[0][0]]['avatar']['bc'];
          if (D0P[0][1] == 2) {
            D0P[1] = y37(D0P[1], 4);
          }
          if (D0P[0][1] == 3) {
            D0P[1] = y37(D0P[1], 207);
          }
          if (D0P[0][1] == 4) {
            D0P[1] = y37(D0P[1], 122);
          }
          if (D0P[0][1] == 5) {
            D0P[1] = y37(D0P[1], 54);
          }
          D0P[5]['beginFill'](D0P[1]);
          D0P[5]['drawRect']( - 256, - 256, 512, 512);
          D0P[5]['endFill']();
          D0P[8]['addChild'](D0P[5]);
          D0P[2] = [
          ];
          for (D0P[92] = D0P[9]['svg']['length'] - 1; D0P[92] >= 0; D0P[92]--) {
            D0P[7] = PIXI['Texture']['from'](D0P[9]['svg'][D0P[92]]);
            D0P[52] = new PIXI['Sprite'](D0P[7]);
            D0P[2]['push'](D0P[52]);
            D0P[2]['push'](D0P[7]);
            D0P[26] = D0P[4][D0P[92]];
            D0P[29] = D0P[26]['color'];
            if (D0P[0][1] == 2) {
              D0P[29] = y37(D0P[29], 4);
            }
            if (D0P[0][1] == 3) {
              D0P[29] = y37(D0P[29], 207);
            }
            if (D0P[0][1] == 4) {
              D0P[29] = y37(D0P[29], 122);
            }
            if (D0P[0][1] == 5) {
              D0P[29] = y37(D0P[29], 54);
            }
            D0P[52]['tint'] = D0P[29];
            D0P[52]['anchor']['set'](0.5);
            D0P[52]['angle'] = D0P[26]['angle'];
            U3ndn.S2t(9);
            D0P[32] = U3ndn.E_K(55, 786, 15);
            U3ndn.S2t(115);
            D0P[76] = U3ndn.I8r(116508, 14, 437, 8322);
            D0P[52]['x'] = D0P[26][r8no$[D0P[32]]] * D0P[9][r8no$[D0P[76]]];
            U3ndn.z_y(7);
            D0P[37] = U3ndn.I8r(280, 2144, 7, 8);
            U3ndn.z_y(87);
            D0P[73] = U3ndn.E_K(9, 18, 446, 11, 43698);
            D0P[52]['y'] = D0P[26][r8no$[D0P[37]]] * D0P[9][r8no$[D0P[73]]];
            D0P[39] = D0P[26]['flipX'] ? - 1 : 1;
            D0P[34] = D0P[26]['flipY'] ? - 1 : 1;
            D0P[52]['scale']['x'] *= D0P[39];
            D0P[52]['scale']['y'] *= D0P[34];
            D0P[8]['addChild'](D0P[52]);
          }
          U3ndn.S2t(63);
          D0P[14] = U3ndn.I8r(19, 8, 18, 24376, 73);
          U3ndn.S2t(91);
          D0P[47] = U3ndn.E_K(105, 3, 10, 3, 10);
          D0P[8]['x'] = D0P[9][r8no$[D0P[14]]] * D0P[47];
          U3ndn.S2t(1);
          D0P[18] = U3ndn.I8r(8760, 8322);
          U3ndn.z_y(1);
          D0P[53] = U3ndn.E_K(75, 60);
          D0P[8]['y'] = D0P[9][r8no$[D0P[18]]] * D0P[53];
          D0P[11] = PIXI['RenderTexture']['create']({
            width: 512,
            height: 512
          });
          e8l[23]['render'](D0P[8], D0P[11]);
          e8l[57][D0P[0][0]]['texture'] = D0P[11];
          for (D0P[51] = 0; D0P[51] < D0P[9]['svg']['length']; D0P[51]++) {
            if (D0P[9]['svg'][D0P[51]]) {
              D0P[23] = D0P[9]['svg'][D0P[51]];
              D0P[23]['destroy']();
            }
          }
          for (D0P[93] = 0; D0P[93] < D0P[2]['length']; D0P[93]++) {
            D0P[2][D0P[93]]['destroy']();
          }
          D0P[2] = null;
        }
      }
      function p92(S1c, x8d, B2K, D0U) {
        var d3r = [
          arguments
        ];
        d3r[2] = r8no$;
        d3r[0][2] = 30;
        U3ndn.S2t(0);
        d3r[9] = U3ndn.E_K(d3r[0][2], 15);
        d3r[7] = 2;
        U3ndn.w30();
        e8l[57][d3r[0][0]] = {
          texture: null,
          inProgress: true,
          layerProgress: [
          ],
          svg: [
          ],
          totalSize: d3r[0][1] * d3r[9] * d3r[7]
        };
        d3r[8] = e8l[21][d3r[0][0]]['avatar']['layers'];
        d3r[4] = function (G7t) {
          var D$4 = [
            arguments
          ];
          D$4[8] = r8no$;
          D$4[7] = d3r[8][D$4[0][0]];
          if (!(D$4[7]['id'] >= 0) || !(D$4[7]['id'] <= 115) || Math['abs'](D$4[7]['x']) > 9999 || Math['abs'](D$4[7]['y']) > 9999 || D$4[7]['scale'] > 999 || D$4[7]['angle'] > 9999 || isNaN(D$4[7]['color']) || typeof D$4[7]['color'] != 'number' || typeof D$4[7]['flipX'] != 'boolean' || typeof D$4[7]['flipY'] != 'boolean') {
            return 'continue';
          }
          D$4[2] = D$4[7]['id']['toString']();
          if (D$4[7]['id'] < 10) {
            U3ndn.S2t(164);
            D$4[5] = U3ndn.E_K(17, 1145581, 2, 17, 33787);
            D$4[2] = U3ndn.j31(D$4[5]) + D$4[2];
          }
          if (D$4[7]['id'] < 100) {
            U3ndn.z_y(45);
            D$4[1] = U3ndn.I8r(19, 20, 8885981, 23391);
            D$4[2] = U3ndn.j31(D$4[1]) + D$4[2];
          }
          U3ndn.w30();
          D$4[9] = new PIXI['resources']['SVGResource'](GameResources['svgStrings'][D$4[7]['id']], {
            scale: D$4[7]['scale'] * d3r[0][1] * d3r[9] * d3r[7],
            autoload: false
          });
          e8l[57][d3r[0][0]]['layerProgress'][D$4[0][0]] = false;
          e8l[57][d3r[0][0]]['svg'][D$4[0][0]] = D$4[9];
          D$4[9]['load']() ['then'](function () {
            U3ndn.w30();
            var L56 = [
              arguments
            ];
            L56[6] = r8no$;
            e8l[57][d3r[0][0]]['layerProgress'][D$4[0][0]] = true;
            Y2U(d3r[0][0], d3r[0][3]);
          });
        };
        for (d3r[3] = d3r[8]['length'] - 1; d3r[3] >= 0; d3r[3]--) {
          d3r[6] = d3r[4](d3r[3]);
          if (d3r[6] === 'continue') {
            continue;
          }
        }
      }
      function o5c() {
        var Z3l = [
          arguments
        ];
        Z3l[9] = r8no$;
        for (Z3l[1] = 0; Z3l[1] < e8l[57]['length']; Z3l[1]++) {
          J5b(Z3l[1]);
        }
        e8l[57] = [
        ];
      }
      function d2Y(L6G) {
        var F5y = [
          arguments
        ];
        F5y[7] = r8no$;
        F5y[6] = 0;
        F5y[9] = 0;
        F5y[1] = 0;
        if (F5y[0][0]['length'] == 4) {
          U3ndn.S2t(1);
          F5y[11] = U3ndn.I8r(2613, 1742);
          U3ndn.S2t(60);
          F5y[69] = U3ndn.I8r(8, 2, 11);
          U3ndn.S2t(153);
          F5y[57] = U3ndn.I8r(11, 1, 2, 5);
          F5y[6] = U3ndn.j31(F5y[11]) + F5y[0][0][F5y[69]] + F5y[0][0][F5y[57]];
          U3ndn.S2t(126);
          F5y[39] = U3ndn.E_K(19, 15712, 877, 4, 4);
          U3ndn.S2t(9);
          F5y[22] = U3ndn.I8r(40, 358, 9);
          U3ndn.S2t(73);
          F5y[84] = U3ndn.E_K(1, 14, 12);
          F5y[9] = U3ndn.j31(F5y[39]) + F5y[0][0][F5y[22]] + F5y[0][0][F5y[84]];
          U3ndn.z_y(9);
          F5y[50] = U3ndn.I8r(10452, 82745, 8);
          U3ndn.z_y(87);
          F5y[74] = U3ndn.E_K(16, 15, 57, 5, 4542);
          U3ndn.S2t(19);
          F5y[36] = U3ndn.I8r(40, 2, 14, 8, 23);
          F5y[1] = U3ndn.j31(F5y[50]) + F5y[0][0][F5y[74]] + F5y[0][0][F5y[36]];
        } else if (F5y[0][0]['length'] == 7) {
          U3ndn.S2t(6);
          F5y[20] = U3ndn.E_K(109, 762);
          U3ndn.S2t(107);
          F5y[90] = U3ndn.I8r(3, 8, 12, 27);
          U3ndn.z_y(235);
          F5y[13] = U3ndn.I8r(18, 1, 169, 11, 16);
          F5y[6] = U3ndn.j31(F5y[20]) + F5y[0][0][F5y[90]] + F5y[0][0][F5y[13]];
          U3ndn.S2t(73);
          F5y[48] = U3ndn.I8r(2, 10452, 4355);
          U3ndn.z_y(15);
          F5y[12] = U3ndn.E_K(11, 0, 8);
          U3ndn.S2t(57);
          F5y[55] = U3ndn.I8r(11, 15);
          F5y[9] = U3ndn.j31(F5y[48]) + F5y[0][0][F5y[12]] + F5y[0][0][F5y[55]];
          U3ndn.S2t(9);
          F5y[40] = U3ndn.I8r(4355, 51389, 12);
          U3ndn.S2t(147);
          F5y[87] = U3ndn.E_K(16, 2, 3, 2, 37);
          U3ndn.z_y(211);
          F5y[15] = U3ndn.E_K(10, 7, 40, 4);
          F5y[1] = U3ndn.j31(F5y[40]) + F5y[0][0][F5y[87]] + F5y[0][0][F5y[15]];
        }
        F5y[6] /= 255;
        F5y[9] /= 255;
        F5y[1] /= 255;
        F5y[8] = Math['min'](F5y[6], F5y[9], F5y[1]);
        F5y[4] = Math['max'](F5y[6], F5y[9], F5y[1]);
        U3ndn.S2t(1);
        F5y[3] = U3ndn.I8r(F5y[4], F5y[8]);
        F5y[5] = 0;
        F5y[2] = 0;
        F5y[34] = 0;
        U3ndn.Y$U();
        if (F5y[3] == 0) {
          F5y[5] = 0;
        } else if (F5y[4] == F5y[6]) {
          U3ndn.S2t(150);
          F5y[5] = U3ndn.I8r(F5y[1], F5y[3], 6, F5y[9]);
        } else if (F5y[4] == F5y[9]) {
          U3ndn.S2t(28);
          F5y[5] = U3ndn.E_K(2, F5y[6], F5y[3], F5y[1]);
        } else {
          U3ndn.S2t(28);
          F5y[5] = U3ndn.E_K(4, F5y[9], F5y[3], F5y[6]);
        }
        U3ndn.z_y(4);
        F5y[5] = Math['round'](U3ndn.E_K(60, F5y[5]));
        if (F5y[5] < 0) {
          F5y[5] += 360;
        }
        U3ndn.S2t(151);
        F5y[34] = U3ndn.I8r(F5y[4], F5y[8], 2);
        F5y[2] = F5y[3] == 0 ? 0 : F5y[3] / (1 - Math['abs'](2 * F5y[34] - 1));
        F5y[2] = + (F5y[2] * 100) ['toFixed'](1);
        F5y[34] = + (F5y[34] * 100) ['toFixed'](1);
        return {
          h: F5y[5],
          s: F5y[2],
          l: F5y[34]
        };
      }
      function s9X(W_X, b7x, w$5) {
        var I23 = [
          arguments
        ];
        I23[9] = r8no$;
        I23[0][1] /= 100;
        I23[0][2] /= 100;
        U3ndn.S2t(100);
        I23[3] = U3ndn.I8r(17, 517, 10, 8, 3);
        U3ndn.z_y(15);
        I23[8] = U3ndn.E_K(7, 1, 6);
        U3ndn.S2t(162);
        I23[79] = U3ndn.E_K(3, 4, 18, 19, 15);
        I23[2] = (I23[3] - Math['abs'](I23[8] * I23[0][2] - I23[79])) * I23[0][1];
        U3ndn.S2t(1);
        I23[33] = U3ndn.I8r(19, 18);
        U3ndn.z_y(6);
        I23[19] = U3ndn.I8r(53, 7);
        U3ndn.z_y(27);
        I23[71] = U3ndn.I8r(16, 0, 9, 27);
        U3ndn.z_y(73);
        I23[51] = U3ndn.E_K(4, 12, 2);
        I23[4] = I23[2] * (I23[33] - Math['abs'](I23[0][0] / I23[19] % I23[71] - I23[51]));
        U3ndn.S2t(143);
        I23[7] = U3ndn.I8r(2, I23[2], I23[0][2]);
        I23[5] = 0;
        I23[1] = 0;
        I23[6] = 0;
        if (0 <= I23[0][0] && I23[0][0] < 60) {
          I23[5] = I23[2];
          I23[1] = I23[4];
          I23[6] = 0;
        } else if (60 <= I23[0][0] && I23[0][0] < 120) {
          I23[5] = I23[4];
          I23[1] = I23[2];
          I23[6] = 0;
        } else if (120 <= I23[0][0] && I23[0][0] < 180) {
          I23[5] = 0;
          I23[1] = I23[2];
          I23[6] = I23[4];
        } else if (180 <= I23[0][0] && I23[0][0] < 240) {
          I23[5] = 0;
          I23[1] = I23[4];
          I23[6] = I23[2];
        } else if (240 <= I23[0][0] && I23[0][0] < 300) {
          I23[5] = I23[4];
          I23[1] = 0;
          I23[6] = I23[2];
        } else if (300 <= I23[0][0] && I23[0][0] < 360) {
          I23[5] = I23[2];
          I23[1] = 0;
          I23[6] = I23[4];
        }
        U3ndn.S2t(144);
        I23[5] = Math['round'](U3ndn.E_K(I23[5], 255, I23[7]));
        U3ndn.z_y(144);
        I23[1] = Math['round'](U3ndn.I8r(I23[1], 255, I23[7]));
        U3ndn.z_y(144);
        I23[6] = Math['round'](U3ndn.E_K(I23[6], 255, I23[7]));
        I23[5] *= 65536;
        I23[1] *= 256;
        I23[6] *= 1;
        U3ndn.S2t(17);
        return U3ndn.I8r(I23[6], I23[5], I23[1]);
      }
      function y37(u8k, K5W) {
        var L1f = [
          arguments
        ];
        L1f[1] = r8no$;
        U3ndn.z_y(9);
        L1f[9] = U3ndn.I8r(33891, 166848, 5);
        U3ndn.z_y(13);
        U3ndn.Y$U();
        L1f[8] = U3ndn.I8r(0, 13, 7);
        U3ndn.z_y(28);
        L1f[6] = U3ndn.E_K(2598, 16, 7781, 7797);
        L1f[0][0] = U3ndn.j31(L1f[9]) + L1f[0][0]['toString'](16) ['padStart'](L1f[8], U3ndn.j31(L1f[6]));
        L1f[5] = d2Y(L1f[0][0]);
        L1f[5]['h'] = L1f[0][1];
        L1f[2] = s9X(L1f[5]['h'], L1f[5]['s'], L1f[5]['l']);
        return L1f[2];
      }
      function J5b(t_J) {
        var j5q = [
          arguments
        ];
        j5q[2] = r8no$;
        if (e8l[57][j5q[0][0]]) {
          j5q[4] = e8l[57][j5q[0][0]];
          for (j5q[5] = 0; j5q[5] < j5q[4]['svg']['length']; j5q[5]++) {
            if (j5q[4]['svg'][j5q[5]]) {
              j5q[6] = j5q[4]['svg'][j5q[5]];
              j5q[6]['destroy']();
            }
          }
          if (j5q[4]['texture']) {
            j5q[4]['texture']['destroy'](true);
          }
          e8l[57][j5q[0][0]] = null;
        }
      }
      var e8l = [
        arguments
      ];
      e8l[1] = r8no$;
      e8l[8] = PIXI['Container'];
      e8l[6] = PIXI['loader'];
      e8l[7] = PIXI['loader']['resources'];
      e8l[3] = PIXI['Sprite'];
      e8l[9] = new T3;
      e8l[2] = document['getElementById']('xpbar');
      e8l[5] = document['getElementById']('xpbarcontainer');
      e8l[4] = [
      ];
      e8l[0][0] = e8l[0][0];
      e8l[23] = A['gameRenderer'];
      e8l[0][0]['appendChild'](e8l[23]['view']);
      e8l[23]['view']['classList']['add']('gamecanvas');
      e8l[10] = 0;
      e8l[19] = 0;
      e8l[65] = 0;
      e8l[70] = new PIXI['Container'];
      e8l[70]['y'] = 0;
      e8l[70]['x'] = 0;
      e8l[70]['scale']['x'] = 1;
      e8l[70]['scale']['y'] = 1;
      e8l[29] = 2;
      e8l[33] = [
      ];
      e8l[21] = [
      ];
      e8l[83] = - 1;
      e8l[66] = new PIXI['filters']['FXAAFilter'];
      e8l[98] = new TWEEN['Group'];
      e8l[49] = 0;
      e8l[54] = (new PIXI['Graphics']) ['beginFill'](5930852) ['drawRect'](0, 0, 730, 500);
      e8l[70]['addChild'](e8l[54]);
      e8l[58] = 64;
      e8l[75] = PIXI['RenderTexture']['create']({
        width: e8l[58],
        height: e8l[58]
      });
      e8l[88] = new PIXI['Container'];
      e8l[47] = new PIXI['Graphics'];
      e8l[47]['lineStyle'](24, 16777215, 0.025);
      e8l[47]['moveTo'](0, e8l[58]);
      e8l[47]['lineTo'](e8l[58], 0);
      e8l[47]['moveTo']( - e8l[58], e8l[58]);
      e8l[47]['lineTo'](e8l[58], - e8l[58]);
      U3ndn.S2t(4);
      e8l[47]['moveTo'](0, U3ndn.E_K(e8l[58], 2));
      U3ndn.z_y(4);
      e8l[47]['lineTo'](U3ndn.E_K(e8l[58], 2), 0);
      e8l[88]['addChild'](e8l[47]);
      e8l[23]['render'](e8l[88], e8l[75]);
      e8l[54]['lineStyle'](1, 16777215, 0.5);
      e8l[54]['beginTextureFill']({
        texture: e8l[75]
      });
      e8l[54]['drawRect'](30, 75, 670, 350);
      e8l[54]['endFill']();
      e8l[54]['moveTo'](365, 75);
      U3ndn.z_y(1);
      e8l[54]['lineTo'](365, U3ndn.E_K(500, 75));
      e8l[54]['drawCircle'](365, 250, 50);
      e8l[54]['beginFill'](4492031);
      U3ndn.S2t(232);
      e8l[54]['drawCircle'](30, U3ndn.I8r(143, 350, 2, 75), 8);
      U3ndn.S2t(233);
      e8l[54]['drawCircle'](30, U3ndn.I8r(350, 2, 75, 500, 143), 8);
      e8l[54]['beginFill'](13840175);
      U3ndn.S2t(232);
      e8l[54]['drawCircle'](700, U3ndn.E_K(143, 350, 2, 75), 8);
      U3ndn.S2t(233);
      e8l[54]['drawCircle'](700, U3ndn.E_K(350, 2, 75, 500, 143), 8);
      e8l[54]['endFill']();
      U3ndn.S2t(4);
      e8l[13] = U3ndn.I8r(11, 5);
      U3ndn.z_y(6);
      e8l[54]['moveTo'](30, U3ndn.E_K(75, 40));
      U3ndn.S2t(6);
      e8l[54]['lineTo'](U3ndn.E_K(30, e8l[13]), U3ndn.E_K(75, 40));
      U3ndn.S2t(6);
      e8l[54]['lineTo'](U3ndn.I8r(30, e8l[13]), U3ndn.I8r(75, 40, 350, U3ndn.S2t(234)));
      U3ndn.z_y(234);
      e8l[54]['lineTo'](30, U3ndn.I8r(75, 40, 350));
      U3ndn.z_y(6);
      e8l[54]['moveTo'](700, U3ndn.E_K(75, 40));
      U3ndn.z_y(1);
      e8l[54]['lineTo'](U3ndn.E_K(700, e8l[13]), U3ndn.I8r(75, 40, U3ndn.S2t(6)));
      U3ndn.w30();
      U3ndn.z_y(1);
      e8l[54]['lineTo'](U3ndn.E_K(700, e8l[13]), U3ndn.I8r(75, 40, 350, U3ndn.S2t(234)));
      U3ndn.S2t(234);
      e8l[54]['lineTo'](700, U3ndn.E_K(75, 40, 350));
      e8l[15] = new PIXI['Container'];
      e8l[70]['addChild'](e8l[15]);
      e8l[62] = new PIXI['Container'];
      e8l[70]['addChild'](e8l[62]);
      e8l[36] = new PIXI['Container'];
      e8l[70]['addChild'](e8l[36]);
      e8l[36]['visible'] = false;
      e8l[77] = new PIXI['Graphics'];
      e8l[77]['beginFill'](0);
      e8l[77]['drawRect'](0, 0, 730, 500);
      e8l[77]['alpha'] = 0.3;
      e8l[36]['addChild'](e8l[77]);
      e8l[55] = new PIXI['Container'];
      e8l[36]['addChild'](e8l[55]);
      e8l[92] = {
        fontFamily: 'futurept_medium',
        fontSize: 40,
        fill: 4294967159
      };
      e8l[51] = {
        fontFamily: 'futurept_medium',
        fontSize: 77,
        fill: 4294967159
      };
      e8l[32] = new PIXI['Text']('BLUE TEAM', e8l[92]);
      e8l[35] = new PIXI['Text']('RED TEAM', e8l[92]);
      e8l[69] = new PIXI['Text']('WINS', e8l[51]);
      e8l[14] = new PIXI['Text']('SCORES', e8l[51]);
      e8l[32]['anchor']['set'](1, 0.5);
      e8l[35]['anchor']['set'](1, 0.5);
      e8l[69]['anchor']['set'](1, 0.5);
      e8l[14]['anchor']['set'](1, 0.5);
      e8l[32]['resolution'] = e8l[29];
      e8l[35]['resolution'] = e8l[29];
      e8l[69]['resolution'] = e8l[29];
      e8l[14]['resolution'] = e8l[29];
      e8l[55]['addChild'](e8l[32]);
      e8l[55]['addChild'](e8l[35]);
      e8l[55]['addChild'](e8l[69]);
      e8l[55]['addChild'](e8l[14]);
      e8l[32]['x'] = e8l[35]['x'] = 695;
      e8l[32]['y'] = e8l[35]['y'] = 375;
      e8l[69]['x'] = e8l[14]['x'] = 700;
      e8l[69]['y'] = e8l[14]['y'] = 445;
      e8l[40] = 25;
      e8l[95] = 8;
      e8l[45] = new PIXI['Container'];
      e8l[70]['addChild'](e8l[45]);
      U3ndn.z_y(6);
      e8l[45]['x'] = U3ndn.E_K(365, 1.1);
      e8l[45]['y'] = 30;
      e8l[71] = {
        fontFamily: 'futurept_book',
        fontSize: 40,
        fill: 16777215,
        align: 'center',
        dropShadow: true,
        dropShadowDistance: 3,
        dropShadowAlpha: 0.35,
        dropShadowBlur: 4
      };
      e8l[53] = new PIXI['Text']('0', e8l[71]);
      e8l[53]['resolution'] = e8l[29];
      e8l[45]['addChild'](e8l[53]);
      e8l[53]['anchor']['set'](1, 0.5);
      e8l[53]['x'] = - e8l[95];
      e8l[67] = new PIXI['Text']('0', e8l[71]);
      e8l[67]['resolution'] = e8l[29];
      e8l[45]['addChild'](e8l[67]);
      e8l[67]['anchor']['set'](0, 0.5);
      e8l[67]['x'] = e8l[95];
      e8l[90] = {
        fontFamily: 'futurept_book',
        fontSize: 17,
        fill: 16777215,
        align: 'center',
        dropShadow: true,
        dropShadowDistance: 3,
        dropShadowAlpha: 0.35,
        dropShadowBlur: 4
      };
      e8l[74] = new PIXI['Text']('Blue', e8l[90]);
      e8l[74]['resolution'] = e8l[29];
      e8l[45]['addChild'](e8l[74]);
      e8l[74]['anchor']['set'](1, 0.5);
      U3ndn.z_y(201);
      e8l[74]['x'] = U3ndn.I8r(e8l[95], 1);
      e8l[74]['y'] = e8l[40];
      e8l[30] = new PIXI['Text']('Red', e8l[90]);
      e8l[30]['resolution'] = e8l[29];
      e8l[45]['addChild'](e8l[30]);
      e8l[30]['anchor']['set'](0, 0.5);
      U3ndn.S2t(6);
      e8l[30]['x'] = U3ndn.E_K(e8l[95], 1);
      e8l[30]['y'] = e8l[40];
      e8l[12] = new V6D[13](e8l[70], e8l[29]);
      e8l[57] = [
      ];
      this['destroyOneSkin'] = J5b;
      this['destroySkins'] = o5c;
      this['resizeRenderer'] = function () {
        var a87 = [
          arguments
        ];
        a87[6] = r8no$;
        e8l[10] = e8l[0][0]['offsetWidth'];
        e8l[19] = e8l[0][0]['offsetHeight'];
        U3ndn.S2t(0);
        a87[2] = U3ndn.I8r(730, 500);
        U3ndn.S2t(0);
        a87[3] = U3ndn.I8r(e8l[10], e8l[19]);
        a87[7] = 0;
        a87[5] = 0;
        a87[1] = 0;
        if (a87[3] > a87[2]) {
          a87[5] = e8l[19];
          U3ndn.S2t(4);
          a87[7] = U3ndn.E_K(a87[2], a87[5]);
        } else {
          a87[7] = e8l[10];
          U3ndn.S2t(0);
          a87[5] = U3ndn.E_K(a87[7], a87[2]);
        }
        a87[7] -= 10;
        a87[5] -= 10;
        U3ndn.S2t(0);
        a87[1] = U3ndn.I8r(a87[7], 730);
        if (a87[7] > 1200) {
          e8l[29] = 4;
        } else {
          e8l[29] = 2;
        }
        e8l[23]['resize'](a87[7], a87[5]);
        e8l[70]['scale']['x'] = a87[1];
        e8l[70]['scale']['y'] = a87[1];
        U3ndn.Y$U();
        U3ndn.z_y(26);
        a87[4] = U3ndn.E_K(3, 25380, 176412, 7);
        e8l[2]['style']['width'] = a87[7] * 0.9 + U3ndn.j31(a87[4]);
      };
      this['destroy'] = function () {
        var F5v = [
          arguments
        ];
        F5v[2] = r8no$;
        e8l[23]['clear']();
        o5c();
        e8l[0][0]['removeChild'](e8l[23]['view']);
        e8l[0][0] = null;
        e8l[23] = null;
      };
      this['setPlayerArray'] = function (K$m) {
        var b3W = [
          arguments
        ];
        b3W[7] = 593156390;
        b3W[1] = - 1861797156;
        b3W[5] = 2;
        for (b3W[3] = 1; U3ndn.v9p(b3W[3].toString(), b3W[3].toString().length, 23529) !== b3W[7]; b3W[3]++) {
          e8l[21] = b3W[0][0];
          b3W[5] += 2;
        }
        U3ndn.Y$U();
        if (U3ndn.P5V(b3W[5].toString(), b3W[5].toString().length, 48713) !== b3W[1]) {
          e8l[21] = b3W[0][0];
        }
      };
      this['setLocalPlayerID'] = function (Q1x) {
        U3ndn.Y$U();
        var c4X = [
          arguments
        ];
        e8l[83] = c4X[0][0];
      };
      this['enableTutorialText'] = function () {
      };
      this['clearAfkWarn'] = function () {
      };
      this['showAfkWarn'] = function () {
      };
      this['render'] = function (W9k, n4n, Z4T, E$Q, Y0H, u38) {
        var f9L = [
          arguments
        ];
        f9L[5] = r8no$;
        if (e8l[23]['view']['parentNode'] != e8l[0][0]) {
          e8l[0][0]['appendChild'](e8l[23]['view']);
        }
        f9L[9] = false;
        if (e8l[10] != e8l[0][0]['offsetWidth'] || e8l[19] != e8l[0][0]['offsetHeight']) {
          this['resizeRenderer']();
          f9L[9] = true;
        }
        f9L[1] = V6D[67]['getPageHeight']();
        if (f9L[1] != e8l[65] || f9L[9]) {
          U3ndn.S2t(200);
          f9L[49] = U3ndn.E_K(0, 8, 60, 8, 6);
          U3ndn.z_y(57);
          f9L[44] = U3ndn.I8r(3, 11);
          U3ndn.S2t(5);
          f9L[64] = U3ndn.I8r(208166, 11, 5, 5, 19035);
          e8l[5]['style']['top'] = (f9L[1] - e8l[19]) / f9L[49] + f9L[44] + U3ndn.j31(f9L[64]);
          e8l[65] = f9L[1];
        }
        f9L[4] = f9L[0][1]['ppm'];
        if (f9L[0][1]['ni']) {
          f9L[0][0] = f9L[0][1];
        }
        if (!e8l[11]) {
          e8l[11] = new PIXI['Graphics'];
          e8l[11]['lineStyle'](undefined);
          e8l[11]['beginFill'](0, 0.3);
          U3ndn.S2t(4);
          e8l[11]['drawCircle'](1, 1, U3ndn.I8r(0.7, f9L[4]));
          e8l[11]['endFill']();
          e8l[11]['beginFill'](16777215);
          U3ndn.S2t(4);
          e8l[11]['drawCircle'](0, 0, U3ndn.E_K(0.7, f9L[4]));
          e8l[11]['endFill']();
          e8l[62]['addChild'](e8l[11]);
        }
        for (f9L[70] = 0; f9L[70] < f9L[0][1]['discs']['length']; f9L[70]++) {
          if (f9L[0][1]['discs'][f9L[70]] && !e8l[33][f9L[70]]) {
            e8l[33][f9L[70]] = {
              container: null,
              inner: null,
              innerColor: 0,
              nametext: null,
              outline: null,
              totalRadius: 1
            };
            f9L[2] = new PIXI['Graphics'];
            e8l[33][f9L[70]]['inner'] = f9L[2];
            f9L[7] = null;
            f9L[3] = 4492031;
            f9L[8] = new PIXI['Container'];
            e8l[33][f9L[70]]['container'] = f9L[8];
            f9L[8]['addChild'](f9L[2]);
            f9L[6] = e8l[33][f9L[70]]['totalRadius'];
            if (e8l[21][f9L[70]] && e8l[21][f9L[70]]['avatar'] && typeof e8l[21][f9L[70]]['avatar']['bc'] == 'number') {
              f9L[3] = e8l[21][f9L[70]]['avatar']['bc'];
            } else {
              f9L[3] = 4492031;
            }
            if (f9L[0][1]['discs'][f9L[70]]['team'] == 2) {
              f9L[3] = y37(f9L[3], 4);
            }
            if (f9L[0][1]['discs'][f9L[70]]['team'] == 3) {
              f9L[3] = y37(f9L[3], 207);
            }
            if (f9L[0][1]['discs'][f9L[70]]['team'] == 4) {
              f9L[3] = y37(f9L[3], 122);
            }
            if (f9L[0][1]['discs'][f9L[70]]['team'] == 5) {
              f9L[3] = y37(f9L[3], 54);
            }
            f9L[2]['beginFill'](f9L[3]);
            U3ndn.z_y(4);
            f9L[2]['drawCircle'](0, 0, U3ndn.I8r(f9L[6], f9L[4]));
            f9L[2]['endFill']();
            f9L[2]['skinRendered'] = false;
            f9L[25] = new PIXI['Graphics'];
            f9L[25]['lineStyle'](1.5, 16777215, 1);
            U3ndn.S2t(29);
            f9L[25]['drawCircle'](0, 0, U3ndn.E_K(0.5, f9L[6], f9L[4]));
            e8l[33][f9L[70]]['outline'] = f9L[25];
            f9L[8]['addChild'](f9L[25]);
            f9L[26] = new PIXI['Graphics'];
            f9L[26]['beginFill'](0, 0.25);
            U3ndn.S2t(4);
            f9L[26]['drawCircle'](1, 1, U3ndn.I8r(f9L[6], f9L[4]));
            f9L[26]['endFill']();
            f9L[8]['addChildAt'](f9L[26], 0);
            f9L[97] = 'futurept_book';
            f9L[35] = '';
            if (e8l[21][f9L[70]]) {
              f9L[35] = e8l[21][f9L[70]]['userName'];
            }
            f9L[63] = {
              fontFamily: f9L[97],
              fontSize: 11,
              fill: 14737632,
              align: 'center',
              dropShadow: false,
              dropShadowDistance: 2,
              dropShadowAlpha: 0.2
            };
            if (f9L[70] == e8l[83]) {
              f9L[63]['fill'] = 16777215;
              f9L[63]['dropShadowDistance'] = 2;
              f9L[63]['dropShadowAlpha'] = 0.3;
            }
            f9L[51] = new PIXI['Text'](f9L[35], f9L[63]);
            e8l[33][f9L[70]]['container']['addChild'](f9L[51]);
            U3ndn.z_y(139);
            f9L[29] = U3ndn.I8r(2, 227, 467, 454, 1);
            U3ndn.z_y(1);
            f9L[38] = U3ndn.I8r(10, 8);
            U3ndn.S2t(72);
            f9L[84] = U3ndn.E_K(6, 14, 21);
            f9L[51]['x'] = - f9L[51][r8no$[f9L[29]]] / f9L[38] + f9L[84];
            U3ndn.z_y(2);
            f9L[51]['y'] = U3ndn.I8r(1.2, f9L[6], f9L[4]);
            f9L[51]['resolution'] = e8l[29];
            e8l[33][f9L[70]]['nametext'] = f9L[51];
            try {
              if (e8l[21][f9L[70]] && e8l[21][f9L[70]]['avatar'] && e8l[21][f9L[70]]['avatar']['layers'] && e8l[21][f9L[70]]['avatar']['layers']['length'] > 0) {
                if (e8l[57][f9L[70]] && e8l[57][f9L[70]]['texture']) {
                } else {
                  p92(f9L[70], f9L[6], f9L[4], f9L[0][1]['discs'][f9L[70]]['team']);
                }
              }
            } catch (t4H) {
            }
            if (f9L[0][1]['discs'][f9L[70]]['team'] >= 2 && f9L[0][1]['discs'][f9L[70]]['team'] <= 5) {
              f9L[7] = new PIXI['Graphics'];
              f9L[21] = 0;
              if (f9L[0][1]['discs'][f9L[70]]['team'] == 2) {
                f9L[21] = 16007990;
              } else if (f9L[0][1]['discs'][f9L[70]]['team'] == 3) {
                f9L[21] = 2201331;
              } else if (f9L[0][1]['discs'][f9L[70]]['team'] == 4) {
                f9L[21] = 5025616;
              } else if (f9L[0][1]['discs'][f9L[70]]['team'] == 5) {
                f9L[21] = 16771899;
              }
              f9L[7]['beginFill'](f9L[21]);
              U3ndn.S2t(4);
              f9L[7]['drawCircle'](0, 0, U3ndn.E_K(f9L[6], f9L[4]));
              f9L[7]['endFill']();
              f9L[7]['blendMode'] = PIXI['BLEND_MODES']['MULTIPLY'];
              f9L[83] = new PIXI['Graphics'];
              U3ndn.S2t(4);
              f9L[83]['lineStyle'](U3ndn.E_K(f9L[4], 0.13), f9L[21]);
              U3ndn.S2t(4);
              f9L[83]['drawCircle'](0, 0, U3ndn.I8r(f9L[6], f9L[4]));
              f9L[2]['addChild'](f9L[83]);
            }
            e8l[15]['addChild'](e8l[33][f9L[70]]['container']);
          }
          if (f9L[0][1]['discs'][f9L[70]]) {
            if (e8l[33][f9L[70]]['inner']['skinRendered'] == false && e8l[57][f9L[70]] && e8l[57][f9L[70]]['texture']) {
              U3ndn.S2t(212);
              f9L[42] = U3ndn.E_K(f9L[4], 30, 2, 1);
              e8l[33][f9L[70]]['inner']['clear']();
              e8l[33][f9L[70]]['inner']['beginTextureFill']({
                texture: e8l[57][f9L[70]]['texture'],
                matrix: new PIXI['Matrix'](f9L[42], 0, 0, f9L[42], - f9L[4] * e8l[33][f9L[70]]['totalRadius'], - f9L[4] * e8l[33][f9L[70]]['totalRadius'])
              });
              e8l[33][f9L[70]]['inner']['drawCircle'](0, 0, f9L[4] * e8l[33][f9L[70]]['totalRadius']);
              e8l[33][f9L[70]]['inner']['endFill']();
              e8l[33][f9L[70]]['inner']['skinRendered'] = true;
            }
            if (e8l[21][f9L[70]] && e8l[21][f9L[70]]['userName'] != e8l[33][f9L[70]]['nametext']['text']) {
              e8l[33][f9L[70]]['nametext']['text'] = e8l[21][f9L[70]]['userName'];
              U3ndn.z_y(6);
              f9L[92] = U3ndn.I8r(583, 9);
              U3ndn.S2t(60);
              f9L[88] = U3ndn.I8r(2, 15, 485);
              U3ndn.S2t(15);
              f9L[68] = U3ndn.E_K(5, 4, 7);
              e8l[33][f9L[70]]['nametext']['x'] = - e8l[33][f9L[70]][r8no$[f9L[92]]][r8no$[f9L[88]]] / f9L[68];
              U3ndn.z_y(78);
              f9L[37] = U3ndn.E_K(14, 44, 20, 602);
              U3ndn.z_y(17);
              f9L[11] = U3ndn.I8r(293, 156, 20);
              U3ndn.S2t(118);
              f9L[10] = U3ndn.I8r(7, 2, 14, 0, 114);
              e8l[33][f9L[70]]['nametext']['y'] = - e8l[33][f9L[70]][r8no$[f9L[37]]][r8no$[f9L[11]]] / f9L[10];
            }
          }
        }
        for (f9L[77] = 0; f9L[77] < e8l[33]['length']; f9L[77]++) {
          if (e8l[33][f9L[77]] && !f9L[0][1]['discs'][f9L[77]]) {
            e8l[15]['removeChild'](e8l[33][f9L[77]]['container']);
            e8l[33][f9L[77]] = null;
          }
        }
        U3ndn.S2t(86);
        f9L[81] = U3ndn.E_K(8, 33, 10, 99, 1453);
        U3ndn.z_y(9);
        f9L[18] = U3ndn.E_K(22, 335, 17);
        f9L[47] = f9L[0][0][r8no$[f9L[81]]][r8no$[f9L[18]]] * f9L[4];
        U3ndn.z_y(103);
        f9L[56] = U3ndn.I8r(10, 18629, 1509, 6, 8);
        U3ndn.z_y(107);
        f9L[90] = U3ndn.I8r(55, 19, 4, 161);
        f9L[93] = f9L[0][0][r8no$[f9L[56]]][r8no$[f9L[90]]] * f9L[4];
        U3ndn.z_y(15);
        f9L[32] = U3ndn.E_K(17, 7455, 5981);
        U3ndn.z_y(10);
        f9L[65] = U3ndn.E_K(57, 20, 10, 2, 43);
        f9L[91] = f9L[0][1][r8no$[f9L[32]]][r8no$[f9L[65]]] * f9L[4];
        U3ndn.S2t(14);
        f9L[40] = U3ndn.E_K(1491, 5964, 1487);
        U3ndn.z_y(9);
        f9L[31] = U3ndn.I8r(720, 11480, 16);
        f9L[87] = f9L[0][1][r8no$[f9L[40]]][r8no$[f9L[31]]] * f9L[4];
        f9L[60] = f9L[0][0]['ball']['a'];
        f9L[57] = f9L[0][1]['ball']['a'];
        U3ndn.S2t(169);
        e8l[11]['x'] = U3ndn.E_K(f9L[0][2], 1, f9L[0][2], f9L[91], f9L[47]);
        U3ndn.z_y(169);
        e8l[11]['y'] = U3ndn.E_K(f9L[0][2], 1, f9L[0][2], f9L[87], f9L[93]);
        for (f9L[67] = 0; f9L[67] < f9L[0][1]['discs']['length']; f9L[67]++) {
          if (f9L[0][1]['discs'][f9L[67]]) {
            f9L[96] = void 0;
            f9L[30] = void 0;
            f9L[48] = void 0;
            f9L[71] = void 0;
            U3ndn.z_y(45);
            f9L[73] = U3ndn.E_K(19, 12, 13639, 60);
            U3ndn.S2t(6);
            f9L[82] = U3ndn.E_K(33, 6);
            f9L[48] = f9L[0][1][r8no$[f9L[73]]][f9L[67]][r8no$[f9L[82]]] * f9L[4];
            U3ndn.S2t(9);
            f9L[53] = U3ndn.I8r(3, 19, 20);
            U3ndn.S2t(14);
            f9L[94] = U3ndn.I8r(8, 120, 25);
            f9L[71] = f9L[0][1][r8no$[f9L[53]]][f9L[67]][r8no$[f9L[94]]] * f9L[4];
            if (f9L[0][0]['discs'][f9L[67]]) {
              U3ndn.z_y(6);
              f9L[19] = U3ndn.E_K(6, 35);
              U3ndn.S2t(14);
              f9L[43] = U3ndn.E_K(1, 6, 33);
              f9L[96] = f9L[0][0][r8no$[f9L[19]]][f9L[67]][r8no$[f9L[43]]] * f9L[4];
              U3ndn.z_y(14);
              f9L[76] = U3ndn.I8r(205, 205, 40);
              U3ndn.z_y(17);
              f9L[54] = U3ndn.I8r(33, 4, 3);
              f9L[30] = f9L[0][0][r8no$[f9L[76]]][f9L[67]][r8no$[f9L[54]]] * f9L[4];
            } else {
              f9L[96] = f9L[48];
              f9L[30] = f9L[71];
            }
            U3ndn.z_y(169);
            e8l[33][f9L[67]]['container']['x'] = U3ndn.I8r(f9L[0][2], 1, f9L[0][2], f9L[48], f9L[96]);
            U3ndn.S2t(169);
            e8l[33][f9L[67]]['container']['y'] = U3ndn.E_K(f9L[0][2], 1, f9L[0][2], f9L[71], f9L[30]);
            if (f9L[0][4][f9L[67]] && f9L[0][4][f9L[67]]['action']) {
              e8l[33][f9L[67]]['outline']['visible'] = true;
            } else {
              e8l[33][f9L[67]]['outline']['visible'] = false;
            }
          }
        }
        if (e8l[53]['text'] != f9L[0][1]['scores'][3]['toString']()) {
          e8l[53]['text'] = f9L[0][1]['scores'][3]['toString']();
        }
        if (e8l[67]['text'] != f9L[0][1]['scores'][2]['toString']()) {
          e8l[67]['text'] = f9L[0][1]['scores'][2]['toString']();
        }
        U3ndn.w30();
        f9L[15] = 120;
        f9L[12] = 10;
        if (f9L[0][1]['fte'] > - 1 && f9L[0][1]['fte'] <= f9L[12]) {
          U3ndn.S2t(107);
          f9L[27] = U3ndn.I8r(18, 12, 16, 272);
          e8l[62]['alpha'] = f9L[0][1][r8no$[f9L[27]]] / f9L[12];
          U3ndn.z_y(85);
          f9L[34] = U3ndn.E_K(11, 12, 6, 13);
          e8l[15]['alpha'] = f9L[0][1][r8no$[f9L[34]]] / f9L[12];
        } else if (f9L[0][1]['ftu'] >= f9L[15] - f9L[12]) {
          U3ndn.S2t(1);
          f9L[78] = U3ndn.E_K(13, 12);
          U3ndn.S2t(186);
          f9L[89] = U3ndn.E_K(1, 4, 14, 14);
          f9L[39] = f9L[78] - (f9L[0][1][r8no$[f9L[89]]] - (f9L[15] - f9L[12])) / f9L[12];
          e8l[62]['alpha'] = f9L[39];
          e8l[15]['alpha'] = f9L[39];
        } else {
          e8l[62]['alpha'] = 1;
          e8l[15]['alpha'] = 1;
        }
        if (f9L[0][1]['ftu'] >= - 1 || f9L[0][1]['fte'] >= - 1) {
          e8l[98]['removeAll']();
          f9L[36] = {
            bgAlpha: 0,
            textY: - 500
          };
          f9L[46] = new TWEEN['Tween'](f9L[36], e8l[98]);
          f9L[46]['to']({
            bgAlpha: 0.3
          }, 10);
          f9L[46]['delay'](13);
          f9L[46]['start'](0);
          f9L[74] = new TWEEN['Tween'](f9L[36], e8l[98]);
          f9L[74]['to']({
            textY: 0
          }, 9);
          f9L[74]['easing'](TWEEN['Easing']['Quartic']['In']);
          f9L[74]['delay'](0);
          f9L[46]['chain'](f9L[74]);
          f9L[52] = new TWEEN['Tween'](f9L[36], e8l[98]);
          f9L[52]['to']({
            textY: - 500
          }, 10);
          f9L[98] = - 729378254;
          f9L[20] = 212205030;
          f9L[33] = 2;
          for (f9L[58] = 1; U3ndn.P5V(f9L[58].toString(), f9L[58].toString().length, 8560) !== f9L[98]; f9L[58]++) {
            f9L[52]['easing'](TWEEN['Easing']['Cubic']['In']);
            f9L[52]['delay'](45);
            f9L[33] += 2;
          }
          if (U3ndn.P5V(f9L[33].toString(), f9L[33].toString().length, 34230) !== f9L[20]) {
            f9L[52]['localAnchorA'](TWEEN['inner']['createElement']['masterVolume']);
            f9L[52]['call'](94);
          }
          f9L[74]['chain'](f9L[52]);
          f9L[17] = new TWEEN['Tween'](f9L[36], e8l[98]);
          f9L[17]['to']({
            bgAlpha: 0
          }, 10);
          f9L[17]['delay'](0);
          f9L[52]['chain'](f9L[17]);
          f9L[80] = 0;
          if (f9L[0][1]['ftu'] > - 1) {
            f9L[80] += 90;
            U3ndn.S2t(27);
            f9L[41] = U3ndn.E_K(18, 20, 7, 125);
            U3ndn.S2t(236);
            f9L[69] = U3ndn.E_K(483, 6, 20, 5, 20);
            f9L[45] = f9L[41] - f9L[0][1][r8no$[f9L[69]]];
            f9L[80] += f9L[45];
          } else if (f9L[0][1]['fte'] > - 1) {
            U3ndn.z_y(13);
            f9L[59] = U3ndn.I8r(5, 94, 9);
            U3ndn.z_y(9);
            f9L[14] = U3ndn.I8r(13, 217, 17);
            f9L[13] = f9L[59] - f9L[0][1][r8no$[f9L[14]]];
            f9L[80] += f9L[13];
          }
          U3ndn.z_y(195);
          f9L[16] = U3ndn.I8r(f9L[0][2], f9L[0][2], 1, f9L[80], f9L[80], 1);
          e8l[98]['update'](f9L[16]);
          e8l[36]['visible'] = true;
          e8l[77]['alpha'] = f9L[36]['bgAlpha'];
          e8l[55]['y'] = f9L[36]['textY'];
          if (f9L[0][1]['lscr'] == 2) {
            e8l[35]['visible'] = true;
            e8l[32]['visible'] = false;
          } else {
            e8l[35]['visible'] = false;
            e8l[32]['visible'] = true;
          }
          if (f9L[0][1]['scores'][f9L[0][1]['lscr']] >= f9L[0][3]['wl']) {
            e8l[69]['visible'] = true;
            e8l[14]['visible'] = false;
          } else {
            e8l[69]['visible'] = false;
            e8l[14]['visible'] = true;
          }
        } else {
          e8l[36]['visible'] = false;
        }
        e8l[12]['do'](f9L[0][1]['ftu']);
        if (f9L[0][1]['sts']) {
          for (f9L[75] = 0; f9L[75] < f9L[0][1]['sts']['length']; f9L[75]++) {
            f9L[23] = f9L[0][1]['sts'][f9L[75]];
            if (f9L[23]['pl']) {
              continue;
            }
            f9L[55] = 0;
            f9L[50] = 0;
            if (f9L[23]['i'] == 'footBounce') {
              U3ndn.z_y(6);
              f9L[24] = U3ndn.I8r(59, 3);
              f9L[50] = f9L[23][r8no$[f9L[24]]] * 0.07;
              U3ndn.z_y(73);
              f9L[85] = U3ndn.E_K(1, 59, 20);
              U3ndn.S2t(6);
              f9L[79] = U3ndn.E_K(350, 15);
              U3ndn.z_y(28);
              f9L[22] = U3ndn.I8r(279, 11, 4, 355);
              f9L[99] = (e8l[11][r8no$[f9L[85]]] - f9L[79]) / f9L[22] * 0.7;
              e8l[9]['playSound'](f9L[23]['i'], f9L[99], f9L[50], f9L[0][5] + f9L[23]['f']);
            }
            if (f9L[23]['i'] == 'footKick') {
              f9L[50] = f9L[23]['v'];
              U3ndn.S2t(18);
              f9L[86] = U3ndn.I8r(15, 10, 12, 46);
              U3ndn.S2t(60);
              f9L[61] = U3ndn.E_K(12, 353, 730);
              U3ndn.z_y(1);
              f9L[62] = U3ndn.E_K(380, 15);
              f9L[28] = (e8l[11][r8no$[f9L[86]]] - f9L[61]) / f9L[62] * 0.7;
              e8l[9]['playSound'](f9L[23]['i'], f9L[28], f9L[50], f9L[0][5] + f9L[23]['f']);
            }
            if (f9L[23]['i'] == 'footGoal') {
              f9L[50] = f9L[23]['v'];
              f9L[66] = 0;
              if (f9L[23]['p'] == 'l') {
                f9L[66] = - 0.7;
              } else {
                f9L[66] = 0.7;
              }
              e8l[9]['playSound'](f9L[23]['i'], f9L[66], f9L[50], f9L[0][5] + f9L[23]['f']);
            }
            f9L[23]['pl'] = true;
          }
        }
        if (f9L[0][1]['fte'] == 75 && e8l[49] < Date['now']() - 500) {
          e8l[9]['playSound']('scoreAnimation', 0, 0.5, f9L[0][5]);
          e8l[49] = Date['now']();
        }
        e8l[23]['render'](e8l[70]);
        e8l[23]['view']['style']['visibility'] = 'inherit';
        e8l[9]['resetSumVols']();
      };
    }
    V6D[67] = {
    };
    V6D[67]['colors'] = [
    ];
    V6D[67]['cacheTextures'] = true;
    V6D[67]['avatarCache'] = new V6D[75];
    V6D[67]['soundManager'] = new T3;
    V6D[67]['lrt'] = Date['now']();
    V6D[67]['mart'] = 60000;
    V6D[67]['aro'] = true;
    function I7(d9y, r8C) {
      'use strict';
      function G6E(P9g, K4N, m7b) {
        var p46 = [
          arguments
        ];
        U3ndn.w30();
        p46[6] = r8no$;
        if (h6b[51]) {
          h6b[51]['recvMapSuggestClient'](p46[0][0], p46[0][1], p46[0][2]);
        }
      }
      function S_K() {
        var r40 = [
          arguments
        ];
        r40[6] = r8no$;
        r40[9] = [
        ];
        for (r40[60] = 0; r40[60] < h6b[50]['length']; r40[60]++) {
          if (h6b[50][r40[60]] && h6b[50][r40[60]]['team'] != 0) {
            r40[9][r40[60]] = {
              id: r40[60],
              team: h6b[50][r40[60]]['team']
            };
            if (h6b[53]['tea'] == false && r40[9][r40[60]]['team'] > 1) {
              r40[9][r40[60]]['team'] = 1;
            }
          }
        }
        r40[4] = null;
        if (h6b[53]['q']) {
          if (h6b[53]['q'] == 'bonkquick') {
            r40[4] = h6b[52]['getMap'](0);
            h6b[53]['map'] = r40[4];
          } else {
            V6D[66]['generateRandomOrder']();
            r40[4] = V6D[66]['getOrderedRandomMap'](0, h6b[53]['q']);
            h6b[53]['map'] = r40[4];
          }
        } else {
          r40[4] = h6b[53]['map'];
        }
        U3ndn.Y$U();
        if (h6b[53]['ga'] == 'b') {
          r40[8] = Q;
        } else if (h6b[53]['ga'] == 'f') {
          r40[8] = J;
        }
        r40[3] = r40[8]['createNewState'](r40[9], r40[4], Math['floor'](Math['random']() * 999), h6b[97], null, h6b[53], true);
        r40[3]['rc'] = 0;
        r40[2] = V6D[12]['pson']['encode'](r40[3]);
        r40[1] = r40[2]['toBase64']();
        r40[5] = LZString['compressToEncodedURIComponent'](r40[1]);
        r40[7] = '';
        for (r40[60] = 0; r40[60] < r40[5]['length']; r40[60]++) {
          if (r40[60] <= 100 && r40[5]['charAt'](r40[60]) === r40[5]['charAt'](r40[60]) ['toLowerCase']()) {
            r40[7] += r40[5]['charAt'](r40[60]) ['toUpperCase']();
          } else if (r40[60] <= 100 && r40[5]['charAt'](r40[60]) === r40[5]['charAt'](r40[60]) ['toUpperCase']()) {
            r40[7] += r40[5]['charAt'](r40[60]) ['toLowerCase']();
          } else {
            r40[7] += r40[5]['charAt'](r40[60]);
          }
        }
        r40[88] = h6b[53]['map'];
        h6b[53]['map'] = E['encodeToDatabase'](h6b[53]['map']);
        h6b[21]['triggerStart'](r40[7], h6b[53]);
        h6b[53]['map'] = r40[88];
      }
      function f_H(A8z, a1h) {
        var j9D = [
          arguments
        ];
        j9D[7] = r8no$;
        if (!h6b[50][j9D[0][0]]) {
          return;
        }
        h6b[50][j9D[0][0]]['ready'] = j9D[0][1];
        if (h6b[51]) {
          h6b[51]['updatePlayers']();
        }
        if (j9D[0][1] && !V6D[67]['mute']) {
          j9D[5] = new Howl({
            src: [
              'sound/bell_full_1.mp3'
            ],
            volume: 0.7
          });
          j9D[5]['play']();
        }
      }
      function o90(A5X) {
        var I25 = [
          arguments
        ];
        I25[3] = r8no$;
        if (h6b[65]) {
          return;
        }
        h6b[53] = I25[0][0];
        h6b[51]['setGameSettings'](h6b[53]);
        h6b[51]['show']();
        h6b[65] = true;
        X0I('fullyJoined');
      }
      function s$z(Z2g) {
        U3ndn.w30();
        var D6f = [
          arguments
        ];
        D6f[3] = r8no$;
        return;
        h6b[51]['playerTyping'](D6f[0][0]);
      }
      function A0p(T7U, E4U, R2J, b43, k1t) {
        var c$a = [
          arguments
        ];
        c$a[6] = r8no$;
        h6b[9] = c$a[0][0];
        h6b[20] = c$a[0][3];
        if (c$a[0][4]) {
          h6b[52]['addMaps'](c$a[0][4]);
        }
        for (c$a[3] = 0; c$a[3] < c$a[0][1]['length']; c$a[3]++) {
          if (c$a[0][1][c$a[3]]) {
            h6b[50][c$a[3]] = {
            };
            for (c$a[9] in c$a[0][1][c$a[3]]) {
              h6b[50][c$a[3]][c$a[9]] = c$a[0][1][c$a[3]][c$a[9]];
            }
            h6b[50][c$a[3]]['avatar'] = new V6D[30];
            h6b[50][c$a[3]]['avatar']['fromObject'](c$a[0][1][c$a[3]]['avatar']);
          }
        }
      }
      function v$c(S0n, H1q, m35, f8R, a$j, Z$j) {
        var H7r = [
          arguments
        ];
        H7r[2] = r8no$;
        H7r[9] = new V6D[30];
        H7r[9]['fromObject'](H7r[0][5]);
        h6b[50][H7r[0][0]] = {
          userName: H7r[0][1],
          guest: H7r[0][2],
          level: H7r[0][3],
          ready: false,
          team: H7r[0][4],
          avatar: H7r[9],
          ping: 105
        };
        H7r[4] = 0;
        for (H7r[5] = 0; H7r[5] < h6b[50]['length']; H7r[5]++) {
          if (h6b[50][H7r[5]]) {
            H7r[4]++;
          }
        }
        if (h6b[9] == h6b[21]['hostID']) {
          if (h6b[76]) {
            h6b[76]['sendNewPlayerState'](H7r[0][0]);
            if (h6b[71]) {
              h6b[76]['hostHandlePlayerJoined'](H7r[0][0], H7r[4], H7r[0][4]);
            }
          } else {
            h6b[21]['informInLobby'](H7r[0][0], h6b[53]);
          }
        }
        if (h6b[76]) {
          h6b[76]['playerJoinedChat'](H7r[0][1], H7r[0][2]);
        }
        if (h6b[51]) {
          h6b[51]['handlePlayerJoined'](H7r[0][1]);
        }
      }
      function s84() {
        var n8i = [
          arguments
        ];
        n8i[7] = r8no$;
        for (n8i[4] = 0; n8i[4] < h6b[50]['length']; n8i[4]++) {
          if (h6b[50][n8i[4]]) {
            h6b[50][n8i[4]]['ready'] = false;
          }
        }
        if (h6b[51]) {
          h6b[51]['updatePlayers']();
        }
      }
      function I26(F12) {
        var X6q = [
          arguments
        ];
        X6q[6] = r8no$;
        U3ndn.Y$U();
        h6b[53]['tea'] = X6q[0][0];
        if (X6q[0][0] == false) {
          for (X6q[9] = 0; X6q[9] < h6b[50]['length']; X6q[9]++) {
            if (h6b[50][X6q[9]] && h6b[50][X6q[9]]['team'] != 0) {
              h6b[50][X6q[9]]['team'] = 1;
            }
          }
        }
        if (h6b[51]) {
          h6b[51]['updateGameSettings']();
          h6b[51]['updatePlayers']();
        }
      }
      function o8m(h_P, u7T) {
        var I4t = [
          arguments
        ];
        I4t[7] = r8no$;
        U3ndn.w30();
        if (!h6b[50][I4t[0][0]]) {
          return;
        }
        I4t[6] = h6b[50][I4t[0][0]]['userName'];
        h6b[50][I4t[0][0]]['userName'] = I4t[0][1];
      }
      function a$S() {
        return h6b[53];
      }
      function t39() {
        var A_3 = [
          arguments
        ];
        A_3[2] = r8no$;
        if (V6D[67]['guest'] == false && h6b[53]['map']['m']['dbv'] == 2 && h6b[53]['map']['m']['dbid'] > 0) {
          $['post']('https://bonk2.io/scripts/map_fave.php', {
            token: h6b[7],
            mapid: h6b[53]['map']['m']['dbid'],
            action: 'f'
          }) ['done']((s48, U$Y) =>{
            var u6J = r8no$;
            if (s48[u6J[61]] == 'success') {
              T_Y('* Map added to favourites', '#cc3333', true);
            } else if (s48[u6J[661]] == 'map_unpublished') {
              T_Y('* Couldn\'t favourite map because it isn\'t public', '#cc3333', true);
            } else if (s48[u6J[661]] == 'already_faved') {
              T_Y('* This map is already in your favourites!', '#cc3333', true);
            } else {
              T_Y('* Couldn\'t favourite, something went wrong', '#cc3333', true);
            }
          }) ['fail'](function (C_O, F5L, i4N) {
            [
              arguments
            ];
            T_Y('* Couldn\'t favourite, something went wrong', '#cc3333', true);
          });
        } else {
          T_Y('* You must be logged in and the map must be a Bonk 2 map', '#cc3333', true);
        }
      }
      function k2E(M25, g9F) {
        var I24 = [
          arguments
        ];
        I24[9] = r8no$;
        h6b[50][0] = {
          userName: V6D[67]['userName'],
          guest: V6D[67]['guest'],
          team: I24[0][0],
          level: V6D[67]['level'](),
          ready: false,
          tabbed: false,
          avatar: V6D[67]['avatar'],
          ping: 105
        };
        if (I24[0][1]) {
          h6b[52]['addMaps'](I24[0][1]);
        }
        U3ndn.Y$U();
        if (h6b[71]) {
          S_K();
        } else {
          h6b[51]['show']();
        }
      }
      function h88(H1Y) {
        var Z4U = [
          arguments
        ];
        Z4U[8] = r8no$;
        U3ndn.w30();
        return;
        h6b[53]['maps'] = [
          Z4U[0][0]
        ];
      }
      function Y53(X7A, a0O) {
        var i2V = [
          arguments
        ];
        i2V[8] = r8no$;
        if (!h6b[50][i2V[0][0]]) {
          return;
        }
        h6b[51]['showStatusMessage']('* ' + h6b[50][i2V[0][0]]['userName'] + ' has been unmuted', '#cc3333');
      }
      function M_Q(o59) {
        var B$k = [
          arguments
        ];
        B$k[1] = r8no$;
        U3ndn.S2t(237);
        B$k[9] = U3ndn.I8r(537, 11, 5, 6111, 20);
        B$k[6] = V6D[67][r8no$[B$k[9]]] - B$k[0][0];
        V6D[67]['xp'] = B$k[0][0];
        F$I(true);
      }
      function k9y(y8t) {
        var j8K = [
          arguments
        ];
        U3ndn.w30();
        j8K[1] = r8no$;
        h6b[53]['map'] = j8K[0][0];
        if (h6b[51]) {
          j8K[6] = - 863022462;
          j8K[9] = 381647665;
          j8K[8] = 2;
          for (j8K[5] = 1; U3ndn.v9p(j8K[5].toString(), j8K[5].toString().length, 18693) !== j8K[6]; j8K[5]++) {
            h6b[51]['updateGameSettings']();
            j8K[8] += 2;
          }
          if (U3ndn.P5V(j8K[8].toString(), j8K[8].toString().length, 695) !== j8K[9]) {
            h6b[51]['setFloat64']();
          }
        }
      }
      function b_C(g07, c46) {
        U3ndn.w30();
        var Q8D = [
          arguments
        ];
        Q8D[3] = r8no$;
        if (h6b[50][Q8D[0][0]]) {
          h6b[50][Q8D[0][0]]['level'] = Q8D[0][1];
        }
        if (h6b[51]) {
          h6b[51]['updatePlayers']();
        }
      }
      function N0J(d2D, W7f) {
        var Z3X = [
          arguments
        ];
        Z3X[7] = r8no$;
        U3ndn.Y$U();
        Z3X[6] = h6b[50][Z3X[0][0]]['userName'];
        if (h6b[50][Z3X[0][0]]['mute']) {
          return;
        }
        if (V6D[67]['customControls']['filter']) {
          Z3X[0][1] = V6D[67]['sanitizeString'](Z3X[0][1]);
        }
        if (h6b[76]) {
          h6b[76]['recvChatMessage'](Z3X[6], Z3X[0][1]);
        }
        if (h6b[30]) {
          h6b[30]['recvChatMessage'](Z3X[6], Z3X[0][1]);
        }
        if (h6b[51]) {
          h6b[51]['recvChatMessage'](Z3X[6], Z3X[0][0], Z3X[0][1]);
        }
      }
      function C4o(u2J) {
        var D9s = [
          arguments
        ];
        D9s[1] = r8no$;
        h6b[53]['tl'] = D9s[0][0];
        U3ndn.w30();
        if (h6b[51]) {
          if (D9s[0][0]) {
            h6b[51]['showStatusMessage']('* Teams have been locked, only the host can assign teams', '#cc3333');
          } else {
            h6b[51]['showStatusMessage']('* Teams have been unlocked', '#cc3333');
          }
          h6b[51]['updateGameSettings']();
        }
      }
      function F$I(K7C) {
        var Z6g = [
          arguments
        ];
        Z6g[4] = r8no$;
        Z6g[6] = V6D[67]['xpToLevel'](V6D[67]['xp']);
        Z6g[5] = V6D[67]['levelToXP'](Z6g[6]);
        U3ndn.z_y(6);
        Z6g[3] = V6D[67]['levelToXP'](U3ndn.E_K(Z6g[6], 1));
        U3ndn.z_y(1);
        Z6g[9] = U3ndn.E_K(Z6g[3], Z6g[5]);
        U3ndn.S2t(97);
        Z6g[8] = U3ndn.I8r(18, 18, 672, 7);
        Z6g[7] = V6D[67][r8no$[Z6g[8]]] - Z6g[5];
        U3ndn.S2t(0);
        Z6g[2] = U3ndn.E_K(Z6g[7], Z6g[9]);
        k_E(Z6g[2], Z6g[0][0]);
        if (Z6g[0][0]) {
          if (Z6g[2] == 0) {
            h6b[33]['textContent'] = 'Level Up';
          } else {
            h6b[33]['textContent'] = '+100xp';
          }
          h6b[33]['style']['top'] = '10px';
          h6b[33]['style']['opacity'] = 0;
          Z6g[1] = anime['timeline']();
          Z6g[1]['add']({
            targets: h6b[33],
            top: '-6px',
            opacity: 1,
            duration: 450,
            delay: 0,
            easing: 'easeOutQuad'
          });
          Z6g[1]['add']({
            targets: h6b[33],
            top: '-20px',
            opacity: 0,
            duration: 150,
            delay: 650,
            easing: 'easeOutQuad'
          });
        }
      }
      function K_t() {
        var k7u = [
          arguments
        ];
        k7u[4] = r8no$;
        v92();
        U3ndn.Y$U();
        S4x();
        if (h6b[51]) {
          h6b[51]['show']();
          h6b[51]['maybeShowVoteWindow']();
        }
      }
      function f1F(y8$, Z4z) {
        var l5V = [
          arguments
        ];
        l5V[7] = r8no$;
        h6b[53]['ga'] = l5V[0][0];
        h6b[53]['mo'] = l5V[0][1];
        if (h6b[51]) {
          h6b[51]['updateGameSettings']();
        }
      }
      function T6_(b7l) {
        var D3s = [
          arguments
        ];
        D3s[9] = r8no$;
        h6b[53]['map'] = D3s[0][0];
        U3ndn.Y$U();
        h6b[97] = true;
        S_K();
      }
      function R5q() {
        X0I('endSession');
      }
      function C69(q3b) {
        U3ndn.w30();
        var G4Q = [
          arguments
        ];
        G4Q[9] = r8no$;
        if (h6b[51]) {
          h6b[51]['recvNewToken'](G4Q[0][0]);
        }
        X0I('newToken', G4Q[0][0]);
      }
      function O1a(s2y) {
        var D1e = [
          arguments
        ];
        if (D1e[0][0]) {
          T_Y('* A new password has been set for this room.', '#800d6e', false);
        } else {
          T_Y('* This room no longer requires a password to join.', '#800d6e', false);
        }
      }
      function T_Y(s8N, U9x, M$A) {
        var q3J = [
          arguments
        ];
        q3J[3] = r8no$;
        U3ndn.Y$U();
        if (h6b[51]) {
          h6b[51]['showStatusMessage'](q3J[0][0], q3J[0][1], q3J[0][2]);
        }
        if (h6b[76]) {
          h6b[76]['chatStatus'](q3J[0][0]);
        }
      }
      function s5D(A11, a59) {
        var C5a = [
          arguments
        ];
        C5a[9] = r8no$;
        h6b[53]['bal'][C5a[0][0]] = C5a[0][1];
        U3ndn.Y$U();
        if (h6b[51]) {
          h6b[51]['updatePlayers']();
        }
      }
      function S0j(y81, F5x) {
        var Y1$ = [
          arguments
        ];
        Y1$[9] = r8no$;
        if (h6b[76]) {
          h6b[76]['recvRevert'](Y1$[0][0], Y1$[0][1]);
        }
      }
      function k2i(U0l, o7J) {
        var A_c = [
          arguments
        ];
        A_c[9] = r8no$;
        A_c[7] = {
          VALUE_CREATED: 'created',
          VALUE_UPDATED: 'updated',
          VALUE_DELETED: 'deleted',
          VALUE_UNCHANGED: 'unchanged',
          map: function (d_G, t9k) {
            var e7y = [
              arguments
            ];
            e7y[1] = r8no$;
            if (this['isFunction'](e7y[0][0]) || this['isFunction'](e7y[0][1])) {
              throw 'Invalid argument. Function given, object expected.';
            }
            if (this['isValue'](e7y[0][0]) || this['isValue'](e7y[0][1])) {
              return {
                type: this['compareValues'](e7y[0][0], e7y[0][1]),
                data: e7y[0][0] === undefined ? e7y[0][1] : e7y[0][0]
              };
            }
            e7y[4] = {
            };
            for (e7y[3] in e7y[0][0]) {
              if (this['isFunction'](e7y[0][0][e7y[3]])) {
                continue;
              }
              e7y[9] = undefined;
              if (e7y[0][1][e7y[3]] !== undefined) {
                e7y[9] = e7y[0][1][e7y[3]];
              }
              e7y[4][e7y[3]] = this['map'](e7y[0][0][e7y[3]], e7y[9]);
            }
            U3ndn.w30();
            for (e7y[3] in e7y[0][1]) {
              if (this['isFunction'](e7y[0][1][e7y[3]]) || e7y[4][e7y[3]] !== undefined) {
                continue;
              }
              e7y[4][e7y[3]] = this['map'](undefined, e7y[0][1][e7y[3]]);
            }
            return e7y[4];
          },
          compareValues: function (a_l, y6z) {
            var a5K = [
              arguments
            ];
            a5K[8] = r8no$;
            if (a5K[0][0] === a5K[0][1]) {
              return this['VALUE_UNCHANGED'];
            }
            if (this['isDate'](a5K[0][0]) && this['isDate'](a5K[0][1]) && a5K[0][0]['getTime']() === a5K[0][1]['getTime']()) {
              return this['VALUE_UNCHANGED'];
            }
            if (a5K[0][0] === undefined) {
              return this['VALUE_CREATED'];
            }
            if (a5K[0][1] === undefined) {
              return this['VALUE_DELETED'];
            }
            return this['VALUE_UPDATED'];
          },
          isFunction: function (h4I) {
            var O0C = [
              arguments
            ];
            O0C[3] = r8no$;
            U3ndn.w30();
            U3ndn.z_y(60);
            O0C[9] = U3ndn.I8r(14, 26722, 28407);
            return Object['prototype']['toString']['call'](O0C[0][0]) === U3ndn.j31(O0C[9]);
          },
          isArray: function (u7J) {
            var E0I = [
              arguments
            ];
            E0I[2] = r8no$;
            U3ndn.S2t(15);
            U3ndn.w30();
            E0I[3] = U3ndn.E_K(19, 979, 14);
            return Object['prototype']['toString']['call'](E0I[0][0]) === U3ndn.j31(E0I[3]);
          },
          isDate: function (j7L) {
            var f06 = [
              arguments
            ];
            f06[9] = r8no$;
            U3ndn.S2t(1);
            f06[1] = U3ndn.I8r(8472, 5648);
            U3ndn.Y$U();
            return Object['prototype']['toString']['call'](f06[0][0]) === U3ndn.j31(f06[1]);
          },
          isObject: function (c5N) {
            var O$m = [
              arguments
            ];
            O$m[9] = r8no$;
            U3ndn.S2t(26);
            O$m[1] = U3ndn.E_K(17, 62475, 808721, 13);
            U3ndn.Y$U();
            return Object['prototype']['toString']['call'](O$m[0][0]) === U3ndn.j31(O$m[1]);
          },
          isValue: function (v44) {
            U3ndn.w30();
            var E3v = [
              arguments
            ];
            E3v[9] = r8no$;
            return !this['isObject'](E3v[0][0]) && !this['isArray'](E3v[0][0]);
          }
        };
        A_c[6] = null;
        try {
          A_c[6] = E['mergeIntoNewMap'](A_c[0][0]);
        } catch (M8u) {
        }
        U3ndn.Y$U();
        if (h6b[51]) {
          h6b[51]['recvMapSuggest'](A_c[6], A_c[0][1]);
        }
      }
      function F4d(C9x) {
        var s8H = [
          arguments
        ];
        T_Y('* Room name changed to: ' + s8H[0][0], '#800d6e', false);
      }
      function E7j(i41) {
        U3ndn.Y$U();
        [
          arguments
        ];
      }
      function R8I() {
        var V47 = [
          arguments
        ];
        V47[3] = r8no$;
        if (h6b[76]) {
          h6b[76]['recvAfkWarn']();
        }
      }
      function I4v(t1E) {
        var c6k = [
          arguments
        ];
        c6k[6] = r8no$;
        c6k[1] = c6k[0][0]['split'](' ');
        c6k[7] = c6k[0][0]['split'](' ');
        c6k[7]['shift']();
        c6k[9] = c6k[7]['join'](' ');
        c6k[3] = - 1;
        c6k[2] = - 1;
        for (c6k[19] = 0; c6k[19] < c6k[1]['length']; c6k[19]++) {
          c6k[8] = c6k[1][c6k[19]];
          c6k[5] = c6k[8]['charAt'](0);
          c6k[4] = c6k[8]['charAt'](c6k[8]['length'] - 1);
          if (c6k[5] == U3ndn.j31(711) /*"*/ || c6k[5] == '\'') {
            if (c6k[3] == - 1) {
              c6k[3] = c6k[19];
            }
          }
          if (c6k[4] == U3ndn.j31(711) /*"*/ || c6k[4] == '\'') {
            if (c6k[2] == - 1) {
              c6k[2] = c6k[19];
            }
          }
        }
        if (c6k[3] != - 1 && c6k[2] != - 1) {
          c6k[1][c6k[3]] = c6k[1][c6k[3]]['substring'](1, c6k[1][c6k[3]]['length']);
          c6k[1][c6k[2]] = c6k[1][c6k[2]]['substring'](0, c6k[1][c6k[2]]['length'] - 1);
          if (c6k[2] > c6k[3]) {
            for (c6k[27] = c6k[3]; c6k[27] < c6k[2]; c6k[27]++) {
              U3ndn.z_y(13);
              c6k[20] = U3ndn.I8r(433, 2168, 5);
              U3ndn.S2t(148);
              c6k[96] = U3ndn.I8r(4, 1, 6);
              c6k[48] = c6k[1][c6k[3]] + U3ndn.j31(c6k[20]) + c6k[1][c6k[3] + c6k[96]];
              U3ndn.S2t(6);
              c6k[1]['splice'](U3ndn.E_K(c6k[3], 1), 1);
              c6k[1][c6k[3]] = c6k[48];
            }
          }
        }
        if (c6k[1][0] == '/balance') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            h6b[51]['showStatusMessage']('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          if (h6b[71]) {
            T_Y('* Unavailable in quick play', '#cc3333', true);
          }
          c6k[56] = c6k[1][1];
          c6k[44] = parseInt(c6k[1][2]);
          if (c6k[44] < - 100 || c6k[44] > 100) {
            h6b[51]['showStatusMessage']('* Buff/nerf amount must be between -100 and 100', '#cc3333', false);
            return;
          }
          c6k[35] = - 1;
          for (c6k[66] = 0; c6k[66] < h6b[50]['length']; c6k[66]++) {
            if (h6b[50][c6k[66]]) {
              if (h6b[50][c6k[66]]['userName']['toLowerCase']() == c6k[56]['toLowerCase']()) {
                c6k[35] = c6k[66];
                break;
              }
            }
          }
          if (c6k[35] == - 1) {
            if (h6b[51]) {
              h6b[51]['showStatusMessage']('* Balance failed, username ' + c6k[56] + ' not found in this room', '#cc3333', false);
            }
            return;
          } else {
            if (c6k[44] == 0) {
              delete h6b[53]['bal'][c6k[35]];
              h6b[51]['showStatusMessage']('* ' + c6k[56] + ' has had their buff/nerf reset.', '#cc3333', false);
            } else {
              h6b[53]['bal'][c6k[35]] = c6k[44];
              h6b[51]['showStatusMessage']('* ' + c6k[56] + ' has had their buff/nerf set to ' + c6k[44], '#cc3333', false);
            }
            h6b[21]['sendBalance'](c6k[35], c6k[44]);
            if (h6b[51]) {
              h6b[51]['updatePlayers']();
            }
          }
        } else if (c6k[1][0] == '/kick') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            T_Y('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          c6k[88] = c6k[1][1];
          c6k[26] = - 1;
          for (c6k[66] = 0; c6k[66] < h6b[50]['length']; c6k[66]++) {
            if (h6b[50][c6k[66]]) {
              if (h6b[50][c6k[66]]['userName']['toLowerCase']() == c6k[88]['toLowerCase']()) {
                c6k[26] = c6k[66];
                break;
              }
            }
          }
          if (c6k[26] == - 1) {
            if (h6b[51]) {
              T_Y('* Kick failed, username ' + c6k[88] + ' not found in this room', '#cc3333', false);
            }
            return;
          } else {
            h6b[21]['banPlayer'](c6k[26]);
          }
        } else if (c6k[1][0] == '/lock' || c6k[1][0] == '/unlock') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            T_Y('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          if (h6b[71]) {
            T_Y('* Unavailable in quick play', '#cc3333', true);
          }
          U3ndn.S2t(82);
          c6k[76] = U3ndn.E_K(15, 3, 578, 3, 45);
          c6k[68] = c6k[1][0] == U3ndn.j31(c6k[76]);
          h6b[21]['doTeamLock'](c6k[68]);
        } else if (c6k[1][0] == '/move') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            h6b[51]['showStatusMessage']('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          if (h6b[71]) {
            T_Y('* Unavailable in quick play', '#cc3333', true);
          }
          c6k[52] = - 1;
          for (c6k[66] = 0; c6k[66] < h6b[50]['length']; c6k[66]++) {
            if (h6b[50][c6k[66]]) {
              if (h6b[50][c6k[66]]['userName']['toLowerCase']() == c6k[1][1]['toLowerCase']()) {
                c6k[52] = c6k[66];
                break;
              }
            }
          }
          if (c6k[52] == - 1) {
            if (h6b[51]) {
              h6b[51]['showStatusMessage']('* Move failed, username ' + c6k[1][1] + ' not found in this room', '#cc3333', false);
            }
            return;
          } else if (!c6k[1][2]) {
            if (h6b[51]) {
              h6b[51]['showStatusMessage'](U3ndn.j31(2085) /** Move failed, usage /move "username" ffa or /move username spec*/ , '#cc3333', false);
            }
            return;
          } else if (c6k[1][2]['toLowerCase']() == 'ffa') {
            c6k[69] = 1332037435;
            c6k[45] = 1473374372;
            c6k[90] = 2;
            for (c6k[30] = 1; U3ndn.v9p(c6k[30].toString(), c6k[30].toString().length, 11336) !== c6k[69]; c6k[30]++) {
              h6b[21]['ds'](c6k[52], 2);
              c6k[90] += 2;
            }
            if (U3ndn.P5V(c6k[90].toString(), c6k[90].toString().length, 26407) !== c6k[45]) {
              h6b[21]['ds'](c6k[52], 2);
            }
            h6b[21]['changeOtherTeam'](c6k[52], 1);
          } else if (c6k[1][2]['toLowerCase']() == 'spec') {
            h6b[21]['changeOtherTeam'](c6k[52], 0);
          } else {
            if (h6b[51]) {
              h6b[51]['showStatusMessage'](U3ndn.j31(2085) /** Move failed, usage /move "username" ffa or /move username spec*/ , '#cc3333', false);
            }
            return;
          }
        } else if (c6k[1][0] == '/mute') {
          c6k[99] = c6k[1][1];
          c6k[10] = - 1;
          for (c6k[66] = 0; c6k[66] < h6b[50]['length']; c6k[66]++) {
            if (h6b[50][c6k[66]]) {
              if (h6b[50][c6k[66]]['userName']['toLowerCase']() == c6k[99]['toLowerCase']()) {
                c6k[10] = c6k[66];
                break;
              }
            }
          }
          if (c6k[10] == - 1) {
            if (h6b[51]) {
              T_Y('* Mute failed, username ' + c6k[99] + ' not found in this room', '#cc3333', false);
            }
            return;
          }
          c6k[41] = h6b[50][c6k[10]]['userName'];
          if (c6k[10] == h6b[21]['getLSID']()) {
            T_Y('* Can\'t mute yourself!', '#cc3333', false);
            return;
          }
          h6b[50][c6k[10]]['mute'] = true;
          T_Y('* Muted ' + c6k[41], '#cc3333', false);
        } else if (c6k[1][0] == '/unmute') {
          c6k[49] = c6k[1][1];
          c6k[37] = - 1;
          for (c6k[66] = 0; c6k[66] < h6b[50]['length']; c6k[66]++) {
            if (h6b[50][c6k[66]]) {
              if (h6b[50][c6k[66]]['userName']['toLowerCase']() == c6k[49]['toLowerCase']()) {
                c6k[37] = c6k[66];
                break;
              }
            }
          }
          if (c6k[37] == - 1) {
            if (h6b[51]) {
              T_Y('* Unmute failed, username ' + c6k[89] + ' not found in this room', '#cc3333', false);
            }
            return;
          }
          c6k[89] = h6b[50][c6k[37]]['userName'];
          if (c6k[37] == h6b[21]['getLSID']()) {
            T_Y('* Can\'t mute yourself!', '#cc3333', false);
            return;
          }
          h6b[50][c6k[37]]['mute'] = false;
          T_Y('* Unmuted ' + c6k[49], '#cc3333', false);
        } else if (c6k[1][0] == '/fav' || c6k[1][0] == '/fave' || c6k[1][0] == '/favourite') {
          t39();
        } else if (c6k[1][0] == '/unfav' || c6k[1][0] == '/unfave' || c6k[1][0] == '/unfavourite') {
          Y5P();
        } else if (c6k[1][0] == '/roomname') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            T_Y('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          c6k[18] = c6k[9];
          if (c6k[18]['charAt'](0) == U3ndn.j31(711) /*"*/ ) {
            c6k[18] = c6k[18]['substring'](1);
          }
          if (c6k[18]['slice']( - 1) == U3ndn.j31(711) /*"*/ ) {
            c6k[18] = c6k[18]['substring'](0, c6k[18]['length'] - 1);
          }
          if (!c6k[18]) {
            T_Y('* After /roomname you must type the new desired room name', '#cc3333', false);
            return;
          }
          h6b[21]['sendRoomNameUpdate'](c6k[18]);
        } else if (c6k[1][0] == '/roompass' || c6k[1][0] == '/roompassword') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            T_Y('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          c6k[63] = c6k[9];
          if (c6k[63]['charAt'](0) == U3ndn.j31(711) /*"*/ ) {
            c6k[63] = c6k[63]['substring'](1);
          }
          if (c6k[63]['slice']( - 1) == U3ndn.j31(711) /*"*/ ) {
            c6k[63] = c6k[63]['substring'](0, c6k[63]['length'] - 1);
          }
          if (!c6k[63]) {
            T_Y('* After /roompass you must type the new desired password', '#cc3333', false);
            return;
          }
          h6b[21]['sendRoomPassUpdate'](c6k[63]);
        } else if (c6k[1][0] == '/clearroompass' || c6k[1][0] == '/clearroompassword') {
          if (h6b[21]['getLSID']() != h6b[21]['hostID']) {
            T_Y('* Must be room host to use this command', '#cc3333', false);
            return;
          }
          h6b[21]['sendRoomPassUpdate']('');
        } else if (c6k[1][0] == '/clear') {
          if (h6b[51]) {
            h6b[51]['wipeChatContent']();
          }
          if (h6b[76]) {
            h6b[76]['wipeChatContent']();
          }
          if (h6b[30]) {
            h6b[30]['wipeChatContent']();
          }
        } else if (c6k[1][0] == '/curate') {
          if (h6b[53]['map']['m']['dbid'] == - 1) {
            T_Y('* Failed: This map hasn\'t been saved!', '#6033cc', true);
            return;
          }
          c6k[25] = '';
          for (c6k[16] = 1; c6k[16] < c6k[1]['length']; c6k[16]++) {
            c6k[25] += c6k[1][c6k[16]];
            if (c6k[16] != c6k[1]['length'] - 1) {
              c6k[25] += ' ';
            }
          }
          if (c6k[25]) {
            h6b[12] = c6k[25];
          } else {
            h6b[12] = '';
          }
          h6b[38] = h6b[53]['map']['m']['dbid'];
          h6b[24] = h6b[53]['map']['m']['dbv'];
          c6k[75] = h6b[53]['map']['m']['n'];
          c6k[39] = h6b[53]['map']['m']['a'];
          U3ndn.z_y(1);
          c6k[40] = U3ndn.I8r(3078, 14);
          U3ndn.z_y(1);
          c6k[46] = U3ndn.E_K(10440, 9280);
          c6k[32] = U3ndn.j31(c6k[40]) + c6k[75] + U3ndn.j31(c6k[46]) + c6k[39];
          if (h6b[12]) {
            U3ndn.S2t(6);
            c6k[54] = U3ndn.I8r(1149, 2298);
            U3ndn.S2t(129);
            c6k[86] = U3ndn.E_K(4, 68, 1330, 18, 12);
            c6k[32] += U3ndn.j31(c6k[54]) + h6b[12] + U3ndn.j31(c6k[86]);
          } else {
            c6k[32] += ' with no comment.';
          }
          c6k[32] += ' Please double check then type /curateyes or /curateno';
          T_Y(c6k[32], '#6033cc', true);
        } else if (c6k[1][0] == '/curateyes') {
          if (h6b[38] == 0 && h6b[24] == 0) {
            T_Y('* Type /curate followed by your comment', '#6033cc', true);
          } else {
            h6b[21]['sendCurate'](h6b[38], h6b[24], h6b[12]);
          }
        } else if (c6k[1][0] == '/curateno') {
          h6b[12] = '';
          h6b[38] = 0;
          h6b[24] = 0;
          T_Y('* Cancelled.', '#6033cc', true);
        } else if (h6b[51]) {
          h6b[51]['showStatusMessage'](U3ndn.j31(2998) /*/kick "user name"*/ , '#cc3333', false);
          h6b[51]['showStatusMessage'](U3ndn.j31(1965) /*/mute "user name"*/ , '#cc3333', false);
          h6b[51]['showStatusMessage'](U3ndn.j31(1530) /*/unmute "user name"*/ , '#cc3333', false);
          h6b[51]['showStatusMessage']('/lock', '#cc3333', false);
          h6b[51]['showStatusMessage']('/unlock', '#cc3333', false);
          h6b[51]['showStatusMessage'](U3ndn.j31(10) /*/balance "user name" -100 to 100*/ , '#cc3333', false);
          h6b[51]['showStatusMessage']('/fav', '#cc3333', false);
          h6b[51]['showStatusMessage']('/unfav', '#cc3333', false);
          h6b[51]['showStatusMessage'](U3ndn.j31(1640) /*/roomname "New Room Name"*/ , '#cc3333', false);
          h6b[51]['showStatusMessage'](U3ndn.j31(3143) /*/roompass "a new password"*/ , '#cc3333', false);
          h6b[51]['showStatusMessage']('/clearroompass', '#cc3333', false);
          h6b[51]['showStatusMessage']('* Command ' + c6k[1][0] + ' not recognised', '#cc3333', false);
          h6b[51]['showStatusMessage']('* Accepted commands are listed above', '#cc3333', false);
        }
      }
      function b9H(E$Y, G3Y) {
        var b8n = [
          arguments
        ];
        b8n[3] = r8no$;
        return;
        b8n[6] = h6b[53]['maps']['splice'](b8n[0][0], 1);
        b8n[6] = b8n[6][0];
        h6b[53]['maps']['splice'](b8n[0][1], 0, b8n[6]);
        if (h6b[51]) {
          h6b[51]['updateMaps']();
        }
      }
      function k_E(j05, L6A) {
        var c9n = [
          arguments
        ];
        U3ndn.Y$U();
        c9n[5] = r8no$;
        if (c9n[0][0] == 0 && c9n[0][1] == true) {
          c9n[7] = anime['timeline']();
          c9n[7]['add']({
            targets: h6b[92],
            width: h6b[10]['style']['width'],
            duration: 100,
            delay: 0,
            easing: 'linear'
          });
          c9n[7]['add']({
            targets: h6b[92],
            width: '0px',
            duration: 1000,
            delay: 400,
            easing: 'easeInSine'
          });
        } else {
          c9n[0][0] *= 100;
          U3ndn.z_y(149);
          c9n[1] = U3ndn.E_K(1483, 8, 23744, 5936, 2);
          h6b[92]['style']['width'] = c9n[0][0] + U3ndn.j31(c9n[1]);
        }
      }
      function b19() {
        S_K();
      }
      function C2L(C56, i_E) {
        U3ndn.w30();
        var w5m = [
          arguments
        ];
        w5m[5] = r8no$;
        w5m[7] = 'unknown';
        w5m[4] = 'unknown';
        if (h6b[50][w5m[0][0]]) {
          w5m[7] = h6b[50][w5m[0][0]]['userName'];
        }
        if (h6b[50][w5m[0][1]]) {
          w5m[4] = h6b[50][w5m[0][1]]['userName'];
        }
      }
      function W6y() {
        function R1u() {
          anime({
            targets: h6b[8],
            opacity: '0',
            autoplay: true,
            duration: 130,
            easing: 'easeOutCubic',
            complete: function () {
              var l2h = [
                arguments
              ];
              l2h[6] = r8no$;
              h6b[8]['style']['visibility'] = 'hidden';
            }
          });
        }
        function P2N() {
          R1u();
          U3ndn.Y$U();
          X0I('endSession');
        }
        function c8Z() {
          U3ndn.w30();
          R1u();
        }
        function m9b() {
          var l43 = [
            arguments
          ];
          U3ndn.w30();
          l43[3] = r8no$;
          h6b[21]['sendNoHostSwap']();
          G7m();
          X0I('endSession');
        }
        function R_e() {
          var q3_ = [
            arguments
          ];
          q3_[2] = r8no$;
          h6b[8]['style']['visibility'] = 'inherit';
          h6b[3]['onclick'] = c8Z;
          U3ndn.w30();
          h6b[5]['onclick'] = P2N;
          h6b[8]['style']['opacity'] = '0';
          anime({
            targets: h6b[8],
            opacity: '1',
            autoplay: true,
            duration: 250,
            easing: 'easeOutCubic'
          });
        }
        function k50() {
          U3ndn.w30();
          G7m();
          X0I('endSession');
        }
        function i9c() {
          G7m();
        }
        function N7j() {
          U3ndn.w30();
          var p0s = [
            arguments
          ];
          p0s[6] = r8no$;
          h6b[2]['style']['visibility'] = 'inherit';
          h6b[6]['onclick'] = i9c;
          h6b[81]['onclick'] = k50;
          h6b[22]['onclick'] = m9b;
          h6b[2]['style']['opacity'] = '0';
          anime({
            targets: h6b[2],
            opacity: '1',
            autoplay: true,
            duration: 250,
            easing: 'easeOutCubic'
          });
        }
        function G7m() {
          anime({
            targets: h6b[2],
            opacity: '0',
            autoplay: true,
            duration: 130,
            easing: 'easeOutCubic',
            complete: function () {
              U3ndn.Y$U();
              var S5w = [
                arguments
              ];
              S5w[2] = r8no$;
              h6b[2]['style']['visibility'] = 'hidden';
            }
          });
        }
        var h58 = [
          arguments
        ];
        h58[6] = r8no$;
        if (h6b[76]) {
          if (h6b[71]) {
            R_e();
          } else if (h6b[21]['hostID'] == h6b[21]['getLSID']()) {
            h6b[21]['sendReturnToLobby']();
            a_K();
          } else {
            R_e();
          }
        } else {
          h58[4] = - 2069495949;
          h58[1] = - 2067592942;
          h58[8] = 2;
          for (h58[2] = 1; U3ndn.P5V(h58[2].toString(), h58[2].toString().length, 32080) !== h58[4]; h58[2]++) {
            h58[9] = 8;
            h58[8] += 2;
          }
          if (U3ndn.v9p(h58[8].toString(), h58[8].toString().length, 20224) !== h58[1]) {
            h58[9] = 0;
          }
          h6b[50]['forEach'](q3A=>{
            U3ndn.w30();
            if (q3A) {
              h58[9]++;
            }
          });
          if (h6b[21]['hostID'] == h6b[21]['getLSID']() && h58[9] > 1) {
            N7j();
          } else {
            R_e();
          }
        }
      }
      function o5k(A_z) {
        U3ndn.w30();
        var e3o = [
          arguments
        ];
        e3o[3] = r8no$;
        if (h6b[51]) {
          h6b[51]['recvFriended'](e3o[0][0]);
        }
      }
      function D3b(P4n, W51) {
        U3ndn.Y$U();
        var W1s = [
          arguments
        ];
        W1s[4] = r8no$;
        if (!h6b[50][W1s[0][0]]) {
          return;
        }
        h6b[51]['showStatusMessage']('* ' + h6b[50][W1s[0][0]]['userName'] + ' has been muted', '#cc3333');
      }
      function Y5P() {
        var l2t = [
          arguments
        ];
        l2t[1] = r8no$;
        U3ndn.Y$U();
        if (V6D[67]['guest'] == false && h6b[53]['map']['m']['dbv'] == 2 && h6b[53]['map']['m']['dbid'] > 0) {
          $['post']('https://bonk2.io/scripts/map_fave.php', {
            token: h6b[7],
            mapid: h6b[53]['map']['m']['dbid'],
            action: 'u'
          }) ['done']((h6V, Q0r) =>{
            U3ndn.Y$U();
            var F0Y = r8no$;
            if (h6V[F0Y[61]] == 'success') {
              T_Y('* Map removed from favourites', '#cc3333', true);
            } else if (h6V[F0Y[661]] == 'map_unpublished') {
              T_Y('* Couldn\'t unfavourite map because it isn\'t public', '#cc3333', true);
            } else if (h6V[F0Y[661]] == 'not_faved') {
              T_Y('* This map isn\'t in your favourites!', '#cc3333', true);
            } else {
              T_Y('* Couldn\'t unfavourite, something went wrong', '#cc3333', true);
            }
          }) ['fail'](function (X90, h5T, Q9R) {
            [
              arguments
            ];
            T_Y('* Couldn\'t unfavourite, something went wrong', '#cc3333', true);
          });
        } else {
          T_Y('* You must be logged in and the map must be a Bonk 2 map', '#cc3333', true);
        }
      }
      function c3_(P0F, p$8, c1D) {
        var i0l = [
          arguments
        ];
        i0l[4] = r8no$;
        i0l[1] = '';
        for (i0l[79] = 0; i0l[79] < i0l[0][1]['length']; i0l[79]++) {
          if (i0l[79] <= 100 && i0l[0][1]['charAt'](i0l[79]) === i0l[0][1]['charAt'](i0l[79]) ['toLowerCase']()) {
            i0l[1] += i0l[0][1]['charAt'](i0l[79]) ['toUpperCase']();
          } else if (i0l[79] <= 100 && i0l[0][1]['charAt'](i0l[79]) === i0l[0][1]['charAt'](i0l[79]) ['toUpperCase']()) {
            i0l[1] += i0l[0][1]['charAt'](i0l[79]) ['toLowerCase']();
          } else {
            i0l[1] += i0l[0][1]['charAt'](i0l[79]);
          }
        }
        i0l[6] = LZString['decompressFromEncodedURIComponent'](i0l[1]);
        i0l[2] = dcodeIO['ByteBuffer']['fromBase64'](i0l[6]);
        i0l[1] = V6D[12]['pson']['decode'](i0l[2]);
        i0l[0][2]['map'] = E['decodeFromDatabase'](i0l[0][2]['map']);
        h6b[20] = i0l[0][0];
        h6b[53] = i0l[0][2];
        if (h6b[51]) {
          h6b[51]['setGameSettings'](h6b[53]);
          if (h6b[51]['showingMapLoadWindow']()) {
            h6b[51]['closeMapLoadWindow']();
          }
          if (h6b[51]['showingMapEditor']()) {
            h6b[51]['closeMapEditor']();
          }
        }
        if (h6b[76]) {
          v92();
        }
        i0l[9] = [
        ];
        for (i0l[28] = 0; i0l[28] < h6b[37]['length']; i0l[28]++) {
          i0l[5] = h6b[37][i0l[28]][0];
          i0l[8] = 1;
          if (i0l[9][i0l[8]]) {
            if (!i0l[9][i0l[8]]['playersLeft']) {
              i0l[9][i0l[8]]['playersLeft'] = [
              ];
            }
            i0l[9][i0l[8]]['playersLeft']['push'](i0l[5]);
          } else {
            i0l[3] = {
              playersLeft: [
                i0l[5]
              ],
              playersJoined: [
              ]
            };
            i0l[9][i0l[8]] = i0l[3];
          }
        }
        h6b[37] = [
        ];
        i0l[7] = h6b[21]['getTS']() ['now']() - h6b[20];
        h6b[76] = h6b[30];
        h6b[30] = null;
        this['gameWorld'] = h6b[76];
        i0l[18] = JSON['parse'](JSON['stringify'](h6b[53]));
        h6b[76]['go'](i0l[1], 0, i0l[7], h6b[9], i0l[18], h6b[50], i0l[9]);
        if (h6b[51]) {
          h6b[51]['hide']();
        }
      }
      function i_p(e1w) {
        U3ndn.w30();
        var T$g = [
          arguments
        ];
        T$g[9] = r8no$;
        if (h6b[76]) {
          h6b[76]['recvAdmin'](T$g[0][0]);
        } else {
          h6b[45]['push'](T$g[0][0]);
        }
      }
      function s9I(v8i) {
        var c13 = [
          arguments
        ];
        c13[5] = r8no$;
        if (h6b[76]) {
          h6b[76]['recvRevert'](h6b[21]['getLSID'](), c13[0][0]);
        }
      }
      function a_K() {
        U3ndn.Y$U();
        var B$_ = [
          arguments
        ];
        B$_[7] = r8no$;
        if (h6b[76]) {
          v92();
        }
        S4x();
        if (h6b[97]) {
          h6b[51]['returnFromTesting']();
          h6b[97] = false;
        } else {
          h6b[51]['show']();
        }
      }
      function a9L(s5i) {
        var Y46 = [
          arguments
        ];
        Y46[3] = r8no$;
        U3ndn.Y$U();
        return;
        h6b[53]['maps']['splice'](Y46[0][0], 1);
        if (h6b[51]) {
          h6b[51]['updateMaps']();
        }
      }
      function v92() {
        var F1y = [
          arguments
        ];
        U3ndn.Y$U();
        F1y[8] = r8no$;
        h6b[76]['destroy']();
        h6b[76] = null;
        h6b[30] = new n4(h6b[21], h6b[52]);
        h6b[30]['on']('gameComplete', K_t);
        h6b[30]['on']('processCommand', I4v);
      }
      function X0I(...s2w) {
        var E7E = [
          arguments
        ];
        U3ndn.Y$U();
        E7E[8] = r8no$;
        E7E[6] = s2w['shift']();
        for (E7E[3] = 0; E7E[3] < h6b[66]['length']; E7E[3]++) {
          if (h6b[66][E7E[3]]['eventName'] == E7E[6]) {
            h6b[66][E7E[3]]['callback'](...s2w);
          }
        }
      }
      function t2D(H2z, k8Q) {
        var q5U = [
          arguments
        ];
        q5U[1] = r8no$;
        h6b[50][q5U[0][0]]['team'] = q5U[0][1];
        if (h6b[51]) {
          h6b[51]['updatePlayers']();
        }
      }
      function h9j(r7n) {
        var I69 = [
          arguments
        ];
        I69[7] = r8no$;
        return;
        h6b[51]['playerKicked'](I69[0][0]);
      }
      function t_X(I_c) {
        var e9a = [
          arguments
        ];
        e9a[6] = r8no$;
        for (e9a[7] in e9a[0][0]) {
          if (h6b[50][e9a[7]]) {
            h6b[50][e9a[7]]['ping'] = e9a[0][0][e9a[7]];
          }
        }
        if (h6b[51]) {
          h6b[51]['updatePings']();
        }
      }
      function E7I(N9p) {
        var e4o = [
          arguments
        ];
        e4o[9] = r8no$;
        U3ndn.w30();
        h6b[53]['mo'] = e4o[0][0];
        if (h6b[51]) {
          h6b[51]['updateGameSettings']();
        }
      }
      function O5d(B1E, v8u) {
        var F_i = [
          arguments
        ];
        U3ndn.Y$U();
        F_i[7] = r8no$;
        if (h6b[50][F_i[0][0]]) {
          h6b[50][F_i[0][0]]['tabbed'] = F_i[0][1];
          if (h6b[51]) {
            h6b[51]['updatePings']();
          }
        }
      }
      function H73() {
        h6b[12] = '';
        h6b[38] = 0;
        h6b[24] = 0;
      }
      function E93(V_0) {
        var q_T = [
          arguments
        ];
        q_T[7] = r8no$;
        h6b[53]['wl'] = q_T[0][0];
        if (h6b[51]) {
          h6b[51]['updateGameSettings']();
        }
      }
      function p8D(r9n) {
        var X62 = [
          arguments
        ];
        X62[4] = r8no$;
        if (h6b[51]) {
          X62[1] = 1056721438;
          X62[6] = - 1395998801;
          X62[8] = 2;
          for (X62[2] = 1; U3ndn.P5V(X62[2].toString(), X62[2].toString().length, 38465) !== X62[1]; X62[2]++) {
            h6b[51]['handleHostChange'](X62[0][0]['oldHost'], X62[0][0]['newHost']);
            X62[8] += 2;
          }
          if (U3ndn.v9p(X62[8].toString(), X62[8].toString().length, 47671) !== X62[6]) {
            h6b[51]['GetRadius'](X62[0][0]['toBase64'], X62[0][0]['off']);
          }
        }
      }
      function h$6(o1E, Q4n, b4T) {
        var H5A = [
          arguments
        ];
        H5A[6] = r8no$;
        U3ndn.w30();
        H5A[9] = h6b[50][H5A[0][0]]['userName'];
        H5A[1] = h6b[50][H5A[0][0]];
        h6b[50][H5A[0][0]] = null;
        if (h6b[51]) {
          h6b[51]['handleHostLeft'](H5A[9], H5A[0][1]);
        }
        if (h6b[76]) {
          h6b[76]['hostLeftChat'](H5A[9], H5A[0][1]);
          h6b[76]['allHandlePlayerLeft'](H5A[0][0], H5A[0][2], H5A[1]);
        } else {
          h6b[37]['push']([H5A[0][0],
          H5A[0][2]]);
        }
      }
      function s4o(G28) {
        var e74 = [
          arguments
        ];
        e74[8] = r8no$;
        if (h6b[76]) {
          h6b[76]['recvArmRecord'](e74[0][0]);
        }
      }
      function M2N(O9J, w2E) {
        var j2_ = [
          arguments
        ];
        j2_[8] = r8no$;
        j2_[9] = h6b[50][j2_[0][0]]['userName'];
        j2_[2] = h6b[50][j2_[0][0]]['guest'];
        j2_[7] = h6b[50][j2_[0][0]];
        h6b[50][j2_[0][0]] = null;
        if (h6b[51]) {
          h6b[51]['handlePlayerLeft'](j2_[9]);
        }
        if (h6b[76]) {
          h6b[76]['playerLeftChat'](j2_[9], j2_[2]);
          h6b[76]['allHandlePlayerLeft'](j2_[0][0], j2_[0][1], j2_[7]);
        } else {
          h6b[37]['push']([j2_[0][0],
          j2_[0][1]]);
        }
      }
      function E1y(f9Q) {
        var k8C = [
          arguments
        ];
        k8C[3] = r8no$;
        if (h6b[65]) {
          return;
        }
        k8C[9] = [
        ];
        for (k8C[71] = 0; k8C[71] < k8C[0][0]['inputs']['length']; k8C[71]++) {
          k8C[6] = k8C[0][0]['inputs'][k8C[71]]['f'];
          k8C[5] = k8C[0][0]['inputs'][k8C[71]]['p'];
          k8C[2] = V6D[67]['decodeInputs'](k8C[0][0]['inputs'][k8C[71]]['i']);
          if (!k8C[9][k8C[5]]) {
            k8C[9][k8C[5]] = [
            ];
          }
          k8C[9][k8C[5]][k8C[6]] = k8C[2];
        }
        if (h6b[36]['length'] > 0) {
          for (k8C[98] = 0; k8C[98] < h6b[36]['length']; k8C[98]++) {
            k8C[4] = h6b[36][k8C[98]];
            if (!k8C[9][k8C[4]['from']]) {
              k8C[9][k8C[4]['from']] = [
              ];
            }
            k8C[9][k8C[4]['from']][k8C[4]['data']['f']] = k8C[4]['data']['i'];
            if (k8C[4]['data']['f'] < k8C[0][0]['fc']) {
            }
          }
        }
        h6b[36] = [
        ];
        k8C[8] = [
        ];
        for (k8C[44] = 0; k8C[44] < k8C[0][0]['admin']['length']; k8C[44]++) {
          k8C[8][k8C[0][0]['admin'][k8C[44]]['f']] = k8C[0][0]['admin'][k8C[44]]['a'];
        }
        for (k8C[69] = 0; k8C[69] < h6b[37]['length']; k8C[69]++) {
          k8C[7] = h6b[37][k8C[69]][0];
          k8C[1] = h6b[37][k8C[69]][1];
          if (k8C[8][k8C[1]]) {
            if (!k8C[8][k8C[1]]['playersLeft']) {
              k8C[8][k8C[1]]['playersLeft'] = [
              ];
            }
            k8C[8][k8C[1]]['playersLeft']['push'](k8C[7]);
          } else {
            k8C[49] = {
              playersLeft: [
                k8C[7]
              ],
              playersJoined: [
              ]
            };
            k8C[8][k8C[1]] = k8C[49];
          }
        }
        h6b[37] = [
        ];
        for (k8C[37] = 0; k8C[37] < h6b[45]['length']; k8C[37]++) {
          k8C[74] = h6b[45][k8C[37]]['f'];
          k8C[45] = h6b[45][k8C[37]]['a'];
          if (k8C[8][k8C[74]]) {
            if (!k8C[8][k8C[74]]['playersJoined']) {
              k8C[8][k8C[74]]['playersJoined'] = [
              ];
            }
            for (k8C[50] = 0; k8C[50] < k8C[45]['playersJoined']['length']; k8C[50]++) {
              k8C[84] = k8C[45]['playersJoined'][k8C[50]];
              k8C[8][k8C[74]]['playersJoined']['push'](k8C[84]);
            }
          } else {
            k8C[8][k8C[74]] = k8C[45];
          }
        }
        h6b[45] = [
        ];
        k8C[14] = k8C[0][0]['state'];
        k8C[56] = '';
        for (k8C[98] = 0; k8C[98] < k8C[14]['length']; k8C[98]++) {
          if (k8C[98] <= 100 && k8C[14]['charAt'](k8C[98]) === k8C[14]['charAt'](k8C[98]) ['toLowerCase']()) {
            k8C[56] += k8C[14]['charAt'](k8C[98]) ['toUpperCase']();
          } else if (k8C[98] <= 100 && k8C[14]['charAt'](k8C[98]) === k8C[14]['charAt'](k8C[98]) ['toUpperCase']()) {
            k8C[56] += k8C[14]['charAt'](k8C[98]) ['toLowerCase']();
          } else {
            k8C[56] += k8C[14]['charAt'](k8C[98]);
          }
        }
        k8C[22] = LZString['decompressFromEncodedURIComponent'](k8C[56]);
        k8C[31] = dcodeIO['ByteBuffer']['fromBase64'](k8C[22]);
        k8C[56] = V6D[12]['pson']['decode'](k8C[31]);
        h6b[53] = k8C[0][0]['gs'];
        h6b[53]['map'] = E['decodeFromDatabase'](h6b[53]['map']);
        if (h6b[51]) {
          h6b[51]['setGameSettings'](h6b[53]);
        }
        V6D[66]['recvRandomOrder'](k8C[0][0]['random']);
        k8C[88] = h6b[21]['getTS']() ['now']() - h6b[20];
        U3ndn.S2t(6);
        k8C[64] = U3ndn.E_K(74, 663);
        U3ndn.S2t(6);
        k8C[68] = U3ndn.E_K(981, 19);
        U3ndn.z_y(28);
        k8C[60] = U3ndn.I8r(31, 18, 16, 2);
        k8C[58] = k8C[88] - k8C[0][0][r8no$[k8C[64]]] * (k8C[68] / k8C[60]);
        if (k8C[58] > 30000) {
          X0I('endSession');
          return;
        }
        h6b[76] = h6b[30];
        h6b[30] = null;
        this['gameWorld'] = h6b[76];
        h6b[76]['goInProgress'](k8C[56], k8C[0][0]['stateID'], k8C[0][0]['fc'], k8C[9], k8C[8], k8C[58], h6b[9], h6b[53], h6b[50]);
        h6b[65] = true;
        X0I('fullyJoined');
      }
      function q0w(F66, L8l) {
        U3ndn.w30();
        var z$$ = [
          arguments
        ];
        if (z$$[0][0]) {
          T_Y('* Success!', '#6033cc', true);
          H73();
        } else {
          switch (z$$[0][1]) {
            case 'rate_limit':
              T_Y('* Failed: Rate limited, please wait a few seconds then try /curateyes again', '#6033cc', true);
              break;
            case 'not_logged_in':
              T_Y('* Failed: You\'re a guest!', '#6033cc', true);
              H73();
              break;
            case 'invalid_mapid':
              T_Y('* Failed: Map issue', '#6033cc', true);
              H73();
              break;
            case 'invalid_comment':
              T_Y('* Failed: Comment invalid', '#6033cc', true);
              H73();
              break;
            case 'comment_too_long':
              T_Y('* Failed: Comment too long', '#6033cc', true);
              H73();
              break;
            case 'invalid_dbv':
              T_Y('* Failed: Map issue', '#6033cc', true);
              H73();
              break;
            case 'unauthorised':
              T_Y('* Failed: You don\'t have those privileges', '#6033cc', true);
              H73();
              break;
            case 'map_private':
              T_Y('* Failed: Map is private, it must be published', '#6033cc', true);
              H73();
              break;
            default:
              T_Y('* Failed: Unknown error', '#6033cc', true);
              H73();
              break;
          }
        }
      }
      function S4x() {
        var N1w = [
          arguments
        ];
        U3ndn.w30();
        N1w[7] = r8no$;
        for (N1w[5] = 0; N1w[5] < h6b[50]['length']; N1w[5]++) {
          if (h6b[50][N1w[5]]) {
            h6b[50][N1w[5]]['ready'] = false;
          }
        }
      }
      var h6b = [
        arguments
      ];
      h6b[4] = r8no$;
      h6b[1] = this;
      h6b[9] = 0;
      h6b[7] = h6b[0][1];
      h6b[8] = document['getElementById']('leaveconfirmwindowcontainer');
      h6b[3] = document['getElementById']('leaveconfirmwindow_cancelbutton');
      h6b[5] = document['getElementById']('leaveconfirmwindow_okbutton');
      h6b[2] = document['getElementById']('hostleaveconfirmwindowcontainer');
      h6b[6] = document['getElementById']('hostleaveconfirmwindow_cancelbutton');
      h6b[81] = document['getElementById']('hostleaveconfirmwindow_okbutton');
      h6b[22] = document['getElementById']('hostleaveconfirmwindow_endbutton');
      h6b[10] = document['getElementById']('xpbar');
      h6b[92] = document['getElementById']('xpbarfill');
      h6b[33] = document['getElementById']('xpbartext');
      F$I(false);
      V6D[67]['setButtonSounds']([h6b[3],
      h6b[5],
      h6b[6],
      h6b[81],
      h6b[22]]);
      h6b[72] = false;
      h6b[36] = [
      ];
      h6b[37] = [
      ];
      h6b[45] = [
      ];
      this['networkEngine'] = new G0(this, h6b[0][0], h6b[0][1]);
      this['networkEngine']['on']('joinedRoom', A0p);
      this['networkEngine']['on']('playerLeft', M2N);
      this['networkEngine']['on']('hostLeft', h$6);
      this['networkEngine']['on']('newPlayerJoined', v$c);
      this['networkEngine']['on']('createdRoom', k2E);
      this['networkEngine']['on']('scheduleGameStart', c3_);
      this['networkEngine']['on']('returnToLobby', a_K);
      this['networkEngine']['on']('chatMessage', N0J);
      this['networkEngine']['on']('readyChange', f_H);
      this['networkEngine']['on']('readyReset', s84);
      this['networkEngine']['on']('teamLockChange', C4o);
      this['networkEngine']['on']('teamChange', t2D);
      this['networkEngine']['on']('playerMuted', D3b);
      this['networkEngine']['on']('playerUnmuted', Y53);
      this['networkEngine']['on']('nameChange', o8m);
      this['networkEngine']['on']('gotPingData', t_X);
      this['networkEngine']['on']('recvInLobby', o90);
      this['networkEngine']['on']('recvInGame', E1y);
      this['networkEngine']['on']('recvLobbyMap', h88);
      this['networkEngine']['on']('mapReorder', b9H);
      this['networkEngine']['on']('mapDelete', a9L);
      this['networkEngine']['on']('mapAdd', k9y);
      this['networkEngine']['on']('changeGAMO', f1F);
      this['networkEngine']['on']('changeWL', E93);
      this['networkEngine']['on']('typing', s$z);
      this['networkEngine']['on']('kicked', h9j);
      this['networkEngine']['on']('adminInputs', i_p);
      this['networkEngine']['on']('afkWarn', R8I);
      this['networkEngine']['on']('disconnectedFromMona', R5q);
      this['networkEngine']['on']('mapSuggest', k2i);
      this['networkEngine']['on']('mapSuggestClient', G6E);
      this['networkEngine']['on']('changeMode', E7I);
      this['networkEngine']['on']('balance', s5D);
      this['networkEngine']['on']('debugWinner', C2L);
      this['networkEngine']['on']('teamSettingsChange', I26);
      this['networkEngine']['on']('armRecord', s4o);
      this['networkEngine']['on']('hostChange', p8D);
      this['networkEngine']['on']('friended', o5k);
      this['networkEngine']['on']('playerLevelledUp', b_C);
      this['networkEngine']['on']('localGainedXP', M_Q);
      this['networkEngine']['on']('newToken', C69);
      this['networkEngine']['on']('localRevert', s9I);
      this['networkEngine']['on']('p2pRevert', S0j);
      this['networkEngine']['on']('onTabbed', O5d);
      this['networkEngine']['on']('curateResult', q0w);
      this['networkEngine']['on']('roomNameChanged', F4d);
      this['networkEngine']['on']('roomPassChanged', O1a);
      h6b[41] = h6b[0][0]['roomName'];
      h6b[71] = h6b[0][0]['quick'];
      h6b[97] = false;
      h6b[52] = null;
      h6b[12] = '';
      h6b[38] = 0;
      h6b[24] = 0;
      h6b[53] = new V6D[61];
      h6b[53]['wl'] = 999;
      h6b[53]['q'] = h6b[71];
      h6b[53]['mo'] = h6b[0][0]['mo'];
      if (!h6b[71]) {
        h6b[53]['map'] = V6D[66]['getOrderedRandomMap'](0, 'community');
        h6b[53]['wl'] = 3;
      } else {
        if (h6b[53]['mo'] == 'sl' || h6b[53]['mo'] == 'ft') {
          h6b[53]['tea'] = true;
        }
        h6b[52] = new V6D[68](this['networkEngine']);
      }
      h6b[21] = this['networkEngine'];
      h6b[30] = new n4(h6b[21], h6b[52]);
      h6b[30]['on']('gameComplete', K_t);
      h6b[30]['on']('processCommand', I4v);
      h6b[50] = [
      ];
      h6b[20] = Infinity;
      h6b[65] = false;
      if (!h6b[71]) {
        h6b[51] = new K_(h6b[21], h6b[50], h6b[53], h6b[0][1]);
        h6b[51]['on']('processCommand', I4v);
        h6b[51]['on']('startGame', b19);
        h6b[51]['on']('testMap', T6_);
        h6b[51]['on']('favouriteMap', t39);
      }
      this['getGameSettings'] = function () {
        U3ndn.w30();
        return h6b[53];
      };
      this['closeClicked'] = function () {
        W6y();
      };
      this['recvInputs'] = function (D4C, r6W, N$R) {
        var N1Y = [
          arguments
        ];
        N1Y[6] = r8no$;
        U3ndn.w30();
        N1Y[0][1]['i'] = V6D[67]['decodeInputs'](N1Y[0][1]['i']);
        if (h6b[76]) {
          h6b[76]['recvInputs'](N1Y[0][0], N1Y[0][1], N1Y[0][2]);
        } else if (N1Y[0][2] == 'node' || true) {
          h6b[36]['push']({
            from: N1Y[0][0],
            data: N1Y[0][1]
          });
        }
      };
      this['updateLocalInputKeys'] = function () {
        var V5F = [
          arguments
        ];
        V5F[3] = r8no$;
        if (h6b[76]) {
          h6b[76]['updateLocalInputKeys']();
        }
      };
      this['tabbed'] = function (y3t) {
        var Y8P = [
          arguments
        ];
        Y8P[5] = r8no$;
        if (h6b[21]) {
          h6b[21]['tabbed'](Y8P[0][0]);
        }
      };
      this['destroy'] = function () {
        var A68 = [
          arguments
        ];
        A68[3] = r8no$;
        if (h6b[21]) {
          h6b[21]['destroy']();
          h6b[21] = null;
        }
        h6b[1]['networkEngine'] = null;
        if (h6b[51]) {
          h6b[51]['destroy']();
          h6b[51] = null;
        }
        if (h6b[30]) {
          h6b[30]['destroy']();
          h6b[30] = null;
        }
        if (h6b[76]) {
          h6b[76]['destroy']();
          h6b[76] = null;
        }
        if (h6b[52]) {
          h6b[52]['destroy']();
          h6b[52] = null;
        }
        U3ndn.Y$U();
        A68[8] = document['getElementById']('ingamechatcontent');
        while (A68[8]['firstChild']) {
          A68[8]['removeChild'](A68[8]['firstChild']);
        }
        document['getElementById']('ingamechatinputtext') ['value'] = '';
      };
      h6b[66] = [
      ];
      this['on'] = function (D0N, G3n) {
        var X3k = [
          arguments
        ];
        X3k[6] = r8no$;
        h6b[66]['push']({
          eventName: X3k[0][0],
          callback: X3k[0][1]
        });
      };
    }
    V6D[67]['colors']['push'](15702682);
    V6D[67]['colors']['push'](16027569);
    V6D[67]['colors']['push'](13538264);
    V6D[67]['colors']['push'](11771355);
    function J3() {
      var G8t = [
        arguments
      ];
      G8t[2] = r8no$;
      if (document['hidden'] == true) {
        V6D[67]['enterFrameDispatcher']['dispatch']();
      }
    }
    V6D[67]['colors']['push'](10463450);
    V6D[67]['colors']['push'](9489145);
    V6D[67]['colors']['push'](8508666);
    V6D[67]['colors']['push'](8445674);
    V6D[67]['colors']['push'](8440772);
    V6D[67]['colors']['push'](10868391);
    V6D[67]['colors']['push'](12968357);
    V6D[67]['colors']['push'](15134364);
    V6D[67]['colors']['push'](16774557);
    V6D[67]['colors']['push'](16769154);
    V6D[67]['colors']['push'](16764032);
    V6D[67]['colors']['push'](16755601);
    V6D[67]['colors']['push'](15037299);
    V6D[67]['colors']['push'](15753874);
    V6D[67]['colors']['push'](12216520);
    function X9() {
      var f8U = [
        arguments
      ];
      f8U[9] = r8no$;
      return document['body']['clientWidth'];
    }
    V6D[67]['colors']['push'](9795021);
    V6D[67]['colors']['push'](7964363);
    V6D[67]['colors']['push'](6600182);
    V6D[67]['colors']['push'](5227511);
    V6D[67]['colors']['push'](5099745);
    V6D[67]['colors']['push'](5093036);
    V6D[67]['colors']['push'](8505220);
    V6D[67]['colors']['push'](11457921);
    V6D[67]['colors']['push'](14477173);
    V6D[67]['colors']['push'](16773494);
    V6D[67]['colors']['push'](16766287);
    V6D[67]['colors']['push'](16758605);
    V6D[67]['colors']['push'](16747109);
    V6D[67]['colors']['push'](15684432);
    V6D[67]['colors']['push'](15483002);
    V6D[67]['colors']['push'](11225020);
    V6D[67]['colors']['push'](8280002);
    V6D[67]['colors']['push'](6056896);
    V6D[67]['colors']['push'](4367861);
    V6D[67]['colors']['push'](2733814);
    V6D[67]['colors']['push'](2541274);
    V6D[67]['colors']['push'](2533018);
    function T3() {
      var a56 = [
        arguments
      ];
      a56[2] = r8no$;
      a56[9] = {
      };
      a56[5] = 10;
      a56[1] = 15;
      a56[4] = [
      ];
      a56[7] = new Howl({
        src: GameResources['soundStrings']['capIncrease'],
        volume: 0.5,
        loop: false
      });
      a56[8] = new Howl({
        src: GameResources['soundStrings']['capDecrease'],
        volume: 0.5,
        loop: false
      });
      this['playSound'] = function (J24, P5M, e78, O_w) {
        var X7c = [
          arguments
        ];
        X7c[4] = r8no$;
        if (V6D[67]['mute']) {
          return;
        }
        if (V6D[67]['preClickMute']) {
          return;
        }
        if (!a56[9][X7c[0][0]]) {
          a56[9][X7c[0][0]] = {
            howls: [
            ],
            sumVolThisStep: 0
          };
        }
        if (a56[9][X7c[0][0]]['howls']['length'] >= a56[5]) {
          return;
        }
        if (a56[9][X7c[0][0]]['sumVolThisStep'] >= a56[1]) {
          return;
        }
        if (X7c[0][3] != undefined) {
          for (X7c[3] = 0; X7c[3] < a56[4]['length']; X7c[3]++) {
            if (a56[4][X7c[3]]['f'] == X7c[0][3] && a56[4][X7c[3]]['i'] == X7c[0][0]) {
              return;
            }
          }
        }
        if (X7c[0][0] == 'capDecrease') {
          a56[8]['volume'](X7c[0][2]);
          a56[8]['stereo'](X7c[0][1]);
          if (!V6D[67]['mute']) {
            a56[8]['play']();
          }
          return;
        } else if (X7c[0][0] == 'capIncrease') {
          a56[7]['volume'](X7c[0][2]);
          a56[7]['stereo'](X7c[0][1]);
          if (!V6D[67]['mute']) {
            a56[7]['play']();
          }
          return;
        }
        X7c[9] = GameResources['soundStrings'][X7c[0][0]];
        X7c[7] = new Howl({
          src: X7c[9],
          volume: X7c[0][2]
        });
        X7c[7]['stereo'](X7c[0][1]);
        X7c[7]['play']();
        U3ndn.Y$U();
        a56[9][X7c[0][0]]['howls']['push'](X7c[7]);
        a56[9][X7c[0][0]]['sumVolThisStep'] += X7c[0][2];
        a56[4]['push']({
          i: X7c[0][0],
          f: X7c[0][3]
        });
        if (a56[4]['length'] > 5) {
          a56[4]['shift']();
        }
        X7c[7]['on']('end', function () {
          var R1K = [
            arguments
          ];
          R1K[4] = r8no$;
          U3ndn.w30();
          R1K[2] = a56[9][X7c[0][0]]['howls']['indexOf'](this);
          if (R1K[2] != - 1) {
            a56[9][X7c[0][0]]['howls']['splice'](R1K[2], 1);
          }
        });
      };
      this['resetSumVols'] = function () {
        U3ndn.w30();
        var o1R = [
          arguments
        ];
        o1R[9] = r8no$;
        for (o1R[4] in a56[9]) {
          if (Object['prototype']['hasOwnProperty']['call'](a56[9], o1R[4])) {
            a56[9][o1R[4]]['sumVolThisStep'] = 0;
          }
        }
      };
    }
    function G0(B4J, z$O, q$o) {
      function c03(G9a) {
        var e_c = [
          arguments
        ];
        e_c[2] = r8no$;
        W0n[366][e_c[0][0]]['dataConnection'] = W0n[545]['connect'](W0n[366][e_c[0][0]]['peerID']);
        G3L(W0n[366][e_c[0][0]]['dataConnection']);
      }
      function E7d(...c9G) {
        var i0O = [
          arguments
        ];
        i0O[9] = r8no$;
        i0O[1] = c9G['shift']();
        for (i0O[8] = 0; i0O[8] < W0n[289]['length']; i0O[8]++) {
          if (W0n[289][i0O[8]]['eventName'] == i0O[1]) {
            W0n[289][i0O[8]]['callback'](...c9G);
          }
        }
      }
      function K$x() {
        var Z3t = [
          arguments
        ];
        Z3t[8] = r8no$;
        if (W0n[834]['action'] == 'join') {
          E7d('status', 'Requesting to join room...');
          W0n[553]['joinRoom'](W0n[834]['address'], W0n[834]['password'], W0n[834]['bypass']);
        } else if (W0n[834]['action'] == 'create') {
          E7d('status', 'Creating new room');
          W0n[553]['createRoom'](W0n[834]['formValues'], W0n[834]['quick']);
        }
      }
      function j3k() {
        var W27 = [
          arguments
        ];
        W27[6] = r8no$;
        for (W27[9] = 0; W27[9] < W0n[366]['length']; W27[9]++) {
          if (W0n[366][W27[9]]) {
            for (W27[7] = W0n[366][W27[9]]['receivedMessages']['length'] - 1; W27[7] >= Math['max'](0, W0n[366][W27[9]]['receivedMessages']['length'] - 1000); W27[7]--) {
              if (!W0n[366][W27[9]]['receivedMessages'][W27[7]]) {
                continue;
              }
              W27[4] = W0n[366][W27[9]]['receivedMessages'][W27[7]];
              U3ndn.S2t(17);
              W27[2] = U3ndn.E_K(7, 750, 13);
              W27[3] = Date['now']() - W27[4][r8no$[W27[2]]];
              if (W27[3] > 2000) {
                break;
              }
              if (W27[3] > G0['nmpcw'] * 1000 && W27[4]['p2p'] == true && W27[4]['node'] == false && W27[4]['p2pIgnored'] == false && W27[4]['reverted'] == false) {
                W27[4]['reverted'] = true;
                if (++W0n[366][W27[9]]['p2pReverts'] >= 4) {
                  W0n[366][W27[9]]['p2pReverts'] = 0;
                  W0n[366][W27[9]]['p2pBanLevel']++;
                  U3ndn.S2t(97);
                  W27[1] = U3ndn.I8r(7490, 6, 7500, 16);
                  U3ndn.z_y(154);
                  W27[5] = U3ndn.E_K(12, 13, 17, 78, 32);
                  U3ndn.S2t(78);
                  W27[74] = U3ndn.I8r(7, 27, 5, 828);
                  W27[8] = W27[1] * Math['pow'](W27[5], W0n[366][W27[9]][r8no$[W27[74]]]);
                  W0n[366][W27[9]]['p2pBanUntil'] = Date['now']() + W27[8];
                }
                E7d('p2pRevert', W27[9], W27[4]['frame']);
              }
            }
          }
        }
      }
      function L0X() {
        var z6a = [
          arguments
        ];
        z6a[9] = r8no$;
        z6a[4] = W0n[280];
        W0n[545] = new V6D[8]({
          host: z6a[4],
          port: 443,
          path: '/myapp',
          secure: true
        });
        U3ndn.Y$U();
        W0n[545]['on']('open', function (h6U) {
          var J3S = [
            arguments
          ];
          U3ndn.w30();
          W0n[896] = true;
          E7d('status', 'P2P ready');
          W0n[950] = J3S[0][0];
          if (W0n[896] && W0n[387]) {
            K$x();
          }
        });
        W0n[545]['on']('connection', function (O3B) {
          var Z9E = [
            arguments
          ];
          Z9E[3] = r8no$;
          Z9E[9] = Z9E[0][0]['peer'];
          Z9E[6] = false;
          for (Z9E[5] = 0; Z9E[5] < W0n[366]['length']; Z9E[5]++) {
            if (W0n[366][Z9E[5]]) {
              if (W0n[366][Z9E[5]]['peerID'] == Z9E[9]) {
                W0n[366][Z9E[5]]['dataConnection'] = Z9E[0][0];
              }
            }
          }
          if (!Z9E[6]) {
            W0n[548]['push'](Z9E[0][0]);
          }
          G3L(Z9E[0][0]);
        });
        W0n[545]['on']('error', function (s7I) {
          [
            arguments
          ];
        });
      }
      function G3L(T_G) {
        var P3S = [
          arguments
        ];
        P3S[5] = r8no$;
        P3S[0][0]['on']('open', function () {
        });
        P3S[0][0]['on']('close', function () {
        });
        U3ndn.Y$U();
        P3S[0][0]['on']('data', function (T6x) {
          var M_5 = [
            arguments
          ];
          M_5[6] = r8no$;
          if (typeof M_5[0][0]['c'] != 'number' || M_5[0][0]['c'] % 1 != 0) {
            return;
          }
          M_5[5] = - 1;
          for (M_5[8] = 0; M_5[8] < W0n[366]['length']; M_5[8]++) {
            if (W0n[366][M_5[8]] && W0n[366][M_5[8]]['dataConnection'] == P3S[0][0]) {
              M_5[5] = M_5[8];
              break;
            }
          }
          if (M_5[5] == - 1) {
            return;
          }
          if (W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]) {
            W0n[366][M_5[5]]['metrics']['nc']++;
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['p2p'] = true;
          } else if (W0n[366][M_5[5]]['p2pBanUntil'] > Date['now']()) {
          } else {
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']] = {
            };
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['time'] = Date['now']();
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['frame'] = M_5[0][0]['f'];
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['p2p'] = true;
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['p2pIgnored'] = false;
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['node'] = false;
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['reverted'] = false;
            W0n[366][M_5[5]]['receivedMessages'][M_5[0][0]['c']]['unreverted'] = false;
            W0n[961]['recvInputs'](M_5[5], M_5[0][0], 'p2p');
          }
        });
        P3S[0][0]['on']('error', function (g5l) {
          U3ndn.Y$U();
          [
            arguments
          ];
        });
      }
      function I8h() {
        var f4T = [
          arguments
        ];
        f4T[2] = r8no$;
        W0n[974] = timesync['create']({
          server: W0n[242],
          interval: 10000,
          delay: 250
        });
        U3ndn.Y$U();
        W0n[974]['on']('sync', function (D9k) {
          U3ndn.w30();
          var n87 = [
            arguments
          ];
          if (n87[0][0] == 'end' && W0n[387] == false) {
            W0n[387] = true;
            E7d('status', 'Synchronized');
            if (W0n[896] && W0n[387]) {
              K$x();
            } else {
              E7d('status', 'Still waiting for P2P...');
            }
          }
        });
        W0n[974]['on']('change', function (N0t) {
          var D5V = [
            arguments
          ];
          U3ndn.w30();
          if (W0n[662] == Infinity) {
            W0n[662] = D5V[0][0];
          } else {
            U3ndn.S2t(1);
            D5V[1] = U3ndn.I8r(D5V[0][0], W0n[662]);
            E7d('timeOffsetChanged', D5V[1]);
            W0n[662] = D5V[0][0];
          }
        });
        W0n[974]['send'] = function (p0y, o$z, w0D) {
          U3ndn.Y$U();
          var e47 = [
            arguments
          ];
          return new Promise(function (Y9k, t9q) {
            var j8V = [
              arguments
            ];
            j8V[3] = r8no$;
            j8V[2] = setTimeout(j8V[0][1], e47[0][2]);
            if (!e47[0][0]) {
              clearTimeout(j8V[2]);
              return;
            }
            e47[0][0]['emit'](W0n[47], e47[0][1], function () {
              clearTimeout(j8V[2]);
              j8V[0][0]();
            });
          });
        };
        W0n[242]['on'](W0n[58], function (V9e) {
          var a$n = [
            arguments
          ];
          a$n[7] = r8no$;
          U3ndn.w30();
          W0n[974]['receive'](null, a$n[0][0]);
        });
      }
      function h4E() {
        U3ndn.w30();
        E7d('status', 'Initial data timeout.');
      }
      var W0n = [
        arguments
      ];
      W0n[2] = r8no$;
      W0n[1] = 1;
      W0n[7] = 2;
      W0n[5] = 3;
      W0n[6] = 4;
      W0n[3] = 5;
      W0n[4] = 6;
      W0n[8] = 7;
      W0n[9] = 8;
      W0n[50] = 9;
      W0n[76] = 10;
      W0n[46] = 11;
      W0n[90] = 12;
      W0n[96] = 13;
      W0n[78] = 14;
      W0n[89] = 15;
      W0n[13] = 16;
      W0n[82] = 17;
      W0n[25] = 18;
      W0n[87] = 19;
      W0n[18] = 20;
      W0n[53] = 21;
      W0n[58] = 23;
      W0n[93] = 24;
      W0n[99] = 25;
      W0n[12] = 26;
      W0n[34] = 27;
      W0n[70] = 28;
      W0n[37] = 29;
      W0n[67] = 30;
      W0n[22] = 31;
      W0n[29] = 32;
      W0n[55] = 33;
      W0n[30] = 34;
      W0n[68] = 35;
      W0n[60] = 36;
      W0n[32] = 37;
      W0n[23] = 38;
      W0n[14] = 39;
      W0n[43] = 40;
      W0n[10] = 41;
      W0n[95] = 42;
      W0n[56] = 43;
      W0n[63] = 44;
      W0n[11] = 45;
      W0n[61] = 46;
      W0n[38] = 47;
      W0n[52] = 48;
      W0n[41] = 49;
      W0n[57] = 50;
      W0n[21] = 51;
      W0n[39] = 52;
      W0n[59] = 53;
      W0n[51] = 54;
      W0n[24] = 57;
      W0n[35] = 58;
      W0n[28] = 59;
      W0n[45] = 1;
      W0n[74] = 2;
      W0n[36] = 3;
      W0n[75] = 4;
      W0n[97] = 5;
      W0n[98] = 6;
      W0n[72] = 7;
      W0n[62] = 8;
      W0n[27] = 9;
      W0n[15] = 10;
      W0n[66] = 11;
      W0n[33] = 12;
      W0n[48] = 13;
      W0n[81] = 14;
      W0n[79] = 16;
      W0n[73] = 17;
      W0n[47] = 18;
      W0n[85] = 19;
      W0n[65] = 20;
      W0n[77] = 21;
      W0n[69] = 22;
      W0n[80] = 23;
      W0n[42] = 24;
      W0n[54] = 25;
      W0n[19] = 26;
      W0n[26] = 27;
      W0n[17] = 28;
      W0n[86] = 29;
      W0n[49] = 30;
      W0n[40] = 31;
      W0n[91] = 32;
      W0n[44] = 33;
      W0n[16] = 34;
      W0n[83] = 35;
      W0n[31] = 36;
      W0n[71] = 37;
      W0n[94] = 38;
      W0n[20] = 39;
      W0n[84] = 40;
      W0n[64] = 41;
      W0n[92] = 42;
      W0n[88] = 43;
      W0n[867] = 44;
      W0n[384] = 45;
      W0n[800] = 46;
      W0n[174] = 47;
      W0n[714] = 50;
      W0n[979] = 51;
      W0n[371] = 52;
      W0n[634] = 53;
      W0n[271] = true;
      W0n[553] = this;
      W0n[604] = W0n[0][2];
      W0n[961] = W0n[0][0];
      W0n[834] = W0n[0][1];
      W0n[845] = 0;
      W0n[479] = '';
      W0n[572] = '';
      W0n[444] = setInterval(j3k, 100);
      this['hostID'] = 0;
      this['autoJoinID'] = '';
      this['autoJoinPassBypass'] = '';
      W0n[366] = [
      ];
      W0n[548] = [
      ];
      W0n[280] = '';
      if (W0n[0][1]['action'] == 'join') {
        U3ndn.z_y(17);
        W0n[661] = U3ndn.I8r(705, 38, 12);
        U3ndn.z_y(74);
        W0n[909] = U3ndn.I8r(32, 17, 13, 1, 14);
        W0n[280] = W0n[0][1][r8no$[W0n[661]]] + U3ndn.j31(W0n[909]);
        W0n[572] = W0n[0][1]['server'];
      } else {
        U3ndn.z_y(14);
        W0n[694] = U3ndn.I8r(302, 3020, 745);
        U3ndn.S2t(166);
        W0n[525] = U3ndn.I8r(1, 4, 1, 18);
        W0n[280] = V6D[67][r8no$[W0n[694]]] + U3ndn.j31(W0n[525]);
        W0n[572] = V6D[67]['server'];
      }
      U3ndn.S2t(15);
      W0n[587] = U3ndn.E_K(4, 1049, 2);
      U3ndn.z_y(6);
      W0n[825] = U3ndn.I8r(489, 14);
      W0n[315] = U3ndn.j31(W0n[587]) + W0n[280] + U3ndn.j31(W0n[825]);
      W0n[242] = V6D[0][0](W0n[315], {
        reconnection: false
      });
      W0n[387] = false;
      W0n[896] = false;
      W0n[242]['on']('connect', () =>{
        E7d('status', 'Connected, synchronizing...');
        I8h();
      });
      W0n[242]['on']('connect_error', l68=>{
        E7d('status', 'Connect error');
      });
      W0n[242]['on']('connect_timeout', i3M=>{
      });
      W0n[242]['on']('error', B7m=>{
      });
      W0n[242]['on']('disconnect', B4w=>{
        var S6T = r8no$;
        U3ndn.Y$U();
        W0n[974][S6T[392]]();
        E7d('disconnectedFromMona');
      });
      W0n[242]['on']('reconnect', n8e=>{
        U3ndn.w30();
      });
      W0n[242]['on']('reconnect_attempt', X6Z=>{
      });
      W0n[242]['on']('reconnecting', t4L=>{
      });
      W0n[242]['on']('reconnect_error', R4u=>{
      });
      W0n[242]['on']('reconnect_failed', () =>{
        U3ndn.Y$U();
      });
      W0n[242]['on'](W0n[1], (S4u, x1Z) =>{
        var O2b = r8no$;
        W0n[242][O2b[756]](W0n[45], {
          id: x1Z
        });
        E7d('gotPingData', S4u);
      });
      this['testPing'] = function () {
        var a2t = [
          arguments
        ];
        U3ndn.w30();
        a2t[5] = r8no$;
        W0n[242]['emit'](W0n[74]);
      };
      this['getLSID'] = function () {
        return W0n[320];
      };
      W0n[242]['on'](W0n[7], function (j2k, i5n, n_g) {
        var Q87 = [
          arguments
        ];
        U3ndn.Y$U();
        W0n[320] = 0;
        E7d('status', 'Room created');
        E7d('createdRoom', Q87[0][1], Q87[0][2]);
      });
      W0n[242]['on'](W0n[5], function (k_T, U$t, K_3, z4X, i6p, A1T, w07, z9X) {
        var K44 = [
          arguments
        ];
        K44[6] = r8no$;
        U3ndn.w30();
        W0n[320] = K44[0][0];
        W0n[553]['hostID'] = K44[0][1];
        W0n[553]['autoJoinID'] = K44[0][5];
        W0n[553]['autoJoinPassBypass'] = K44[0][6];
        for (K44[5] = 0; K44[5] < K44[0][2]['length']; K44[5]++) {
          if (K44[0][2][K44[5]]) {
            W0n[366][K44[5]] = new V6D[98](K44[0][2][K44[5]]['peerID']);
            if (K44[5] != W0n[320]) {
              if (W0n[271] && G0['np'] == false) {
                c03(K44[5]);
              }
            }
          }
        }
        E7d('status', 'Joined room, awaiting first data');
        E7d('joinedRoom', W0n[320], K44[0][2], 2, K44[0][3], K44[0][7]);
        W0n[419] = setTimeout(h4E, 6000);
      });
      W0n[242]['on'](W0n[6], function (W4q, g4t, N2L, X5a, W1F, z7F, S0e) {
        var E15 = [
          arguments
        ];
        E15[2] = r8no$;
        U3ndn.Y$U();
        W0n[366][E15[0][0]] = new V6D[98](E15[0][1]);
        for (E15[5] = 0; E15[5] < W0n[548]['length']; E15[5]++) {
          if (W0n[548][E15[5]] && W0n[548][E15[5]]['peer'] == E15[0][1]) {
            W0n[366][E15[0][0]]['dataConnection'] = W0n[548][E15[5]];
            W0n[548][E15[5]] = null;
          }
        }
        E7d('newPlayerJoined', E15[0][0], E15[0][2], E15[0][3], E15[0][4], E15[0][5], E15[0][6]);
      });
      W0n[242]['on'](W0n[41], function (W5I, L6_) {
        var g33 = [
          arguments
        ];
        U3ndn.w30();
        g33[6] = r8no$;
        W0n[553]['autoJoinID'] = g33[0][0];
        W0n[553]['autoJoinPassBypass'] = g33[0][1];
      });
      W0n[242]['on'](W0n[3], function (e8W, o3n) {
        var f3O = [
          arguments
        ];
        f3O[8] = r8no$;
        if (W0n[366][f3O[0][0]]['dataConnection'] && W0n[366][f3O[0][0]]['dataConnection']['open']) {
          W0n[366][f3O[0][0]]['dataConnection']['close']();
        }
        U3ndn.Y$U();
        W0n[366][f3O[0][0]] = null;
        E7d('playerLeft', f3O[0][0], f3O[0][1]);
      });
      W0n[242]['on'](W0n[4], function (r7a, v20, t9z) {
        var I9B = [
          arguments
        ];
        I9B[7] = r8no$;
        if (W0n[366][I9B[0][0]]['dataConnection'] && W0n[366][I9B[0][0]]['dataConnection']['open']) {
          W0n[366][I9B[0][0]]['dataConnection']['close']();
        }
        U3ndn.Y$U();
        W0n[366][I9B[0][0]] = null;
        W0n[553]['hostID'] = I9B[0][1];
        if (I9B[0][1] == W0n[320]) {
        }
        E7d('hostLeft', I9B[0][0], I9B[0][1], I9B[0][2]);
      });
      W0n[242]['on'](W0n[8], function (B6Z, K$D) {
        var R0C = [
          arguments
        ];
        U3ndn.w30();
        R0C[4] = r8no$;
        if (W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]) {
          U3ndn.S2t(1);
          R0C[2] = U3ndn.E_K(789, 20);
          U3ndn.S2t(139);
          R0C[3] = U3ndn.I8r(1, 32, 56, 64, 1);
          U3ndn.z_y(26);
          R0C[6] = U3ndn.E_K(5, 10780, 171790, 16);
          R0C[9] = Date['now']() - W0n[366][R0C[0][0]][r8no$[R0C[2]]][R0C[0][1][r8no$[R0C[3]]]][r8no$[R0C[6]]];
          W0n[366][R0C[0][0]]['metrics']['pc']++;
          W0n[366][R0C[0][0]]['metrics']['pt'] += R0C[9];
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['node'] = true;
          if (W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['reverted']) {
            W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['unreverted'] = true;
            W0n[961]['recvInputs'](R0C[0][0], R0C[0][1], 'node');
          } else if (W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['p2pIgnored']) {
            W0n[961]['recvInputs'](R0C[0][0], R0C[0][1], 'node');
          }
        } else {
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']] = {
          };
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['time'] = Date['now']();
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['frame'] = R0C[0][1]['f'];
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['p2p'] = false;
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['p2pIgnored'] = false;
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['node'] = true;
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['reverted'] = false;
          W0n[366][R0C[0][0]]['receivedMessages'][R0C[0][1]['c']]['unreverted'] = false;
          W0n[961]['recvInputs'](R0C[0][0], R0C[0][1], 'node');
        }
      });
      W0n[242]['on'](W0n[9], function (y8x, s6j) {
        var t0F = [
          arguments
        ];
        U3ndn.w30();
        E7d('readyChange', t0F[0][0], t0F[0][1]);
      });
      W0n[242]['on'](W0n[50], function () {
        E7d('readyReset');
      });
      W0n[242]['on'](W0n[76], function (r2A, j$A) {
        var Z2T = [
          arguments
        ];
        E7d('playerMuted', Z2T[0][0], Z2T[0][1]);
      });
      W0n[242]['on'](W0n[46], function (G66, J2U) {
        var D3r = [
          arguments
        ];
        E7d('playerUnmuted', D3r[0][0], D3r[0][1]);
      });
      W0n[242]['on'](W0n[90], function (V2k, z2Q) {
        U3ndn.w30();
        var V5C = [
          arguments
        ];
        E7d('nameChange', V5C[0][0], V5C[0][1]);
      });
      W0n[242]['on'](W0n[96], function () {
        U3ndn.Y$U();
        E7d('returnToLobby');
      });
      W0n[242]['on'](W0n[78], function (C2M) {
        [
          arguments
        ];
      });
      W0n[242]['on'](W0n[89], function (N3w, Z5M, y2w) {
        var P0j = [
          arguments
        ];
        E7d('scheduleGameStart', P0j[0][0], P0j[0][1], P0j[0][2]);
      });
      W0n[242]['on'](W0n[13], function (X$t) {
        var M3z = [
          arguments
        ];
        E7d('status', M3z[0][0]);
      });
      W0n[242]['on'](W0n[82], function (f5e) {
        var J_7 = [
          arguments
        ];
        J_7[4] = r8no$;
        J_7[8] = JSON['parse'](J_7[0][0]['a']);
        J_7[5] = JSON['parse'](J_7[0][0]['b']);
      });
      W0n[242]['on'](W0n[25], function (A2J, W$y) {
        U3ndn.Y$U();
        var R2C = [
          arguments
        ];
        E7d('teamChange', R2C[0][0], R2C[0][1]);
      });
      W0n[242]['on'](W0n[87], function (z3y) {
        var u2r = [
          arguments
        ];
        U3ndn.Y$U();
        E7d('teamLockChange', u2r[0][0]);
      });
      W0n[242]['on'](W0n[18], function (b$b, d2F) {
        var P8w = [
          arguments
        ];
        U3ndn.Y$U();
        E7d('chatMessage', P8w[0][0], P8w[0][1]);
      });
      W0n[242]['on'](W0n[53], function (s9t) {
        var g9B = [
          arguments
        ];
        U3ndn.w30();
        clearTimeout(W0n[419]);
        E7d('recvInLobby', g9B[0][0]);
      });
      W0n[242]['on'](W0n[52], function (R2F) {
        var U9N = [
          arguments
        ];
        clearTimeout(W0n[419]);
        E7d('recvInGame', U9N[0][0]);
      });
      W0n[242]['on'](W0n[99], function (J_O, B9D) {
        var B7l = [
          arguments
        ];
        E7d('mapReorder', B7l[0][0], B7l[0][1]);
      });
      W0n[242]['on'](W0n[70], function (f_w) {
        var C62 = [
          arguments
        ];
        E7d('mapDelete', C62[0][0]);
      });
      W0n[242]['on'](W0n[37], function (x_y) {
        var b$s = [
          arguments
        ];
        b$s[4] = r8no$;
        b$s[7] = E['decodeFromDatabase'](b$s[0][0]);
        E7d('mapAdd', b$s[7]);
      });
      W0n[242]['on'](W0n[55], function (R4Q, f3C) {
        var Z$B = [
          arguments
        ];
        Z$B[3] = r8no$;
        U3ndn.Y$U();
        Z$B[4] = E['decodeFromDatabase'](Z$B[0][0]);
        E7d('mapSuggest', Z$B[4], Z$B[0][1]);
      });
      W0n[242]['on'](W0n[30], function (g6N, U5Z, i2l) {
        var B3E = [
          arguments
        ];
        E7d('mapSuggestClient', B3E[0][0], B3E[0][1], B3E[0][2]);
      });
      W0n[242]['on'](W0n[12], function (L8E, M0T) {
        U3ndn.Y$U();
        var I9A = [
          arguments
        ];
        E7d('changeGAMO', I9A[0][0], I9A[0][1]);
      });
      W0n[242]['on'](W0n[34], function (f2o) {
        var k1S = [
          arguments
        ];
        U3ndn.Y$U();
        E7d('changeWL', k1S[0][0]);
      });
      W0n[242]['on'](W0n[67], function (q6D) {
        var w4i = [
          arguments
        ];
        E7d('typing', w4i[0][0]);
      });
      W0n[242]['on'](W0n[93], function (R$N) {
        var u3G = [
          arguments
        ];
        E7d('kicked', u3G[0][0]);
      });
      W0n[242]['on'](W0n[22], function (r4k) {
        U3ndn.w30();
        var X9c = [
          arguments
        ];
        E7d('adminInputs', X9c[0][0]);
      });
      W0n[242]['on'](W0n[29], function () {
        E7d('afkWarn');
      });
      W0n[242]['on'](W0n[68], function (q4r) {
        var G5t = [
          arguments
        ];
        E7d('changeMode', G5t[0][0]);
      });
      W0n[242]['on'](W0n[60], function (H90, x8z) {
        var U1m = [
          arguments
        ];
        E7d('balance', U1m[0][0], U1m[0][1]);
      });
      W0n[242]['on'](W0n[32], function (N5Y) {
        U3ndn.Y$U();
        [
          arguments
        ];
      });
      W0n[242]['on'](W0n[23], function (g_p, t0h) {
        var Y_p = [
          arguments
        ];
        E7d('debugWinner', Y_p[0][0], Y_p[0][1]);
      });
      W0n[242]['on'](W0n[14], function (e0C) {
        U3ndn.w30();
        var U5U = [
          arguments
        ];
        E7d('teamSettingsChange', U5U[0][0]);
      });
      W0n[242]['on'](W0n[43], function (L$l) {
        var G20 = [
          arguments
        ];
        U3ndn.w30();
        E7d('armRecord', G20[0][0]);
      });
      W0n[242]['on'](W0n[10], function (g0a) {
        var A5B = [
          arguments
        ];
        A5B[7] = r8no$;
        W0n[553]['hostID'] = A5B[0][0]['newHost'];
        E7d('hostChange', A5B[0][0]);
      });
      W0n[242]['on'](W0n[95], function (u0M) {
        U3ndn.Y$U();
        var G6k = [
          arguments
        ];
        E7d('friended', G6k[0][0]);
      });
      W0n[242]['on'](W0n[56], function (e$b) {
        U3ndn.Y$U();
        var Q4_ = [
          arguments
        ];
        E7d('countdown', Q4_[0][0]);
      });
      W0n[242]['on'](W0n[63], function () {
        U3ndn.w30();
        E7d('countdownaborted');
      });
      W0n[242]['on'](W0n[11], function (m7A) {
        var J7p = [
          arguments
        ];
        J7p[3] = r8no$;
        U3ndn.Y$U();
        E7d('playerLevelledUp', J7p[0][0]['sid'], J7p[0][0]['lv']);
      });
      W0n[242]['on'](W0n[61], function (w25) {
        var k$v = [
          arguments
        ];
        k$v[3] = r8no$;
        if (k$v[0][0]['newToken']) {
          W0n[604] = k$v[0][0]['newToken'];
          E7d('newToken', k$v[0][0]['newToken']);
        }
        U3ndn.Y$U();
        E7d('localGainedXP', k$v[0][0]['newXP']);
      });
      W0n[242]['on'](W0n[38], function (q07) {
        U3ndn.Y$U();
        var j7Y = [
          arguments
        ];
        E7d('localRevert', j7Y[0][0]);
      });
      W0n[242]['on'](W0n[57], function (C02, q4J) {
        var z4h = [
          arguments
        ];
        U3ndn.w30();
        z4h[9] = r8no$;
        V6D[67]['mapsVotedFor'][z4h[0][0]] = z4h[0][1];
      });
      W0n[242]['on'](W0n[21], function (R27) {
        U3ndn.w30();
        var m09 = [
          arguments
        ];
        E7d('onMoreQuickMaps', m09[0][0]);
      });
      W0n[242]['on'](W0n[39], function (N5G, C5r) {
        var U0A = [
          arguments
        ];
        E7d('onTabbed', U0A[0][0], U0A[0][1]);
      });
      W0n[242]['on'](W0n[59], function (y2P, b24, U7x) {
        U3ndn.w30();
        var j6V = [
          arguments
        ];
        E7d('desyncReq', j6V[0][0], j6V[0][1], j6V[0][2]);
      });
      W0n[242]['on'](W0n[51], function (a8$, b3V, q2p) {
        var H6c = [
          arguments
        ];
        U3ndn.w30();
        E7d('desyncRes', H6c[0][0], H6c[0][1], H6c[0][2]);
      });
      W0n[242]['on'](W0n[24], function (l3k, B0e) {
        var n0A = [
          arguments
        ];
        n0A[1] = 565620149;
        n0A[2] = - 151742775;
        n0A[7] = 2;
        for (n0A[6] = 1; U3ndn.v9p(n0A[6].toString(), n0A[6].toString().length, 9214) !== n0A[1]; n0A[6]++) {
          E7d('curateResult', n0A[0][0], n0A[0][1]);
          n0A[7] += 2;
        }
        U3ndn.w30();
        if (U3ndn.v9p(n0A[7].toString(), n0A[7].toString().length, 92464) !== n0A[2]) {
          E7d('', n0A[0][0], n0A[0][1]);
        }
      });
      W0n[242]['on'](W0n[35], function (H4H) {
        var h7r = [
          arguments
        ];
        E7d('roomNameChanged', h7r[0][0]);
      });
      W0n[242]['on'](W0n[28], function (H7X) {
        U3ndn.w30();
        var j1b = [
          arguments
        ];
        E7d('roomPassChanged', j1b[0][0]);
      });
      this['getDebug'] = function () {
        var T9k = [
          arguments
        ];
        T9k[4] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[36]);
      };
      this['sendInputs'] = function (F5i) {
        var r_d = [
          arguments
        ];
        r_d[8] = r8no$;
        if (r_d[0][0] == null) {
          r_d[0][0] = {
          };
        }
        r_d[0][0]['c'] = W0n[845];
        r_d[6] = 1789816473;
        r_d[7] = 1069485141;
        U3ndn.Y$U();
        r_d[2] = 2;
        for (r_d[9] = 1; U3ndn.v9p(r_d[9].toString(), r_d[9].toString().length, 1723) !== r_d[6]; r_d[9]++) {
          W0n[242]['emit'](W0n[75], r_d[0][0]);
          r_d[2] += 2;
        }
        if (U3ndn.P5V(r_d[2].toString(), r_d[2].toString().length, 81118) !== r_d[7]) {
          W0n[242]['categoryBits'](W0n[75], r_d[0][0]);
        }
        for (r_d[1] = 0; r_d[1] < W0n[366]['length']; r_d[1]++) {
          if (W0n[366][r_d[1]] && W0n[366][r_d[1]]['dataConnection'] && W0n[366][r_d[1]]['dataConnection']['open']) {
            W0n[366][r_d[1]]['dataConnection']['send'](r_d[0][0]);
          }
        }
        W0n[845]++;
      };
      this['triggerStart'] = function (n5r, w3N) {
        var b0X = [
          arguments
        ];
        b0X[6] = r8no$;
        W0n[242]['emit'](W0n[97], {
          is: b0X[0][0],
          gs: b0X[0][1]
        });
      };
      this['changeOwnTeam'] = function (h3q) {
        var C4n = [
          arguments
        ];
        C4n[3] = r8no$;
        W0n[242]['emit'](W0n[98], {
          targetTeam: C4n[0][0]
        });
      };
      this['changeOtherTeam'] = function (D1s, c_m) {
        var o1v = [
          arguments
        ];
        o1v[9] = r8no$;
        W0n[242]['emit'](W0n[19], {
          targetID: o1v[0][0],
          targetTeam: o1v[0][1]
        });
      };
      this['doTeamLock'] = function (r7M) {
        var n37 = [
          arguments
        ];
        n37[7] = r8no$;
        W0n[242]['emit'](W0n[72], {
          teamLock: n37[0][0]
        });
      };
      this['silencePlayer'] = function (q8j, k3h, e7o) {
        var u2X = [
          arguments
        ];
        u2X[5] = r8no$;
        W0n[242]['emit'](W0n[62], {
          muteID: u2X[0][0],
          muteType: u2X[0][1],
          action: u2X[0][2]
        });
      };
      this['banPlayer'] = function (V9l) {
        var V4D = [
          arguments
        ];
        V4D[9] = r8no$;
        W0n[242]['emit'](W0n[27], {
          banshortid: V4D[0][0]
        });
      };
      this['chatMessage'] = function (W4B) {
        var y4s = [
          arguments
        ];
        U3ndn.w30();
        y4s[5] = r8no$;
        W0n[242]['emit'](W0n[15], {
          message: y4s[0][0]
        });
      };
      this['informInLobby'] = function (V1B, y1_) {
        var h_4 = [
          arguments
        ];
        h_4[3] = r8no$;
        W0n[242]['emit'](W0n[66], {
          sid: h_4[0][0],
          gs: h_4[0][1]
        });
      };
      this['informInGame'] = function (g8U, N6Y) {
        var m2_ = [
          arguments
        ];
        m2_[5] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[84], {
          sid: m2_[0][0],
          allData: m2_[0][1]
        });
      };
      this['sendMapReorder'] = function (Q88, I6J) {
        var a1v = [
          arguments
        ];
        a1v[8] = r8no$;
        W0n[242]['emit'](W0n[85], {
          s: a1v[0][0],
          e: a1v[0][1]
        });
      };
      this['sendMapDelete'] = function (Z13) {
        var Q57 = [
          arguments
        ];
        Q57[1] = r8no$;
        W0n[242]['emit'](W0n[69], {
          d: Q57[0][0]
        });
      };
      this['sendMapAdd'] = function (x7j) {
        var x67 = [
          arguments
        ];
        x67[5] = r8no$;
        U3ndn.w30();
        x67[4] = E['encodeToDatabase'](x67[0][0]);
        W0n[242]['emit'](W0n[80], {
          m: x67[4]
        });
      };
      this['sendMapSuggest'] = function (y4$) {
        var G6z = [
          arguments
        ];
        G6z[7] = r8no$;
        G6z[3] = G6z[0][0]['m']['n'];
        G6z[4] = G6z[0][0]['m']['a'];
        G6z[1] = E['encodeToDatabase'](G6z[0][0]);
        U3ndn.w30();
        W0n[242]['emit'](W0n[26], {
          m: G6z[1],
          mapname: G6z[3],
          mapauthor: G6z[4]
        });
      };
      this['sendGAMO'] = function (m_X, e05) {
        var v0L = [
          arguments
        ];
        v0L[9] = r8no$;
        W0n[242]['emit'](W0n[65], {
          ga: v0L[0][0],
          mo: v0L[0][1]
        });
      };
      this['sendWL'] = function (s36) {
        var w3q = [
          arguments
        ];
        w3q[3] = r8no$;
        W0n[242]['emit'](W0n[77], {
          w: w3q[0][0]
        });
      };
      this['sendTyping'] = function () {
        var B1U = [
          arguments
        ];
        B1U[9] = r8no$;
        W0n[242]['emit'](W0n[42]);
      };
      this['sendAdminInputs'] = function (K92) {
        var b6N = [
          arguments
        ];
        U3ndn.w30();
        b6N[5] = r8no$;
        W0n[242]['emit'](W0n[54], b6N[0][0]);
      };
      this['sendChangeMode'] = function (b3f) {
        var w4d = [
          arguments
        ];
        w4d[9] = r8no$;
        U3ndn.w30();
        W0n[242]['emit'](W0n[17], w4d[0][0]);
      };
      this['sendBalance'] = function (Y0f, w0k) {
        var G6v = [
          arguments
        ];
        G6v[1] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[86], {
          sid: G6v[0][0],
          bal: G6v[0][1]
        });
      };
      this['versionCheck'] = function () {
        var m00 = [
          arguments
        ];
        m00[7] = r8no$;
        W0n[242]['emit'](W0n[49]);
      };
      this['sendArmRecord'] = function () {
        var q6N = [
          arguments
        ];
        q6N[3] = r8no$;
        W0n[242]['emit'](W0n[44]);
      };
      this['sendHostChange'] = function (M8n) {
        var d8N = [
          arguments
        ];
        d8N[6] = r8no$;
        W0n[242]['emit'](W0n[16], {
          id: d8N[0][0]
        });
      };
      this['sendStartCountdown'] = function (r1_) {
        var C4L = [
          arguments
        ];
        U3ndn.w30();
        C4L[5] = r8no$;
        W0n[242]['emit'](W0n[31], {
          num: C4L[0][0]
        });
      };
      this['sendAbortCountdown'] = function () {
        var d3M = [
          arguments
        ];
        d3M[8] = r8no$;
        W0n[242]['emit'](W0n[71]);
      };
      this['sendReqXP'] = function () {
        var O23 = [
          arguments
        ];
        O23[6] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[94]);
      };
      this['sendMapVote'] = function (f9j, y$b) {
        var w1e = [
          arguments
        ];
        w1e[4] = r8no$;
        W0n[242]['emit'](W0n[20], {
          mapid: w1e[0][0],
          vote: w1e[0][1]
        });
      };
      this['getPreVote'] = function (j1z) {
        var n9T = [
          arguments
        ];
        n9T[6] = r8no$;
        W0n[242]['emit'](W0n[64], {
          mapid: n9T[0][0]
        });
      };
      this['getMoreQuickPlayMaps'] = function (D89) {
        var G2H = [
          arguments
        ];
        U3ndn.w30();
        G2H[3] = r8no$;
        W0n[242]['emit'](W0n[92], {
          sf: G2H[0][0]
        });
      };
      this['updateRC'] = function (N$F) {
        var k3H = [
          arguments
        ];
        k3H[6] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[88], {
          rc: k3H[0][0]
        });
      };
      this['desyncTest'] = function (p8b, p8R) {
        var W47 = [
          arguments
        ];
        U3ndn.w30();
        W47[1] = r8no$;
        W0n[242]['emit'](W0n[384], {
          sid: W47[0][0],
          a: W47[0][1]
        });
      };
      this['sendDesyncRes'] = function (m37, I7F, x6T, s37) {
        var I3g = [
          arguments
        ];
        I3g[9] = r8no$;
        U3ndn.Y$U();
        W0n[242]['emit'](W0n[800], {
          rid: I3g[0][0],
          sid: I3g[0][1],
          s: I3g[0][2],
          a: I3g[0][3]
        });
      };
      this['roundComplete'] = function (Q9V, B8$) {
        var r2k = [
          arguments
        ];
        r2k[1] = r8no$;
        U3ndn.w30();
        W0n[242]['emit'](W0n[174], {
          mo: r2k[0][1],
          mid: r2k[0][0]
        });
      };
      this['sendNoHostSwap'] = function () {
        U3ndn.Y$U();
        var e67 = [
          arguments
        ];
        e67[1] = r8no$;
        W0n[242]['emit'](W0n[714]);
      };
      this['sendCurate'] = function (H7$, b4G, t$1) {
        var D6X = [
          arguments
        ];
        D6X[7] = r8no$;
        W0n[242]['emit'](W0n[979], {
          mapid: D6X[0][0],
          dbv: D6X[0][1],
          comment: D6X[0][2]
        });
      };
      this['sendRoomNameUpdate'] = function (v3X) {
        var P3c = [
          arguments
        ];
        P3c[9] = r8no$;
        U3ndn.w30();
        W0n[242]['emit'](W0n[371], {
          newName: P3c[0][0]
        });
      };
      this['sendRoomPassUpdate'] = function (n$U) {
        U3ndn.w30();
        var R7z = [
          arguments
        ];
        R7z[9] = r8no$;
        W0n[242]['emit'](W0n[634], {
          newPass: R7z[0][0]
        });
      };
      L0X();
      this['reportP2PMessageIgnored'] = function (z8W, y_o) {
        var f7E = [
          arguments
        ];
        f7E[1] = r8no$;
        W0n[366][f7E[0][0]]['receivedMessages'][f7E[0][1]]['p2pIgnored'] = true;
      };
      this['createRoom'] = function (O_n, y8a) {
        var K9l = [
          arguments
        ];
        K9l[4] = r8no$;
        W0n[479] = W0n[950];
        K9l[9] = 0;
        K9l[1] = 0;
        K9l[8] = 'na';
        K9l[2] = false;
        if (V6D[67]['lat']) {
          K9l[9] = V6D[67]['lat'];
        }
        if (V6D[67]['long']) {
          K9l[1] = V6D[67]['long'];
        }
        if (V6D[67]['country']) {
          K9l[8] = V6D[67]['country'];
        }
        if (K9l[0][1]) {
          K9l[2] = true;
        }
        K9l[3] = null;
        if (K9l[0][1]) {
          K9l[3] = K9l[0][1];
        } else {
          K9l[3] = 'custom';
        }
        K9l[5] = {
          peerID: W0n[950],
          roomName: K9l[0][0]['roomName'],
          maxPlayers: K9l[0][0]['maxPlayers'],
          password: K9l[0][0]['password'],
          dbid: V6D[67]['dbid'],
          guest: V6D[67]['guest'],
          minLevel: K9l[0][0]['minLevel'],
          maxLevel: K9l[0][0]['maxLevel'],
          latitude: K9l[9],
          longitude: K9l[1],
          country: K9l[8],
          version: V6D[67]['version'],
          hidden: K9l[0][0]['hidden'],
          quick: K9l[2],
          mode: K9l[3]
        };
        if (G0['np']) {
          K9l[5]['peerID'] = '';
        }
        if (V6D[67]['guest']) {
          K9l[5]['guestName'] = V6D[67]['userName'];
        } else {
          K9l[5]['token'] = W0n[604];
        }
        U3ndn.w30();
        if (V6D[67]['extraParams']) {
          for (K9l[6] = 0; K9l[6] < V6D[67]['extraParams']['length']; K9l[6]++) {
            K9l[7] = V6D[67]['extraParams'][K9l[6]];
            K9l[5][K9l[7]['i']] = K9l[7]['v'];
          }
        }
        K9l[5]['avatar'] = V6D[67]['avatar'];
        W0n[242]['emit'](W0n[33], K9l[5]);
      };
      this['joinRoom'] = function (W4g, x8B, W8c) {
        var U10 = [
          arguments
        ];
        U10[6] = r8no$;
        W0n[479] = U10[0][0];
        if (U10[0][1] == undefined) {
          U10[0][1] = '';
        }
        if (U10[0][2] == undefined || U10[0][2] == null) {
          U10[0][2] = '';
        }
        U10[9] = {
          joinID: U10[0][0],
          roomPassword: U10[0][1],
          guest: V6D[67]['guest'],
          dbid: 2,
          version: V6D[67]['version'],
          peerID: W0n[950],
          bypass: U10[0][2]
        };
        if (V6D[67]['guest']) {
          U10[9]['guestName'] = V6D[67]['userName'];
        } else {
          U10[9]['token'] = W0n[604];
        }
        U10[9]['avatar'] = V6D[67]['avatar'];
        U3ndn.Y$U();
        if (V6D[67]['extraParams']) {
          for (U10[1] = 0; U10[1] < V6D[67]['extraParams']['length']; U10[1]++) {
            U10[7] = V6D[67]['extraParams'][U10[1]];
            U10[9][U10[7]['i']] = U10[7]['v'];
          }
        }
        W0n[242]['emit'](W0n[48], U10[9]);
      };
      this['sendReturnToLobby'] = function () {
        U3ndn.Y$U();
        var X8G = [
          arguments
        ];
        X8G[7] = r8no$;
        W0n[242]['emit'](W0n[81]);
      };
      this['getConnectedPlayers'] = function () {
        var N56 = [
          arguments
        ];
        N56[5] = r8no$;
        N56[9] = [
        ];
        for (N56[6] = 0; N56[6] < W0n[366]['length']; N56[6]++) {
          if (W0n[366][N56[6]]) {
            N56[9]['push'](N56[6]);
          }
        }
        return N56[9];
      };
      this['setReady'] = function (e57) {
        var i$m = [
          arguments
        ];
        i$m[1] = r8no$;
        W0n[242]['emit'](W0n[79], {
          ready: i$m[0][0]
        });
      };
      U3ndn.Y$U();
      this['allReadyReset'] = function () {
        U3ndn.w30();
        var r8i = [
          arguments
        ];
        r8i[7] = r8no$;
        W0n[242]['emit'](W0n[73]);
      };
      this['sendDebugWinner'] = function (K6D) {
        var r$W = [
          arguments
        ];
        r$W[8] = r8no$;
        W0n[242]['emit'](W0n[40], {
          wid: r$W[0][0]
        });
      };
      this['sendTeamSettingsChange'] = function (U5C) {
        var o6e = [
          arguments
        ];
        o6e[5] = r8no$;
        W0n[242]['emit'](W0n[91], {
          t: o6e[0][0]
        });
      };
      this['sendFriended'] = function (j9V) {
        var p3t = [
          arguments
        ];
        p3t[4] = r8no$;
        W0n[242]['emit'](W0n[83], {
          id: p3t[0][0]
        });
      };
      this['tabbed'] = function (V8z) {
        var G7G = [
          arguments
        ];
        G7G[2] = r8no$;
        W0n[242]['emit'](W0n[867], {
          out: G7G[0][0]
        });
      };
      W0n[289] = [
      ];
      this['on'] = function (b3I, R4j) {
        var m84 = [
          arguments
        ];
        U3ndn.Y$U();
        m84[5] = r8no$;
        W0n[289]['push']({
          eventName: m84[0][0],
          callback: m84[0][1]
        });
      };
      this['unOn'] = function (E4R) {
        var q_p = [
          arguments
        ];
        q_p[6] = 1544147364;
        q_p[1] = 926237482;
        q_p[9] = 2;
        for (q_p[7] = 1; U3ndn.v9p(q_p[7].toString(), q_p[7].toString().length, 8633) !== q_p[6]; q_p[7]++) {
          q_p[5] = r8no$;
          q_p[9] += 2;
        }
        if (U3ndn.v9p(q_p[9].toString(), q_p[9].toString().length, 89820) !== q_p[1]) {
          q_p[5] = r8no$;
        }
        if (W0n[289]) {
          for (q_p[3] = 0; q_p[3] < W0n[289]['length']; q_p[3]++) {
            if (W0n[289][q_p[3]]['callback'] == q_p[0][0]) {
              W0n[289]['splice'](q_p[3], 1);
              return;
            }
          }
        }
      };
      W0n[662] = Infinity;
      this['getTS'] = function () {
        U3ndn.Y$U();
        return W0n[974];
      };
      this['destroy'] = function () {
        var A_t = [
          arguments
        ];
        A_t[8] = r8no$;
        W0n[289] = [
        ];
        W0n[242]['close']();
        W0n[545]['destroy']();
        if (W0n[974]) {
          W0n[974]['destroy']();
        }
        W0n[961] = null;
        W0n[548] = [
        ];
        W0n[366] = [
        ];
        clearTimeout(W0n[419]);
        clearInterval(W0n[444]);
      };
    }
    V6D[67]['colors']['push'](6732650);
    V6D[67]['colors']['push'](10275941);
    V6D[67]['colors']['push'](13951319);
    V6D[67]['colors']['push'](16772696);
    V6D[67]['colors']['push'](16763432);
    V6D[67]['colors']['push'](16754470);
    V6D[67]['colors']['push'](16740419);
    V6D[67]['colors']['push'](16007990);
    V6D[67]['colors']['push'](15277667);
    V6D[67]['colors']['push'](10233776);
    V6D[67]['colors']['push'](6765239);
    V6D[67]['colors']['push'](4149685);
    V6D[67]['colors']['push'](2201331);
    V6D[67]['colors']['push'](240116);
    V6D[67]['colors']['push'](48340);
    V6D[67]['colors']['push'](38536);
    V6D[67]['colors']['push'](5025616);
    V6D[67]['colors']['push'](9159498);
    V6D[67]['colors']['push'](13491257);
    function B_(t06) {
      var I8l = [
        arguments
      ];
      I8l[2] = - 1921475443;
      I8l[3] = 144325482;
      I8l[7] = - 249947661;
      U3ndn.w30();
      I8l[1] = 1539004749;
      if (U3ndn.s7c(0, false, 127984) === I8l[2] || U3ndn.A4F(0, false, 572524) === I8l[3] || U3ndn.s7c(0, false, 298748) === I8l[7] || U3ndn.s7c(0, false, 703030) === I8l[1] || !!U3ndn.G6q()) {
        I8l[5] = r8no$;
        I8l[4] = false;
        I8l[8] = false;
        I8l[9] = 0;
        I8l[6] = 0;
        I8l[25] = I8l[0][0];
        I8l[99] = false;
        I8l[57] = false;
        I8l[94] = false;
        I8l[92] = false;
        I8l[80] = false;
        I8l[29] = false;
        I8l[82] = false;
        I8l[21] = false;
        I8l[16] = false;
        I8l[62] = true;
        I8l[71] = [
        ];
        I8l[68] = [
        ];
        I8l[88] = L5(V6D[67]['customControls']['left1']);
        I8l[77] = L5(V6D[67]['customControls']['left2']);
        I8l[63] = L5(V6D[67]['customControls']['left3']);
        I8l[40] = L5(V6D[67]['customControls']['up1']);
        I8l[36] = L5(V6D[67]['customControls']['up2']);
        function c3(u6n) {
          var o$Q = [
            arguments
          ];
          o$Q[3] = r8no$;
          if (o$Q[0][0]['button'] == 0) {
            M9(o$Q[0][0]);
          } else if (o$Q[0][0]['button'] == 2) {
            W2(o$Q[0][0]);
          }
        }
        I8l[73] = L5(V6D[67]['customControls']['up3']);
        I8l[27] = L5(V6D[67]['customControls']['right1']);
        I8l[19] = L5(V6D[67]['customControls']['right2']);
        I8l[78] = L5(V6D[67]['customControls']['right3']);
        I8l[93] = L5(V6D[67]['customControls']['down1']);
        I8l[81] = L5(V6D[67]['customControls']['down2']);
        function L5(h8n) {
          var r14 = [
            arguments
          ];
          r14[1] = r8no$;
          r14[6] = {
          };
          r14[6]['code'] = r14[0][0];
          r14[6]['isDown'] = false;
          r14[6]['isUp'] = true;
          r14[6]['press'] = undefined;
          r14[6]['release'] = undefined;
          r14[6]['downHandler'] = function (S5E) {
            var Z56 = [
              arguments
            ];
            Z56[9] = r8no$;
            if (I8l[62] == false) {
              return;
            }
            if (Z56[0][0]['keyCode'] === r14[6]['code']) {
              if (r14[6]['isUp'] && r14[6]['press']) {
                r14[6]['press']();
              }
              r14[6]['isDown'] = true;
              r14[6]['isUp'] = false;
            }
            if (I8l[62]) {
              Z56[0][0]['preventDefault']();
            }
          };
          r14[6]['upHandler'] = function (x9M) {
            var N5N = [
              arguments
            ];
            N5N[9] = r8no$;
            if (N5N[0][0]['keyCode'] === r14[6]['code']) {
              if (r14[6]['isDown'] && r14[6]['release']) {
                r14[6]['release']();
              }
              r14[6]['isDown'] = false;
              r14[6]['isUp'] = true;
            }
            if (I8l[62]) {
              N5N[0][0]['preventDefault']();
            }
          };
          I8l[71]['push'](r14[6]['downHandler']['bind'](r14[6]));
          window['addEventListener']('keydown', I8l[71][I8l[71]['length'] - 1], false);
          I8l[68]['push'](r14[6]['upHandler']['bind'](r14[6]));
          window['addEventListener']('keyup', I8l[68][I8l[68]['length'] - 1], false);
          return r14[6];
        }
        I8l[37] = L5(V6D[67]['customControls']['down3']);
        I8l[14] = L5(V6D[67]['customControls']['heavy1']);
        I8l[61] = L5(V6D[67]['customControls']['heavy2']);
        function m9(O47) {
          U3ndn.w30();
          var I_F = [
            arguments
          ];
          I8l[4] = true;
          g0(I_F[0][0]);
        }
        function f7(r3q) {
          U3ndn.w30();
          var e7W = [
            arguments
          ];
          I8l[8] = true;
          g0(e7W[0][0]);
        }
        I8l[18] = L5(V6D[67]['customControls']['heavy3']);
        I8l[89] = L5(V6D[67]['customControls']['swing1']);
        I8l[64] = L5(V6D[67]['customControls']['swing2']);
        I8l[30] = L5(V6D[67]['customControls']['swing3']);
        I8l[88]['press'] = function () {
          I8l[94] = true;
        };
        I8l[88]['release'] = function () {
          I8l[94] = false;
        };
        I8l[77]['press'] = function () {
          I8l[94] = true;
        };
        I8l[77]['release'] = function () {
          I8l[94] = false;
        };
        I8l[63]['press'] = function () {
          I8l[94] = true;
        };
        I8l[63]['release'] = function () {
          I8l[94] = false;
        };
        I8l[40]['press'] = function () {
          I8l[99] = true;
        };
        I8l[40]['release'] = function () {
          var D5a = [
            arguments
          ];
          D5a[9] = - 76773319;
          D5a[2] = - 855683618;
          D5a[6] = 2;
          for (D5a[7] = 1; U3ndn.v9p(D5a[7].toString(), D5a[7].toString().length, 89168) !== D5a[9]; D5a[7]++) {
            I8l[99] = true;
            D5a[6] += 2;
          }
          if (U3ndn.P5V(D5a[6].toString(), D5a[6].toString().length, 66184) !== D5a[2]) {
            I8l[99] = false;
          }
        };
        I8l[36]['press'] = function () {
          U3ndn.Y$U();
          I8l[99] = true;
        };
        I8l[36]['release'] = function () {
          U3ndn.w30();
          I8l[99] = false;
        };
        I8l[73]['press'] = function () {
          U3ndn.w30();
          I8l[99] = true;
        };
        I8l[73]['release'] = function () {
          I8l[99] = false;
        };
        I8l[27]['press'] = function () {
          U3ndn.w30();
          I8l[92] = true;
        };
        I8l[27]['release'] = function () {
          I8l[92] = false;
        };
        I8l[19]['press'] = function () {
          U3ndn.Y$U();
          I8l[92] = true;
        };
        I8l[19]['release'] = function () {
          U3ndn.w30();
          I8l[92] = false;
        };
        I8l[78]['press'] = function () {
          U3ndn.Y$U();
          I8l[92] = true;
        };
        I8l[78]['release'] = function () {
          U3ndn.Y$U();
          I8l[92] = false;
        };
        I8l[93]['press'] = function () {
          U3ndn.w30();
          I8l[57] = true;
        };
        I8l[93]['release'] = function () {
          I8l[57] = false;
        };
        I8l[81]['press'] = function () {
          U3ndn.Y$U();
          I8l[57] = true;
        };
        I8l[81]['release'] = function () {
          var A66 = [
            arguments
          ];
          A66[7] = - 525853454;
          A66[6] = - 1470424900;
          A66[1] = 2;
          for (A66[5] = 1; U3ndn.v9p(A66[5].toString(), A66[5].toString().length, 79320) !== A66[7]; A66[5]++) {
            I8l[57] = true;
            A66[1] += 2;
          }
          if (U3ndn.P5V(A66[1].toString(), A66[1].toString().length, 93629) !== A66[6]) {
            I8l[57] = false;
          }
        };
        I8l[37]['press'] = function () {
          U3ndn.Y$U();
          I8l[57] = true;
        };
        I8l[37]['release'] = function () {
          I8l[57] = false;
        };
        I8l[14]['press'] = function () {
          I8l[80] = true;
        };
        I8l[14]['release'] = function () {
          I8l[80] = false;
        };
        I8l[61]['press'] = function () {
          I8l[80] = true;
        };
        I8l[61]['release'] = function () {
          U3ndn.w30();
          I8l[80] = false;
        };
        I8l[18]['press'] = function () {
          U3ndn.Y$U();
          I8l[80] = true;
        };
        I8l[18]['release'] = function () {
          I8l[80] = false;
        };
        function M9(X42) {
          [
            arguments
          ];
          I8l[4] = false;
          I8l[9] = 0;
          I8l[6] = 0;
        }
        I8l[89]['press'] = function () {
          I8l[29] = true;
        };
        I8l[89]['release'] = function () {
          I8l[29] = false;
        };
        I8l[64]['press'] = function () {
          U3ndn.Y$U();
          I8l[29] = true;
        };
        I8l[64]['release'] = function () {
          I8l[29] = false;
        };
        I8l[30]['press'] = function () {
          I8l[29] = true;
        };
        I8l[30]['release'] = function () {
          I8l[29] = false;
        };
        this['getInputs'] = function () {
          var b7z = [
            arguments
          ];
          U3ndn.w30();
          b7z[2] = r8no$;
          b7z[9] = {
          };
          b7z[9]['left'] = I8l[94];
          b7z[9]['right'] = I8l[92];
          b7z[9]['up'] = I8l[99];
          b7z[9]['down'] = I8l[57];
          b7z[9]['action'] = I8l[80];
          b7z[9]['action2'] = I8l[29];
          return b7z[9];
        };
        this['lockKeyboard'] = function () {
          I8l[62] = true;
        };
        function g0(x_C) {
          U3ndn.Y$U();
          var k$F = [
            arguments
          ];
          k$F[2] = r8no$;
          k$F[4] = I8l[25]['getGameMousePosition'](k$F[0][0]);
          I8l[9] = k$F[4]['x'];
          I8l[6] = k$F[4]['y'];
        }
        function W2(b29) {
          U3ndn.Y$U();
          [
            arguments
          ];
          I8l[8] = false;
        }
        function I0(w1$) {
          var t43 = [
            arguments
          ];
          t43[1] = - 793417840;
          U3ndn.w30();
          t43[6] = - 303839002;
          t43[7] = - 951545256;
          t43[2] = 683419678;
          if (U3ndn.A4F(0, false, 449281) === t43[1] || U3ndn.A4F(0, false, 156752) === t43[6] || U3ndn.s7c(0, false, 978811) === t43[7] || U3ndn.A4F(0, false, 666664) === t43[2] || !!U3ndn.G6q()) {
            t43[4] = r8no$;
            if (t43[0][0]['button'] == 0) {
              m9(t43[0][0]);
            } else if (t43[0][0]['button'] == 2) {
              f7(t43[0][0]);
            }
          }
        }
        this['unlockKeyboard'] = function () {
          U3ndn.w30();
          I8l[62] = false;
        };
        this['destroy'] = function () {
          var M2e = [
            arguments
          ];
          M2e[4] = r8no$;
          for (M2e[1] = 0; M2e[1] < I8l[71]['length']; M2e[1]++) {
            window['removeEventListener']('keydown', I8l[71][M2e[1]]);
          }
          for (M2e[1] = 0; M2e[1] < I8l[68]['length']; M2e[1]++) {
            window['removeEventListener']('keyup', I8l[68][M2e[1]]);
          }
        };
        function u7(Y5z) {
          var S15 = [
            arguments
          ];
          S15[5] = - 1441861459;
          U3ndn.Y$U();
          S15[3] = - 1503344848;
          S15[9] = - 614379943;
          S15[7] = 2060026400;
          if (U3ndn.s7c(0, false, 831950) === S15[5] || U3ndn.A4F(0, false, 362321) === S15[3] || U3ndn.A4F(0, false, 621402) === S15[9] || U3ndn.s7c(0, false, 883093) === S15[7] || !!U3ndn.G6q()) {
            S15[8] = r8no$;
            S15[0][0]['preventDefault']();
          }
        }
      }
    }
    V6D[67]['colors']['push'](16771899);
    V6D[67]['colors']['push'](16761095);
    V6D[67]['colors']['push'](16750592);
    V6D[67]['colors']['push'](16733986);
    V6D[67]['colors']['push'](15022389);
    V6D[67]['colors']['push'](14162784);
    V6D[67]['colors']['push'](9315498);
    V6D[67]['colors']['push'](6174129);
    V6D[67]['colors']['push'](3754411);
    V6D[67]['colors']['push'](2001125);
    V6D[67]['colors']['push'](236517);
    V6D[67]['colors']['push'](44225);
    V6D[67]['colors']['push'](35195);
    V6D[67]['colors']['push'](4431943);
    V6D[67]['colors']['push'](8172354);
    V6D[67]['colors']['push'](12634675);
    V6D[67]['colors']['push'](16635957);
    V6D[67]['colors']['push'](16757504);
    V6D[67]['colors']['push'](16485376);
    V6D[67]['colors']['push'](16011550);
    V6D[67]['colors']['push'](13840175);
    V6D[67]['colors']['push'](12720219);
    V6D[67]['colors']['push'](8069026);
    V6D[67]['colors']['push'](5320104);
    V6D[67]['colors']['push'](3162015);
    V6D[67]['colors']['push'](1668818);
    V6D[67]['colors']['push'](166097);
    V6D[67]['colors']['push'](38823);
    V6D[67]['colors']['push'](31083);
    V6D[67]['colors']['push'](3706428);
    V6D[67]['colors']['push'](6856504);
    V6D[67]['colors']['push'](11514923);
    V6D[67]['colors']['push'](16498733);
    V6D[67]['colors']['push'](16752640);
    V6D[67]['colors']['push'](16088064);
    V6D[67]['colors']['push'](15092249);
    V6D[67]['colors']['push'](12986408);
    V6D[67]['colors']['push'](11342935);
    V6D[67]['colors']['push'](6953882);
    V6D[67]['colors']['push'](4532128);
    V6D[67]['colors']['push'](2635155);
    V6D[67]['colors']['push'](1402304);
    V6D[67]['colors']['push'](161725);
    V6D[67]['colors']['push'](33679);
    V6D[67]['colors']['push'](26972);
    V6D[67]['colors']['push'](3046706);
    V6D[67]['colors']['push'](5606191);
    function H3() {
      function G7s(h7Q) {
        U3ndn.w30();
        var e5Z = [
          arguments
        ];
        e5Z[7] = r8no$;
        V6D[67]['allAvatars'][c4$[6]] = e5Z[0][0];
        V6D[67]['avatar'] = V6D[67]['allAvatars'][V6D[67]['activeAvatarNumber']];
        m1L();
        setTimeout(b7S, 100);
        if (V6D[67]['guest'] == false) {
          U3ndn.S2t(6);
          e5Z[6] = U3ndn.I8r(c4$[6], 1);
          $['post']('https://bonk2.io/scripts/avatar_update.php', {
            token: c4$[4],
            task: 'updateavatar',
            newavatarslot: e5Z[6],
            newavatar: e5Z[0][0]['toString']()
          }) ['done']((c_q, N2A) =>{
          }) ['fail'](function (A9V, V9S, x6Z) {
            [
              arguments
            ];
          });
        }
      }
      function D7k() {
        var b47 = [
          arguments
        ];
        b47[5] = r8no$;
        c4$[9]['show'](V6D[67]['allAvatars'][c4$[6]]);
        c4$[2]['style']['visibility'] = 'hidden';
        c4$[24] = true;
      }
      function b7S() {
        U3ndn.Y$U();
        var X20 = [
          arguments
        ];
        X20[8] = r8no$;
        for (X20[4] = 0; X20[4] < 5; X20[4]++) {
          N2['createImage'](V6D[67]['allAvatars'][X20[4]], 1, c4$[88][X20[4]], '', 100, 100, null, null, null, 2, 0.05, 0.3);
          if (V6D[67]['activeAvatarNumber'] == X20[4]) {
            c4$[13][X20[4]]['style']['visibility'] = 'inherit';
          } else {
            c4$[13][X20[4]]['style']['visibility'] = 'hidden';
          }
          if (c4$[6] == X20[4]) {
            c4$[88][X20[4]]['style']['transform'] = 'scale(1.2)';
          } else {
            c4$[88][X20[4]]['style']['transform'] = '';
          }
        }
      }
      function n4C(...G45) {
        var b66 = [
          arguments
        ];
        b66[2] = r8no$;
        U3ndn.Y$U();
        b66[8] = G45['shift']();
        for (b66[5] = 0; b66[5] < c4$[10]['length']; b66[5]++) {
          if (c4$[10][b66[5]]['eventName'] == b66[8]) {
            c4$[10][b66[5]]['callback'](...G45);
          }
        }
      }
      function P9U() {
        D7k();
      }
      function E8g() {
        var g8x = [
          arguments
        ];
        g8x[3] = r8no$;
        U3ndn.w30();
        c4$[6] = parseInt(this['id']);
        for (g8x[8] = 0; g8x[8] < 5; g8x[8]++) {
          if (g8x[8] == c4$[6]) {
            c4$[88][g8x[8]]['style']['transform'] = 'scale(1.2)';
          } else {
            c4$[88][g8x[8]]['style']['transform'] = '';
          }
        }
      }
      function G9u() {
        var M5o = [
          arguments
        ];
        U3ndn.Y$U();
        M5o[6] = r8no$;
        V6D[67]['activeAvatarNumber'] = c4$[6];
        V6D[67]['avatar'] = V6D[67]['allAvatars'][V6D[67]['activeAvatarNumber']];
        for (M5o[3] = 0; M5o[3] < 5; M5o[3]++) {
          if (M5o[3] == V6D[67]['activeAvatarNumber']) {
            c4$[13][M5o[3]]['style']['visibility'] = 'inherit';
          } else {
            c4$[13][M5o[3]]['style']['visibility'] = 'hidden';
          }
        }
        if (V6D[67]['guest'] == false) {
          U3ndn.S2t(1);
          M5o[2] = U3ndn.E_K(20060, 19057);
          U3ndn.S2t(60);
          M5o[9] = U3ndn.I8r(5, 7, 13);
          M5o[5] = V6D[67][r8no$[M5o[2]]] + M5o[9];
          $['post']('https://bonk2.io/scripts/avatar_update.php', {
            token: c4$[4],
            task: 'updateslot',
            newactive: M5o[5]
          }) ['done']((K50, K_s) =>{
          }) ['fail'](function (Q2K, Y9R, o$r) {
            [
              arguments
            ];
          });
        }
      }
      function m1L() {
        U3ndn.Y$U();
        var F$J = [
          arguments
        ];
        F$J[5] = r8no$;
        c4$[9]['hide']();
        c4$[2]['style']['visibility'] = 'inherit';
        c4$[24] = false;
      }
      var c4$ = [
        arguments
      ];
      c4$[1] = r8no$;
      c4$[3] = this;
      c4$[4] = '';
      c4$[2] = document['getElementById']('skinmanager');
      c4$[8] = document['getElementById']('skinmanager_close');
      c4$[5] = document['getElementById']('skinmanager_setactive');
      U3ndn.w30();
      c4$[7] = document['getElementById']('skinmanager_edit');
      c4$[6] = 0;
      c4$[9] = new C7;
      c4$[9]['on']('cancel', m1L);
      c4$[9]['on']('saveAvatar', G7s);
      c4$[24] = false;
      c4$[5]['onclick'] = G9u;
      c4$[7]['onclick'] = P9U;
      c4$[8]['onclick'] = function () {
        U3ndn.w30();
        n4C('hideSkinManager');
      };
      c4$[8]['onmousedown'] = V6D[67]['bbs'];
      c4$[8]['onmouseover'] = V6D[67]['bhs'];
      c4$[88] = [
      ];
      c4$[88][0] = document['getElementById']('skinmanager_skin1_icon');
      c4$[88][1] = document['getElementById']('skinmanager_skin2_icon');
      c4$[88][2] = document['getElementById']('skinmanager_skin3_icon');
      c4$[88][3] = document['getElementById']('skinmanager_skin4_icon');
      c4$[88][4] = document['getElementById']('skinmanager_skin5_icon');
      c4$[88][0]['id'] = 0;
      c4$[88][1]['id'] = 1;
      c4$[88][2]['id'] = 2;
      c4$[88][3]['id'] = 3;
      c4$[88][4]['id'] = 4;
      c4$[88][0]['onclick'] = E8g;
      c4$[88][1]['onclick'] = E8g;
      c4$[88][2]['onclick'] = E8g;
      c4$[88][3]['onclick'] = E8g;
      c4$[88][4]['onclick'] = E8g;
      c4$[88][0]['onmouseover'] = V6D[67]['bhs'];
      c4$[88][1]['onmouseover'] = V6D[67]['bhs'];
      c4$[88][2]['onmouseover'] = V6D[67]['bhs'];
      c4$[88][3]['onmouseover'] = V6D[67]['bhs'];
      c4$[88][4]['onmouseover'] = V6D[67]['bhs'];
      c4$[88][0]['onmousedown'] = V6D[67]['rlc'];
      c4$[88][1]['onmousedown'] = V6D[67]['rlc'];
      c4$[88][2]['onmousedown'] = V6D[67]['rlc'];
      c4$[88][3]['onmousedown'] = V6D[67]['rlc'];
      c4$[88][4]['onmousedown'] = V6D[67]['rlc'];
      V6D[67]['setButtonSounds']([c4$[5],
      c4$[7]]);
      c4$[13] = [
      ];
      c4$[13][0] = document['getElementById']('skinmanager_skin1_activetext');
      c4$[13][1] = document['getElementById']('skinmanager_skin2_activetext');
      c4$[13][2] = document['getElementById']('skinmanager_skin3_activetext');
      c4$[13][3] = document['getElementById']('skinmanager_skin4_activetext');
      c4$[13][4] = document['getElementById']('skinmanager_skin5_activetext');
      this['show'] = function (Y3j) {
        U3ndn.Y$U();
        var o5K = [
          arguments
        ];
        o5K[9] = r8no$;
        c4$[4] = o5K[0][0];
        c4$[2]['style']['visibility'] = 'inherit';
        c4$[2]['style']['opacity'] = '0';
        anime({
          targets: c4$[2],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        c4$[6] = V6D[67]['activeAvatarNumber'];
        b7S();
      };
      this['hideEditorIfShowing'] = function () {
        U3ndn.w30();
        if (c4$[24]) {
          m1L();
        }
      };
      c4$[10] = [
      ];
      this['on'] = function (t_M, l8e) {
        var x4q = [
          arguments
        ];
        x4q[6] = r8no$;
        U3ndn.w30();
        c4$[10]['push']({
          eventName: x4q[0][0],
          callback: x4q[0][1]
        });
      };
    }
    V6D[67]['colors']['push'](10394916);
    V6D[67]['colors']['push'](16361509);
    V6D[67]['colors']['push'](16748288);
    V6D[67]['colors']['push'](15690752);
    V6D[67]['colors']['push'](14172949);
    V6D[67]['colors']['push'](12000284);
    V6D[67]['colors']['push'](8916559);
    V6D[67]['colors']['push'](4854924);
    V6D[67]['colors']['push'](3218322);
    V6D[67]['colors']['push'](1713022);
    V6D[67]['colors']['push'](870305);
    V6D[67]['colors']['push'](87963);
    V6D[67]['colors']['push'](24676);
    V6D[67]['colors']['push'](19776);
    V6D[67]['colors']['push'](1793568);
    V6D[67]['colors']['push'](3369246);
    V6D[67]['colors']['push'](8550167);
    V6D[67]['colors']['push'](16088855);
    V6D[67]['colors']['push'](16740096);
    V6D[67]['colors']['push'](15094016);
    V6D[67]['colors']['push'](12531212);
    V6D[67]['colors']['push'](16448250);
    V6D[67]['colors']['push'](16119285);
    V6D[67]['colors']['push'](15658734);
    V6D[67]['colors']['push'](14737632);
    function S$(O$D) {
      function h68(e4T, Y80, G5Z, B3v) {
        var l1W = [
          arguments
        ];
        l1W[9] = r8no$;
        l1W[6] = document['createElement']('div');
        if (l1W[0][3]) {
          l1W[6]['classList']['add']('maploadwindowbarcontainer_picks');
        } else {
          l1W[6]['classList']['add']('maploadwindowbarcontainer');
        }
        U3ndn.w30();
        if (l1W[0][1] > 0 || l1W[0][2] > 0) {
          l1W[8] = document['createElement']('div');
          l1W[8]['classList']['add']('maploadwindowbarcontainer_left');
          l1W[7] = document['createElement']('div');
          l1W[7]['classList']['add']('maploadwindowbarcontainer_right');
          U3ndn.z_y(238);
          l1W[4] = U3ndn.I8r(l1W[0][2], l1W[0][1], l1W[0][1]);
          U3ndn.z_y(6);
          l1W[2] = U3ndn.I8r(l1W[4], 0.15);
          U3ndn.z_y(4);
          l1W[4] *= U3ndn.E_K(l1W[2], l1W[2]);
          l1W[4] = Math['min'](1, l1W[4]);
          U3ndn.S2t(26);
          l1W[21] = U3ndn.E_K(14, 92, 324, 4);
          U3ndn.S2t(105);
          l1W[79] = U3ndn.E_K(19, 742, 761, 1);
          l1W[8]['style']['width'] = Math['ceil'](l1W[4] * l1W[21]) + U3ndn.j31(l1W[79]);
          U3ndn.z_y(12);
          l1W[53] = U3ndn.I8r(107, 1, 12, 9);
          U3ndn.z_y(97);
          l1W[27] = U3ndn.I8r(3, 2, 92, 7);
          U3ndn.S2t(60);
          l1W[34] = U3ndn.I8r(15, 2, 1501);
          l1W[7]['style']['width'] = (l1W[53] - l1W[4]) * l1W[27] + U3ndn.j31(l1W[34]);
          l1W[6]['appendChild'](l1W[8]);
          l1W[6]['appendChild'](l1W[7]);
        } else {
          l1W[5] = document['createElement']('div');
          l1W[5]['classList']['add']('maploadwindowbarcontainer_novotes');
          l1W[6]['appendChild'](l1W[5]);
        }
        l1W[1] = document['createElement']('span');
        l1W[1]['classList']['add']('maploadwindowtext');
        if (l1W[0][3]) {
          l1W[1]['classList']['add']('maploadwindowtextvotediff_picks');
        } else {
          l1W[1]['classList']['add']('maploadwindowtextvotediff');
        }
        l1W[3] = l1W[0][1];
        if (!isNaN(l1W[3])) {
          if (l1W[3] > 100000) {
            l1W[3] /= 1000;
            l1W[3] = Math['floor'](l1W[3]);
            U3ndn.z_y(107);
            l1W[55] = U3ndn.I8r(3761, 16, 7, 22570);
            l1W[3] = l1W[3] + U3ndn.j31(l1W[55]);
          } else if (l1W[3] > 1000) {
            l1W[3] /= 100;
            l1W[3] = Math['floor'](l1W[3]);
            l1W[3] /= 10;
            U3ndn.z_y(133);
            l1W[94] = U3ndn.I8r(4, 6, 8, 198285, 33669);
            l1W[3] = l1W[3] + U3ndn.j31(l1W[94]);
          }
          U3ndn.z_y(166);
          l1W[33] = U3ndn.I8r(63, 6, 3, 815);
          U3ndn.S2t(26);
          l1W[74] = U3ndn.E_K(15, 2583, 15590, 7);
          l1W[60] = U3ndn.j31(l1W[33]) + l1W[3] + U3ndn.j31(l1W[74]);
          l1W[1]['textContent'] = l1W[60];
        }
        l1W[26] = l1W[0][2];
        if (!isNaN(l1W[26])) {
          if (l1W[26] > 100000) {
            l1W[26] /= 1000;
            l1W[26] = Math['floor'](l1W[26]);
            U3ndn.S2t(139);
            l1W[81] = U3ndn.E_K(1, 16211, 3740, 48633, 3);
            l1W[26] = l1W[26] + U3ndn.j31(l1W[81]);
          } else if (l1W[26] > 1000) {
            l1W[26] /= 100;
            l1W[26] = Math['floor'](l1W[26]);
            l1W[26] /= 10;
            U3ndn.z_y(1);
            l1W[41] = U3ndn.I8r(3743, 2);
            l1W[26] = l1W[26] + U3ndn.j31(l1W[41]);
          }
          U3ndn.S2t(6);
          l1W[70] = U3ndn.I8r(757, 1513);
          l1W[88] = U3ndn.j31(l1W[70]) + l1W[26];
          l1W[1]['textContent'] += l1W[88];
        }
        l1W[0][0]['appendChild'](l1W[1]);
        l1W[0][0]['appendChild'](l1W[6]);
      }
      function k_5() {
        var w$s = [
          arguments
        ];
        w$s[3] = r8no$;
        U3ndn.w30();
        l6x[84]['style']['visibility'] = 'hidden';
      }
      function L1t() {
        var y38 = [
          arguments
        ];
        y38[5] = r8no$;
        if (l6x[81]['substr'](0, 2) == 'b2') {
          f9_('b2search', true);
        } else {
          f9_('search', true);
        }
      }
      function L9z() {
        var M82 = [
          arguments
        ];
        M82[4] = r8no$;
        l6x[90]['style']['display'] = 'none';
        l6x[70]['style']['display'] = 'none';
        l6x[74]['style']['display'] = 'none';
        l6x[73]['style']['display'] = 'none';
        l6x[50]['style']['display'] = 'none';
        l6x[16]['style']['display'] = 'none';
        l6x[34]['style']['display'] = 'none';
        l6x[49]['style']['display'] = 'none';
        l6x[95]['style']['display'] = 'none';
        l6x[2]['onclick'] = null;
      }
      function R05(Q0p) {
        var c8v = [
          arguments
        ];
        U3ndn.Y$U();
        c8v[5] = r8no$;
        if (c8v[0][0]['target'] == l6x[90]) {
          l6x[29]['innerHTML'] = l6x[90]['innerHTML'];
          f9_('hot', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'hidden';
        }
        if (c8v[0][0]['target'] == l6x[70]) {
          l6x[29]['innerHTML'] = l6x[70]['innerHTML'];
          f9_('curated', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'hidden';
        }
        if (c8v[0][0]['target'] == l6x[74]) {
          if (V6D[67]['guest'] == false) {
            l6x[29]['innerHTML'] = l6x[74]['innerHTML'];
            f9_('authorsown', true);
            l6x[10]['style']['visibility'] = 'hidden';
            l6x[42]['style']['visibility'] = 'hidden';
          }
        }
        if (c8v[0][0]['target'] == l6x[73]) {
          if (V6D[67]['guest'] == false) {
            l6x[29]['innerHTML'] = l6x[73]['innerHTML'];
            f9_('favs', true);
            l6x[10]['style']['visibility'] = 'hidden';
            l6x[42]['style']['visibility'] = 'hidden';
          }
        }
        if (c8v[0][0]['target'] == l6x[50]) {
          if (V6D[67]['guest'] == false) {
            l6x[29]['innerHTML'] = l6x[50]['innerHTML'];
            f9_('b2own', true);
            l6x[10]['style']['visibility'] = 'hidden';
            l6x[42]['style']['visibility'] = 'hidden';
          }
        }
        if (c8v[0][0]['target'] == l6x[16]) {
          l6x[29]['innerHTML'] = l6x[16]['innerHTML'];
          f9_('b2hotgeneral', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'inherit';
        }
        if (c8v[0][0]['target'] == l6x[95]) {
          l6x[29]['innerHTML'] = l6x[95]['innerHTML'];
          f9_('b2hotdeatharrows', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'inherit';
        }
        if (c8v[0][0]['target'] == l6x[34]) {
          l6x[29]['innerHTML'] = l6x[34]['innerHTML'];
          f9_('b2favs', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'hidden';
        }
        if (c8v[0][0]['target'] == l6x[49]) {
          l6x[29]['innerHTML'] = l6x[49]['innerHTML'];
          f9_('b2picks', true);
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'hidden';
        }
        L9z();
      }
      function A2Y(C_$) {
        var t4n = [
          arguments
        ];
        t4n[9] = r8no$;
        k_5();
        if (t4n[0][0]['maps']['length'] == 0 && l6x[82] == 0) {
          z7X('No Maps');
        }
        for (t4n[3] = 0; t4n[3] < t4n[0][0]['maps']['length']; t4n[3]++) {
          try {
            (function () {
              var y6s = [
                arguments
              ];
              y6s[2] = r8no$;
              y6s[3] = E['mergeIntoNewMap'](E['decodeFromDatabase'](t4n[0][0]['maps'][t4n[3]]['leveldata']));
              y6s[3]['m']['n'] = t4n[0][0]['maps'][t4n[3]]['name'];
              y6s[3]['m']['a'] = t4n[0][0]['maps'][t4n[3]]['authorname'];
              y6s[3]['m']['dbid'] = parseInt(t4n[0][0]['maps'][t4n[3]]['id']);
              y6s[3]['m']['date'] = t4n[0][0]['maps'][t4n[3]]['publisheddate'];
              y6s[3]['m']['dbv'] = 2;
              y6s[3]['m']['vu'] = t4n[0][0]['maps'][t4n[3]]['vu'];
              y6s[3]['m']['vd'] = t4n[0][0]['maps'][t4n[3]]['vd'];
              U3ndn.S2t(1);
              y6s[5] = U3ndn.E_K(3132, 2784);
              U3ndn.z_y(1);
              y6s[9] = U3ndn.I8r(19824, 18408);
              U3ndn.S2t(26);
              y6s[7] = U3ndn.I8r(4, 1, 64, 13);
              y6s[3]['m']['pub'] = parseInt(t4n[0][0][r8no$[y6s[5]]][t4n[3]][r8no$[y6s[9]]]) == y6s[7];
              y6s[6] = document['createElement']('div');
              y6s[6]['classList']['add']('maploadwindowmapdiv');
              l6x[87]['push']({
                map: y6s[3],
                div: y6s[6]
              });
              t4n[7] = document['createElement']('span');
              t4n[7]['classList']['add']('maploadwindowtext');
              t4n[7]['classList']['add']('maploadwindowtextname');
              t4n[7]['textContent'] = y6s[3]['m']['n'];
              t4n[6] = document['createElement']('span');
              t4n[6]['classList']['add']('maploadwindowtext');
              U3ndn.w30();
              t4n[6]['classList']['add']('maploadwindowtextauthor');
              t4n[6]['textContent'] = y6s[3]['m']['a'];
              t4n[5] = document['createElement']('span');
              t4n[5]['classList']['add']('maploadwindowtext');
              t4n[5]['classList']['add']('maploadwindowtextmode');
              y6s[1] = 'Any Mode';
              if (V6D[61]['modes'][y6s[3]['m']['mo']] && V6D[61]['modes'][y6s[3]['m']['mo']]['editorCanTarget']) {
                y6s[1] = V6D[61]['modes'][y6s[3]['m']['mo']]['lobbyName'];
              }
              t4n[5]['textContent'] = y6s[1];
              y6s[6]['appendChild'](t4n[5]);
              t4n[2] = document['createElement']('span');
              t4n[2]['classList']['add']('maploadwindowtext');
              t4n[2]['classList']['add']('maploadwindowtextage');
              y6s[4] = '';
              y6s[4] = moment(y6s[3]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
              t4n[2]['textContent'] = y6s[4];
              h68(y6s[6], y6s[3]['m']['vu'], y6s[3]['m']['vd']);
              y6s[6]['appendChild'](t4n[7]);
              y6s[6]['appendChild'](t4n[6]);
              y6s[6]['appendChild'](t4n[2]);
              t4n[8] = document['createElement']('div');
              t4n[8]['classList']['add']('maploadwindowunvfavbutton');
              t4n[8]['classList']['add']('brownButton');
              t4n[8]['classList']['add']('brownButton_classic');
              t4n[8]['classList']['add']('buttonShadow');
              t4n[8]['textContent'] = 'UNFAV';
              t4n[8]['mapDiv'] = y6s[6];
              t4n[8]['onmouseover'] = V6D[67]['bhs'];
              t4n[8]['onclick'] = function (u3W) {
                var p87 = [
                  arguments
                ];
                p87[4] = r8no$;
                p87[0][0]['stopPropagation']();
                V6D[67]['bcs']();
                if (this['textContent'] == 'UNFAV') {
                  this['textContent'] = 'SURE?';
                  return;
                } else {
                  $['post']('https://bonk2.io/scripts/map_fave.php', {
                    token: l6x[6],
                    mapid: y6s[3]['m']['dbid'],
                    action: 'u'
                  });
                  this['mapDiv']['style']['opacity'] = '0.3';
                  this['mapDiv']['style']['pointerEvents'] = 'none';
                  this['style']['display'] = 'none';
                }
              };
              y6s[6]['appendChild'](t4n[8]);
              y6s[6]['unfavButton'] = t4n[8];
              l6x[4]['appendChild'](y6s[6]);
              y6s[6]['map'] = y6s[3];
              y6s[6]['onclick'] = function () {
                var M1s = [
                  arguments
                ];
                M1s[4] = r8no$;
                U3ndn.Y$U();
                n9a('mapChosen', this['map']);
                l6x[9]['hide']();
                V6D[67]['bcs']();
              };
              y6s[6]['onmouseenter'] = function () {
                var D$P = [
                  arguments
                ];
                D$P[5] = r8no$;
                this['unfavButton']['style']['visibility'] = 'inherit';
                U3ndn.w30();
                A1w();
              };
              y6s[6]['onmouseleave'] = function () {
                U3ndn.Y$U();
                var G29 = [
                  arguments
                ];
                G29[3] = r8no$;
                this['unfavButton']['style']['visibility'] = 'hidden';
              };
            }());
          } catch (C5G) {
          }
        }
      }
      function a3q(I7m, y0U) {
        [
          arguments
        ];
      }
      function n9a(...H38) {
        var j7_ = [
          arguments
        ];
        j7_[7] = r8no$;
        j7_[4] = H38['shift']();
        for (j7_[2] = 0; j7_[2] < l6x[78]['length']; j7_[2]++) {
          if (l6x[78][j7_[2]]['eventName'] == j7_[4]) {
            l6x[78][j7_[2]]['callback'](...H38);
          }
        }
      }
      function l94(F0r, L5N) {
        U3ndn.w30();
        var x21 = [
          arguments
        ];
        x21[9] = r8no$;
        k_5();
        if (x21[0][0]['maps']['length'] == 0 && x21[0][1] == 0) {
          z7X('No Maps');
        }
        for (x21[26] = x21[0][1] * 32; x21[26] < Math['min'](x21[0][0]['maps']['length'], (x21[0][1] + 1) * 32); x21[26]++) {
          try {
            x21[3] = E['mergeIntoNewMap'](E['decodeFromDatabase'](x21[0][0]['maps'][x21[26]]['leveldata']));
            x21[3]['m']['n'] = x21[0][0]['maps'][x21[26]]['name'];
            x21[3]['m']['a'] = x21[0][0]['maps'][x21[26]]['authorname'];
            x21[3]['m']['dbid'] = parseInt(x21[0][0]['maps'][x21[26]]['id']);
            x21[3]['m']['date'] = x21[0][0]['maps'][x21[26]]['publisheddate'];
            x21[3]['m']['dbv'] = 2;
            x21[3]['m']['vu'] = x21[0][0]['maps'][x21[26]]['vu'];
            x21[3]['m']['vd'] = x21[0][0]['maps'][x21[26]]['vd'];
            x21[3]['m']['pub'] = x21[3]['m']['a'] == V6D[67]['userName'] ? true : false;
            x21[1] = document['createElement']('div');
            x21[1]['classList']['add']('maploadwindowmapdiv');
            l6x[87]['push']({
              map: x21[3],
              div: x21[1]
            });
            x21[6] = document['createElement']('span');
            x21[6]['classList']['add']('maploadwindowtext');
            x21[6]['classList']['add']('maploadwindowtextname');
            x21[6]['textContent'] = x21[3]['m']['n'];
            x21[4] = document['createElement']('span');
            x21[4]['classList']['add']('maploadwindowtext');
            x21[4]['classList']['add']('maploadwindowtextauthor');
            x21[4]['textContent'] = x21[3]['m']['a'];
            x21[7] = document['createElement']('span');
            x21[7]['classList']['add']('maploadwindowtext');
            x21[7]['classList']['add']('maploadwindowtextmode');
            x21[8] = 'Any Mode';
            if (V6D[61]['modes'][x21[3]['m']['mo']] && V6D[61]['modes'][x21[3]['m']['mo']]['editorCanTarget']) {
              x21[8] = V6D[61]['modes'][x21[3]['m']['mo']]['lobbyName'];
            }
            x21[7]['textContent'] = x21[8];
            x21[1]['appendChild'](x21[7]);
            x21[5] = document['createElement']('span');
            x21[5]['classList']['add']('maploadwindowtext');
            x21[5]['classList']['add']('maploadwindowtextage');
            x21[2] = '';
            x21[2] = moment(x21[3]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
            x21[5]['textContent'] = x21[2];
            h68(x21[1], x21[3]['m']['vu'], x21[3]['m']['vd']);
            x21[1]['appendChild'](x21[6]);
            x21[1]['appendChild'](x21[4]);
            x21[1]['appendChild'](x21[5]);
            l6x[4]['appendChild'](x21[1]);
            x21[1]['map'] = x21[3];
            x21[1]['onclick'] = function () {
              var d0f = [
                arguments
              ];
              d0f[3] = r8no$;
              n9a('mapChosen', this['map']);
              l6x[9]['hide']();
              V6D[67]['bcs']();
            };
            x21[1]['onmouseenter'] = A1w;
          } catch (u6l) {
          }
        }
      }
      function X3O(u6y) {
        U3ndn.w30();
        var H6G = [
          arguments
        ];
        H6G[6] = r8no$;
        if (l6x[90]['style']['display'] == 'block') {
          L9z();
        } else {
          l6x[90]['style']['display'] = 'block';
          l6x[70]['style']['display'] = 'block';
          l6x[74]['style']['display'] = 'block';
          l6x[73]['style']['display'] = 'block';
          l6x[50]['style']['display'] = 'block';
          l6x[16]['style']['display'] = 'block';
          l6x[34]['style']['display'] = 'block';
          l6x[49]['style']['display'] = 'block';
          l6x[95]['style']['display'] = 'block';
          l6x[2]['onclick'] = Q8A;
          H6G[0][0]['stopPropagation']();
        }
      }
      function A1w() {
        var b_l = [
          arguments
        ];
        b_l[8] = r8no$;
        if (!V6D[67]['mute']) {
          l6x[68]['stop']();
          l6x[68]['play']();
        }
      }
      function M89(n68, v6w) {
        var w$L = [
          arguments
        ];
        w$L[9] = r8no$;
        k_5();
        if (w$L[0][0]['maps']['length'] == 0 && w$L[0][1] == 0) {
          z7X('No Maps');
        }
        for (w$L[38] = w$L[0][1] * 32; w$L[38] < Math['min'](w$L[0][0]['maps']['length'], (w$L[0][1] + 1) * 32); w$L[38]++) {
          try {
            w$L[3] = E['mergeIntoNewMap'](E['decodeFromDatabase'](w$L[0][0]['maps'][w$L[38]]['leveldata']));
            w$L[3]['m']['n'] = w$L[0][0]['maps'][w$L[38]]['name'];
            w$L[3]['m']['a'] = w$L[0][0]['maps'][w$L[38]]['authorname'];
            w$L[3]['m']['dbid'] = parseInt(w$L[0][0]['maps'][w$L[38]]['id']);
            w$L[3]['m']['date'] = w$L[0][0]['maps'][w$L[38]]['publisheddate'];
            w$L[3]['m']['dbv'] = 2;
            w$L[3]['m']['vu'] = w$L[0][0]['maps'][w$L[38]]['vu'];
            w$L[3]['m']['vd'] = w$L[0][0]['maps'][w$L[38]]['vd'];
            w$L[3]['m']['pub'] = w$L[3]['m']['a'] == V6D[67]['userName'] ? true : false;
            w$L[5] = document['createElement']('div');
            w$L[5]['classList']['add']('maploadwindowmapdiv');
            w$L[5]['classList']['add']('maploadwindowmapdivedit');
            l6x[87]['push']({
              map: w$L[3],
              div: w$L[5]
            });
            w$L[8] = document['createElement']('span');
            w$L[8]['classList']['add']('maploadwindowtext');
            w$L[8]['classList']['add']('maploadwindowtextname');
            w$L[8]['textContent'] = w$L[3]['m']['n'];
            w$L[7] = document['createElement']('span');
            w$L[7]['classList']['add']('maploadwindowtext');
            w$L[7]['classList']['add']('maploadwindowtextauthor');
            w$L[7]['textContent'] = w$L[3]['m']['a'];
            w$L[2] = document['createElement']('span');
            w$L[2]['classList']['add']('maploadwindowtext');
            w$L[2]['classList']['add']('maploadwindowtextbasedon');
            w$L[2]['textContent'] = 'based on';
            w$L[1] = document['createElement']('span');
            w$L[1]['classList']['add']('maploadwindowtext');
            w$L[1]['classList']['add']('maploadwindowtextoriginalname');
            w$L[1]['textContent'] = w$L[3]['m']['rxn'];
            w$L[4] = document['createElement']('span');
            w$L[4]['classList']['add']('maploadwindowtext');
            w$L[4]['classList']['add']('maploadwindowtextoriginalauthor');
            w$L[4]['textContent'] = w$L[3]['m']['rxa'];
            w$L[6] = document['createElement']('span');
            w$L[6]['classList']['add']('maploadwindowtext');
            w$L[6]['classList']['add']('maploadwindowtextage');
            w$L[77] = '';
            w$L[77] = moment(w$L[3]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
            w$L[6]['textContent'] = w$L[77];
            h68(w$L[5], w$L[3]['m']['vu'], w$L[3]['m']['vd']);
            w$L[5]['appendChild'](w$L[8]);
            w$L[5]['appendChild'](w$L[7]);
            w$L[5]['appendChild'](w$L[6]);
            w$L[5]['appendChild'](w$L[2]);
            w$L[5]['appendChild'](w$L[1]);
            w$L[5]['appendChild'](w$L[4]);
            l6x[4]['appendChild'](w$L[5]);
            w$L[5]['map'] = w$L[3];
            w$L[5]['onclick'] = function () {
              var P5T = [
                arguments
              ];
              P5T[5] = r8no$;
              n9a('mapChosen', this['map']);
              l6x[9]['hide']();
              V6D[67]['bcs']();
            };
            w$L[5]['onmouseenter'] = A1w;
          } catch (F$D) {
          }
        }
      }
      function N0H(u7U) {
        var m_V = [
          arguments
        ];
        m_V[3] = r8no$;
        U3ndn.w30();
        k_5();
        m_V[0][0]['cant'] = parseInt(m_V[0][0]['cant']);
        if (l6x[56]) {
          l6x[56]['onclick'] = null;
          l6x[4]['removeChild'](l6x[56]);
          l6x[56] = null;
        }
        if (m_V[0][0]['cant'] == 0 && l6x[82] == 0) {
          z7X('No Maps');
        }
        for (m_V[92] = 0; m_V[92] < m_V[0][0]['cant']; m_V[92]++) {
          m_V[6] = m_V[92];
          if (m_V[0][0]['getrule'] == 'hot' || m_V[0][0]['getrule'] == 'curated') {
            U3ndn.z_y(4);
            m_V[6] += U3ndn.I8r(l6x[19], l6x[82]);
          }
          if (m_V[0][0]['getrule'] != 'curated' && (m_V[6] >= (l6x[82] + 1) * l6x[19] || m_V[6] >= m_V[0][0]['cant'])) {
            break;
          }
          try {
            U3ndn.z_y(45);
            m_V[93] = U3ndn.E_K(3, 6, 71717, 4218);
            m_V[7] = m_V[0][0][U3ndn.j31(m_V[93]) + m_V[6]];
            m_V[9] = E['fromOldString'](m_V[7]);
            U3ndn.S2t(15);
            m_V[22] = U3ndn.I8r(4, 61664, 57814);
            m_V[9]['m']['n'] = m_V[0][0][U3ndn.j31(m_V[22]) + m_V[6]];
            U3ndn.z_y(73);
            m_V[99] = U3ndn.I8r(1, 41477, 39294);
            m_V[9]['m']['a'] = m_V[0][0][U3ndn.j31(m_V[99]) + m_V[6]];
            m_V[9]['m']['dbid'] = parseInt(m_V[0][0]['mapid' + m_V[6]]);
            U3ndn.z_y(14);
            m_V[69] = U3ndn.E_K(1037, 1037, 1030);
            m_V[9]['m']['date'] = m_V[0][0][U3ndn.j31(m_V[69]) + m_V[6]];
            m_V[9]['m']['vu'] = parseInt(m_V[0][0]['thumbsup' + m_V[6]]);
            m_V[9]['m']['vd'] = parseInt(m_V[0][0]['thumbsdown' + m_V[6]]);
            m_V[9]['m']['dbv'] = 1;
            m_V[9]['m']['pub'] = false;
            m_V[5] = document['createElement']('div');
            m_V[5]['classList']['add']('maploadwindowmapdiv');
            m_V[5]['classList']['add']('maploadwindowmapdivb1');
            l6x[87]['push']({
              map: m_V[9],
              div: m_V[5]
            });
            m_V[2] = document['createElement']('span');
            m_V[2]['classList']['add']('maploadwindowtext');
            m_V[2]['classList']['add']('maploadwindowtextname');
            m_V[2]['textContent'] = m_V[9]['m']['n'];
            m_V[4] = document['createElement']('span');
            m_V[4]['classList']['add']('maploadwindowtext');
            m_V[4]['classList']['add']('maploadwindowtextauthor');
            m_V[4]['textContent'] = m_V[9]['m']['a'];
            m_V[1] = document['createElement']('span');
            m_V[1]['classList']['add']('maploadwindowtext');
            m_V[1]['classList']['add']('maploadwindowtextage');
            m_V[8] = '';
            if (m_V[0][0]['getrule'] != 'curated') {
              m_V[8] = moment(m_V[9]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
            }
            m_V[1]['textContent'] = m_V[8];
            m_V[91] = document['createElement']('span');
            m_V[91]['classList']['add']('maploadwindowtext');
            m_V[91]['classList']['add']('maploadwindowtextvotediff');
            m_V[33] = m_V[9]['m']['vu'];
            m_V[43] = m_V[9]['m']['vd'];
            if (!isNaN(m_V[33]) && !isNaN(m_V[43])) {
              if (m_V[33] > 100000) {
                m_V[33] /= 1000;
                m_V[33] = Math['floor'](m_V[33]);
                U3ndn.z_y(155);
                m_V[46] = U3ndn.I8r(2, 12, 3724, 7, 9335);
                m_V[33] = m_V[33] + U3ndn.j31(m_V[46]);
              } else if (m_V[33] > 1000) {
                m_V[33] /= 100;
                m_V[33] = Math['floor'](m_V[33]);
                m_V[33] /= 10;
                U3ndn.S2t(6);
                m_V[63] = U3ndn.E_K(3725, 16);
                m_V[33] = m_V[33] + U3ndn.j31(m_V[63]);
              }
              if (m_V[43] > 100000) {
                m_V[43] /= 1000;
                m_V[43] = Math['floor'](m_V[43]);
                U3ndn.S2t(60);
                m_V[62] = U3ndn.I8r(12, 29916, 33669);
                m_V[43] = m_V[43] + U3ndn.j31(m_V[62]);
              } else if (m_V[43] > 1000) {
                m_V[43] /= 100;
                m_V[43] = Math['floor'](m_V[43]);
                m_V[43] /= 10;
                U3ndn.S2t(14);
                m_V[24] = U3ndn.I8r(1, 234, 3507);
                m_V[43] = m_V[43] + U3ndn.j31(m_V[24]);
              }
              U3ndn.z_y(13);
              m_V[23] = U3ndn.E_K(948, 9, 16);
              U3ndn.S2t(86);
              m_V[83] = U3ndn.I8r(3, 721, 9, 3605, 3540);
              m_V[85] = U3ndn.j31(m_V[23]) + m_V[33] + U3ndn.j31(m_V[83]) + m_V[43];
              m_V[91]['textContent'] = m_V[85];
            }
            if (m_V[0][0]['getrule'] != 'curated') {
              m_V[28] = document['createElement']('div');
              m_V[28]['classList']['add']('maploadwindowbarcontainer');
              m_V[77] = document['createElement']('div');
              m_V[77]['classList']['add']('maploadwindowbarcontainer_left');
              m_V[47] = document['createElement']('div');
              m_V[47]['classList']['add']('maploadwindowbarcontainer_right');
              U3ndn.z_y(107);
              m_V[96] = U3ndn.I8r(1375, 13, 10, 13612);
              U3ndn.z_y(14);
              m_V[86] = U3ndn.E_K(1, 1354, 7);
              U3ndn.S2t(87);
              m_V[90] = U3ndn.I8r(11, 10, 250, 6, 16365);
              U3ndn.S2t(13);
              m_V[21] = U3ndn.I8r(1348, 31, 18);
              U3ndn.S2t(222);
              m_V[79] = U3ndn.I8r(4, 95, 3, 21, 19);
              U3ndn.z_y(48);
              m_V[15] = U3ndn.E_K(1389, 1378, 1, 2, 276);
              m_V[34] = m_V[9][r8no$[m_V[96]]][r8no$[m_V[86]]] / (m_V[9][r8no$[m_V[90]]][r8no$[m_V[21]]] + m_V[9][r8no$[m_V[79]]][r8no$[m_V[15]]]);
              m_V[34] -= 0.7;
              m_V[34] /= 0.2;
              m_V[34] = Math['min'](Math['max'](m_V[34], 0), 1);
              U3ndn.S2t(65);
              m_V[89] = U3ndn.I8r(12, 82, 82, 87);
              U3ndn.z_y(92);
              m_V[19] = U3ndn.I8r(114, 1513, 114, 16, 14);
              m_V[77]['style']['width'] = Math['ceil'](m_V[34] * m_V[89]) + U3ndn.j31(m_V[19]);
              U3ndn.z_y(6);
              m_V[80] = U3ndn.I8r(0, 1);
              U3ndn.z_y(70);
              m_V[42] = U3ndn.E_K(14, 1900, 22683, 12, 3);
              U3ndn.z_y(15);
              m_V[38] = U3ndn.I8r(17, 1504, 37);
              m_V[47]['style']['width'] = (m_V[80] - m_V[34]) * m_V[42] + U3ndn.j31(m_V[38]);
              m_V[28]['appendChild'](m_V[77]);
              m_V[28]['appendChild'](m_V[47]);
              m_V[5]['appendChild'](m_V[28]);
            }
            m_V[5]['appendChild'](m_V[2]);
            m_V[5]['appendChild'](m_V[4]);
            m_V[5]['appendChild'](m_V[1]);
            m_V[5]['appendChild'](m_V[91]);
            l6x[4]['appendChild'](m_V[5]);
            m_V[5]['map'] = m_V[9];
            m_V[5]['onclick'] = function () {
              var Q$t = [
                arguments
              ];
              U3ndn.Y$U();
              Q$t[9] = r8no$;
              n9a('mapChosen', this['map']);
              l6x[9]['hide']();
              V6D[67]['bcs']();
            };
            m_V[5]['onmouseenter'] = A1w;
          } catch (a70) {
          }
        }
      }
      function d10(r3F, a2T) {
        var V6T = [
          arguments
        ];
        V6T[5] = r8no$;
        k_5();
        if (V6T[0][0]['maps']['length'] == 0 && V6T[0][1] == 0) {
          z7X('No Maps');
        }
        for (V6T[33] = V6T[0][1] * 32; V6T[33] < Math['min'](V6T[0][0]['maps']['length'], (V6T[0][1] + 1) * 32); V6T[33]++) {
          try {
            if (V6T[0][0]['maps'][V6T[33]]['dbv'] == 1) {
              V6T[1] = E['fromOldString'](V6T[0][0]['maps'][V6T[33]]['leveldata']);
            } else {
              V6T[1] = E['mergeIntoNewMap'](E['decodeFromDatabase'](V6T[0][0]['maps'][V6T[33]]['leveldata']));
            }
            V6T[1]['m']['n'] = V6T[0][0]['maps'][V6T[33]]['name'];
            V6T[1]['m']['a'] = V6T[0][0]['maps'][V6T[33]]['authorname'];
            V6T[1]['m']['dbid'] = parseInt(V6T[0][0]['maps'][V6T[33]]['id']);
            V6T[1]['m']['date'] = V6T[0][0]['maps'][V6T[33]]['publisheddate'];
            V6T[1]['m']['dbv'] = 2;
            V6T[1]['m']['vu'] = V6T[0][0]['maps'][V6T[33]]['vu'];
            V6T[1]['m']['vd'] = V6T[0][0]['maps'][V6T[33]]['vd'];
            V6T[1]['m']['pub'] = V6T[1]['m']['a'] == V6D[67]['userName'] ? true : false;
            V6T[2] = document['createElement']('div');
            V6T[2]['classList']['add']('maploadwindowmapdiv');
            V6T[2]['classList']['add']('maploadwindowmapdiv_picks');
            l6x[87]['push']({
              map: V6T[1],
              div: V6T[2]
            });
            V6T[9] = document['createElement']('span');
            V6T[9]['classList']['add']('maploadwindowtext_picks');
            V6T[9]['classList']['add']('maploadwindowtextname_picks');
            V6T[9]['textContent'] = V6T[1]['m']['n'];
            V6T[7] = document['createElement']('span');
            V6T[7]['classList']['add']('maploadwindowtext_picks');
            V6T[7]['classList']['add']('maploadwindowtextauthor_picks');
            V6T[7]['textContent'] = V6T[1]['m']['a'];
            V6T[3] = document['createElement']('span');
            V6T[3]['classList']['add']('maploadwindowtext_picks');
            V6T[3]['classList']['add']('maploadwindowtextmode_picks');
            V6T[8] = 'Any Mode';
            if (V6D[61]['modes'][V6T[1]['m']['mo']] && V6D[61]['modes'][V6T[1]['m']['mo']]['editorCanTarget']) {
              V6T[8] = V6D[61]['modes'][V6T[1]['m']['mo']]['lobbyName'];
            }
            V6T[3]['textContent'] = V6T[8];
            V6T[2]['appendChild'](V6T[3]);
            V6T[6] = document['createElement']('span');
            V6T[6]['classList']['add']('maploadwindowtext_picks');
            V6T[6]['classList']['add']('maploadwindowtextaddedby_picks');
            U3ndn.S2t(39);
            V6T[63] = U3ndn.I8r(13, 2905, 13, 17, 12);
            U3ndn.S2t(6);
            V6T[42] = U3ndn.I8r(337, 11);
            U3ndn.z_y(60);
            V6T[87] = U3ndn.I8r(9, 19885, 21315);
            V6T[6]['textContent'] = U3ndn.j31(V6T[63]) + V6T[0][0][r8no$[V6T[42]]][V6T[33]][r8no$[V6T[87]]];
            V6T[2]['appendChild'](V6T[6]);
            V6T[4] = document['createElement']('span');
            V6T[4]['classList']['add']('maploadwindowtext_picks');
            V6T[4]['classList']['add']('maploadwindowtextcomment_picks');
            if (V6T[0][0]['maps'][V6T[33]]['comment']) {
              U3ndn.S2t(13);
              V6T[95] = U3ndn.E_K(119, 598, 6);
              U3ndn.z_y(107);
              V6T[29] = U3ndn.E_K(3480, 13, 10, 34439);
              U3ndn.S2t(178);
              V6T[81] = U3ndn.I8r(1334, 84, 15, 19);
              U3ndn.S2t(1);
              V6T[26] = U3ndn.I8r(722, 11);
              V6T[4]['textContent'] = U3ndn.j31(V6T[95]) + V6T[0][0][r8no$[V6T[29]]][V6T[33]][r8no$[V6T[81]]] + U3ndn.j31(V6T[26]);
            }
            V6T[2]['appendChild'](V6T[4]);
            V6T[20] = document['createElement']('span');
            V6T[20]['classList']['add']('maploadwindowtext_picks');
            V6T[20]['classList']['add']('maploadwindowtextage_picks');
            V6T[41] = '';
            V6T[41] = moment(V6T[1]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
            V6T[20]['textContent'] = V6T[41];
            h68(V6T[2], V6T[1]['m']['vu'], V6T[1]['m']['vd'], true);
            V6T[2]['appendChild'](V6T[9]);
            V6T[2]['appendChild'](V6T[7]);
            V6T[2]['appendChild'](V6T[20]);
            l6x[4]['appendChild'](V6T[2]);
            V6T[2]['map'] = V6T[1];
            V6T[2]['onclick'] = function () {
              var M2U = [
                arguments
              ];
              M2U[1] = r8no$;
              n9a('mapChosen', this['map']);
              l6x[9]['hide']();
              V6D[67]['bcs']();
            };
            V6T[2]['onmouseenter'] = A1w;
          } catch (m6A) {
          }
        }
      }
      function Q8A(M9p) {
        var P3m = [
          arguments
        ];
        P3m[8] = r8no$;
        if (P3m[0][0]['target'] != l6x[8]) {
          L9z();
        }
      }
      function w10(x87) {
        var U0f = [
          arguments
        ];
        U0f[7] = r8no$;
        U3ndn.Y$U();
        k_5();
        if (U0f[0][0]['maps']['length'] == 0 && l6x[82] == 0) {
          z7X('No Maps');
        }
        for (U0f[51] = 0; U0f[51] < U0f[0][0]['maps']['length']; U0f[51]++) {
          try {
            U0f[9] = E['mergeIntoNewMap'](E['decodeFromDatabase'](U0f[0][0]['maps'][U0f[51]]['leveldata']));
            U0f[9]['m']['n'] = U0f[0][0]['maps'][U0f[51]]['name'];
            U0f[9]['m']['a'] = U0f[0][0]['maps'][U0f[51]]['authorname'];
            U0f[9]['m']['dbid'] = parseInt(U0f[0][0]['maps'][U0f[51]]['id']);
            U0f[9]['m']['date'] = U0f[0][0]['maps'][U0f[51]]['publisheddate'];
            U0f[9]['m']['dbv'] = 2;
            U0f[9]['m']['vu'] = U0f[0][0]['maps'][U0f[51]]['vu'];
            U0f[9]['m']['vd'] = U0f[0][0]['maps'][U0f[51]]['vd'];
            U3ndn.z_y(17);
            U0f[62] = U3ndn.I8r(300, 32, 16);
            U3ndn.S2t(14);
            U0f[38] = U3ndn.I8r(1, 1407, 9);
            U3ndn.z_y(91);
            U0f[16] = U3ndn.E_K(17, 5, 8, 20, 4);
            U0f[9]['m']['pub'] = parseInt(U0f[0][0][r8no$[U0f[62]]][U0f[51]][r8no$[U0f[38]]]) == U0f[16];
            U0f[6] = document['createElement']('div');
            U0f[6]['classList']['add']('maploadwindowmapdiv');
            l6x[87]['push']({
              map: U0f[9],
              div: U0f[6]
            });
            U0f[1] = document['createElement']('span');
            U0f[1]['classList']['add']('maploadwindowtext');
            U0f[1]['classList']['add']('maploadwindowtextname');
            U0f[1]['textContent'] = U0f[9]['m']['n'];
            U0f[3] = document['createElement']('span');
            U0f[3]['classList']['add']('maploadwindowtext');
            U0f[3]['classList']['add']('maploadwindowtextauthor');
            U0f[3]['textContent'] = U0f[9]['m']['a'];
            U0f[8] = document['createElement']('span');
            U0f[8]['classList']['add']('maploadwindowtext');
            U0f[8]['classList']['add']('maploadwindowtextmode');
            U0f[4] = 'Any Mode';
            if (V6D[61]['modes'][U0f[9]['m']['mo']] && V6D[61]['modes'][U0f[9]['m']['mo']]['editorCanTarget']) {
              U0f[4] = V6D[61]['modes'][U0f[9]['m']['mo']]['lobbyName'];
            }
            U0f[8]['textContent'] = U0f[4];
            U0f[6]['appendChild'](U0f[8]);
            U0f[2] = document['createElement']('span');
            U0f[2]['classList']['add']('maploadwindowtext');
            U0f[2]['classList']['add']('maploadwindowtextage');
            U0f[5] = '';
            U0f[5] = moment(U0f[9]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
            U0f[2]['textContent'] = U0f[5];
            h68(U0f[6], U0f[9]['m']['vu'], U0f[9]['m']['vd']);
            U0f[6]['appendChild'](U0f[1]);
            U0f[6]['appendChild'](U0f[3]);
            U0f[6]['appendChild'](U0f[2]);
            l6x[4]['appendChild'](U0f[6]);
            U0f[6]['map'] = U0f[9];
            U0f[6]['onclick'] = function () {
              var A8e = [
                arguments
              ];
              A8e[8] = r8no$;
              n9a('mapChosen', this['map']);
              l6x[9]['hide']();
              V6D[67]['bcs']();
            };
            U0f[6]['onmouseenter'] = A1w;
          } catch (X3v) {
          }
        }
      }
      function O53() {
        var S2a = [
          arguments
        ];
        S2a[9] = r8no$;
        U3ndn.Y$U();
        try {
          if (l6x[87]['length'] > 0) {
            S2a[1] = l6x[87]['shift']();
            S2a[5] = Z7['createImage'](S2a[1]['map'], 0.22);
            S2a[1]['div']['appendChild'](S2a[5]);
          }
        } catch (I2A) {
        }
      }
      function z7X(D6d) {
        var j33 = [
          arguments
        ];
        j33[9] = r8no$;
        l6x[84]['style']['visibility'] = 'inherit';
        l6x[84]['textContent'] = j33[0][0];
      }
      function V_j(o9Z) {
        var Z9i = [
          arguments
        ];
        Z9i[3] = r8no$;
        U3ndn.S2t(14);
        Z9i[4] = U3ndn.I8r(1, 170, 2044);
        Z9i[9] = U3ndn.j31(Z9i[4]) + Z9i[0][0];
        if (!Z9i[9]) {
          Z9i[9] = location['href'];
        }
        Z9i[8] = Z9i[9]['indexOf']('?');
        U3ndn.Y$U();
        Z9i[2] = Z9i[9]['indexOf']('#');
        if (Z9i[2] == - 1 && Z9i[8] == - 1) {
          return {
          };
        }
        if (Z9i[2] == - 1) {
          Z9i[2] = Z9i[9]['length'];
        }
        Z9i[7] = Z9i[8] == - 1 || Z9i[2] == Z9i[8] + 1 ? Z9i[9]['substring'](Z9i[2]) : Z9i[9]['substring'](Z9i[8] + 1, Z9i[2]);
        Z9i[1] = {
        };
        Z9i[7]['split']('&') ['forEach'](function (K8D) {
          var n6C = [
            arguments
          ];
          n6C[8] = r8no$;
          if (!n6C[0][0]) {
            return;
          }
          n6C[0][0] = n6C[0][0]['split']('+') ['join'](' ');
          n6C[9] = n6C[0][0]['indexOf']('=');
          U3ndn.w30();
          n6C[5] = n6C[9] > - 1 ? n6C[0][0]['substr'](0, n6C[9]) : n6C[0][0];
          n6C[2] = '';
          try {
            n6C[2] = n6C[9] > - 1 ? decodeURIComponent(n6C[0][0]['substr'](n6C[9] + 1)) : '';
          } catch (o6y) {
          }
          n6C[6] = n6C[5]['indexOf']('[');
          if (n6C[6] == - 1) {
            Z9i[1][decodeURIComponent(n6C[5])] = n6C[2];
          } else {
            n6C[1] = n6C[5]['indexOf'](']', n6C[6]);
            n6C[3] = decodeURIComponent(n6C[5]['substring'](n6C[6] + 1, n6C[1]));
            n6C[5] = decodeURIComponent(n6C[5]['substring'](0, n6C[6]));
            if (!Z9i[1][n6C[5]]) {
              Z9i[1][n6C[5]] = [
              ];
            }
            if (!n6C[3]) {
              Z9i[1][n6C[5]]['push'](n6C[2]);
            } else {
              Z9i[1][n6C[5]][n6C[3]] = n6C[2];
            }
          }
        });
        return Z9i[1];
      }
      function y2Z(S9y) {
        var f9S = [
          arguments
        ];
        U3ndn.w30();
        f9S[4] = r8no$;
        if (l6x[4]['scrollTop'] > 0 && l6x[4]['scrollHeight'] - l6x[4]['scrollTop'] <= l6x[4]['clientHeight'] + 10) {
          f9S[8] = Date['now']();
          if (f9S[8] < l6x[92] + 1000 && l6x[79] == false) {
            return;
          }
          if (l6x[81] == 'b2hotgeneral' || l6x[81] == 'b2hotgrapple' || l6x[81] == 'b2hotdeatharrows') {
            l6x[82]++;
            l94(l6x[89], l6x[82]);
          } else if (l6x[81] == 'b2picks') {
            l6x[82]++;
            d10(l6x[58], l6x[82]);
          } else if (l6x[81] == 'b2hotedits') {
            l6x[82]++;
            M89(l6x[93], l6x[82]);
          } else if (l6x[81] == 'hot') {
            l6x[82]++;
            f9_('hot', false);
          } else if (l6x[13]) {
            l6x[82]++;
            f9_(l6x[81], false);
          }
        }
      }
      function f9_(t6Y, b95) {
        U3ndn.w30();
        var k$f = [
          arguments
        ];
        k$f[2] = r8no$;
        l6x[67] = true;
        l6x[92] = Date['now']();
        if (k$f[0][0] == 'search' && maploadwindowsearchinput['value'] == '') {
          k$f[0][0] = 'hot';
          l6x[10]['style']['visibility'] = 'hidden';
          l6x[42]['style']['visibility'] = 'inherit';
        }
        if (l6x[81] != k$f[0][0] || k$f[0][1]) {
          while (l6x[4]['firstChild']) {
            l6x[4]['removeChild'](l6x[4]['firstChild']);
          }
          l6x[56] = null;
          l6x[82] = 0;
          l6x[81] = k$f[0][0];
          z7X('Fetching...');
          l6x[4]['scrollTop'] = 0;
          l6x[87] = [
          ];
        }
        if (k$f[0][0] == 'hot') {
          if (l6x[99][l6x[43]] && Date['now']() > l6x[99][l6x[43]]['getTime']) {
            k$f[3] = l6x[99][l6x[43]]['data'];
            N0H(k$f[3]);
            return;
          }
        }
        if (k$f[0][0] != 'search' && k$f[0][0] != 'b2search') {
          l6x[37]['value'] = '';
        }
        if (k$f[0][0] == 'search') {
          l6x[29]['innerHTML'] = 'BONK 1: SEARCH RESULTS';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'hot') {
          l6x[29]['innerHTML'] = 'BONK 1: TOP RATED';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'curated') {
          l6x[29]['innerHTML'] = 'BONK 1: COMMUNITY PICKS';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'curated_arrows') {
          l6x[29]['innerHTML'] = 'B1: ARROW PICKS';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'b2hotgeneral') {
          l6x[29]['innerHTML'] = 'HOT';
          l6x[42]['style']['visibility'] = 'inherit';
        } else if (k$f[0][0] == 'b2hotgrapple') {
          l6x[29]['innerHTML'] = 'B2: GRAPPLE';
          l6x[42]['style']['visibility'] = 'inherit';
        } else if (k$f[0][0] == 'b2hotdeatharrows') {
          l6x[29]['innerHTML'] = 'DEATH ARROWS';
          l6x[42]['style']['visibility'] = 'inherit';
        } else if (k$f[0][0] == 'b2fresh') {
          l6x[29]['innerHTML'] = 'B2: FRESH';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'b2favs') {
          l6x[29]['innerHTML'] = 'MY FAVS';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'b2own') {
          l6x[29]['innerHTML'] = 'MY MAPS';
          l6x[42]['style']['visibility'] = 'hidden';
        } else if (k$f[0][0] == 'b2picks') {
          l6x[29]['innerHTML'] = 'PICKS';
          l6x[42]['style']['visibility'] = 'hidden';
        }
        if (k$f[0][0] == 'b2search') {
          l6x[29]['innerHTML'] = 'SEARCH RESULTS';
          l6x[42]['style']['visibility'] = 'hidden';
          k$f[9] = '';
          k$f[6] = '';
          k$f[4] = '';
          if (l6x[97] == 'BEST') {
            k$f[9] = 'best';
          } else {
            k$f[9] = 'newest';
          }
          if (l6x[33]) {
            k$f[6] = 'true';
          } else {
            k$f[6] = 'false';
          }
          if (l6x[48]) {
            k$f[4] = 'true';
          } else {
            k$f[4] = 'false';
          }
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_getsearch.php', {
            searchauthor: k$f[6],
            searchmapname: k$f[4],
            searchsort: k$f[9],
            searchstring: maploadwindowsearchinput['value'],
            startingfrom: l6x[82] * 32
          }) ['done'](function (n$4, K0f) {
            U3ndn.Y$U();
            var m0n = [
              arguments
            ];
            m0n[8] = r8no$;
            l6x[79] = true;
            if (m0n[0][0]['r'] == 'success') {
              if (m0n[0][0]['r'] == 'success') {
                w10(m0n[0][0]);
                l6x[13] = m0n[0][0]['more'];
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (o1$, B3n, n_a) {
            U3ndn.w30();
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2fresh') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_getfresh.php', {
            startingfrom: l6x[82] * 32
          }) ['done'](function (a3$, N53) {
            var v2i = [
              arguments
            ];
            v2i[1] = r8no$;
            l6x[79] = true;
            if (v2i[0][0]['r'] == 'success') {
              if (v2i[0][0]['r'] == 'success') {
                w10(v2i[0][0]);
                l6x[13] = v2i[0][0]['more'];
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (A_H, M3m, W0h) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2favs') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_getfave.php', {
            token: l6x[6],
            startingfrom: l6x[82] * 32
          }) ['done'](function (B7q, e$I) {
            var I6I = [
              arguments
            ];
            I6I[2] = r8no$;
            l6x[79] = true;
            if (I6I[0][0]['r'] == 'success') {
              if (I6I[0][0]['r'] == 'success') {
                A2Y(I6I[0][0]);
                l6x[13] = I6I[0][0]['more'];
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (b6s, w54, O6p) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2hotedits') {
          U3ndn.S2t(6);
          k$f[1] = U3ndn.E_K(l6x[43], 1);
          U3ndn.z_y(1);
          k$f[56] = U3ndn.I8r(2153, 18);
          U3ndn.S2t(7);
          k$f[12] = U3ndn.E_K(204, 2416, 16, 14);
          k$f[7] = U3ndn.j31(k$f[56]) + k$f[1] + U3ndn.j31(k$f[12]);
          l6x[79] = false;
          $['post'](k$f[7]) ['done'](function (z4V, w5q) {
            var b0L = [
              arguments
            ];
            b0L[5] = r8no$;
            l6x[79] = true;
            b0L[0][0] = JSON['parse'](b0L[0][0]);
            if (b0L[0][0]['r'] == 'success') {
              if (b0L[0][0]['r'] == 'success') {
                l6x[93] = b0L[0][0];
                M89(l6x[93], 0);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (q$l, R0i, l$7) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2hotgeneral' || k$f[0][0] == 'b2hotgrapple' || k$f[0][0] == 'b2hotdeatharrows') {
          U3ndn.z_y(6);
          k$f[5] = U3ndn.I8r(l6x[43], 1);
          k$f[8] = '';
          k$f[33] = 'b';
          if (k$f[0][0] == 'b2hotgeneral') {
            k$f[33] = 'hot';
          }
          if (k$f[0][0] == 'b2hotdeatharrows') {
            k$f[33] = 'ard';
          }
          if (k$f[0][0] == 'b2hotgrapple') {
            k$f[33] = 'sp';
          }
          U3ndn.S2t(1);
          k$f[11] = U3ndn.E_K(46032, 43155);
          U3ndn.S2t(70);
          k$f[50] = U3ndn.I8r(17, 3997, 7967, 3, 4);
          U3ndn.S2t(18);
          k$f[83] = U3ndn.I8r(14, 9, 3, 214);
          k$f[8] = U3ndn.j31(k$f[11]) + k$f[5] + U3ndn.j31(k$f[50]) + k$f[33] + U3ndn.j31(k$f[83]);
          l6x[79] = false;
          $['get'](k$f[8]) ['done'](function (I0N, l7j) {
            var e5T = [
              arguments
            ];
            e5T[3] = r8no$;
            U3ndn.w30();
            l6x[79] = true;
            e5T[0][0] = JSON['parse'](e5T[0][0]);
            if (e5T[0][0]['r'] == 'success') {
              if (e5T[0][0]['r'] == 'success') {
                l6x[89] = e5T[0][0];
                l94(l6x[89], 0);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (X1e, L6l, c0N) {
            U3ndn.w30();
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2picks') {
          k$f[59] = 'https://bonk2.io/scripts/hotmaps/picks.txt';
          l6x[79] = false;
          $['get'](k$f[59]) ['done'](function (c_T, y14) {
            var E4v = [
              arguments
            ];
            E4v[7] = r8no$;
            l6x[79] = true;
            E4v[0][0] = JSON['parse'](E4v[0][0]);
            if (E4v[0][0]['r'] == 'success') {
              if (E4v[0][0]['r'] == 'success') {
                l6x[58] = E4v[0][0];
                d10(l6x[58], 0);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (k8f, b59, B0s) {
            U3ndn.Y$U();
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'b2own') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_getown.php', {
            token: l6x[6],
            startingfrom: l6x[82] * 30
          }) ['done'](function (W59, F2o) {
            var Y5r = [
              arguments
            ];
            U3ndn.w30();
            Y5r[3] = r8no$;
            l6x[79] = true;
            if (Y5r[0][0]['r'] == 'success') {
              if (Y5r[0][0]['r'] == 'success') {
                H$y(Y5r[0][0]);
                l6x[13] = Y5r[0][0]['more'];
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (p4E, F1x, s4Y) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'favs') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_b1_getfave.php', {
            token: l6x[6],
            startingfrom: l6x[82] * 32
          }) ['done'](function (d01, i$x) {
            var e_h = [
              arguments
            ];
            e_h[4] = r8no$;
            l6x[79] = true;
            if (e_h[0][0]['r'] == 'success') {
              if (e_h[0][0]['r'] == 'success') {
                l6x[13] = true;
                e_h[0][0]['maps'] = V_j(e_h[0][0]['maps']);
                N0H(e_h[0][0]['maps']);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (v2u, l0F, q9F) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'authorsown') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_b1_getown.php', {
            token: l6x[6],
            startingfrom: l6x[82] * 32
          }) ['done'](function (E7z, C5l) {
            var x7K = [
              arguments
            ];
            x7K[2] = r8no$;
            U3ndn.w30();
            l6x[79] = true;
            if (x7K[0][0]['r'] == 'success') {
              if (x7K[0][0]['r'] == 'success') {
                l6x[13] = true;
                x7K[0][0]['maps'] = V_j(x7K[0][0]['maps']);
                N0H(x7K[0][0]['maps']);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (F6h, e4h, U_O) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'hot') {
          l6x[79] = false;
          $['post']('https://bonk2.io/scripts/map_b1_getbest.php', {
            startingfrom: l6x[82] * 32
          }) ['done'](function (W7i, a7t) {
            var j04 = [
              arguments
            ];
            U3ndn.Y$U();
            j04[9] = r8no$;
            l6x[79] = true;
            if (j04[0][0]['r'] == 'success') {
              if (j04[0][0]['r'] == 'success') {
                l6x[13] = true;
                j04[0][0]['maps'] = V_j(j04[0][0]['maps']);
                N0H(j04[0][0]['maps']);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (E3e, e6v, Q76) {
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'search') {
          l6x[79] = false;
          k$f[21] = {
          };
          if (l6x[97] == 'BEST') {
            k$f[21]['searchsort'] = 'ctr';
          } else {
            k$f[21]['searchsort'] = 'id';
          }
          if (l6x[33]) {
            k$f[21]['searchauthor'] = 'true';
          } else {
            k$f[21]['searchauthor'] = '';
          }
          if (l6x[48]) {
            k$f[21]['searchmapname'] = 'true';
          } else {
            k$f[21]['searchmapname'] = '';
          }
          U3ndn.S2t(4);
          k$f[21]['startingfrom'] = U3ndn.E_K(32, l6x[82]);
          k$f[21]['searchstring'] = l6x[37]['value'];
          $['post']('https://bonk2.io/scripts/map_b1_getsearch.php', k$f[21]) ['done'](function (P1q, R3_) {
            var P_a = [
              arguments
            ];
            P_a[1] = r8no$;
            l6x[79] = true;
            if (P_a[0][0]['r'] == 'success') {
              if (P_a[0][0]['r'] == 'success') {
                l6x[13] = true;
                P_a[0][0]['maps'] = V_j(P_a[0][0]['maps']);
                N0H(P_a[0][0]['maps']);
              }
            } else {
              z7X('Fetch error');
            }
          }) ['fail'](function (G3w, Y9b, G4c) {
            U3ndn.Y$U();
            [
              arguments
            ];
          });
        } else if (k$f[0][0] == 'curated') {
          k$f[40] = {
          };
          for (k$f[71] = 0; k$f[71] < V6D[66]['mapStrings']['length']; k$f[71]++) {
            k$f[18] = V6D[66]['mapStrings'][k$f[71]]['split'](',');
            U3ndn.S2t(41);
            k$f[95] = U3ndn.E_K(12, 7, 3, 3862);
            k$f[40][U3ndn.j31(k$f[95]) + k$f[71]] = k$f[18][1];
            U3ndn.z_y(27);
            k$f[22] = U3ndn.E_K(12, 2191, 7, 11);
            k$f[40][U3ndn.j31(k$f[22]) + k$f[71]] = k$f[18][2];
            U3ndn.S2t(87);
            k$f[43] = U3ndn.E_K(8, 15, 2904, 2, 43526);
            k$f[40][U3ndn.j31(k$f[43]) + k$f[71]] = k$f[18][3];
            U3ndn.z_y(131);
            k$f[37] = U3ndn.E_K(4212, 1, 9, 468, 4126);
            k$f[40][U3ndn.j31(k$f[37]) + k$f[71]] = k$f[18][4];
          }
          k$f[40]['cant'] = V6D[66]['mapStrings']['length'];
          k$f[40]['getrule'] = 'curated';
          N0H(k$f[40]);
        }
      }
      function H$y(Z9_) {
        var u9K = [
          arguments
        ];
        u9K[9] = r8no$;
        k_5();
        if (u9K[0][0]['maps']['length'] == 0 && l6x[82] == 0) {
          z7X('No Maps');
        }
        for (u9K[4] = 0; u9K[4] < u9K[0][0]['maps']['length']; u9K[4]++) {
          try {
            (function () {
              var y$1 = [
                arguments
              ];
              y$1[9] = r8no$;
              y$1[6] = E['mergeIntoNewMap'](E['decodeFromDatabase'](u9K[0][0]['maps'][u9K[4]]['leveldata']));
              y$1[6]['m']['n'] = u9K[0][0]['maps'][u9K[4]]['name'];
              y$1[6]['m']['a'] = u9K[0][0]['maps'][u9K[4]]['authorname'];
              y$1[6]['m']['dbid'] = parseInt(u9K[0][0]['maps'][u9K[4]]['id']);
              y$1[6]['m']['date'] = u9K[0][0]['maps'][u9K[4]]['creationdate'];
              y$1[6]['m']['vu'] = u9K[0][0]['maps'][u9K[4]]['vu'];
              y$1[6]['m']['vd'] = u9K[0][0]['maps'][u9K[4]]['vd'];
              U3ndn.S2t(6);
              y$1[8] = U3ndn.I8r(344, 4);
              U3ndn.S2t(100);
              y$1[3] = U3ndn.E_K(1418, 75167, 18, 11, 3);
              U3ndn.S2t(1);
              y$1[4] = U3ndn.I8r(11, 10);
              y$1[6]['m']['pub'] = parseInt(u9K[0][0][r8no$[y$1[8]]][u9K[4]][r8no$[y$1[3]]]) == y$1[4];
              y$1[1] = document['createElement']('div');
              y$1[1]['classList']['add']('maploadwindowmapdiv');
              l6x[87]['push']({
                map: y$1[6],
                div: y$1[1]
              });
              u9K[2] = document['createElement']('span');
              u9K[2]['classList']['add']('maploadwindowtext');
              u9K[2]['classList']['add']('maploadwindowtextname');
              u9K[2]['textContent'] = y$1[6]['m']['n'];
              u9K[7] = document['createElement']('span');
              u9K[7]['classList']['add']('maploadwindowtext');
              u9K[7]['classList']['add']('maploadwindowtextmode');
              y$1[5] = 'Any Mode';
              if (V6D[61]['modes'][y$1[6]['m']['mo']] && V6D[61]['modes'][y$1[6]['m']['mo']]['editorCanTarget']) {
                y$1[5] = V6D[61]['modes'][y$1[6]['m']['mo']]['lobbyName'];
              }
              u9K[7]['textContent'] = y$1[5];
              y$1[1]['appendChild'](u9K[7]);
              u9K[1] = document['createElement']('span');
              u9K[1]['classList']['add']('maploadwindowtext');
              u9K[1]['classList']['add']('maploadwindowtextage');
              y$1[7] = '';
              y$1[7] = moment(y$1[6]['m']['date'], 'YYYY-MM-DD HH:mm:ss') ['fromNow']();
              u9K[1]['textContent'] = y$1[7];
              h68(y$1[1], y$1[6]['m']['vu'], y$1[6]['m']['vd']);
              u9K[5] = document['createElement']('span');
              u9K[5]['classList']['add']('maploadwindowtext');
              u9K[5]['classList']['add']('maploadwindowtextpublished');
              if (y$1[6]['m']['pub']) {
                u9K[5]['textContent'] = 'Public';
              } else {
                u9K[5]['textContent'] = 'Private';
              }
              y$1[1]['appendChild'](u9K[5]);
              y$1[1]['appendChild'](u9K[2]);
              y$1[1]['appendChild'](u9K[1]);
              u9K[6] = document['createElement']('div');
              u9K[6]['classList']['add']('maploadwindowdeletebutton');
              u9K[6]['classList']['add']('brownButton');
              u9K[6]['classList']['add']('brownButton_classic');
              u9K[6]['classList']['add']('buttonShadow');
              u9K[6]['textContent'] = 'DELETE';
              u9K[6]['mapDiv'] = y$1[1];
              u9K[6]['onmouseover'] = V6D[67]['bhs'];
              y$1[1]['deleteButton'] = u9K[6];
              u9K[6]['onclick'] = function (u6c) {
                var B_i = [
                  arguments
                ];
                U3ndn.w30();
                B_i[1] = r8no$;
                B_i[0][0]['stopPropagation']();
                V6D[67]['bcs']();
                if (this['textContent'] == 'DELETE') {
                  this['textContent'] = 'SURE?';
                  return;
                } else {
                  $['post']('https://bonk2.io/scripts/map_delete.php', {
                    token: l6x[6],
                    mapid: y$1[6]['m']['dbid']
                  });
                  this['mapDiv']['style']['opacity'] = '0.3';
                  this['mapDiv']['style']['pointerEvents'] = 'none';
                  this['style']['display'] = 'none';
                }
              };
              y$1[1]['appendChild'](u9K[6]);
              l6x[4]['appendChild'](y$1[1]);
              y$1[1]['map'] = y$1[6];
              y$1[1]['onclick'] = function () {
                var o8J = [
                  arguments
                ];
                o8J[3] = r8no$;
                n9a('mapChosen', this['map']);
                l6x[9]['hide']();
                V6D[67]['bcs']();
              };
              y$1[1]['onmouseenter'] = function () {
                var w1B = [
                  arguments
                ];
                U3ndn.Y$U();
                w1B[1] = r8no$;
                this['deleteButton']['style']['visibility'] = 'inherit';
                A1w();
              };
              y$1[1]['onmouseleave'] = function () {
                var A4t = [
                  arguments
                ];
                A4t[9] = r8no$;
                this['deleteButton']['style']['visibility'] = 'hidden';
              };
            }());
          } catch (p7f) {
          }
        }
      }
      var l6x = [
        arguments
      ];
      l6x[7] = r8no$;
      l6x[9] = this;
      this['visible'] = false;
      l6x[2] = document['getElementById']('maploadwindow');
      l6x[5] = document['getElementById']('maploadwindowcontainer');
      l6x[1] = document['getElementById']('maploadwindow_close');
      l6x[3] = document['getElementById']('maploadwindowtoptext');
      l6x[4] = document['getElementById']('maploadwindowmapscontainer');
      l6x[4]['onscroll'] = y2Z;
      l6x[6] = l6x[0][0];
      l6x[8] = document['getElementById']('maploadtypedropdown');
      l6x[29] = document['getElementById']('maploadtypedropdowntitle');
      l6x[90] = document['getElementById']('maploadtypedropdownoption1');
      l6x[70] = document['getElementById']('maploadtypedropdownoption2');
      l6x[74] = document['getElementById']('maploadtypedropdownoption3');
      l6x[73] = document['getElementById']('maploadtypedropdownoption4');
      l6x[50] = document['getElementById']('maploadtypedropdownoption7');
      l6x[16] = document['getElementById']('maploadtypedropdownoption8');
      l6x[95] = document['getElementById']('maploadtypedropdownoption_hotdeatharrows');
      l6x[34] = document['getElementById']('maploadtypedropdownoption10');
      l6x[49] = document['getElementById']('maploadtypedropdownoption11');
      l6x[47] = document['getElementById']('maploadtypedropdownarrow');
      l6x[42] = document['getElementById']('maploadwindowhotnessslider');
      l6x[52] = document['getElementById']('maploadwindowhotnesssliderinput');
      l6x[84] = document['getElementById']('maploadwindowstatustext');
      l6x[37] = document['getElementById']('maploadwindowsearchinput');
      l6x[17] = document['getElementById']('maploadwindowsearchbutton');
      l6x[10] = document['getElementById']('maploadwindowsearchoptions');
      U3ndn.w30();
      l6x[23] = document['getElementById']('maploadwindowsearchoptions_sortby');
      l6x[59] = document['getElementById']('maploadwindowsearchoptions_namelabel');
      l6x[61] = document['getElementById']('maploadwindowsearchoptions_authorlabel');
      l6x[40] = document['getElementById']('maploadwindowsearchoptions_nameindicator');
      l6x[27] = document['getElementById']('maploadwindowsearchoptions_authorindicator');
      l6x[68] = new Howl({
        src: GameResources['soundStrings']['listRowHover'],
        volume: 0.25
      });
      V6D[67]['setButtonSounds']([l6x[17],
      l6x[29],
      l6x[90],
      l6x[70],
      l6x[74],
      l6x[73],
      l6x[50],
      l6x[16],
      l6x[34],
      l6x[49],
      l6x[95]]);
      l6x[80] = [
      ];
      l6x[24] = [
      ];
      l6x[32] = true;
      l6x[43] = 3;
      l6x[18] = [
        1,
        10000,
        25000,
        100000,
        500000,
        8000000,
        5000000000
      ];
      U3ndn.z_y(2);
      l6x[11] = [
        U3ndn.I8r(1, 60, 1000),
        U3ndn.E_K(3, 60, 1000),
        U3ndn.I8r(7, 60, 1000),
        U3ndn.E_K(13, 60, 1000),
        U3ndn.E_K(30, 60, 1000),
        U3ndn.I8r(56, 60, 1000),
        U3ndn.E_K(90, 60, 1000)
      ];
      l6x[99] = [
      ];
      l6x[87] = [
      ];
      l6x[89] = {
      };
      l6x[93] = {
      };
      l6x[58] = {
      };
      l6x[97] = 'BEST';
      l6x[33] = true;
      l6x[48] = true;
      U3ndn.z_y(97);
      l6x[94] = U3ndn.E_K(14, 20, 942, 4);
      l6x[23]['textContent'] = U3ndn.j31(l6x[94]) + l6x[97];
      l6x[40]['classList']['add']('maploadwindowoptionselected');
      l6x[27]['classList']['add']('maploadwindowoptionselected');
      l6x[82] = 0;
      l6x[19] = 60;
      l6x[67] = false;
      l6x[92] = 0;
      l6x[79] = true;
      l6x[13] = false;
      l6x[81] = 'b2picks';
      l6x[1]['onmouseover'] = V6D[67]['bhs'];
      l6x[1]['onmousedown'] = V6D[67]['bbs'];
      l6x[1]['onclick'] = function () {
        var J17 = [
          arguments
        ];
        U3ndn.w30();
        J17[9] = r8no$;
        l6x[9]['hide']();
      };
      l6x[37]['value'] = '';
      l6x[10]['style']['visibility'] = 'hidden';
      l6x[23]['onclick'] = function () {
        var F_B = [
          arguments
        ];
        U3ndn.w30();
        F_B[9] = 2005287565;
        F_B[3] = - 174757910;
        F_B[1] = 2;
        for (F_B[4] = 1; U3ndn.P5V(F_B[4].toString(), F_B[4].toString().length, 61653) !== F_B[9]; F_B[4]++) {
          F_B[6] = r8no$;
          F_B[1] += 2;
        }
        if (U3ndn.P5V(F_B[1].toString(), F_B[1].toString().length, 35876) !== F_B[3]) {
          F_B[6] = r8no$;
        }
        if (l6x[97] == 'BEST') {
          l6x[97] = 'NEWEST';
        } else {
          l6x[97] = 'BEST';
        }
        U3ndn.S2t(128);
        F_B[7] = U3ndn.E_K(12092, 14, 930, 14, 2);
        l6x[23]['textContent'] = U3ndn.j31(F_B[7]) + l6x[97];
        V6D[67]['rlc']();
      };
      l6x[59]['onclick'] = function () {
        var W0U = [
          arguments
        ];
        W0U[5] = r8no$;
        l6x[48] = !l6x[48];
        U3ndn.Y$U();
        if (!l6x[48] && !l6x[33]) {
          l6x[48] = true;
        }
        if (l6x[48]) {
          l6x[40]['classList']['add']('maploadwindowoptionselected');
        } else {
          l6x[40]['classList']['remove']('maploadwindowoptionselected');
        }
        V6D[67]['rlc']();
      };
      l6x[61]['onclick'] = function () {
        var D6N = [
          arguments
        ];
        D6N[7] = r8no$;
        U3ndn.w30();
        l6x[33] = !l6x[33];
        if (!l6x[48] && !l6x[33]) {
          l6x[33] = true;
        }
        if (l6x[33]) {
          l6x[27]['classList']['add']('maploadwindowoptionselected');
        } else {
          l6x[27]['classList']['remove']('maploadwindowoptionselected');
        }
        V6D[67]['rlc']();
      };
      l6x[37]['oninput'] = function () {
        var B59 = [
          arguments
        ];
        U3ndn.w30();
        B59[3] = r8no$;
        l6x[10]['style']['visibility'] = 'inherit';
        l6x[42]['style']['visibility'] = 'hidden';
      };
      l6x[17]['onclick'] = function () {
        U3ndn.Y$U();
        L1t();
      };
      this['enterKeySearch'] = function () {
        L1t();
      };
      this['enterKeyUnknown'] = function () {
        var n0K = [
          arguments
        ];
        n0K[7] = r8no$;
        if (document['activeElement'] == document['getElementById']('maploadwindowsearchinput')) {
          L1t();
          return true;
        }
        return false;
      };
      this['hide'] = function () {
        var S_5 = [
          arguments
        ];
        S_5[5] = r8no$;
        this['visible'] = false;
        anime({
          targets: l6x[5],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var i7d = [
              arguments
            ];
            i7d[1] = r8no$;
            l6x[5]['style']['display'] = 'none';
            l6x[5]['style']['opacity'] = '1';
          }
        });
        l6x[2]['style']['resize'] = 'none';
        l6x[29]['onclick'] = null;
        l6x[90]['onclick'] = null;
        l6x[70]['onclick'] = null;
        L9z();
        V6D[67]['enterFrameDispatcher']['unsubscribe'](O53, 5);
      };
      this['show'] = function (L2C, r44 = '') {
        var p7v = [
          arguments
        ];
        p7v[4] = r8no$;
        this['visible'] = true;
        l6x[5]['style']['display'] = 'block';
        l6x[2]['style']['resize'] = 'both';
        l6x[32] = true;
        l6x[29]['onclick'] = X3O;
        l6x[90]['onclick'] = R05;
        l6x[70]['onclick'] = R05;
        l6x[74]['onclick'] = R05;
        l6x[73]['onclick'] = R05;
        l6x[50]['onclick'] = R05;
        l6x[16]['onclick'] = R05;
        l6x[34]['onclick'] = R05;
        l6x[49]['onclick'] = R05;
        l6x[95]['onclick'] = R05;
        if (V6D[67]['guest']) {
          l6x[74]['classList']['add']('dropdown-option-disabled');
          l6x[73]['classList']['add']('dropdown-option-disabled');
          l6x[50]['classList']['add']('dropdown-option-disabled');
          l6x[34]['classList']['add']('dropdown-option-disabled');
        } else {
          l6x[74]['classList']['remove']('dropdown-option-disabled');
          l6x[73]['classList']['remove']('dropdown-option-disabled');
          l6x[50]['classList']['remove']('dropdown-option-disabled');
          l6x[34]['classList']['remove']('dropdown-option-disabled');
        }
        l6x[52]['onchange'] = function (A8v) {
          var U6T = [
            arguments
          ];
          U6T[7] = r8no$;
          U3ndn.z_y(178);
          U6T[3] = U3ndn.E_K(4, 735, 3, 12);
          U3ndn.z_y(6);
          U6T[5] = U3ndn.I8r(0, 1);
          l6x[43] = this[r8no$[U6T[3]]] - U6T[5];
          f9_(l6x[81], true);
        };
        l6x[52]['onmouseenter'] = V6D[67]['bhs'];
        l6x[47]['style']['visibility'] = 'inherit';
        l6x[2]['style']['left'] = '';
        l6x[2]['style']['top'] = '';
        L9z();
        if (r44 == '') {
          if (l6x[67] == false || l6x[81] == 'b2own' || p7v[0][0]) {
            f9_(l6x[81], true);
          }
        } else {
          f9_(r44, true);
        }
        V6D[67]['enterFrameDispatcher']['subscribe'](5, O53);
        l6x[2]['style']['opacity'] = '0';
        anime({
          targets: l6x[2],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
      };
      this['doSearch'] = L1t;
      l6x[78] = [
      ];
      this['on'] = function (W9U, T6D) {
        var w_h = [
          arguments
        ];
        U3ndn.w30();
        w_h[2] = r8no$;
        l6x[78]['push']({
          eventName: w_h[0][0],
          callback: w_h[0][1]
        });
      };
      this['off'] = function (J5r, g22) {
        var Q1A = [
          arguments
        ];
        Q1A[5] = r8no$;
        if (!l6x[78]) {
          return;
        }
        for (Q1A[1] = 0; Q1A[1] < l6x[78]['length']; Q1A[1]++) {
          if (l6x[78][Q1A[1]]['eventName'] == Q1A[0][0] && l6x[78][Q1A[1]]['callback'] == Q1A[0][1]) {
            l6x[78]['splice'](Q1A[1], 1);
            return;
          }
        }
      };
      this['destroy'] = function () {
        var i$J = [
          arguments
        ];
        i$J[3] = r8no$;
        l6x[9]['hide']();
        l6x[78] = null;
        V6D[67]['enterFrameDispatcher']['unsubscribe'](O53);
        l6x[87] = [
        ];
      };
    }
    V6D[67]['colors']['push'](12434877);
    V6D[67]['colors']['push'](10395294);
    V6D[67]['colors']['push'](7697781);
    V6D[67]['colors']['push'](6381921);
    V6D[67]['colors']['push'](4342338);
    V6D[67]['colors']['push'](2171169);
    V6D[67]['colors']['push'](0);
    V6D[67]['colors']['push'](1752220);
    V6D[67]['colors']['push'](4492031);
    V6D[67]['colors']['push'](13840175);
    V6D[67]['version'] = 44;
    V6D[67]['mapVersion'] = 13;
    V6D[67]['upVotes'] = [
    ];
    V6D[67]['downVotes'] = [
    ];
    V6D[67]['server'] = 'river1';
    V6D[67]['quickMode'] = 'bonkquick';
    V6D[67]['quickExcludeAddresses'] = [
    ];
    V6D[67]['avatar'] = new V6D[30];
    V6D[67]['avatar']['randomBC'](V6D[67]);
    V6D[67]['allAvatars'] = [
      new V6D[30],
      new V6D[30],
      new V6D[30],
      new V6D[30],
      new V6D[30]
    ];
    V6D[67]['allAvatars'][0] = V6D[67]['avatar'];
    V6D[67]['activeAvatarNumber'] = 0;
    function Q() {
    }
    V6D[67]['lat'] = 0;
    V6D[67]['long'] = 0;
    V6D[67]['country'] = 'na';
    V6D[67]['dbid'] = 0;
    function D_() {
      function j$u() {
        var Q6Q = [
          arguments
        ];
        Q6Q[4] = r8no$;
        Q6Q[5] = M96[67]['value'];
        b$h();
        n7E(null, Q6Q[5]);
      }
      function Y7J() {
        var P4X = [
          arguments
        ];
        P4X[3] = r8no$;
        M96[37]['style']['pointerEvents'] = 'none';
        anime({
          targets: M96[90],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var l2Q = [
              arguments
            ];
            U3ndn.w30();
            l2Q[3] = r8no$;
            M96[90]['style']['visibility'] = 'hidden';
            M96[37]['style']['pointerEvents'] = 'auto';
          }
        });
        M96[36]['enableMouseEvents']();
      }
      function k0Q(...c9d) {
        var A1F = [
          arguments
        ];
        A1F[5] = r8no$;
        A1F[3] = c9d['shift']();
        for (A1F[1] = 0; A1F[1] < M96[18]['length']; A1F[1]++) {
          if (M96[18][A1F[1]]['eventName'] == A1F[3]) {
            M96[18][A1F[1]]['callback'](...c9d);
          }
        }
      }
      function Y3g() {
        var e9H = [
          arguments
        ];
        e9H[4] = r8no$;
        R52();
        for (e9H[98] = 0; e9H[98] < M96[8]['length']; e9H[98]++) {
          if (M96[8][e9H[98]]) {
            if (M96[1][M96[8][e9H[98]]['id']]) {
              M96[8][e9H[98]]['friends'] = M96[1][M96[8][e9H[98]]['id']];
            }
            M96[8][e9H[98]]['distance'] = V6D[67]['getLatLngDistance'](V6D[67]['lat'], V6D[67]['long'], M96[8][e9H[98]]['latitude'], M96[8][e9H[98]]['longitude'], V6D[67]['country'] == 'GB' || V6D[67]['country'] == 'US');
            M96[8][e9H[98]]['distanceSort'] = M96[8][e9H[98]]['distance'];
            if (M96[8][e9H[98]]['friends']) {
              M96[8][e9H[98]]['distanceSort'] -= 99999;
            }
            if (M96[23][M96[8][e9H[98]]['id']]) {
              M96[8][e9H[98]]['alreadyJoined'] = true;
            }
          }
        }
        M96[8]['sort'](function (A22, c6G) {
          var S8d = [
            arguments
          ];
          U3ndn.Y$U();
          S8d[7] = r8no$;
          if (S8d[0][0]['distanceSort'] > S8d[0][1]['distanceSort']) {
            return 1;
          } else if (S8d[0][1]['distanceSort'] > S8d[0][0]['distanceSort']) {
            return - 1;
          } else {
            return 0;
          }
        });
        e9H[1] = - 1;
        a: for (e9H[98] = 0; e9H[98] < M96[8]['length']; e9H[98]++) {
          if (M96[76]['checked'] == true) {
            if (M96[8][e9H[98]]['password'] == 1) {
              continue;
            }
          }
          for (e9H[95] in M96[3]) {
            if (M96[8][e9H[98]]['mode_mo'] == e9H[95] && M96[3][e9H[95]] == false && !M96[8][e9H[98]]['friends']) {
              continue a;
            }
          }
          e9H[9] = '';
          if (M96[8][e9H[98]]['mode_ga'] == 'b' || M96[8][e9H[98]]['mode_ga'] == 'f') {
            if (V6D[61]['modes'][M96[8][e9H[98]]['mode_mo']]) {
              e9H[9] = V6D[61]['modes'][M96[8][e9H[98]]['mode_mo']]['lobbyName'];
            } else {
              continue;
            }
          } else {
            continue;
          }
          if (V6D[67]['filterOn']) {
            if (!M96[8][e9H[98]]['friends']) {
              if (M96[8][e9H[98]]['mode_mo'] != V6D[67]['filterMode']) {
                continue;
              }
            }
          }
          e9H[1]++;
          e9H[3] = M96[2]['insertRow']();
          e9H[3]['onmouseover'] = function () {
            U3ndn.Y$U();
            var B_c = [
              arguments
            ];
            B_c[9] = r8no$;
            V6D[67]['rlh'](this['getAttribute']('data-myID'));
          };
          e9H[3]['setAttribute']('data-myID', e9H[98]);
          e9H[3]['classList']['add']('HOVERUNSELECTED');
          e9H[3]['classList']['add']('UNSELECTED');
          if (M96[8][e9H[98]]['friends']) {
            e9H[3]['classList']['add']('FRIENDSPRESENT');
            e9H[3]['onmouseover'] = function (w21) {
              var d9A = [
                arguments
              ];
              d9A[3] = r8no$;
              d9A[6] = this['getAttribute']('data-myID');
              U3ndn.w30();
              g62(d9A[0][0], d9A[6]);
              V6D[67]['rlh'](this['getAttribute']('data-myID'));
            };
            e9H[3]['onmouseout'] = x7q;
          }
          e9H[3]['onclick'] = M7Y;
          e9H[3]['ondblclick'] = D_W;
          if (e9H[1] <= 25) {
            e9H[3]['style']['opacity'] = '0';
          }
          e9H[7] = e9H[3]['insertCell'](0);
          e9H[3]['cell1'] = e9H[7];
          e9H[6] = e9H[3]['insertCell'](1);
          e9H[8] = e9H[3]['insertCell'](2);
          e9H[5] = e9H[3]['insertCell'](3);
          e9H[2] = e9H[3]['insertCell'](4);
          e9H[18] = e9H[3]['insertCell'](5);
          e9H[58] = e9H[3]['insertCell'](6);
          e9H[7]['style']['width'] = '30%';
          e9H[7]['style']['overflow'] = 'hidden';
          e9H[6]['style']['width'] = '13%';
          e9H[8]['style']['width'] = '19%';
          e9H[2]['style']['width'] = '14%';
          e9H[5]['style']['width'] = '10%';
          e9H[7]['textContent'] = M96[8][e9H[98]]['roomname'];
          if (M96[8][e9H[98]]['alreadyJoined']) {
            w_8(e9H[7]);
          }
          e9H[7]['style']['textAlign'] = 'left';
          e9H[7]['style']['paddingLeft'] = '6px';
          U3ndn.z_y(115);
          e9H[71] = U3ndn.E_K(5808, 8, 118, 2178);
          U3ndn.S2t(17);
          e9H[68] = U3ndn.E_K(465, 26, 12);
          U3ndn.S2t(65);
          e9H[57] = U3ndn.E_K(19, 1167, 3, 751);
          e9H[6]['textContent'] = M96[8][e9H[98]][r8no$[e9H[71]]] + U3ndn.j31(e9H[68]) + M96[8][e9H[98]][r8no$[e9H[57]]];
          e9H[8]['textContent'] = e9H[9];
          if (M96[8][e9H[98]]['minlevel'] == 0 && M96[8][e9H[98]]['maxlevel'] == 999) {
            e9H[2]['textContent'] = 'Any level';
          } else if (M96[8][e9H[98]]['minlevel'] == 0 && M96[8][e9H[98]]['maxlevel'] != 0) {
            U3ndn.S2t(17);
            e9H[97] = U3ndn.E_K(1823, 96, 2);
            U3ndn.z_y(9);
            e9H[72] = U3ndn.I8r(1172, 16419, 15);
            e9H[2]['textContent'] = U3ndn.j31(e9H[97]) + M96[8][e9H[98]][r8no$[e9H[72]]];
          } else if (M96[8][e9H[98]]['minlevel'] != 0 && M96[8][e9H[98]]['maxlevel'] == 999) {
            U3ndn.S2t(15);
            e9H[66] = U3ndn.E_K(13, 3417, 5);
            U3ndn.S2t(1);
            e9H[83] = U3ndn.E_K(8120, 6960);
            e9H[2]['textContent'] = U3ndn.j31(e9H[66]) + M96[8][e9H[98]][r8no$[e9H[83]]];
          } else {
            U3ndn.z_y(67);
            e9H[39] = U3ndn.E_K(5, 1159, 16240, 3245, 15);
            U3ndn.S2t(44);
            e9H[64] = U3ndn.E_K(4, 1, 0, 2999);
            U3ndn.S2t(90);
            e9H[94] = U3ndn.I8r(20, 13, 1128, 2322);
            e9H[2]['textContent'] = M96[8][e9H[98]][r8no$[e9H[39]]] + U3ndn.j31(e9H[64]) + M96[8][e9H[98]][r8no$[e9H[94]]];
          }
          if (V6D[67]['country'] == 'GB' || V6D[67]['country'] == 'US') {
            U3ndn.z_y(26);
            e9H[96] = U3ndn.E_K(16, 12540, 224868, 18);
            U3ndn.S2t(15);
            e9H[32] = U3ndn.E_K(15, 58806, 55554);
            e9H[18]['textContent'] = M96[8][e9H[98]][r8no$[e9H[96]]] + U3ndn.j31(e9H[32]);
          } else {
            U3ndn.z_y(65);
            e9H[34] = U3ndn.I8r(6, 1156, 289, 1130);
            U3ndn.S2t(73);
            e9H[73] = U3ndn.I8r(5, 9665, 0);
            e9H[18]['textContent'] = M96[8][e9H[98]][r8no$[e9H[34]]] + U3ndn.j31(e9H[73]);
          }
          e9H[18]['style']['textAlign'] = 'right';
          e9H[18]['style']['width'] = '9%';
          e9H[92] = M96[8][e9H[98]]['country']['toLowerCase']();
          if (M96[29][e9H[92]]) {
            e9H[33] = document['createElement']('img');
            U3ndn.S2t(179);
            e9H[25] = U3ndn.E_K(287, 10, 15, 259, 272);
            U3ndn.S2t(1);
            e9H[78] = U3ndn.E_K(3318, 19);
            e9H[33]['src'] = U3ndn.j31(e9H[25]) + e9H[92] + U3ndn.j31(e9H[78]);
            e9H[33]['style']['marginLeft'] = '4px';
            e9H[58]['appendChild'](e9H[33]);
          }
          e9H[58]['style']['width'] = '3%';
          e9H[58]['style']['textAlign'] = 'left';
          if (M96[8][e9H[98]]['password'] == 1) {
            e9H[50] = document['createElement']('img');
            e9H[50]['src'] = 'graphics/lock.png';
            e9H[50]['style']['marginTop'] = '4px';
            e9H[5]['appendChild'](e9H[50]);
          }
        }
        setTimeout(function () {
          var g_y = [
            arguments
          ];
          U3ndn.Y$U();
          g_y[2] = r8no$;
          for (g_y[4] = 0; g_y[7] = M96[2]['rows'][g_y[4]]; g_y[4]++) {
            if (g_y[4] > 25) {
              break;
            }
            anime({
              targets: g_y[7],
              opacity: '1',
              autoplay: true,
              duration: 100,
              delay: 6 * g_y[4],
              easing: 'easeOutCubic'
            });
          }
        }, 1);
        if (M96[8]['length'] == 0) {
          M96[26]['style']['visibility'] = 'inherit';
          M96[26]['textContent'] = 'There are currently no rooms!';
        } else if (e9H[1] == - 1) {
          M96[26]['style']['visibility'] = 'inherit';
          M96[26]['textContent'] = 'No rooms matching your search';
        } else {
          M96[26]['style']['visibility'] = 'hidden';
        }
      }
      function K5L() {
        var L_M = [
          arguments
        ];
        L_M[4] = r8no$;
        M96[90]['style']['visibility'] = 'visible';
        M96[36]['disableMouseEvents']();
        M96[57]['checked'] = false;
        U3ndn.S2t(7);
        L_M[7] = U3ndn.E_K(8520, 84432, 20, 10);
        M96[74]['value'] = V6D[67][r8no$[L_M[7]]] + '\'s game';
        M96[10]['value'] = 6;
        M96[90]['style']['opacity'] = '0';
        L_M[5] = anime({
          targets: M96[90],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
      }
      function M7Y() {
        function l0H(E3I, w1I, X1O) {
          var y$E = [
            arguments
          ];
          y$E[1] = r8no$;
          U3ndn.S2t(64);
          y$E[5] = U3ndn.I8r(2049, 1, 2040, 683);
          U3ndn.z_y(67);
          y$E[9] = U3ndn.E_K(1, 1164, 15145, 15134, 11);
          y$E[4] = new RegExp(U3ndn.j31(y$E[5]) + y$E[0][1] + U3ndn.j31(y$E[9]), 'g');
          y$E[0][0]['className'] = y$E[0][0]['className']['replace'](y$E[4], y$E[0][2]);
        }
        var I4f = [
          arguments
        ];
        U3ndn.w30();
        I4f[1] = r8no$;
        if (M96[70] !== undefined) {
          l0H(M96[70], 'HOVERSELECTED', ' HOVERUNSELECTED');
          l0H(M96[70], 'SELECTED', ' UNSELECTED');
        }
        l0H(this, 'HOVERUNSELECTED', ' HOVERSELECTED');
        l0H(this, 'UNSELECTED', ' SELECTED');
        M96[32] = this['getAttribute']('data-myID');
        M96[63] = this['cell1'];
        M96[70] = this;
        V6D[67]['rlc']();
      }
      function s5F() {
        var S_0 = [
          arguments
        ];
        S_0[3] = r8no$;
        S_0[6] = 0;
        if (M96[57]['checked']) {
          S_0[6] = 1;
        }
        Y7J();
        k0Q('create', {
          roomName: M96[74]['value'],
          password: M96[46]['value'],
          maxPlayers: parseInt(M96[10]['value']),
          minLevel: parseInt(M96[47]['value']),
          maxLevel: parseInt(M96[33]['value']),
          hidden: S_0[6]
        });
      }
      function D_W() {
        U3ndn.Y$U();
        n7E();
      }
      function f7p() {
        U3ndn.Y$U();
        var c14 = [
          arguments
        ];
        c14[3] = r8no$;
        M96[50] = Date['now']();
        R52();
        M96[26]['style']['visibility'] = 'inherit';
        M96[26]['textContent'] = 'Getting rooms...';
        M96[32] = undefined;
        M96[70] = undefined;
        c14[5] = 'n';
        if (V6D[67]['lat'] == 0 || V6D[67]['long'] == 0) {
          c14[5] = 'y';
        }
        $['post']('https://bonk2.io/scripts/getrooms.php', {
          version: V6D[67]['version'],
          gl: c14[5],
          token: M96[85]
        }) ['done'](function (l4H, E7x) {
          var t2H = [
            arguments
          ];
          t2H[1] = r8no$;
          U3ndn.w30();
          V6D[67]['deactivateButtonSpinner'](M96[35]);
          t2H[3] = t2H[0][0];
          M96[8] = t2H[3]['rooms'];
          M96[1] = {
          };
          if (t2H[3]['friends']) {
            for (t2H[9] = 0; t2H[9] < t2H[3]['friends']['length']; t2H[9]++) {
              t2H[5] = t2H[3]['friends'][t2H[9]]['roomid'];
              t2H[8] = t2H[3]['friends'][t2H[9]]['name'];
              if (!M96[1][t2H[5]]) {
                M96[1][t2H[5]] = [
                ];
              }
              M96[1][t2H[5]]['push'](t2H[8]);
            }
          }
          if (t2H[3]['lat'] != '') {
            V6D[67]['lat'] = t2H[3]['lat'];
          }
          if (t2H[3]['long'] != '') {
            V6D[67]['long'] = t2H[3]['long'];
          }
          if (t2H[3]['city'] != '') {
            V6D[67]['city'] = t2H[3]['city'];
          }
          if (t2H[3]['country'] != '') {
            V6D[67]['country'] = t2H[3]['country'];
          }
          if (t2H[3]['createserver'] != '') {
            V6D[67]['server'] = t2H[3]['createserver'];
          }
          Y3g();
        }) ['fail'](function (h3P, X8N, U5$) {
          var k_v = [
            arguments
          ];
          k_v[5] = r8no$;
          M96[26]['textContent'] = 'Couldn\'t get rooms, please try again';
          V6D[67]['deactivateButtonSpinner'](M96[35]);
        });
      }
      function L6Y() {
        var S7E = [
          arguments
        ];
        S7E[9] = r8no$;
        S7E[8] = 0;
        for (S7E[2] in M96[3]) {
          if (M96[3][S7E[2]] == false) {
            S7E[8]++;
          }
        }
        if (S7E[8] == 0) {
          M96[34]['textContent'] = 'FILTER MODES';
        } else if (S7E[8] == 1) {
          M96[34]['textContent'] = '1 MODE FILTERED';
        } else {
          U3ndn.z_y(6);
          S7E[4] = U3ndn.I8r(1000, 1000);
          M96[34]['textContent'] = S7E[8] + U3ndn.j31(S7E[4]);
        }
      }
      function w_8(V49) {
        var I8$ = [
          arguments
        ];
        I8$[3] = r8no$;
        U3ndn.w30();
        if (I8$[0][0]['childElementCount'] == 1) {
          return;
        }
        I8$[7] = document['createElement']('span');
        I8$[7]['textContent'] = 'JOINED';
        I8$[0][0]['appendChild'](I8$[7]);
        I8$[7]['classList']['add']('roomlisttablejoined');
      }
      function A6e() {
        var H7h = [
          arguments
        ];
        H7h[4] = r8no$;
        M96[60]['style']['display'] = 'none';
        L6Y();
        Y3g();
      }
      function s3J(c7m) {
        var k6q = [
          arguments
        ];
        k6q[1] = r8no$;
        if (k6q[0][0]['keyCode'] === 13) {
          k6q[0][0]['preventDefault']();
          j$u();
        }
      }
      function R52() {
        U3ndn.Y$U();
        var H3D = [
          arguments
        ];
        H3D[5] = r8no$;
        while (M96[2]['rows']['length'] > 0) {
          M96[2]['deleteRow'](0);
        }
      }
      function R6Y() {
        var R79 = [
          arguments
        ];
        R79[6] = r8no$;
        M96[99]['style']['visibility'] = 'visible';
        M96[99]['style']['opacity'] = 0;
        R79[8] = anime({
          targets: M96[99],
          opacity: '1',
          autoplay: true,
          duration: 250,
          easing: 'easeOutCubic'
        });
        U3ndn.Y$U();
        M96[36]['disableMouseEvents']();
        M96[67]['value'] = '';
        M96[67]['focus']();
      }
      function x7q() {
        var l8B = [
          arguments
        ];
        l8B[3] = r8no$;
        M96[5]['style']['visibility'] = 'hidden';
      }
      function g62(b6g, V8C) {
        var S0u = [
          arguments
        ];
        S0u[9] = r8no$;
        M96[5]['style']['visibility'] = 'inherit';
        S0u[2] = M96[8][S0u[0][1]]['friends'];
        M96[15]['textContent'] = '';
        for (S0u[4] = 0; S0u[4] < S0u[2]['length']; S0u[4]++) {
          U3ndn.z_y(206);
          S0u[8] = U3ndn.E_K(14602, 13551, 1, 8);
          M96[15]['textContent'] += S0u[2][S0u[4]] + U3ndn.j31(S0u[8]);
        }
        if (M96[5]['parentNode']) {
          M96[5]['parentNode']['removeChild'](M96[5]);
        }
        S0u[0][0]['target']['appendChild'](M96[5]);
      }
      function b$h() {
        var J8W = [
          arguments
        ];
        J8W[7] = r8no$;
        M96[83]['style']['pointerEvents'] = 'none';
        anime({
          targets: M96[99],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var m5V = [
              arguments
            ];
            m5V[6] = r8no$;
            U3ndn.w30();
            M96[99]['style']['visibility'] = 'hidden';
            M96[83]['style']['pointerEvents'] = 'auto';
          }
        });
        M96[36]['enableMouseEvents']();
      }
      function M0b() {
        var P1_ = [
          arguments
        ];
        P1_[5] = r8no$;
        Y7J();
        U3ndn.Y$U();
        V6D[67]['bbs']();
      }
      function n7E(J3A, Q7E) {
        var W3$ = [
          arguments
        ];
        W3$[9] = r8no$;
        if (M96[32] == undefined) {
          return;
        }
        if (M96[8][M96[32]]['password'] == 1 && W3$[0][1] == undefined) {
          R6Y();
          return;
        }
        M96[23][M96[8][M96[32]]['id']] = true;
        w_8(M96[63]);
        k0Q('joinRoom', M96[8][M96[32]]['id'], W3$[0][1]);
      }
      var M96 = [
        arguments
      ];
      M96[7] = r8no$;
      this['visible'] = false;
      M96[8] = [
      ];
      M96[1] = {
      };
      M96[3] = {
        b: true,
        ar: true,
        ard: true,
        sp: true,
        f: true
      };
      M96[9] = document['getElementById']('roomlist');
      M96[4] = document['getElementById']('roomlist_close');
      M96[4]['onmousedown'] = V6D[67]['bbs'];
      M96[4]['onmouseover'] = V6D[67]['bhs'];
      M96[4]['onclick'] = function () {
        var i6X = [
          arguments
        ];
        i6X[8] = r8no$;
        M96[36]['hide']();
      };
      M96[6] = document['getElementById']('roomListContainer');
      M96[2] = document['getElementById']('roomlisttable');
      M96[5] = document['getElementById']('friendsToolTip');
      M96[15] = document['getElementById']('friendsToolTip_list');
      M96[34] = document['getElementById']('roomlistfilterbutton');
      M96[34]['onmousedown'] = V6D[67]['bcs'];
      M96[34]['onmouseover'] = V6D[67]['bhs'];
      M96[60] = document['getElementById']('roomlistfilterwindow');
      M96[16] = document['getElementById']('roomlistfilterwindow_close');
      M96[16]['onmousedown'] = V6D[67]['bcs'];
      M96[16]['onmouseover'] = V6D[67]['bhs'];
      M96[55] = document['getElementById']('roomlistfilterwindow_check_classic');
      M96[78] = document['getElementById']('roomlistfilterwindow_check_arrows');
      M96[86] = document['getElementById']('roomlistfilterwindow_check_deatharrows');
      M96[53] = document['getElementById']('roomlistfilterwindow_check_grapple');
      M96[28] = document['getElementById']('roomlistfilterwindow_check_football');
      M96[90] = document['getElementById']('roomlistcreatewindowcontainer');
      M96[48] = document['getElementById']('roomlist_create_close');
      M96[76] = document['getElementById']('roomlisthidepasswordedcheckbox');
      M96[26] = document['getElementById']('roomliststatustext');
      M96[99] = document['getElementById']('roomlistjoinpasswordwindowcontainer');
      M96[67] = document['getElementById']('roomlistjoinpasswordtext');
      M96[83] = document['getElementById']('roomlistpassjoinbutton');
      M96[65] = document['getElementById']('roomlistpasscancelbutton');
      M96[35] = document['getElementById']('roomlistrefreshbutton');
      M96[35]['onmousedown'] = V6D[67]['bcs'];
      M96[35]['onmouseover'] = V6D[67]['bhs'];
      M96[61] = document['getElementById']('roomlistjoinbutton');
      M96[61]['onmousedown'] = V6D[67]['bcs'];
      M96[61]['onmouseover'] = V6D[67]['bhs'];
      M96[80] = document['getElementById']('roomlistcreatebutton');
      M96[80]['onmousedown'] = V6D[67]['bcs'];
      M96[80]['onmouseover'] = V6D[67]['bhs'];
      M96[85] = '';
      M96[23] = [
      ];
      M96[64] = [
      ];
      M96[76]['onchange'] = Y3g;
      this['showingConnectingWindow'] = false;
      M96[36] = this;
      M96[50] = 0;
      M96[25] = 60000;
      M96[67]['addEventListener']('keyup', s3J);
      M96[83]['onclick'] = j$u;
      M96[83]['onmousedown'] = V6D[67]['bcs'];
      M96[83]['onmouseover'] = V6D[67]['bhs'];
      M96[65]['onclick'] = b$h;
      M96[65]['onmousedown'] = V6D[67]['bcs'];
      M96[65]['onmouseover'] = V6D[67]['bhs'];
      M96[22] = '';
      M96[35]['onclick'] = function () {
        var u02 = [
          arguments
        ];
        U3ndn.Y$U();
        u02[8] = r8no$;
        V6D[67]['activateButtonSpinner'](M96[35]);
        f7p();
      };
      M96[34]['onclick'] = function () {
        var u0i = [
          arguments
        ];
        u0i[5] = r8no$;
        if (M96[60]['style']['display'] == 'block') {
          A6e();
        } else {
          M96[60]['style']['display'] = 'block';
          M96[55]['checked'] = M96[3]['b'];
          M96[78]['checked'] = M96[3]['ar'];
          M96[86]['checked'] = M96[3]['ard'];
          M96[53]['checked'] = M96[3]['sp'];
          M96[28]['checked'] = M96[3]['f'];
        }
      };
      M96[16]['onclick'] = A6e;
      M96[55]['onchange'] = function () {
        var k$k = [
          arguments
        ];
        k$k[5] = r8no$;
        M96[3]['b'] = this['checked'];
        V6D[67]['rlc']();
      };
      M96[78]['onchange'] = function () {
        var b52 = [
          arguments
        ];
        b52[9] = r8no$;
        M96[3]['ar'] = this['checked'];
        V6D[67]['rlc']();
      };
      M96[86]['onchange'] = function () {
        var Y2r = [
          arguments
        ];
        Y2r[5] = r8no$;
        U3ndn.w30();
        M96[3]['ard'] = this['checked'];
        V6D[67]['rlc']();
      };
      M96[53]['onchange'] = function () {
        var q3c = [
          arguments
        ];
        q3c[8] = r8no$;
        M96[3]['sp'] = this['checked'];
        V6D[67]['rlc']();
      };
      M96[28]['onchange'] = function () {
        var V$R = [
          arguments
        ];
        V$R[6] = r8no$;
        M96[3]['f'] = this['checked'];
        V6D[67]['rlc']();
      };
      M96[61]['onclick'] = n7E;
      M96[80]['onclick'] = K5L;
      this['recvToken'] = function (l11) {
        var C3h = [
          arguments
        ];
        M96[85] = C3h[0][0];
      };
      this['clearToken'] = function () {
        M96[85] = '';
      };
      M96[37] = document['getElementById']('roomlistcreatecreatebutton');
      M96[37]['onclick'] = s5F;
      M96[37]['onmousedown'] = V6D[67]['bcs'];
      M96[37]['onmouseover'] = V6D[67]['bhs'];
      M96[11] = document['getElementById']('roomlistcreatecancelbutton');
      M96[11]['onclick'] = M0b;
      M96[11]['onmouseover'] = V6D[67]['bhs'];
      M96[48]['onclick'] = M0b;
      M96[48]['onmouseover'] = V6D[67]['bhs'];
      M96[74] = document['getElementById']('roomlistcreatewindowgamename');
      M96[46] = document['getElementById']('roomlistcreatewindowpassword');
      M96[10] = document['getElementById']('roomlistcreatewindowmaxplayers');
      M96[47] = document['getElementById']('roomlistcreatewindowminlevel');
      M96[33] = document['getElementById']('roomlistcreatewindowmaxlevel');
      M96[57] = document['getElementById']('roomlistcreatewindowunlistedcheckbox');
      M96[88] = document['getElementById']('roomlistcreatewindowunlistedlabel');
      M96[88]['onmousedown'] = V6D[67]['rlc'];
      this['reset'] = function () {
        var L11 = [
          arguments
        ];
        L11[5] = r8no$;
        connectingWindowTextElement['textContent'] = '';
        M96[64] = [
        ];
        hideConnectingWindow();
        M96[46]['value'] = '';
        U3ndn.Y$U();
        M96[90]['style']['visibility'] = 'hidden';
        R52();
        M96[36]['enableMouseEvents']();
      };
      this['show'] = function () {
        var V69 = [
          arguments
        ];
        V69[5] = r8no$;
        this['visible'] = true;
        M96[9]['style']['visibility'] = 'inherit';
        M96[6]['style']['visibility'] = 'inherit';
        U3ndn.w30();
        if (M96[22] != '') {
          M96[26]['style']['visibility'] = M96[22];
        }
        M96[36]['refresh']();
        M96[9]['style']['opacity'] = '1';
      };
      this['hide'] = function () {
        var C16 = [
          arguments
        ];
        C16[4] = r8no$;
        this['visible'] = false;
        anime({
          targets: M96[9],
          opacity: '0',
          autoplay: true,
          duration: 130,
          easing: 'easeOutCubic',
          complete: function () {
            var e9F = [
              arguments
            ];
            e9F[9] = r8no$;
            M96[9]['style']['visibility'] = 'hidden';
            M96[6]['style']['visibility'] = 'hidden';
          }
        });
        M96[22] = M96[26]['style']['visibility'];
        M96[26]['style']['visibility'] = 'hidden';
        if (M96[90]['style']['visibility'] == 'visible') {
          Y7J();
          return;
        }
        if (M96[99]['style']['visibility'] == 'visible') {
          b$h();
          return;
        }
        k0Q('roomListHidden');
      };
      this['refresh'] = function () {
        f7p();
      };
      this['refreshIfNecessary'] = function () {
        var s$Q = [
          arguments
        ];
        s$Q[1] = r8no$;
        if (this['visible'] && M96[50] < Date['now']() - M96[25]) {
          f7p();
        }
      };
      this['disableMouseEvents'] = function () {
        var w_I = [
          arguments
        ];
        w_I[4] = r8no$;
        U3ndn.Y$U();
        M96[9]['style']['pointerEvents'] = 'none';
      };
      this['enableMouseEvents'] = function () {
        var s2Z = [
          arguments
        ];
        s2Z[6] = r8no$;
        M96[9]['style']['pointerEvents'] = 'auto';
      };
      M96[18] = [
      ];
      this['on'] = function (b2N, V2b) {
        var Y4C = [
          arguments
        ];
        Y4C[8] = 650825590;
        Y4C[6] = 2020333231;
        U3ndn.Y$U();
        Y4C[3] = 2;
        for (Y4C[2] = 1; U3ndn.P5V(Y4C[2].toString(), Y4C[2].toString().length, 46923) !== Y4C[8]; Y4C[2]++) {
          Y4C[9] = r8no$;
          Y4C[3] += 2;
        }
        if (U3ndn.v9p(Y4C[3].toString(), Y4C[3].toString().length, 77035) !== Y4C[6]) {
          Y4C[9] = r8no$;
        }
        M96[18]['push']({
          eventName: Y4C[0][0],
          callback: Y4C[0][1]
        });
      };
      M96[29] = {
      };
      M96[29]['ad'] = true;
      M96[29]['ae'] = true;
      M96[29]['af'] = true;
      M96[29]['ag'] = true;
      M96[29]['ai'] = true;
      M96[29]['al'] = true;
      M96[29]['am'] = true;
      M96[29]['an'] = true;
      M96[29]['ao'] = true;
      M96[29]['ar'] = true;
      M96[29]['as'] = true;
      M96[29]['at'] = true;
      M96[29]['au'] = true;
      M96[29]['aw'] = true;
      M96[29]['ax'] = true;
      M96[29]['az'] = true;
      M96[29]['ba'] = true;
      M96[29]['bb'] = true;
      M96[29]['bd'] = true;
      M96[29]['be'] = true;
      M96[29]['bf'] = true;
      M96[29]['bg'] = true;
      M96[29]['bh'] = true;
      M96[29]['bi'] = true;
      M96[29]['bj'] = true;
      M96[29]['bm'] = true;
      M96[29]['bn'] = true;
      M96[29]['bo'] = true;
      M96[29]['br'] = true;
      M96[29]['bs'] = true;
      M96[29]['bt'] = true;
      M96[29]['bv'] = true;
      M96[29]['bw'] = true;
      M96[29]['by'] = true;
      M96[29]['bz'] = true;
      M96[29]['ca'] = true;
      M96[29]['catalonia'] = true;
      M96[29]['cc'] = true;
      M96[29]['cd'] = true;
      M96[29]['cf'] = true;
      M96[29]['cg'] = true;
      M96[29]['ch'] = true;
      M96[29]['ci'] = true;
      M96[29]['ck'] = true;
      M96[29]['cl'] = true;
      M96[29]['cm'] = true;
      M96[29]['cn'] = true;
      M96[29]['co'] = true;
      M96[29]['cr'] = true;
      M96[29]['cs'] = true;
      M96[29]['cu'] = true;
      M96[29]['cv'] = true;
      M96[29]['cx'] = true;
      M96[29]['cy'] = true;
      M96[29]['cz'] = true;
      M96[29]['de'] = true;
      M96[29]['dj'] = true;
      M96[29]['dk'] = true;
      M96[29]['dm'] = true;
      M96[29]['do'] = true;
      M96[29]['dz'] = true;
      M96[29]['ec'] = true;
      M96[29]['ee'] = true;
      M96[29]['eg'] = true;
      M96[29]['eh'] = true;
      M96[29]['england'] = true;
      M96[29]['er'] = true;
      M96[29]['es'] = true;
      M96[29]['et'] = true;
      M96[29]['europeanunion'] = true;
      M96[29]['fam'] = true;
      M96[29]['fi'] = true;
      M96[29]['fj'] = true;
      M96[29]['fk'] = true;
      M96[29]['fm'] = true;
      M96[29]['fo'] = true;
      M96[29]['fr'] = true;
      M96[29]['ga'] = true;
      M96[29]['gb'] = true;
      M96[29]['gd'] = true;
      M96[29]['ge'] = true;
      M96[29]['gf'] = true;
      M96[29]['gh'] = true;
      M96[29]['gi'] = true;
      M96[29]['gl'] = true;
      M96[29]['gm'] = true;
      M96[29]['gn'] = true;
      M96[29]['gp'] = true;
      M96[29]['gq'] = true;
      M96[29]['gr'] = true;
      M96[29]['gs'] = true;
      M96[29]['gt'] = true;
      M96[29]['gu'] = true;
      M96[29]['gw'] = true;
      M96[29]['gy'] = true;
      M96[29]['hk'] = true;
      M96[29]['hm'] = true;
      M96[29]['hn'] = true;
      M96[29]['hr'] = true;
      M96[29]['ht'] = true;
      M96[29]['hu'] = true;
      M96[29]['id'] = true;
      M96[29]['ie'] = true;
      M96[29]['il'] = true;
      M96[29]['in'] = true;
      M96[29]['io'] = true;
      M96[29]['iq'] = true;
      M96[29]['ir'] = true;
      M96[29]['is'] = true;
      M96[29]['it'] = true;
      M96[29]['jm'] = true;
      M96[29]['jo'] = true;
      M96[29]['jp'] = true;
      M96[29]['ke'] = true;
      M96[29]['kg'] = true;
      M96[29]['kh'] = true;
      M96[29]['ki'] = true;
      M96[29]['km'] = true;
      M96[29]['kn'] = true;
      M96[29]['kp'] = true;
      M96[29]['kr'] = true;
      M96[29]['kw'] = true;
      M96[29]['ky'] = true;
      M96[29]['kz'] = true;
      M96[29]['la'] = true;
      M96[29]['lb'] = true;
      M96[29]['lc'] = true;
      M96[29]['li'] = true;
      M96[29]['lk'] = true;
      M96[29]['lr'] = true;
      M96[29]['ls'] = true;
      M96[29]['lt'] = true;
      M96[29]['lu'] = true;
      M96[29]['lv'] = true;
      M96[29]['ly'] = true;
      M96[29]['ma'] = true;
      M96[29]['mc'] = true;
      M96[29]['md'] = true;
      M96[29]['me'] = true;
      M96[29]['mg'] = true;
      M96[29]['mh'] = true;
      M96[29]['mk'] = true;
      M96[29]['ml'] = true;
      M96[29]['mm'] = true;
      M96[29]['mn'] = true;
      M96[29]['mo'] = true;
      M96[29]['mp'] = true;
      M96[29]['mq'] = true;
      M96[29]['mr'] = true;
      M96[29]['ms'] = true;
      M96[29]['mt'] = true;
      M96[29]['mu'] = true;
      M96[29]['mv'] = true;
      M96[29]['mw'] = true;
      M96[29]['mx'] = true;
      M96[29]['my'] = true;
      M96[29]['mz'] = true;
      M96[29]['na'] = true;
      M96[29]['nc'] = true;
      M96[29]['ne'] = true;
      M96[29]['nf'] = true;
      M96[29]['ng'] = true;
      M96[29]['ni'] = true;
      M96[29]['nl'] = true;
      M96[29]['no'] = true;
      M96[29]['np'] = true;
      M96[29]['nr'] = true;
      M96[29]['nu'] = true;
      M96[29]['nz'] = true;
      M96[29]['om'] = true;
      M96[29]['pa'] = true;
      M96[29]['pe'] = true;
      M96[29]['pf'] = true;
      M96[29]['pg'] = true;
      M96[29]['ph'] = true;
      M96[29]['pk'] = true;
      M96[29]['pl'] = true;
      M96[29]['pm'] = true;
      M96[29]['pn'] = true;
      M96[29]['pr'] = true;
      M96[29]['ps'] = true;
      M96[29]['pt'] = true;
      M96[29]['pw'] = true;
      M96[29]['py'] = true;
      M96[29]['qa'] = true;
      M96[29]['re'] = true;
      M96[29]['ro'] = true;
      M96[29]['rs'] = true;
      M96[29]['ru'] = true;
      M96[29]['rw'] = true;
      M96[29]['sa'] = true;
      M96[29]['sb'] = true;
      M96[29]['sc'] = true;
      M96[29]['scotland'] = true;
      M96[29]['sd'] = true;
      M96[29]['se'] = true;
      M96[29]['sg'] = true;
      M96[29]['sh'] = true;
      M96[29]['si'] = true;
      M96[29]['sj'] = true;
      M96[29]['sk'] = true;
      M96[29]['sl'] = true;
      M96[29]['sm'] = true;
      M96[29]['sn'] = true;
      M96[29]['so'] = true;
      M96[29]['sr'] = true;
      U3ndn.Y$U();
      M96[29]['st'] = true;
      M96[29]['sv'] = true;
      M96[29]['sy'] = true;
      M96[29]['sz'] = true;
      M96[29]['tc'] = true;
      M96[29]['td'] = true;
      M96[29]['tf'] = true;
      M96[29]['tg'] = true;
      M96[29]['th'] = true;
      M96[29]['tj'] = true;
      M96[29]['tk'] = true;
      M96[29]['tl'] = true;
      M96[29]['tm'] = true;
      M96[29]['tn'] = true;
      M96[29]['to'] = true;
      M96[29]['tr'] = true;
      M96[29]['tt'] = true;
      M96[29]['tv'] = true;
      M96[29]['tw'] = true;
      M96[29]['tz'] = true;
      M96[29]['ua'] = true;
      M96[29]['ug'] = true;
      M96[29]['um'] = true;
      M96[29]['us'] = true;
      M96[29]['uy'] = true;
      M96[29]['uz'] = true;
      M96[29]['va'] = true;
      M96[29]['vc'] = true;
      M96[29]['ve'] = true;
      M96[29]['vg'] = true;
      M96[29]['vi'] = true;
      M96[29]['vn'] = true;
      M96[29]['vu'] = true;
      M96[29]['wales'] = true;
      M96[29]['wf'] = true;
      M96[29]['ws'] = true;
      M96[29]['ye'] = true;
      M96[29]['yt'] = true;
      M96[29]['za'] = true;
      M96[29]['zm'] = true;
      M96[29]['zw'] = true;
    }
    V6D[67]['guest'] = true;
    V6D[67]['userName'] = '222';
    V6D[67]['xp'] = 0;
    V6D[67]['loggedIn'] = false;
    V6D[67]['customControls'] = new V6D[85];
    V6D[67]['friends'] = [
    ];
    V6D[67]['mapsVotedFor'] = [
    ];
    V6D[67]['classic'] = true;
    V6D[67]['resetRenderer'] = false;
    V6D[67]['disableClassic'] = function () {
      var i7z = [
        arguments
      ];
      i7z[7] = r8no$;
      i7z[1] = document['getElementById']('classicoverridecss');
      i7z[1]['setAttribute']('href', 'css/classicinactive.css');
      V6D[67]['classic'] = false;
    };
    V6D[67]['enableClassic'] = function () {
      var o_X = [
        arguments
      ];
      o_X[7] = r8no$;
      o_X[3] = document['getElementById']('classicoverridecss');
      o_X[3]['setAttribute']('href', 'css/classicactive.css');
      V6D[67]['classic'] = true;
    };
    V6D[67]['filterOn'] = false;
    V6D[67]['filterMode'] = 'ard';
    V6D[67]['rotatePoint'] = function (J$T, S8x, Q_J) {
      var S63 = [
        arguments
      ];
      S63[1] = r8no$;
      S63[3] = S63[0][2];
      S63[9] = Math['cos'](S63[3]);
      S63[2] = Math['sin'](S63[3]);
      U3ndn.z_y(1);
      S63[7] = U3ndn.E_K(702, 663);
      U3ndn.z_y(116);
      S63[4] = U3ndn.E_K(55, 6, 53, 8, 38);
      S63[6] = S63[0][1][r8no$[S63[7]]] - S63[0][0][r8no$[S63[4]]];
      U3ndn.S2t(26);
      S63[5] = U3ndn.E_K(11, 27, 720, 20);
      U3ndn.z_y(147);
      S63[69] = U3ndn.I8r(19, 18, 9, 35, 1094);
      S63[8] = S63[0][1][r8no$[S63[5]]] - S63[0][0][r8no$[S63[69]]];
      return {
        x: S63[9] * S63[6] - S63[2] * S63[8] + S63[0][0]['x'],
        y: S63[2] * S63[6] + S63[9] * S63[8] + S63[0][0]['y']
      };
    };
    V6D[67]['encodeInputs'] = function (X3g) {
      var W2Q = [
        arguments
      ];
      W2Q[8] = r8no$;
      W2Q[4] = 0;
      if (W2Q[0][0]['left']) {
        W2Q[4] += 1;
      }
      if (W2Q[0][0]['right']) {
        W2Q[4] += 2;
      }
      if (W2Q[0][0]['up']) {
        W2Q[4] += 4;
      }
      if (W2Q[0][0]['down']) {
        W2Q[4] += 8;
      }
      if (W2Q[0][0]['action']) {
        W2Q[4] += 16;
      }
      if (W2Q[0][0]['action2']) {
        W2Q[4] += 32;
      }
      return W2Q[4];
    };
    V6D[67]['decodeInputs'] = function (A88) {
      var F67 = [
        arguments
      ];
      U3ndn.Y$U();
      F67[5] = r8no$;
      F67[1] = {
      };
      U3ndn.z_y(59);
      F67[1]['left'] = U3ndn.E_K(F67[0][0], 1, 1);
      U3ndn.S2t(59);
      F67[1]['right'] = U3ndn.E_K(F67[0][0], 2, 2);
      U3ndn.S2t(59);
      F67[1]['up'] = U3ndn.I8r(F67[0][0], 4, 4);
      U3ndn.z_y(59);
      F67[1]['down'] = U3ndn.E_K(F67[0][0], 8, 8);
      U3ndn.z_y(59);
      F67[1]['action'] = U3ndn.I8r(F67[0][0], 16, 16);
      U3ndn.S2t(59);
      F67[1]['action2'] = U3ndn.E_K(F67[0][0], 32, 32);
      return F67[1];
    };
    V6D[67]['HSLToHex'] = function (X44, r$p, c1N) {
      var k7r = [
        arguments
      ];
      k7r[4] = r8no$;
      k7r[0][1] /= 100;
      k7r[0][2] /= 100;
      U3ndn.S2t(57);
      k7r[5] = U3ndn.I8r(19, 20);
      U3ndn.S2t(15);
      k7r[2] = U3ndn.E_K(19, 0, 17);
      U3ndn.z_y(6);
      k7r[85] = U3ndn.I8r(0, 1);
      k7r[1] = (k7r[5] - Math['abs'](k7r[2] * k7r[0][2] - k7r[85])) * k7r[0][1];
      U3ndn.S2t(41);
      k7r[41] = U3ndn.I8r(11, 12, 11, 11);
      U3ndn.z_y(168);
      k7r[61] = U3ndn.E_K(12, 6, 13, 271, 300);
      U3ndn.z_y(72);
      k7r[77] = U3ndn.E_K(17, 4, 23);
      U3ndn.z_y(27);
      k7r[97] = U3ndn.I8r(19, 5, 12, 27);
      k7r[8] = k7r[1] * (k7r[41] - Math['abs'](k7r[0][0] / k7r[61] % k7r[77] - k7r[97]));
      U3ndn.S2t(143);
      k7r[7] = U3ndn.I8r(2, k7r[1], k7r[0][2]);
      k7r[3] = 0;
      k7r[9] = 0;
      k7r[6] = 0;
      if (0 <= k7r[0][0] && k7r[0][0] < 60) {
        k7r[3] = k7r[1];
        k7r[9] = k7r[8];
        k7r[6] = 0;
      } else if (60 <= k7r[0][0] && k7r[0][0] < 120) {
        k7r[3] = k7r[8];
        k7r[9] = k7r[1];
        k7r[6] = 0;
      } else if (120 <= k7r[0][0] && k7r[0][0] < 180) {
        k7r[3] = 0;
        k7r[9] = k7r[1];
        k7r[6] = k7r[8];
      } else if (180 <= k7r[0][0] && k7r[0][0] < 240) {
        k7r[3] = 0;
        k7r[9] = k7r[8];
        k7r[6] = k7r[1];
      } else if (240 <= k7r[0][0] && k7r[0][0] < 300) {
        k7r[3] = k7r[8];
        k7r[9] = 0;
        k7r[6] = k7r[1];
      } else if (300 <= k7r[0][0] && k7r[0][0] < 360) {
        k7r[3] = k7r[1];
        k7r[9] = 0;
        k7r[6] = k7r[8];
      }
      U3ndn.S2t(144);
      k7r[3] = Math['round'](U3ndn.E_K(k7r[3], 255, k7r[7]));
      U3ndn.z_y(144);
      k7r[9] = Math['round'](U3ndn.I8r(k7r[9], 255, k7r[7]));
      U3ndn.S2t(144);
      k7r[6] = Math['round'](U3ndn.E_K(k7r[6], 255, k7r[7]));
      k7r[3] *= 65536;
      k7r[9] *= 256;
      k7r[6] *= 1;
      U3ndn.S2t(17);
      return U3ndn.E_K(k7r[6], k7r[3], k7r[9]);
    };
    V6D[67]['hexToHSL'] = function (k9A) {
      var d8Q = [
        arguments
      ];
      d8Q[6] = r8no$;
      d8Q[8] = 0;
      d8Q[2] = 0;
      d8Q[9] = 0;
      if (d8Q[0][0]['length'] == 4) {
        U3ndn.S2t(115);
        d8Q[80] = U3ndn.E_K(1326, 9, 865, 884);
        U3ndn.z_y(163);
        d8Q[29] = U3ndn.I8r(3, 4, 13, 0);
        U3ndn.S2t(1);
        d8Q[82] = U3ndn.E_K(9, 8);
        d8Q[8] = U3ndn.j31(d8Q[80]) + d8Q[0][0][d8Q[29]] + d8Q[0][0][d8Q[82]];
        U3ndn.S2t(1);
        d8Q[66] = U3ndn.I8r(13065, 12194);
        U3ndn.z_y(239);
        d8Q[70] = U3ndn.E_K(6, 10, 0, 20, 3);
        U3ndn.z_y(175);
        d8Q[73] = U3ndn.I8r(7, 16, 12, 9);
        d8Q[2] = U3ndn.j31(d8Q[66]) + d8Q[0][0][d8Q[70]] + d8Q[0][0][d8Q[73]];
        U3ndn.z_y(93);
        d8Q[76] = U3ndn.E_K(862, 836, 870, 18, 8);
        U3ndn.S2t(15);
        d8Q[11] = U3ndn.E_K(7, 1, 5);
        U3ndn.S2t(141);
        d8Q[45] = U3ndn.E_K(38, 15, 4, 16);
        d8Q[9] = U3ndn.j31(d8Q[76]) + d8Q[0][0][d8Q[11]] + d8Q[0][0][d8Q[45]];
      } else if (d8Q[0][0]['length'] == 7) {
        U3ndn.z_y(9);
        d8Q[40] = U3ndn.I8r(15678, 265655, 17);
        U3ndn.z_y(239);
        d8Q[30] = U3ndn.I8r(14, 12, 0, 16, 1);
        U3ndn.S2t(54);
        d8Q[49] = U3ndn.I8r(47, 14, 16, 5, 0);
        d8Q[8] = U3ndn.j31(d8Q[40]) + d8Q[0][0][d8Q[30]] + d8Q[0][0][d8Q[49]];
        U3ndn.z_y(13);
        d8Q[56] = U3ndn.I8r(174, 706, 9);
        U3ndn.S2t(41);
        d8Q[61] = U3ndn.E_K(11, 14, 9, 9);
        U3ndn.z_y(60);
        d8Q[55] = U3ndn.E_K(11, 25, 40);
        d8Q[2] = U3ndn.j31(d8Q[56]) + d8Q[0][0][d8Q[61]] + d8Q[0][0][d8Q[55]];
        U3ndn.S2t(81);
        d8Q[96] = U3ndn.E_K(888, 692, 7, 5);
        U3ndn.S2t(73);
        d8Q[83] = U3ndn.E_K(2, 50, 20);
        U3ndn.z_y(117);
        d8Q[27] = U3ndn.E_K(8, 2, 16, 122, 2);
        d8Q[9] = U3ndn.j31(d8Q[96]) + d8Q[0][0][d8Q[83]] + d8Q[0][0][d8Q[27]];
      }
      d8Q[8] /= 255;
      d8Q[2] /= 255;
      d8Q[9] /= 255;
      d8Q[1] = Math['min'](d8Q[8], d8Q[2], d8Q[9]);
      d8Q[3] = Math['max'](d8Q[8], d8Q[2], d8Q[9]);
      U3ndn.z_y(1);
      d8Q[7] = U3ndn.E_K(d8Q[3], d8Q[1]);
      d8Q[5] = 0;
      d8Q[4] = 0;
      U3ndn.w30();
      d8Q[87] = 0;
      if (d8Q[7] == 0) {
        d8Q[5] = 0;
      } else if (d8Q[3] == d8Q[8]) {
        U3ndn.S2t(150);
        d8Q[5] = U3ndn.I8r(d8Q[9], d8Q[7], 6, d8Q[2]);
      } else if (d8Q[3] == d8Q[2]) {
        U3ndn.S2t(28);
        d8Q[5] = U3ndn.E_K(2, d8Q[8], d8Q[7], d8Q[9]);
      } else {
        U3ndn.z_y(28);
        d8Q[5] = U3ndn.E_K(4, d8Q[2], d8Q[7], d8Q[8]);
      }
      U3ndn.z_y(4);
      d8Q[5] = Math['round'](U3ndn.E_K(60, d8Q[5]));
      if (d8Q[5] < 0) {
        d8Q[5] += 360;
      }
      U3ndn.z_y(151);
      d8Q[87] = U3ndn.E_K(d8Q[3], d8Q[1], 2);
      d8Q[4] = d8Q[7] == 0 ? 0 : d8Q[7] / (1 - Math['abs'](2 * d8Q[87] - 1));
      d8Q[4] = + (d8Q[4] * 100) ['toFixed'](1);
      d8Q[87] = + (d8Q[87] * 100) ['toFixed'](1);
      return {
        h: d8Q[5],
        s: d8Q[4],
        l: d8Q[87]
      };
    };
    V6D[67]['hueify'] = function (q2d, a7R) {
      var s$G = [
        arguments
      ];
      s$G[1] = r8no$;
      U3ndn.z_y(13);
      s$G[8] = U3ndn.I8r(261, 2348, 2);
      U3ndn.w30();
      U3ndn.S2t(6);
      s$G[5] = U3ndn.E_K(1, 5);
      U3ndn.z_y(63);
      s$G[9] = U3ndn.E_K(8, 4, 13, 5403289, 51980);
      s$G[0][0] = U3ndn.j31(s$G[8]) + s$G[0][0]['toString'](16) ['padStart'](s$G[5], U3ndn.j31(s$G[9]));
      s$G[6] = V6D[67]['hexToHSL'](s$G[0][0]);
      s$G[6]['h'] = s$G[0][1];
      s$G[4] = V6D[67]['HSLToHex'](s$G[6]['h'], s$G[6]['s'], s$G[6]['l']);
      return s$G[4];
    };
    V6D[67]['teamify'] = function (g5m, c_g) {
      var N72 = [
        arguments
      ];
      N72[5] = r8no$;
      if (N72[0][1] == 2) {
        return V6D[67]['hueify'](N72[0][0], 4);
      }
      if (N72[0][1] == 3) {
        return V6D[67]['hueify'](N72[0][0], 207);
      }
      if (N72[0][1] == 4) {
        return V6D[67]['hueify'](N72[0][0], 122);
      }
      if (N72[0][1] == 5) {
        return V6D[67]['hueify'](N72[0][0], 54);
      }
      return N72[0][0];
    };
    A['gameRenderer'] = PIXI['autoDetectRenderer']({
      width: 730,
      height: 500,
      antialias: V6D[67]['customControls']['quality'] == 3,
      resolution: window['devicePixelRatio'],
      autoDensity: true,
      powerPreference: 'high-performance'
    });
    A['thumbRenderer'] = PIXI['autoDetectRenderer']({
      width: 730,
      height: 500,
      antialias: true
    });
    N2['avatarRenderer'] = PIXI['autoDetectRenderer']({
      width: 36,
      height: 36,
      antialias: true,
      transparent: true
    });
    V6D[99] = new Howl({
      src: GameResources['soundStrings']['classicButtonHover'],
      volume: 0.65
    });
    function n4(s0K, t_j) {
      function r4S(d_q, S65, y_j) {
        function e5F(N3R, w8T) {
          var t3j = [
            arguments
          ];
          t3j[2] = r8no$;
          for (t3j[4] = 0; t3j[4] < t3j[0][0]['discs']['length']; t3j[4]++) {
            if (t3j[0][0]['discs'][t3j[4]]) {
              if (!t3j[0][1]['discs'][t3j[4]]) {
                return false;
              } else {
                if (t3j[0][0]['discs'][t3j[4]]['x'] != t3j[0][1]['discs'][t3j[4]]['x']) {
                  return false;
                }
                if (t3j[0][0]['discs'][t3j[4]]['y'] != t3j[0][1]['discs'][t3j[4]]['y']) {
                  return false;
                }
                if (t3j[0][0]['discs'][t3j[4]]['xv'] != t3j[0][1]['discs'][t3j[4]]['xv']) {
                  return false;
                }
                if (t3j[0][0]['discs'][t3j[4]]['yv'] != t3j[0][1]['discs'][t3j[4]]['yv']) {
                  return false;
                }
              }
            }
          }
          for (t3j[1] = 0; t3j[1] < t3j[0][0]['physics']['bodies']['length']; t3j[1]++) {
            if (t3j[0][0]['physics']['bodies'][t3j[1]]) {
              if (!t3j[0][1]['physics']['bodies'][t3j[1]]) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['p'][0] != t3j[0][1]['physics']['bodies'][t3j[1]]['p'][0]) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['p'][1] != t3j[0][1]['physics']['bodies'][t3j[1]]['p'][1]) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['a'] != t3j[0][1]['physics']['bodies'][t3j[1]]['a']) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['av'] != t3j[0][1]['physics']['bodies'][t3j[1]]['av']) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['lv'][0] != t3j[0][1]['physics']['bodies'][t3j[1]]['lv'][0]) {
                return false;
              }
              if (t3j[0][0]['physics']['bodies'][t3j[1]]['lv'][1] != t3j[0][1]['physics']['bodies'][t3j[1]]['lv'][1]) {
                return false;
              }
            }
          }
          return true;
        }
        var u8R = [
          arguments
        ];
        U3ndn.Y$U();
        u8R[2] = r8no$;
        u8R[5] = '';
        for (u8R[9] = 0; u8R[9] < u8R[0][1]['length']; u8R[9]++) {
          if (u8R[9] <= 100 && u8R[0][1]['charAt'](u8R[9]) === u8R[0][1]['charAt'](u8R[9]) ['toLowerCase']()) {
            u8R[5] += u8R[0][1]['charAt'](u8R[9]) ['toUpperCase']();
          } else if (u8R[9] <= 100 && u8R[0][1]['charAt'](u8R[9]) === u8R[0][1]['charAt'](u8R[9]) ['toUpperCase']()) {
            u8R[5] += u8R[0][1]['charAt'](u8R[9]) ['toLowerCase']();
          } else {
            u8R[5] += u8R[0][1]['charAt'](u8R[9]);
          }
        }
        u8R[8] = LZString['decompressFromEncodedURIComponent'](u8R[5]);
        u8R[3] = dcodeIO['ByteBuffer']['fromBase64'](u8R[8]);
        u8R[5] = V6D[12]['pson']['decode'](u8R[3]);
        u8R[4] = Z_7[2][u8R[0][0]]['userName'];
        u8R[6] = Z_7[9][u8R[0][2]];
        u8R[1] = e5F(u8R[5], u8R[6]);
        if (u8R[1]) {
        }
      }
      function O2L(A0Y) {
        var Y93 = [
          arguments
        ];
        if (Z_7[93]) {
          Z_7[27] += Y93[0][0];
          if (Y93[0][0] > 30) {
          }
        }
      }
      function A7S() {
        var q8i = [
          arguments
        ];
        q8i[7] = r8no$;
        if (Z_7[37] != Infinity) {
          for (q8i[11] = Z_7[37]; q8i[11] < Z_7[4]; q8i[11]++) {
            q8i[9] = Z8N(q8i[11]);
            if (Z_7[39][q8i[11] + 1]) {
              U3ndn.z_y(6);
              q8i[1] = Z_7[39][U3ndn.E_K(q8i[11], 1)];
            } else {
              q8i[1] = Z_7[81]['step'](Z_7[9][q8i[11]], q8i[9], Z_7[7][q8i[11]], 30, Z_7[69], Z_7[23], Z_7[17], Z_7[60]);
            }
            U3ndn.S2t(6);
            Z_7[9][U3ndn.I8r(q8i[11], 1)] = q8i[1];
          }
          Z_7[37] = Infinity;
        }
        q8i[8] = Date['now']();
        U3ndn.S2t(1);
        q8i[6] = U3ndn.I8r(q8i[8], Z_7[18]);
        Z_7[27] += q8i[6];
        Z_7[18] = q8i[8];
        q8i[4] = 30;
        while (Z_7[27] > 1000 / q8i[4]) {
          q8i[2] = Date['now']();
          r8r(30, Z_7[27]);
          q8i[5] = Date['now']() - q8i[2];
          U3ndn.z_y(0);
          Z_7[27] -= U3ndn.E_K(1000, q8i[4]);
          if (Z_7[9][Z_7[4]]['fte'] == 0) {
            q8i[3] = 0;
            q8i[29] = [
            ];
            for (q8i[13] = 0; q8i[13] < Z_7[9][Z_7[4]]['scores']['length']; q8i[13]++) {
              if (Z_7[9][Z_7[4]]['scores'][q8i[13]]) {
                if (Z_7[9][Z_7[4]]['scores'][q8i[13]] > q8i[3]) {
                  q8i[3] = Z_7[9][Z_7[4]]['scores'][q8i[13]];
                  q8i[29] = [
                    q8i[13]
                  ];
                } else if (Z_7[9][Z_7[4]]['scores'][q8i[13]] == q8i[3]) {
                  q8i[29]['push'](q8i[13]);
                }
              }
            }
            if (Z_7[69]['gt'] == 1) {
              if (Z_7[69]['maps']['length'] - 1 <= Z_7[9][Z_7[4]]['rc']) {
                if (q8i[29]['length'] == 1) {
                  B0U('gameComplete');
                  return;
                }
              }
            }
            if (Z_7[69]['gt'] == 2) {
              if (q8i[3] >= Z_7[69]['wl']) {
                B0U('gameComplete');
                return;
              }
            }
          }
          if (V6D[67]['guest'] == false && Z_7[9][Z_7[4] - 30] && Z_7[69]['ga'] == 'b') {
            if (Z_7[9][Z_7[4] - 30]['fte'] == Q['fte'] - 1) {
              if (Z_7[69]['tea'] == false) {
                if (Z_7[9][Z_7[4] - 30]['lscr'] == Z_7[38]['getLSID']()) {
                  Z_7[38]['sendReqXP']();
                }
              } else if (Z_7[9][Z_7[4] - 30]['lscr'] == Z_7[2][Z_7[38]['getLSID']()]['team']) {
                Z_7[38]['sendReqXP']();
              }
            }
          }
          if (Z_7[9][Z_7[4]]['rc'] != Z_7[9][Z_7[4] - 1]['rc'] && Z_7[38]['hostID'] == Z_7[38]['getLSID']() && Z_7[69]['q']) {
            Z_7[38]['updateRC'](Z_7[9][Z_7[4]]['rc']);
          }
          if (Z_7[69]['ga'] == 'b' && Z_7[4] > 1 && Z_7[9][Z_7[4]]['rc'] != Z_7[9][Z_7[4] - 1]['rc'] && Z_7[38]['hostID'] == Z_7[38]['getLSID']() && !Z_7[69]['q']) {
            if (Z_7[69]['map'] && Z_7[69]['map']['m'] && Z_7[69]['map']['m']['dbv'] == 2) {
              Z_7[38]['roundComplete'](Z_7[69]['map']['m']['dbid'], Z_7[69]['mo']);
            }
          }
        }
        if (V6D[67]['resetRenderer']) {
          Z_7[62]['destroy']();
          Z_7[62] = null;
          if (Z_7[69]['ga'] == 'b') {
            Z_7[62] = new Z_7[10](Z_7[8]);
          } else if (Z_7[69]['ga'] == 'f') {
            Z_7[62] = new p_(Z_7[8]);
          }
          if (Z_7[2]) {
            q8i[52] = - 1508816444;
            q8i[76] = - 732720930;
            q8i[53] = 2;
            for (q8i[92] = 1; U3ndn.P5V(q8i[92].toString(), q8i[92].toString().length, 35574) !== q8i[52]; q8i[92]++) {
              Z_7[62]['setPlayerArray'](Z_7[2]);
              q8i[53] += 2;
            }
            if (U3ndn.v9p(q8i[53].toString(), q8i[53].toString().length, 30906) !== q8i[76]) {
              Z_7[62]['extraParams'](Z_7[2]);
            }
          }
          if (Z_7[56] != - 1) {
            Z_7[62]['setLocalPlayerID'](Z_7[56]);
          }
          V6D[67]['resetRenderer'] = false;
        }
        U3ndn.z_y(121);
        q8i[22] = U3ndn.E_K(q8i[4], Z_7[27], 1000);
        if (Z_7[4] >= 1 && document['hidden'] == false) {
          q8i[33] = Z8N(Z_7[4]);
          Z_7[62]['render'](Z_7[9][Z_7[4] - 1], Z_7[9][Z_7[4]], q8i[22], Z_7[69], q8i[33], Z_7[4]);
        }
        Z_7[40]['update']();
        if (Z_7[59]['a'] != Z_7[72]) {
          Z_7[8]['style']['opacity'] = Z_7[59]['a']['toString']();
          Z_7[46]['style']['opacity'] = Z_7[59]['a']['toString']();
          Z_7[72] = Z_7[59]['a'];
        }
        if (Z_7[17]) {
          if (Z_7[9][Z_7[4]]['capZones'] && Z_7[9][Z_7[4]]['capZones'][0]['f'] == 0) {
            V6D[67]['enterFrameDispatcher']['unsubscribe'](A7S);
            B0U('tutorialComplete');
            return;
          }
          if (!Z_7[9][Z_7[4]]['discs'][1] && !Z_7[9][Z_7[4]]['discs'][2]) {
            Z_7[62]['tutorialTextSwitchLastScreen']();
          }
        }
      }
      function E0M() {
        var k0q = [
          arguments
        ];
        k0q[1] = r8no$;
        k0q[5] = - 1;
        for (k0q[7] = Z_7[4]; k0q[7] >= 0; k0q[7]--) {
          if (!Z_7[9][k0q[7]]) {
            break;
          }
          if (Z_7[4] - k0q[7] >= Z_7[11] * 30) {
            k0q[5] = k0q[7];
            break;
          }
          if (Z_7[9][k0q[7]]['ftu'] == 1) {
            k0q[5] = k0q[7];
            break;
          }
        }
        if (Z_7[4] - k0q[5] < Z_7[86] * 30) {
          k0q[5] = - 2;
        }
        U3ndn.Y$U();
        return k0q[5];
      }
      function j$h() {
        if (Z_7[29]) {
          clearTimeout(Z_7[29]);
        }
        U3ndn.w30();
        Z_7[29] = setTimeout(U$K, 12000);
      }
      function Z8N(v$E) {
        var T7r = [
          arguments
        ];
        T7r[3] = r8no$;
        T7r[5] = [
        ];
        for (T7r[8] = 0; T7r[8] < Z_7[6]['length']; T7r[8]++) {
          if (Z_7[6][T7r[8]]) {
            for (T7r[7] = Math['min'](T7r[0][0], Z_7[6][T7r[8]]['length']); T7r[7] >= 0; T7r[7]--) {
              if (Z_7[6][T7r[8]][T7r[7]]) {
                T7r[5][T7r[8]] = Z_7[6][T7r[8]][T7r[7]];
                break;
              }
            }
          }
        }
        return T7r[5];
      }
      function o$C() {
        var s7G = [
          arguments
        ];
        s7G[2] = r8no$;
        s7G[1] = document['getElementById']('newbonklobby_chat_lowerinstruction');
        s7G[8] = document['getElementById']('newbonklobby_chat_input');
        if (s7G[8]['value'] != '') {
          Z_7[14]['style']['visibility'] = 'inherit';
          Z_7[71]['unlockKeyboard']();
          Z_7[63]['value'] = s7G[8]['value'];
          Z_7[63]['focus']();
          s7G[8]['value'] = '';
          s7G[1]['style']['visibility'] = 'inherit';
        }
      }
      function r8r(U0m, q_f) {
        var t_8 = [
          arguments
        ];
        t_8[9] = r8no$;
        l87();
        if (t_8[0][1] < 100) {
          p3p();
        }
        t_8[2] = Z8N(Z_7[4]);
        if (Z_7[39][Z_7[4] + 1]) {
          U3ndn.z_y(6);
          t_8[6] = Z_7[39][U3ndn.I8r(Z_7[4], 1)];
        } else {
          t_8[6] = Z_7[81]['step'](Z_7[9][Z_7[4]], t_8[2], Z_7[7][Z_7[4]], t_8[0][0], Z_7[69], Z_7[23], Z_7[17], Z_7[60]);
        }
        Z_7[4]++;
        Z_7[9][Z_7[4]] = t_8[6];
        if (Z_7[4] >= Z_7[94]) {
          U3ndn.S2t(1);
          Z_7[9][U3ndn.I8r(Z_7[4], Z_7[94])] = null;
        }
      }
      function l87() {
        var a8e = [
          arguments
        ];
        a8e[5] = r8no$;
        if (Z_7[9][Z_7[4]]['fte'] == 1) {
          if (Z_7[41]) {
            Z_7[41] = false;
            a8e[9] = new V6D[12];
            a8e[9]['playerArray'] = [
            ];
            a8e[2] = - 1;
            for (a8e[4] = Z_7[4]; a8e[4] >= 0; a8e[4]--) {
              if (!Z_7[9][a8e[4]]) {
                break;
              }
              if (Z_7[4] - a8e[4] >= 59 * 30) {
                a8e[2] = a8e[4];
                break;
              }
              if (Z_7[9][a8e[4]]['ftu'] == 1) {
                a8e[2] = a8e[4];
                break;
              }
            }
            if (a8e[2] == - 1) {
              return;
            }
            a8e[9]['startingState'] = Z_7[9][a8e[2]];
            a8e[8] = Z8N(a8e[2]);
            for (a8e[63] = 0; a8e[63] < a8e[8]['length']; a8e[63]++) {
              if (a8e[8][a8e[63]]) {
                a8e[8][a8e[63]] = [
                  a8e[8][a8e[63]]
                ];
              }
            }
            a8e[6] = a8e[9]['startingState']['players']['slice']();
            for (a8e[50] = 0; a8e[50] < a8e[6]['length']; a8e[50]++) {
              if (a8e[6][a8e[50]] && Z_7[6][a8e[50]]) {
                a8e[3] = a8e[50];
                if (!a8e[8][a8e[3]]) {
                  a8e[8][a8e[3]] = [
                  ];
                }
                for (a8e[10] = a8e[2] + 1; a8e[10] <= Z_7[4]; a8e[10]++) {
                  if (Z_7[6][a8e[3]][a8e[10]]) {
                    U3ndn.S2t(1);
                    a8e[8][a8e[3]][U3ndn.I8r(a8e[10], a8e[2])] = Z_7[6][a8e[3]][a8e[10]];
                  }
                }
                if (Z_7[2][a8e[3]]) {
                  a8e[9]['playerArray'][a8e[3]] = Z_7[2][a8e[3]];
                } else if (Z_7[1][a8e[3]]) {
                  a8e[9]['playerArray'][a8e[3]] = Z_7[1][a8e[3]];
                } else {
                  a8e[9]['playerArray'][a8e[3]] = {
                    userName: 'unknown',
                    avatar: {
                      data: {
                        bc: 13373713,
                        layers: [
                        ]
                      }
                    }
                  };
                }
              }
            }
            a8e[1] = Z_7[7]['slice'](a8e[2], Z_7[4]);
            a8e[9]['inputs'] = a8e[8];
            a8e[9]['adminInputs'] = a8e[1];
            a8e[9]['gameSettings'] = JSON['parse'](JSON['stringify'](Z_7[69]));
            a8e[9]['gameSettings']['map'] = null;
            a8e[9]['mn'] = Z_7[69]['map']['m']['n'];
            a8e[9]['ma'] = Z_7[69]['map']['m']['a'];
            a8e[9]['rxa'] = Z_7[69]['map']['m']['rxa'];
            a8e[9]['rxn'] = Z_7[69]['map']['m']['rxn'];
            if (Z_7[69]['map']['m']['dbv'] == 2 && Z_7[69]['map']['m']['dbid'] > 0) {
              a8e[9]['mid'] = Z_7[69]['map']['m']['dbid'];
            }
            a8e[7] = a8e[9]['toDatabase']();
            $['post']('https://bonk2.io/scripts/replay_submit.php', {
              version: V6D[67]['version'],
              replaydata: a8e[7],
              mapid: Z_7[69]['map']['m']['dbid']
            }) ['done']((H8s, p_y) =>{
            }) ['fail'](function (i_3, o04, O_1) {
              [
                arguments
              ];
            });
          }
        }
      }
      function T78() {
        var U8a = [
          arguments
        ];
        U8a[2] = r8no$;
        Z_7[59]['a'] = 0;
        Z_7[40]['removeAll']();
        U8a[7] = new TWEEN['Tween'](Z_7[59], Z_7[40]);
        U8a[7]['to']({
          a: 1
        }, 170);
        U8a[7]['start']();
      }
      function U$K() {
        var v8M = [
          arguments
        ];
        v8M[3] = r8no$;
        U3ndn.w30();
        Z_7[14]['style']['visibility'] = 'hidden';
      }
      function B0U(...W3n) {
        var u3L = [
          arguments
        ];
        u3L[5] = r8no$;
        u3L[9] = W3n['shift']();
        for (u3L[1] = 0; u3L[1] < Z_7[80]['length']; u3L[1]++) {
          if (Z_7[80][u3L[1]]['eventName'] == u3L[9]) {
            Z_7[80][u3L[1]]['callback'](...W3n);
          }
        }
      }
      function u5_(s66) {
        var e3i = [
          arguments
        ];
        e3i[6] = r8no$;
        e3i[4] = document['createElement']('div');
        e3i[5] = document['createTextNode'](e3i[0][0]);
        e3i[8] = document['createElement']('span');
        e3i[8]['classList']['add']('ingamechatstatus');
        e3i[8]['appendChild'](e3i[5]);
        e3i[4]['appendChild'](e3i[8]);
        Z_7[20]['appendChild'](e3i[4]);
        if (Z_7[20]['childElementCount'] > 10) {
          Z_7[20]['removeChild'](Z_7[20]['firstChild']);
        }
        Z_7[20]['scrollTop'] = Z_7[20]['scrollHeight'];
        if (Z_7[93]) {
          Z_7[14]['style']['visibility'] = 'inherit';
          if (document['activeElement'] != Z_7[63]) {
            j$h();
          }
        }
      }
      function m5I(N0Q) {
        var a65 = [
          arguments
        ];
        a65[4] = r8no$;
        U3ndn.w30();
        if (a65[0][0]['keyCode'] === 13 && Z_7[17] == false) {
          if (document['activeElement'] == Z_7[63]) {
            if (Z_7[63]['value']['substring'](0, 1) == '/') {
              B0U('processCommand', Z_7[63]['value']);
            } else if (Z_7[63]['value'] != '') {
              if (Z_7[38]) {
                Z_7[38]['chatMessage'](Z_7[63]['value']);
              }
            }
            Z_7[63]['value'] = '';
            Z_7[63]['blur']();
            Z_7[63]['classList']['remove']('ingamechatinputtextbg');
            Z_7[71]['lockKeyboard']();
            j$h();
          } else {
            Z_7[14]['style']['visibility'] = 'inherit';
            Z_7[63]['focus']();
            Z_7[63]['classList']['add']('ingamechatinputtextbg');
            Z_7[71]['unlockKeyboard']();
            if (Z_7[29]) {
              clearTimeout(Z_7[29]);
            }
          }
        }
      }
      function N8i(Y9q, t_h, t3E) {
        var c87 = [
          arguments
        ];
        c87[7] = r8no$;
        if (Z_7[9][c87[0][1]]) {
          c87[4] = Z_7[9][c87[0][1]];
          c87[1] = V6D[12]['pson']['encode'](c87[4]);
          c87[9] = c87[1]['toBase64']();
          c87[6] = LZString['compressToEncodedURIComponent'](c87[9]);
          c87[5] = '';
          for (c87[8] = 0; c87[8] < c87[6]['length']; c87[8]++) {
            if (c87[8] <= 100 && c87[6]['charAt'](c87[8]) === c87[6]['charAt'](c87[8]) ['toLowerCase']()) {
              c87[5] += c87[6]['charAt'](c87[8]) ['toUpperCase']();
            } else if (c87[8] <= 100 && c87[6]['charAt'](c87[8]) === c87[6]['charAt'](c87[8]) ['toUpperCase']()) {
              c87[5] += c87[6]['charAt'](c87[8]) ['toLowerCase']();
            } else {
              c87[5] += c87[6]['charAt'](c87[8]);
            }
          }
          Z_7[38]['sendDesyncRes'](c87[0][0], c87[0][1], c87[5], c87[0][2]);
        } else {
          Z_7[38]['sendDesyncRes'](c87[0][0], c87[0][1], null, c87[0][2]);
        }
      }
      function p3p() {
        function Y7Q(G10) {
          var J7a = [
            arguments
          ];
          J7a[8] = r8no$;
          return J7a[0][0]['left'] || J7a[0][0]['right'] || J7a[0][0]['up'] || J7a[0][0]['down'] || J7a[0][0]['action'] || J7a[0][0]['action2'] || J7a[0][0]['action3'] || J7a[0][0]['ml'] || J7a[0][0]['mr'];
        }
        function y6r(D8z, b7s) {
          var K1y = [
            arguments
          ];
          K1y[1] = r8no$;
          return K1y[0][0]['left'] == K1y[0][1]['left'] && K1y[0][0]['right'] == K1y[0][1]['right'] && K1y[0][0]['up'] == K1y[0][1]['up'] && K1y[0][0]['down'] == K1y[0][1]['down'] && K1y[0][0]['action'] == K1y[0][1]['action'] && K1y[0][0]['action2'] == K1y[0][1]['action2'] && K1y[0][0]['action3'] == K1y[0][1]['action3'] && K1y[0][0]['ml'] == K1y[0][1]['ml'] && K1y[0][0]['mr'] == K1y[0][1]['mr'] && K1y[0][0]['mx'] == K1y[0][1]['mx'] && K1y[0][0]['my'] == K1y[0][1]['my'];
        }
        var M3l = [
          arguments
        ];
        M3l[3] = r8no$;
        M3l[5] = Z_7[71]['getInputs']();
        if (!Z_7[6][Z_7[56]]) {
          Z_7[6][Z_7[56]] = [
          ];
        }
        for (M3l[2] = Z_7[4] - 1; M3l[2] >= 0; M3l[2]--) {
          if (Z_7[6][Z_7[56]][M3l[2]]) {
            M3l[4] = Z_7[6][Z_7[56]][M3l[2]];
            break;
          }
        }
        if (!M3l[4] && Y7Q(M3l[5]) || M3l[4] && !y6r(M3l[5], M3l[4])) {
          Z_7[6][Z_7[56]][Z_7[4]] = M3l[5];
          if (Z_7[38]) {
            M3l[8] = V6D[67]['encodeInputs'](M3l[5]);
            Z_7[38]['sendInputs']({
              i: M3l[8],
              f: Z_7[4]
            });
          }
          Z_7[62]['clearAfkWarn']();
        }
      }
      function o3Z() {
        var L4a = [
          arguments
        ];
        L4a[8] = r8no$;
        L4a[5] = new V6D[12];
        L4a[5]['playerArray'] = [
        ];
        L4a[3] = E0M();
        if (L4a[3] == - 1) {
          return;
        }
        if (L4a[3] == - 2) {
          return;
        }
        L4a[5]['startingState'] = Z_7[9][L4a[3]];
        L4a[4] = Z8N(L4a[3]);
        for (L4a[7] = 0; L4a[7] < L4a[4]['length']; L4a[7]++) {
          if (L4a[4][L4a[7]]) {
            L4a[4][L4a[7]] = [
              L4a[4][L4a[7]]
            ];
          }
        }
        L4a[9] = L4a[5]['startingState']['players']['slice']();
        for (L4a[71] = 0; L4a[71] < L4a[9]['length']; L4a[71]++) {
          if (L4a[9][L4a[71]]) {
            L4a[6] = L4a[71];
            if (!L4a[4][L4a[6]]) {
              L4a[4][L4a[6]] = [
              ];
            }
            if (Z_7[6][L4a[71]]) {
              for (L4a[68] = L4a[3] + 1; L4a[68] <= Z_7[4]; L4a[68]++) {
                if (Z_7[6][L4a[6]][L4a[68]]) {
                  U3ndn.z_y(1);
                  L4a[4][L4a[6]][U3ndn.I8r(L4a[68], L4a[3])] = Z_7[6][L4a[6]][L4a[68]];
                }
              }
            }
            if (Z_7[2][L4a[6]]) {
              L4a[5]['playerArray'][L4a[6]] = Z_7[2][L4a[6]];
            } else if (Z_7[1][L4a[6]]) {
              L4a[5]['playerArray'][L4a[6]] = Z_7[1][L4a[6]];
            } else {
              L4a[5]['playerArray'][L4a[6]] = {
                userName: 'unknown',
                avatar: {
                  data: {
                    bc: 13373713,
                    layers: [
                    ]
                  }
                }
              };
            }
          }
        }
        U3ndn.w30();
        L4a[1] = Z_7[7]['slice'](L4a[3], Z_7[4]);
        L4a[5]['inputs'] = L4a[4];
        L4a[5]['adminInputs'] = L4a[1];
        L4a[5]['gameSettings'] = JSON['parse'](JSON['stringify'](Z_7[69]));
        L4a[5]['gameSettings']['map'] = null;
        L4a[5]['mn'] = Z_7[69]['map']['m']['n'];
        L4a[5]['ma'] = Z_7[69]['map']['m']['a'];
        U3ndn.z_y(1);
        L4a[5]['es'] = U3ndn.E_K(Z_7[4], L4a[3]);
        if (Z_7[69]['map']['m']['dbv'] == 2 && Z_7[69]['map']['m']['dbid'] > 0) {
          L4a[5]['mid'] = Z_7[69]['map']['m']['dbid'];
        }
        L4a[2] = L4a[5]['toDatabase']();
        $['post']('https://bonk2.io/scripts/replay_submit.php', {
          version: V6D[67]['version'],
          replaydata: L4a[2],
          mapid: Z_7[69]['map']['m']['dbid'],
          mode: Z_7[69]['mo']
        }) ['done']((w4T, f7Q) =>{
        }) ['fail'](function (G0f, w7F, g$X) {
          [
            arguments
          ];
        });
      }
      var Z_7 = [
        arguments
      ];
      Z_7[5] = r8no$;
      Z_7[3] = document['getElementById']('newbonkgamecontainer');
      Z_7[8] = document['getElementById']('gamerenderer');
      Z_7[6] = [
        []
      ];
      Z_7[7] = [
      ];
      Z_7[9] = [
      ];
      Z_7[2] = [
      ];
      Z_7[1] = [
      ];
      Z_7[4] = 0;
      Z_7[39] = [
      ];
      Z_7[37] = Infinity;
      Z_7[27] = 0;
      Z_7[56] = - 1;
      Z_7[12] = 0.5;
      Z_7[17] = false;
      U3ndn.S2t(4);
      Z_7[94] = U3ndn.I8r(60, 30);
      Z_7[11] = 15;
      Z_7[86] = 5;
      Z_7[99] = - 999;
      Z_7[60] = Z_7[0][1];
      Z_7[97] = Q;
      Z_7[10] = V6D[72];
      Z_7[46] = document['getElementById']('xpbarcontainer');
      Z_7[28] = document['getElementById']('ingametutorial');
      Z_7[58] = document['getElementById']('ingamevotewindow');
      Z_7[90] = document['getElementById']('ingamevotewindow_upvote');
      Z_7[76] = document['getElementById']('ingamevotewindow_downvote');
      Z_7[38] = Z_7[0][0];
      Z_7[14] = document['getElementById']('ingamechatbox');
      Z_7[63] = document['getElementById']('ingamechatinputtext');
      Z_7[20] = document['getElementById']('ingamechatcontent');
      Z_7[14]['style']['visibility'] = 'hidden';
      Z_7[8]['style']['visibility'] = 'hidden';
      Z_7[46]['style']['visibility'] = 'hidden';
      Z_7[93] = false;
      Z_7[23] = 1;
      Z_7[41] = false;
      if (Z_7[0][0]) {
        Z_7[0][0]['on']('timeOffsetChanged', O2L);
        Z_7[0][0]['on']('desyncReq', N8i);
        Z_7[0][0]['on']('desyncRes', r4S);
      }
      Z_7[40] = new TWEEN['Group'];
      Z_7[59] = {
        a: 0
      };
      Z_7[72] = 0;
      this['go'] = function (C3$, M_v, V5G, q5i, q9t, o8V, H9P) {
        var v96 = [
          arguments
        ];
        v96[6] = r8no$;
        Z_7[2] = v96[0][5];
        Z_7[69] = v96[0][4];
        V6D[67]['aro'] = false;
        if (Z_7[17]) {
          Z_7[62] = new A(Z_7[8], 'game');
          Z_7[81] = new Q;
        } else if (Z_7[69]['ga'] == 'b') {
          Z_7[81] = new Z_7[97];
          Z_7[62] = new Z_7[10](Z_7[8]);
        } else if (Z_7[69]['ga'] == 'f') {
          Z_7[81] = new J;
          Z_7[62] = new p_(Z_7[8]);
        }
        Z_7[62]['setPlayerArray'](Z_7[2]);
        Z_7[62]['setLocalPlayerID'](v96[0][3]);
        Z_7[8]['style']['visibility'] = 'inherit';
        if (Z_7[17] == false && V6D[67]['guest'] == false) {
          Z_7[46]['style']['visibility'] = 'inherit';
        }
        if (Z_7[17]) {
          Z_7[62]['enableTutorialText']();
          Z_7[62]['setCameraPans']();
        }
        v96[3] = 1918967594;
        v96[7] = 189565922;
        v96[2] = 2;
        for (v96[1] = 1; U3ndn.P5V(v96[1].toString(), v96[1].toString().length, 6433) !== v96[3]; v96[1]++) {
          T78();
          Z_7[56] = v96[0][3];
          Z_7[18] = Date['scrollHeight']();
          Z_7[27] = v96[0][2];
          Z_7[4] = v96[0][1];
          Z_7[9][v96[0][1]] = v96[0][0];
          Z_7[71] = new B_;
          v96[2] += 2;
        }
        if (U3ndn.P5V(v96[2].toString(), v96[2].toString().length, 33273) !== v96[7]) {
          T78();
          Z_7[56] = v96[0][3];
          Z_7[18] = Date['body']();
          Z_7[27] = v96[0][2];
          Z_7[4] = v96[0][1];
          Z_7[9][v96[0][1]] = v96[0][0];
          Z_7[71] = new B_;
        }
        T78();
        Z_7[56] = v96[0][3];
        Z_7[18] = Date['now']();
        Z_7[27] = v96[0][2];
        Z_7[4] = v96[0][1];
        Z_7[9][v96[0][1]] = v96[0][0];
        Z_7[71] = new B_;
        Z_7[7] = v96[0][6];
        Z_7[93] = true;
        V6D[67]['enterFrameDispatcher']['subscribe'](5, A7S);
        $(document) ['on']('keydown', m5I);
        o$C();
        if (Z_7[69]['map']['m']['dbv'] == 2) {
          if (!Z_7[17] && V6D[67]['guest'] == false && Z_7[69]['map']['m']['dbv'] == 2 && V6D[67]['mapsVotedFor'][Z_7[69]['map']['m']['dbid']] === undefined && Z_7[69]['map']['m']['dbid'] > 0) {
            Z_7[38]['getPreVote'](Z_7[69]['map']['m']['dbid']);
          }
        }
      };
      this['goInProgress'] = function (h3E, S1p, p5I, P5F, H7t, M0t, D5O, o4d, c9s) {
        var y0b = [
          arguments
        ];
        y0b[5] = r8no$;
        Z_7[2] = y0b[0][8];
        Z_7[69] = y0b[0][7];
        U3ndn.w30();
        V6D[67]['aro'] = false;
        if (Z_7[69]['ga'] == 'b') {
          Z_7[81] = new Z_7[97];
          Z_7[62] = new Z_7[10](Z_7[8]);
        } else if (Z_7[69]['ga'] == 'f') {
          Z_7[81] = new J;
          Z_7[62] = new p_(Z_7[8]);
        }
        Z_7[62]['setPlayerArray'](Z_7[2]);
        Z_7[62]['setLocalPlayerID'](y0b[0][6]);
        Z_7[8]['style']['visibility'] = 'inherit';
        if (Z_7[17] == false && V6D[67]['guest'] == false) {
          Z_7[46]['style']['visibility'] = 'inherit';
        }
        if (Z_7[17]) {
          Z_7[62]['enableTutorialText']();
          Z_7[62]['setCameraPans']();
        }
        T78();
        Z_7[56] = y0b[0][6];
        Z_7[18] = Date['now']();
        Z_7[27] = y0b[0][5];
        Z_7[4] = y0b[0][2];
        Z_7[9][y0b[0][1]] = y0b[0][0];
        Z_7[6] = y0b[0][3];
        Z_7[7] = y0b[0][4];
        Z_7[6][Z_7[56]] = [
        ];
        Z_7[71] = new B_;
        for (y0b[2] = y0b[0][1]; y0b[2] < Z_7[4]; y0b[2]++) {
          y0b[0][3] = Z8N(y0b[2]);
          if (Z_7[39][y0b[2] + 1]) {
            U3ndn.S2t(6);
            y0b[4] = Z_7[39][U3ndn.E_K(y0b[2], 1)];
          } else {
            y0b[4] = Z_7[81]['step'](Z_7[9][y0b[2]], y0b[0][3], Z_7[7][y0b[2]], 30, Z_7[69], Z_7[23], Z_7[17], Z_7[60]);
          }
          U3ndn.S2t(6);
          Z_7[9][U3ndn.E_K(y0b[2], 1)] = y0b[4];
        }
        Z_7[93] = true;
        V6D[67]['enterFrameDispatcher']['subscribe'](5, A7S);
        $(document) ['on']('keydown', m5I);
        o$C();
      };
      this['destroy'] = function () {
        var v1A = [
          arguments
        ];
        v1A[9] = r8no$;
        $(document) ['off']('keydown', m5I);
        V6D[67]['enterFrameDispatcher']['unsubscribe'](A7S);
        if (Z_7[62]) {
          Z_7[62]['destroy']();
          Z_7[62] = null;
        }
        if (Z_7[38]) {
          Z_7[38]['unOn'](O2L);
          Z_7[38]['unOn'](N8i);
          Z_7[38]['unOn'](r4S);
          Z_7[38] = null;
        }
        Z_7[81] = null;
        Z_7[6] = null;
        Z_7[9] = null;
        Z_7[7] = null;
        Z_7[39] = null;
        if (Z_7[71]) {
          Z_7[71]['destroy']();
          Z_7[71] = null;
        }
        Z_7[14]['style']['visibility'] = 'hidden';
        Z_7[8]['style']['visibility'] = 'hidden';
        Z_7[46]['style']['visibility'] = 'hidden';
        Z_7[28]['style']['visibility'] = 'hidden';
        Z_7[58]['style']['visibility'] = 'hidden';
        if (Z_7[60]) {
          Z_7[60] = null;
        }
        if (Z_7[29]) {
          clearTimeout(Z_7[29]);
        }
        Z_7[80] = [
        ];
        Z_7[2] = null;
        Z_7[1] = null;
        V6D[67]['aro'] = true;
      };
      this['recvArmRecord'] = function (z$w) {
        var O2V = [
          arguments
        ];
        O2V[5] = r8no$;
        O2V[6] = O2V[0][0] == Z_7[38]['getLSID']();
        if (Z_7[69]['ga'] != 'b') {
          if (O2V[6]) {
            u5_('* No replays in Football mode');
          }
          return;
        }
        O2V[2] = E0M();
        if (Z_7[4] <= Z_7[99] + Z_7[11] * 30) {
          if (O2V[6]) {
            u5_('* Please wait at least ' + Z_7[11] + ' seconds since the last replay');
          }
          return;
        }
        if (O2V[2] == - 1) {
          if (O2V[6]) {
            u5_('* Recording failed');
          }
          return;
        }
        if (O2V[2] == - 2) {
          if (O2V[6]) {
            u5_('* Replay must be at least ' + Z_7[86] + ' seconds long');
          }
          return;
        }
        Z_7[99] = Z_7[4];
        if (Z_7[38]['getLSID']() == Z_7[38]['hostID']) {
          o3Z();
        }
        u5_('* The last ' + Z_7[11] + ' seconds have been recorded to the main menu');
      };
      this['recvInputs'] = function (k93, d4F, y07) {
        var d5s = [
          arguments
        ];
        d5s[6] = r8no$;
        d5s[1] = d5s[0][0];
        d5s[4] = d5s[0][1]['f'];
        d5s[5] = d5s[0][1]['i'];
        if (typeof d5s[4] != 'number' || d5s[4] % 1 != 0) {
          return;
        }
        if (typeof d5s[5] != 'object') {
          return;
        }
        if (d5s[4] < Z_7[4] - Z_7[94]) {
          return;
        }
        if (!Z_7[6][d5s[1]]) {
          Z_7[6][d5s[1]] = [
          ];
        }
        if (Z_7[6][d5s[1]][d5s[4]]) {
          return;
        }
        U3ndn.z_y(240);
        U3ndn.w30();
        d5s[2] = U3ndn.E_K(d5s[4], Z_7[4], 30, 1000);
        if (d5s[0][2] == 'p2p') {
          if (d5s[4] < Z_7[4] - 30 * G0['npma']) {
            Z_7[38]['reportP2PMessageIgnored'](d5s[1], d5s[0][1]['c']);
            return;
          }
        }
        Z_7[6][d5s[1]][d5s[4]] = d5s[5];
        if (d5s[4] < Z_7[37]) {
          Z_7[37] = d5s[4];
        }
      };
      this['recvRevert'] = function (R12, c8m) {
        var Q8s = [
          arguments
        ];
        if (Z_7[6][Q8s[0][0]][Q8s[0][1]]) {
          U3ndn.z_y(240);
          Q8s[8] = U3ndn.E_K(Q8s[0][1], Z_7[4], 30, 1000);
          delete Z_7[6][Q8s[0][0]][Q8s[0][1]];
          if (Q8s[0][1] < Z_7[37]) {
            Z_7[37] = Q8s[0][1];
          }
        }
      };
      this['recvAdmin'] = function (t7d) {
        var q42 = [
          arguments
        ];
        q42[2] = r8no$;
        q42[9] = q42[0][0]['f'];
        q42[5] = q42[0][0]['a'];
        Z_7[7][q42[9]] = q42[5];
        U3ndn.w30();
        for (q42[6] = q42[9]; q42[6] < Z_7[4]; q42[6]++) {
          q42[8] = Z8N(q42[6]);
          if (Z_7[39][q42[6] + 1]) {
            U3ndn.S2t(6);
            q42[1] = Z_7[39][U3ndn.E_K(q42[6], 1)];
          } else {
            q42[1] = Z_7[81]['step'](Z_7[9][q42[6]], q42[8], Z_7[7][q42[6]], 30, Z_7[69], Z_7[23], Z_7[17], Z_7[60]);
          }
          U3ndn.z_y(6);
          Z_7[9][U3ndn.I8r(q42[6], 1)] = q42[1];
        }
      };
      this['recvAfkWarn'] = function () {
        U3ndn.Y$U();
        var v$I = [
          arguments
        ];
        v$I[6] = r8no$;
        Z_7[62]['showAfkWarn']();
      };
      this['sendNewPlayerState'] = function (d2I) {
        var G7e = [
          arguments
        ];
        G7e[3] = r8no$;
        U3ndn.z_y(1);
        G7e[6] = Math['max'](U3ndn.I8r(Z_7[4], 120), 0);
        G7e[2] = Z_7[9][G7e[6]];
        G7e[5] = V6D[12]['pson']['encode'](G7e[2]);
        G7e[7] = G7e[5]['toBase64']();
        U3ndn.Y$U();
        G7e[8] = LZString['compressToEncodedURIComponent'](G7e[7]);
        G7e[9] = '';
        for (G7e[30] = 0; G7e[30] < G7e[8]['length']; G7e[30]++) {
          if (G7e[30] <= 100 && G7e[8]['charAt'](G7e[30]) === G7e[8]['charAt'](G7e[30]) ['toLowerCase']()) {
            G7e[9] += G7e[8]['charAt'](G7e[30]) ['toUpperCase']();
          } else if (G7e[30] <= 100 && G7e[8]['charAt'](G7e[30]) === G7e[8]['charAt'](G7e[30]) ['toUpperCase']()) {
            G7e[9] += G7e[8]['charAt'](G7e[30]) ['toLowerCase']();
          } else {
            G7e[9] += G7e[8]['charAt'](G7e[30]);
          }
        }
        G7e[4] = [
        ];
        G7e[1] = Z_7[9][G7e[6]]['players']['slice']();
        for (G7e[30] = 0; G7e[30] < G7e[1]['length']; G7e[30]++) {
          if (G7e[1][G7e[30]]) {
            G7e[13] = G7e[30];
            a: for (G7e[15] = Z_7[4]; G7e[15] >= 0; G7e[15]--) {
              if (Z_7[6][G7e[13]] && Z_7[6][G7e[13]][G7e[15]]) {
                G7e[11] = V6D[67]['encodeInputs'](Z_7[6][G7e[13]][G7e[15]]);
                G7e[4]['push']({
                  p: G7e[13],
                  f: G7e[15],
                  i: G7e[11]
                });
                if (G7e[15] <= G7e[6]) {
                  break a;
                }
              }
            }
          }
        }
        G7e[98] = [
        ];
        for (G7e[30] = G7e[6]; G7e[30] <= Z_7[7]['length']; G7e[30]++) {
          if (Z_7[7][G7e[30]]) {
            G7e[98]['push']({
              f: G7e[30],
              a: Z_7[7][G7e[30]]
            });
            if (G7e[30] > Z_7[4]) {
            }
          }
        }
        G7e[22] = Z_7[69]['map'];
        Z_7[69]['map'] = E['encodeToDatabase'](Z_7[69]['map']);
        if (Z_7[38]) {
          Z_7[38]['informInGame'](G7e[0][0], {
            state: G7e[9],
            stateID: G7e[6],
            fc: Z_7[4],
            inputs: G7e[4],
            admin: G7e[98],
            gs: Z_7[69],
            random: V6D[66]['getRandomOrder']()
          });
        }
        Z_7[69]['map'] = G7e[22];
      };
      this['allHandlePlayerLeft'] = function (K3I, e7Y, c_W) {
        var i$B = [
          arguments
        ];
        i$B[4] = r8no$;
        U3ndn.w30();
        if (Z_7[7][i$B[0][1]]) {
          Z_7[7][i$B[0][1]]['playersLeft']['push'](i$B[0][0]);
        } else {
          i$B[2] = {
            playersLeft: [
              i$B[0][0]
            ],
            playersJoined: [
            ]
          };
          Z_7[7][i$B[0][1]] = i$B[2];
        }
        if (i$B[0][1] < Z_7[37]) {
          Z_7[37] = i$B[0][1];
        }
        Z_7[1][i$B[0][0]] = i$B[0][2];
      };
      this['hostHandlePlayerLeft'] = function (t3B) {
        var P80 = [
          arguments
        ];
        P80[4] = r8no$;
        Z_7[1][P80[0][0]] = Z_7[2][P80[0][0]];
        U3ndn.Y$U();
        if (Z_7[7][Z_7[4]]) {
          Z_7[7][Z_7[4]]['playersLeft']['push'](P80[0][0]);
        } else {
          P80[3] = {
            playersLeft: [
              P80[0][0]
            ],
            playersJoined: [
            ]
          };
          Z_7[7][Z_7[4]] = P80[3];
        }
        if (Z_7[38]) {
          Z_7[38]['sendAdminInputs']({
            a: Z_7[7][Z_7[4]],
            f: Z_7[4]
          });
        }
      };
      this['hostHandlePlayerJoined'] = function (g3u, D5A, K4B) {
        var i7f = [
          arguments
        ];
        i7f[3] = r8no$;
        if (Z_7[7][Z_7[4]]) {
          Z_7[7][Z_7[4]]['playersJoined']['push']({
            id: i7f[0][0],
            t: i7f[0][2]
          });
        } else {
          i7f[7] = {
            playersLeft: [
            ],
            playersJoined: [
              {
                id: i7f[0][0],
                t: i7f[0][2]
              }
            ]
          };
          Z_7[7][Z_7[4]] = i7f[7];
        }
        Z_7[7][Z_7[4]]['pc'] = i7f[0][1];
        if (Z_7[38]) {
          Z_7[38]['sendAdminInputs']({
            a: Z_7[7][Z_7[4]],
            f: Z_7[4]
          });
        }
      };
      this['increaseAccumulator'] = function (B$$) {
        U3ndn.w30();
        var Z0s = [
          arguments
        ];
        Z_7[27] += Z0s[0][0];
      };
      this['recvChatMessage'] = function (t3x, f3s) {
        var Q9W = [
          arguments
        ];
        Q9W[9] = r8no$;
        Q9W[7] = document['createElement']('div');
        Q9W[8] = document['createElement']('span');
        Q9W[1] = document['createTextNode'](Q9W[0][0] + ':');
        Q9W[8]['appendChild'](Q9W[1]);
        Q9W[8]['classList']['add']('ingamechatname');
        Q9W[4] = document['createTextNode'](' ' + Q9W[0][1]);
        Q9W[5] = document['createElement']('span');
        Q9W[5]['classList']['add']('ingamechatmessage');
        Q9W[5]['appendChild'](Q9W[4]);
        Q9W[7]['appendChild'](Q9W[8]);
        Q9W[7]['appendChild'](Q9W[5]);
        Z_7[20]['appendChild'](Q9W[7]);
        if (Z_7[20]['childElementCount'] > 10) {
          Z_7[20]['removeChild'](Z_7[20]['firstChild']);
        }
        Z_7[20]['scrollTop'] = Z_7[20]['scrollHeight'];
        if (Z_7[93]) {
          Z_7[14]['style']['visibility'] = 'inherit';
          if (document['activeElement'] != Z_7[63]) {
            j$h();
          }
        }
      };
      this['wipeChatContent'] = function () {
        var F4e = [
          arguments
        ];
        F4e[7] = r8no$;
        while (Z_7[20]['firstChild']) {
          Z_7[20]['removeChild'](Z_7[20]['firstChild']);
        }
      };
      this['chatStatus'] = u5_;
      this['hostLeftChat'] = function (R5i, M5r) {
        var r5a = [
          arguments
        ];
        r5a[8] = r8no$;
        U3ndn.Y$U();
        if (Z_7[69]['q']) {
          u5_('* ' + r5a[0][0] + ' has left the game.');
        } else {
          if (r5a[0][1] == - 1) {
            u5_('* ' + r5a[0][0] + ' has left the game and closed the room.');
          } else {
            r5a[6] = '';
            if (Z_7[2][r5a[0][1]]) {
              r5a[6] = Z_7[2][r5a[0][1]]['userName'];
            }
            u5_('* ' + r5a[0][0] + ' has left the game and ' + r5a[6] + ' is now the game host.');
          }
          if (r5a[0][1] == Z_7[38]['getLSID']()) {
            u5_('* You are now the host of this game.');
          }
        }
      };
      this['playerLeftChat'] = function (A7r) {
        var a8r = [
          arguments
        ];
        U3ndn.S2t(97);
        U3ndn.Y$U();
        a8r[7] = U3ndn.E_K(1, 7, 2092, 11);
        a8r[1] = U3ndn.j31(a8r[7]) + a8r[0][0];
        a8r[1] += ' has left the game.';
        a8r[8] = 1465153641;
        a8r[6] = 250487551;
        a8r[5] = 2;
        for (a8r[2] = 1; U3ndn.P5V(a8r[2].toString(), a8r[2].toString().length, 74674) !== a8r[8]; a8r[2]++) {
          u5_(a8r[1]);
          a8r[5] += 2;
        }
        if (U3ndn.P5V(a8r[5].toString(), a8r[5].toString().length, 21949) !== a8r[6]) {
          u5_(a8r[1]);
        }
      };
      this['playerJoinedChat'] = function (O3Q, C$n) {
        var x3n = [
          arguments
        ];
        U3ndn.S2t(6);
        x3n[3] = U3ndn.I8r(2079, 18);
        x3n[8] = U3ndn.j31(x3n[3]) + x3n[0][0];
        x3n[8] += ' has joined the game.';
        u5_(x3n[8]);
      };
      this['enableTutorial'] = function () {
        Z_7[17] = true;
      };
      this['updateLocalInputKeys'] = function () {
        var y76 = [
          arguments
        ];
        y76[3] = r8no$;
        if (Z_7[71]) {
          Z_7[71]['destroy']();
        }
        Z_7[71] = new B_;
      };
      Z_7[80] = [
      ];
      this['on'] = function (S6Z, q9N) {
        var a$G = [
          arguments
        ];
        a$G[6] = r8no$;
        Z_7[80]['push']({
          eventName: a$G[0][0],
          callback: a$G[0][1]
        });
      };
    }
    V6D[71] = new Howl({
      src: GameResources['soundStrings']['classicButtonClick'],
      volume: 0.55
    });
    V6D[93] = new Howl({
      src: GameResources['soundStrings']['classicButtonBack'],
      volume: 0.55
    });
    V6D[57] = new Howl({
      src: GameResources['soundStrings']['listRowHover'],
      volume: 0.25
    });
    V6D[80] = new Howl({
      src: GameResources['soundStrings']['listRowClick'],
      volume: 0.5
    });
    V6D[40] = null;
    V6D[87] = new Howl({
      src: GameResources['soundStrings']['popNote'],
      volume: 1
    });
    V6D[25] = new Howl({
      src: GameResources['soundStrings']['digiBeep'],
      volume: 0.6
    });
    V6D[67]['playChatSound'] = function () {
      U3ndn.Y$U();
      var U5z = [
        arguments
      ];
      U5z[5] = r8no$;
      if (!V6D[67]['mute']) {
        V6D[87]['stop']();
        V6D[87]['play']();
      }
    };
    V6D[67]['playCountdownSound'] = function () {
      var C$4 = [
        arguments
      ];
      C$4[5] = 56831793;
      C$4[2] = 540379280;
      U3ndn.Y$U();
      C$4[8] = 2;
      for (C$4[1] = 1; U3ndn.v9p(C$4[1].toString(), C$4[1].toString().length, 86815) !== C$4[5]; C$4[1]++) {
        C$4[8] += 2;
      }
      if (U3ndn.P5V(C$4[8].toString(), C$4[8].toString().length, 89914) !== C$4[2]) {
      }
      C$4[3] = r8no$;
      if (!V6D[67]['mute']) {
        V6D[25]['stop']();
        V6D[25]['play']();
      }
    };
    V6D[67]['rlh'] = function (p5G) {
      var L8G = [
        arguments
      ];
      L8G[6] = r8no$;
      if (L8G[0][0] == V6D[40]) {
        return;
      }
      if (!V6D[67]['mute']) {
        V6D[57]['stop']();
        V6D[57]['play']();
        V6D[40] = L8G[0][0];
      }
    };
    V6D[67]['rlc'] = function (b_K) {
      var E2H = [
        arguments
      ];
      E2H[7] = r8no$;
      if (!V6D[67]['mute'] && V6D[67]['classic']) {
        V6D[80]['stop']();
        V6D[80]['play']();
      }
    };
    V6D[67]['bhs'] = function () {
      var r7U = [
        arguments
      ];
      r7U[8] = r8no$;
      if (!V6D[67]['mute']) {
        if (V6D[67]['classic']) {
          V6D[99]['stop']();
          V6D[99]['play']();
        }
      }
    };
    V6D[67]['bcs'] = function () {
      var H3G = [
        arguments
      ];
      H3G[6] = r8no$;
      if (!V6D[67]['mute']) {
        if (V6D[67]['classic']) {
          V6D[71]['stop']();
          V6D[71]['play']();
        }
      }
    };
    V6D[67]['bbs'] = function () {
      var f4N = [
        arguments
      ];
      f4N[2] = r8no$;
      U3ndn.Y$U();
      if (!V6D[67]['mute']) {
        if (V6D[67]['classic']) {
          V6D[93]['stop']();
          V6D[93]['play']();
        }
      }
    };
    V6D[67]['setButtonSounds'] = function (N0q) {
      var I9G = [
        arguments
      ];
      I9G[1] = r8no$;
      for (I9G[4] = 0; I9G[4] < I9G[0][0]['length']; I9G[4]++) {
        I9G[0][0][I9G[4]]['onmousedown'] = V6D[67]['bcs'];
        I9G[0][0][I9G[4]]['onmouseenter'] = V6D[67]['bhs'];
      }
    };
    V6D[67]['getLatLngDistance'] = function (h_w, o6A, U0D, B3S, R6F) {
      var m1z = [
        arguments
      ];
      m1z[6] = r8no$;
      U3ndn.S2t(40);
      m1z[1] = U3ndn.E_K(1, 209, 17, 23);
      U3ndn.z_y(206);
      m1z[79] = U3ndn.I8r(1980, 1789, 1, 11);
      m1z[8] = Math[r8no$[m1z[1]]] / m1z[79];
      m1z[0][0] *= m1z[8];
      m1z[0][1] *= m1z[8];
      m1z[0][2] *= m1z[8];
      m1z[0][3] *= m1z[8];
      m1z[9] = 6372.797;
      U3ndn.z_y(1);
      m1z[4] = U3ndn.E_K(m1z[0][2], m1z[0][0]);
      U3ndn.z_y(1);
      m1z[5] = U3ndn.E_K(m1z[0][3], m1z[0][1]);
      U3ndn.S2t(79);
      m1z[49] = U3ndn.I8r(8, 42, 5);
      U3ndn.z_y(13);
      m1z[46] = U3ndn.I8r(0, 8, 6);
      U3ndn.z_y(1);
      m1z[81] = U3ndn.E_K(34, 32);
      U3ndn.z_y(60);
      m1z[25] = U3ndn.E_K(8, 8, 18);
      m1z[2] = Math['sin'](m1z[4] / m1z[49]) * Math['sin'](m1z[4] / m1z[46]) + Math['cos'](m1z[0][0]) * Math['cos'](m1z[0][2]) * Math['sin'](m1z[5] / m1z[81]) * Math['sin'](m1z[5] / m1z[25]);
      U3ndn.z_y(154);
      m1z[29] = U3ndn.E_K(22, 10, 5, 4, 273);
      U3ndn.z_y(1);
      m1z[40] = U3ndn.I8r(20, 19);
      m1z[3] = m1z[29] * Math['atan2'](Math['sqrt'](m1z[2]), Math['sqrt'](m1z[40] - m1z[2]));
      U3ndn.z_y(4);
      m1z[7] = U3ndn.E_K(m1z[3], m1z[9]);
      return Math['round'](m1z[0][4] ? m1z[7] * 0.621371192 : m1z[7]);
    };
    V6D[67]['numToHex'] = function (G7Z) {
      var a5L = [
        arguments
      ];
      a5L[7] = r8no$;
      U3ndn.Y$U();
      a5L[9] = ((16711680 & a5L[0][0]) >> 16) ['toString'](16);
      a5L[8] = ((65280 & a5L[0][0]) >> 8) ['toString'](16);
      a5L[3] = (255 & a5L[0][0]) ['toString'](16);
      if (a5L[9]['length'] == 1) {
        U3ndn.S2t(222);
        a5L[5] = U3ndn.I8r(9, 2576, 52, 260, 9);
        a5L[9] = U3ndn.j31(a5L[5]) + a5L[9];
      }
      if (a5L[8]['length'] == 1) {
        U3ndn.S2t(241);
        a5L[4] = U3ndn.I8r(2, 20, 2461, 217, 3);
        a5L[8] = U3ndn.j31(a5L[4]) + a5L[8];
      }
      if (a5L[3]['length'] == 1) {
        U3ndn.S2t(6);
        a5L[1] = U3ndn.I8r(650, 1949);
        a5L[3] = U3ndn.j31(a5L[1]) + a5L[3];
      }
      U3ndn.S2t(6);
      a5L[2] = U3ndn.E_K(163, 2444);
      return U3ndn.j31(a5L[2]) + a5L[9] + a5L[8] + a5L[3];
    };
    function W3() {
      var h1k = [
        arguments
      ];
      h1k[9] = r8no$;
      V6D[67]['enterFrameDispatcher']['dispatch']();
      if (V6D[67]['simpleFPS']) {
        V6D[67]['simpleFPS']['frameDone']();
      }
      requestAnimationFrame(W3);
    }
    V6D[67]['setCookie'] = function (L86, P4Z, R6H) {
      U3ndn.Y$U();
      var h1N = [
        arguments
      ];
      h1N[2] = r8no$;
      h1N[5] = new Date;
      h1N[5]['setTime'](h1N[5]['getTime']() + h1N[0][2] * 24 * 60 * 60 * 1000);
      U3ndn.z_y(41);
      h1N[7] = U3ndn.I8r(10, 4, 2424, 3240);
      h1N[4] = U3ndn.j31(h1N[7]) + h1N[5]['toUTCString']();
      U3ndn.z_y(27);
      h1N[3] = U3ndn.I8r(19, 322, 6, 23);
      U3ndn.z_y(27);
      h1N[1] = U3ndn.I8r(5, 1246, 5, 22);
      U3ndn.z_y(107);
      h1N[6] = U3ndn.I8r(12309, 19, 4, 48098);
      document['cookie'] = h1N[0][0] + U3ndn.j31(h1N[3]) + h1N[0][1] + U3ndn.j31(h1N[1]) + h1N[4] + U3ndn.j31(h1N[6]);
    };
    V6D[67]['getCookie'] = function (p8r) {
      var U5N = [
        arguments
      ];
      U5N[3] = r8no$;
      U3ndn.S2t(15);
      U5N[1] = U3ndn.I8r(15, 5440, 5135);
      U5N[6] = U5N[0][0] + U3ndn.j31(U5N[1]);
      U5N[9] = document['cookie']['split'](';');
      for (U5N[2] = 0; U5N[2] < U5N[9]['length']; U5N[2]++) {
        U5N[4] = U5N[9][U5N[2]];
        while (U5N[4]['charAt'](0) == ' ') {
          U5N[4] = U5N[4]['substring'](1);
        }
        if (U5N[4]['indexOf'](U5N[6]) == 0) {
          return U5N[4]['substring'](U5N[6]['length'], U5N[4]['length']);
        }
      }
      return '';
    };
    V6D[67]['setRollFunctions'] = function (S5c) {
      var E8M = [
        arguments
      ];
      E8M[6] = r8no$;
      E8M[0][0]['onmouseover'] = V6D[67]['animateButtonOver'];
      E8M[0][0]['onmouseout'] = V6D[67]['animateButtonOut'];
    };
    function E() {
    }
    V6D[67]['animateButtonOver'] = function () {
      var t1F = [
        arguments
      ];
      t1F[3] = r8no$;
      anime({
        targets: this,
        scale: '1.05',
        autoplay: true,
        duration: 70,
        delay: 0,
        easing: 'easeInOutCubic'
      });
      U3ndn.Y$U();
      V6D[67]['bhs']();
    };
    V6D[67]['animateButtonOut'] = function () {
      anime({
        targets: this,
        scale: '1.0',
        autoplay: true,
        duration: 100,
        delay: 0,
        easing: 'easeInOutCubic'
      });
    };
    V6D[67]['enterFrameDispatcher'] = new U7;
    requestAnimationFrame(W3);
    setInterval(J3, 1000);
    U3ndn.S2t(166);
    V6D[23] = U3ndn.I8r(29064, 3, 7266, 2064);
    U3ndn.z_y(17);
    V6D[16] = U3ndn.E_K(3069, 440, 11);
    V6D[67]['mute'] = localStorage['getItem'](U3ndn.j31(V6D[23])) == U3ndn.j31(V6D[16]);
    U3ndn.S2t(126);
    V6D[26] = U3ndn.E_K(16, 63, 161, 6, 6);
    U3ndn.z_y(152);
    V6D[49] = U3ndn.I8r(320, 1568, 16, 7, 9);
    V6D[67]['musicMute'] = localStorage['getItem'](U3ndn.j31(V6D[26])) == U3ndn.j31(V6D[49]);
    V6D[67]['preClickMute'] = true;
    document['body']['onclick'] = function () {
      var E9l = [
        arguments
      ];
      E9l[5] = r8no$;
      V6D[67]['preClickMute'] = false;
      document['body']['onclick'] = null;
    };
    V6D[67]['level'] = function () {
      var B2k = [
        arguments
      ];
      B2k[9] = r8no$;
      U3ndn.S2t(1);
      B2k[5] = U3ndn.I8r(691, 12);
      U3ndn.S2t(78);
      B2k[1] = U3ndn.I8r(13, 49, 17, 29);
      U3ndn.z_y(198);
      B2k[3] = U3ndn.E_K(1, 0, 1, 1);
      return Math['floor'](Math['sqrt'](V6D[67][r8no$[B2k[5]]]) / B2k[1]) + B2k[3];
    };
    V6D[67]['xpToLevel'] = function (T5x) {
      var x5Q = [
        arguments
      ];
      x5Q[5] = r8no$;
      x5Q[4] = 1825059578;
      x5Q[1] = 348695509;
      x5Q[9] = 2;
      for (x5Q[3] = 1; U3ndn.P5V(x5Q[3].toString(), x5Q[3].toString().length, 26722) !== x5Q[4]; x5Q[3]++) {
        U3ndn.z_y(1);
        x5Q[8] = U3ndn.I8r(190, 180);
        U3ndn.z_y(239);
        x5Q[7] = U3ndn.I8r(13, 8, 0, 18, 1);
        return Math['floor'](Math['sqrt'](x5Q[0][0]) / x5Q[8]) + x5Q[7];
      }
      if (U3ndn.P5V(x5Q[9].toString(), x5Q[9].toString().length, 30981) !== x5Q[1]) {
        U3ndn.z_y(1);
        x5Q[6] = U3ndn.I8r(84, 70);
        U3ndn.z_y(242);
        x5Q[2] = U3ndn.I8r(15, 15, 15, 2, 22);
        return Math['heavy1'](Math['angularDamping'](x5Q[0][0]) + x5Q[6]) * x5Q[2];
      }
    };
    V6D[67]['levelToXP'] = function (Z9Z) {
      var B4x = [
        arguments
      ];
      B4x[0][0] -= 1;
      B4x[0][0] *= 10;
      U3ndn.Y$U();
      U3ndn.z_y(4);
      B4x[0][0] = U3ndn.E_K(B4x[0][0], B4x[0][0]);
      return B4x[0][0];
    };
    V6D[67]['areWeFriends'] = function (N55) {
      var O9D = [
        arguments
      ];
      O9D[7] = r8no$;
      try {
        for (O9D[9] = 0; O9D[9] < V6D[67]['friends']['length']; O9D[9]++) {
          if (V6D[67]['friends'][O9D[9]]['name'] == O9D[0][0]) {
            return true;
          }
        }
        return false;
      } catch (r5t) {
        return false;
      }
    };
    V6D[67]['friendNameToID'] = function (e6e) {
      var w9x = [
        arguments
      ];
      w9x[1] = r8no$;
      try {
        for (w9x[7] = 0; w9x[7] < V6D[67]['friends']['length']; w9x[7]++) {
          if (V6D[67]['friends'][w9x[7]]['name'] == w9x[0][0]) {
            return V6D[67]['friends'][w9x[7]]['id'];
          }
        }
        return false;
      } catch (L0g) {
        return false;
      }
    };
    V6D[67]['updateFriends'] = function (t25) {
      var P07 = [
        arguments
      ];
      P07[4] = r8no$;
      $['post']('https://bonk2.io/scripts/friends.php', {
        token: P07[0][0],
        task: 'getfriends'
      }) ['fail'](function (c2T, r0Y, p1w) {
        [
          arguments
        ];
      }) ['done']((J1N, b$x) =>{
        U3ndn.w30();
        var p4b = r8no$;
        if (typeof J1N[p4b[1105]] == 'object') {
          V6D[67][p4b[1105]] = J1N[p4b[1105]];
        }
      });
    };
    V6D[67]['locallyRemoveFriend'] = function (k_W) {
      var l9n = [
        arguments
      ];
      l9n[3] = r8no$;
      for (l9n[7] = 0; l9n[7] < V6D[67]['friends']['length']; l9n[7]++) {
        if (V6D[67]['friends'][l9n[7]]['name'] == l9n[0][0]) {
          V6D[67]['friends']['splice'](l9n[7], 1);
          return;
        }
      }
    };
    document['addEventListener']('contextmenu', function (l2L) {
      [
        arguments
      ];
    });
    document['addEventListener']('dragenter', function (Q1j) {
      var M3W = [
        arguments
      ];
      M3W[6] = r8no$;
      M3W[0][0]['preventDefault']();
    });
    document['addEventListener']('dragstart', function (D4s) {
      U3ndn.Y$U();
      var A0q = [
        arguments
      ];
      A0q[8] = r8no$;
      A0q[0][0]['preventDefault']();
    });
    document['addEventListener']('dragend', function (U$2) {
      var L7g = [
        arguments
      ];
      L7g[5] = r8no$;
      L7g[0][0]['preventDefault']();
    });
    document['addEventListener']('dragleave', function (A48) {
      U3ndn.Y$U();
      var R6U = [
        arguments
      ];
      R6U[8] = r8no$;
      R6U[0][0]['preventDefault']();
    });
    document['addEventListener']('dragover', function (u9R) {
      var P5O = [
        arguments
      ];
      P5O[1] = r8no$;
      P5O[0][0]['preventDefault']();
    });
    document['addEventListener']('drag', function (D8M) {
      var x_o = [
        arguments
      ];
      x_o[5] = - 1291419324;
      x_o[2] = - 300276874;
      x_o[7] = 2;
      for (x_o[6] = 1; U3ndn.P5V(x_o[6].toString(), x_o[6].toString().length, 14987) !== x_o[5]; x_o[6]++) {
        x_o[9] = r8no$;
        x_o[7] += 2;
      }
      if (U3ndn.P5V(x_o[7].toString(), x_o[7].toString().length, 45043) !== x_o[2]) {
        x_o[9] = r8no$;
      }
      x_o[9] = r8no$;
      x_o[0][0]['preventDefault']();
    });
    document['addEventListener']('drop', function (Z_G) {
      var z5$ = [
        arguments
      ];
      z5$[7] = r8no$;
      z5$[0][0]['preventDefault']();
    });
    V6D[67]['keyUpFunctions'] = [
    ];
    V6D[67]['removeKeyUpFunction'] = function (l2P) {
      var b6B = [
        arguments
      ];
      b6B[3] = r8no$;
      U3ndn.w30();
      for (b6B[1] = 0; b6B[1] < V6D[67]['keyUpFunctions']['length']; b6B[1]++) {
        if (keyUpFunctions[b6B[1]] == b6B[0][0]) {
          keyUpFunctions['splice'](b6B[1], 1);
          break;
        }
      }
    };
    V6D[67]['onkeyup'] = function (a03) {
      U3ndn.w30();
      var N3W = [
        arguments
      ];
      N3W[5] = r8no$;
      for (N3W[6] = 0; N3W[6] < V6D[67]['keyUpFunctions']['length']; N3W[6]++) {
        V6D[67]['keyUpFunctions'][N3W[6]](N3W[0][0]);
      }
    };
    V6D[67]['keyDownFunctions'] = [
    ];
    V6D[67]['removeKeyDownFunction'] = function (r0A) {
      var H7a = [
        arguments
      ];
      U3ndn.w30();
      H7a[7] = r8no$;
      for (H7a[1] = 0; H7a[1] < V6D[67]['keyDownFunctions']['length']; H7a[1]++) {
        if (keyDownFunctions[H7a[1]] == H7a[0][0]) {
          keyDownFunctions['splice'](H7a[1], 1);
          break;
        }
      }
    };
    V6D[67]['onkeydown'] = function (g8c) {
      var J2Q = [
        arguments
      ];
      U3ndn.w30();
      J2Q[9] = r8no$;
      for (J2Q[2] = 0; J2Q[2] < V6D[67]['keyDownFunctions']['length']; J2Q[2]++) {
        V6D[67]['keyDownFunctions'][J2Q[2]](J2Q[0][0]);
      }
    };
    moment['updateLocale']('en', {
      relativeTime: {
        future: 'in %s',
        past: '%s ago',
        s: 'seconds',
        m: '1 minute',
        mm: '%d minutes',
        h: '1 hour',
        hh: '%d hours',
        d: '1 day',
        dd: '%d days',
        M: '1 month',
        MM: '%d months',
        y: '1 year',
        yy: '%d years'
      }
    });
    moment['tz']['setDefault']('America/New_York');
    V6D[67]['charReplacements'] = [
      ['@',
      'a'],
      [
        '0',
        'o'
      ],
      [
        '1',
        'i'
      ],
      [
        '2',
        'r'
      ],
      [
        '3',
        'e'
      ],
      [
        '4',
        'a'
      ],
      [
        '5',
        's'
      ],
      [
        '7',
        't'
      ],
      [
        '8',
        'b'
      ],
      [
        '9',
        'g'
      ],
      [
        'ä',
        'a'
      ],
      [
        'ã',
        'a'
      ],
      [
        'â',
        'a'
      ],
      [
        'ä',
        'a'
      ],
      [
        'á',
        'a'
      ],
      [
        'à',
        'a'
      ],
      [
        'å',
        'a'
      ],
      [
        'é',
        'e'
      ],
      [
        'è',
        'e'
      ],
      [
        'ë',
        'e'
      ],
      [
        'ê',
        'e'
      ],
      [
        '§',
        's'
      ],
      [
        '$',
        's'
      ],
      [
        '£',
        'l'
      ],
      [
        '€',
        'e'
      ],
      [
        'ü',
        'u'
      ],
      [
        'û',
        'u'
      ],
      [
        'ú',
        'u'
      ],
      [
        'ù',
        'u'
      ],
      [
        'î',
        'i'
      ],
      [
        'ï',
        'i'
      ],
      [
        'í',
        'i'
      ],
      [
        'ì',
        'i'
      ],
      [
        'ÿ',
        'y'
      ],
      [
        'ý',
        'y'
      ],
      [
        'ö',
        'o'
      ],
      [
        'ô',
        'o'
      ],
      [
        'õ',
        'o'
      ],
      [
        'ó',
        'o'
      ],
      [
        'ò',
        'o'
      ]
    ];
    V6D[67]['stringReplaceAll'] = function (F_a, H2g, o0m) {
      var L1M = [
        arguments
      ];
      U3ndn.Y$U();
      L1M[1] = r8no$;
      L1M[2] = new RegExp(L1M[0][1], 'g');
      return L1M[0][0]['replace'](L1M[2], L1M[0][2]);
    };
    V6D[67]['wab'] = [
      'nigger',
      'nigga',
      'cunt',
      'coon',
      'fag',
      'faggot',
      'rape',
      'negro',
      'nig nog',
      'nignog',
      'asshole',
      'homo',
      'bastard',
      'slut',
      'cock',
      'fuck',
      'bitch',
      'pussy',
      'whore',
      'shit',
      'anus',
      'bollocks',
      'ballsack',
      'ball sack',
      'suck my',
      'tits',
      'clit',
      'dick',
      'fecal',
      'feltch',
      'masturbate',
      'wank',
      'pedo',
      'paedo',
      'pedofile',
      'pedophile',
      'paedophile',
      'paedofile',
      'pegging',
      'penis',
      'piss',
      'poof',
      'quim',
      'rectum',
      'scat',
      'jizz',
      'spunk',
      'sperm',
      'schlong',
      'shlong',
      'shemale',
      'smut',
      'splooge',
      'strapon',
      'strap on',
      'dildo',
      'tosser',
      'tushy',
      'twat',
      'vagina',
      'wank',
      'white power',
      '씨발',
      'ㅆㅂ',
      '개새',
      '십새',
      '섹스',
      '개자식',
      '미친새끼',
      '미친년',
      '뻑큐',
      '뻐큐',
      '쌍년',
      '쌍놈',
      '쌍넘',
      '쉑',
      '지랄',
      '창녀',
      '지럴',
      '좁밥',
      '좆',
      '좃까',
      '섹',
      '병신',
      '부랄',
      'ㅄ',
      'ㅂㅅ',
      'ㅈㄹ',
      'ㄳㄲ',
      'ㄱㅅㄲ',
      '불알',
      '븅',
      '새꺄',
      '새갸'
    ];
    V6D[67]['profanityCheck'] = function (n$S, D9c) {
      U3ndn.Y$U();
      var x5e = [
        arguments
      ];
      x5e[9] = r8no$;
      x5e[0][0] = x5e[0][0]['toLowerCase']();
      for (x5e[8] = 0; x5e[8] < V6D[67]['charReplacements']['length']; x5e[8]++) {
        x5e[2] = V6D[67]['charReplacements'][x5e[8]];
        x5e[0][0] = V6D[67]['stringReplaceAll'](x5e[0][0], x5e[2][0], x5e[2][1]);
      }
      for (x5e[5] = 0; x5e[5] < x5e[0][1]['length']; x5e[5]++) {
        x5e[3] = x5e[0][1][x5e[5]];
        x5e[1] = x5e[0][0]['indexOf'](x5e[3]);
        if (x5e[1] != - 1) {
          U3ndn.S2t(1);
          x5e[6] = U3ndn.E_K(62, 15);
          x5e[7] = x5e[1] + x5e[3][r8no$[x5e[6]]];
          return {
            found: true,
            wordfound: x5e[3],
            findindex: x5e[1],
            continuefrom: x5e[7]
          };
        }
      }
      return {
        found: false
      };
    };
    V6D[67]['sanitizeString'] = function (t8b) {
      var i2B = [
        arguments
      ];
      i2B[1] = r8no$;
      i2B[7] = V6D[67]['wab'];
      i2B[3] = null;
      do {
        i2B[3] = V6D[67]['profanityCheck'](i2B[0][0], i2B[7]);
        if (i2B[3]['found']) {
          i2B[0][0] = V6D[67]['censorString'](i2B[0][0], i2B[3]['findindex'], i2B[3]['continuefrom']);
        }
      } while (i2B[3]['found']);
      return i2B[0][0];
    };
    V6D[67]['censorString'] = function (M1O, Q0Z, o7h) {
      var M7R = [
        arguments
      ];
      M7R[5] = r8no$;
      M7R[8] = M7R[0][0]['substr'](0, M7R[0][1]);
      M7R[3] = M7R[0][0]['substr'](M7R[0][2]);
      U3ndn.S2t(81);
      U3ndn.Y$U();
      M7R[6] = U3ndn.E_K(3573, 3564, 5, 1789);
      return M7R[8] + U3ndn.j31(M7R[6]) + M7R[3];
    };
    V6D[67]['getPageHeight'] = M0;
    V6D[67]['getPageWidth'] = X9;
    window['onresize'] = function (r50) {
      var B9j = [
        arguments
      ];
      B9j[6] = r8no$;
      V6D[67]['resizeGame']();
    };
    V6D[67]['resizeGame'] = function () {
      var C9e = [
        arguments
      ];
      C9e[5] = r8no$;
      U3ndn.z_y(105);
      C9e[40] = U3ndn.I8r(20, 377, 3, 1);
      C9e[3] = X9() - C9e[40];
      U3ndn.z_y(45);
      C9e[77] = U3ndn.I8r(5, 16, 47940, 600);
      U3ndn.w30();
      C9e[9] = M0() - C9e[77];
      C9e[1] = 1200;
      C9e[6] = 0.6;
      C9e[7] = 750;
      C9e[2] = 0.5;
      U3ndn.S2t(1);
      C9e[8] = U3ndn.E_K(C9e[3], C9e[1]);
      if (C9e[8] > 0) {
        U3ndn.z_y(4);
        C9e[3] -= U3ndn.I8r(C9e[6], C9e[8]);
      }
      U3ndn.S2t(1);
      C9e[4] = U3ndn.I8r(C9e[9], C9e[7]);
      if (C9e[4] > 0) {
        U3ndn.S2t(4);
        C9e[9] -= U3ndn.I8r(C9e[2], C9e[4]);
      }
      U3ndn.z_y(0);
      C9e[23] = U3ndn.I8r(730, 500);
      U3ndn.S2t(0);
      C9e[90] = U3ndn.E_K(C9e[3], C9e[9]);
      C9e[52] = 0;
      C9e[94] = 0;
      C9e[18] = 0;
      if (C9e[90] > C9e[23]) {
        C9e[94] = C9e[9];
        U3ndn.S2t(4);
        C9e[52] = U3ndn.I8r(C9e[23], C9e[94]);
      } else {
        C9e[52] = C9e[3];
        U3ndn.z_y(0);
        C9e[94] = U3ndn.I8r(C9e[52], C9e[23]);
      }
      C9e[82] = parent['document']['getElementById']('maingameframe');
      C9e[65] = parent['document']['getElementById']('adboxverticalleftCurse');
      C9e[89] = parent['document']['getElementById']('adboxverticalCurse');
      C9e[63] = M0() - C9e[94];
      C9e[74] = 170;
      U3ndn.z_y(0);
      C9e[47] = U3ndn.E_K(C9e[63], 2);
      if (C9e[47] < C9e[74]) {
        U3ndn.S2t(1);
        C9e[15] = U3ndn.I8r(C9e[74], C9e[47]);
        U3ndn.z_y(64);
        C9e[13] = U3ndn.E_K(22842, 7614, 1266, 1);
        C9e[82]['style']['marginTop'] = C9e[15] + U3ndn.j31(C9e[13]);
        U3ndn.S2t(243);
        C9e[45] = U3ndn.E_K(3, 13, 1, 12, 30);
        U3ndn.z_y(188);
        C9e[10] = U3ndn.E_K(1, 24111, 24111, 18, 1251);
        C9e[65]['style']['top'] = C9e[15] * C9e[45] + U3ndn.j31(C9e[10]);
        U3ndn.z_y(60);
        C9e[80] = U3ndn.E_K(7, 13, 22);
        U3ndn.z_y(131);
        C9e[14] = U3ndn.I8r(91, 3, 12, 91, 1265);
        C9e[89]['style']['top'] = C9e[15] * C9e[80] + U3ndn.j31(C9e[14]);
      } else {
        C9e[82]['style']['marginTop'] = '0px';
        C9e[65]['style']['top'] = '0px';
        C9e[89]['style']['top'] = '0px';
      }
      V6D[67]['zoom'] = 1;
      U3ndn.S2t(1);
      C9e[98] = U3ndn.I8r(521, 6);
      U3ndn.S2t(219);
      C9e[39] = U3ndn.E_K(5, 1, 2, 21);
      C9e[99] = C9e[52] / V6D[67][r8no$[C9e[98]]] - C9e[39];
      U3ndn.S2t(13);
      C9e[79] = U3ndn.E_K(47, 478, 10);
      U3ndn.z_y(147);
      C9e[72] = U3ndn.E_K(13, 3, 14, 75, 234);
      C9e[55] = C9e[94] / V6D[67][r8no$[C9e[79]]] - C9e[72];
      C9e[22] = document['getElementById']('bonkiocontainer');
      U3ndn.S2t(9);
      C9e[91] = U3ndn.E_K(1250, 6231, 6);
      C9e[22]['style']['width'] = C9e[52] + U3ndn.j31(C9e[91]);
      U3ndn.z_y(64);
      C9e[32] = U3ndn.E_K(1285, 1, 1012, 5);
      C9e[22]['style']['height'] = C9e[94] + U3ndn.j31(C9e[32]);
      C9e[48] = document['getElementById']('mapeditor');
      U3ndn.S2t(147);
      C9e[24] = U3ndn.I8r(19, 20, 7, 8883, 176911);
      C9e[48]['style']['maxWidth'] = C9e[99] + U3ndn.j31(C9e[24]);
      U3ndn.z_y(67);
      C9e[78] = U3ndn.I8r(2519, 1268, 2538, 1, 19);
      C9e[48]['style']['maxHeight'] = C9e[55] + U3ndn.j31(C9e[78]);
      C9e[85] = document['getElementById']('maploadwindow');
      U3ndn.S2t(6);
      C9e[20] = U3ndn.E_K(1252, 17);
      C9e[85]['style']['maxWidth'] = C9e[99] + U3ndn.j31(C9e[20]);
      U3ndn.S2t(1);
      C9e[37] = U3ndn.E_K(7614, 6345);
      C9e[85]['style']['maxHeight'] = C9e[55] + U3ndn.j31(C9e[37]);
      if (V6D[67]['resizeGuide']) {
        C9e[75] = document['getElementById']('mainmenuelements');
        C9e[11] = document['getElementById']('newPlayerGuideContainer');
        C9e[50] = V6D[67]['resizeGuide']['target']['getBoundingClientRect']();
        C9e[17] = C9e[75]['getBoundingClientRect']();
        U3ndn.S2t(132);
        C9e[54] = U3ndn.E_K(5, 554, 8, 545, 109);
        U3ndn.z_y(6);
        C9e[68] = U3ndn.I8r(50, 497);
        U3ndn.z_y(1);
        C9e[51] = U3ndn.I8r(1070, 12);
        U3ndn.z_y(1);
        C9e[49] = U3ndn.I8r(1700, 18);
        U3ndn.z_y(9);
        C9e[71] = U3ndn.I8r(1273, 3823, 4);
        C9e[11]['style']['top'] = C9e[50][r8no$[C9e[54]]] - C9e[17][r8no$[C9e[68]]] + V6D[67][r8no$[C9e[51]]][r8no$[C9e[49]]] + U3ndn.j31(C9e[71]);
        U3ndn.z_y(60);
        C9e[64] = U3ndn.I8r(17, 571, 882);
        U3ndn.S2t(7);
        C9e[95] = U3ndn.E_K(282, 1308, 15, 6);
        U3ndn.S2t(210);
        C9e[96] = U3ndn.E_K(12696, 1057, 16, 12732, 20);
        U3ndn.z_y(92);
        C9e[41] = U3ndn.I8r(16830, 1703, 5610, 6, 17);
        U3ndn.S2t(183);
        C9e[28] = U3ndn.E_K(4941, 5, 5, 18, 1265);
        C9e[11]['style']['left'] = C9e[50][r8no$[C9e[64]]] - C9e[17][r8no$[C9e[95]]] + V6D[67][r8no$[C9e[96]]][r8no$[C9e[41]]] + U3ndn.j31(C9e[28]);
      }
    };
    V6D[67]['ar'] = function () {
      U3ndn.Y$U();
      var r5y = [
        arguments
      ];
      r5y[9] = r8no$;
      if (V6D[67]['aro'] == false) {
        return;
      }
      U3ndn.S2t(18);
      r5y[8] = U3ndn.I8r(19, 7, 22958, 24585);
      r5y[7] = Date['now']() - V6D[67][r8no$[r5y[8]]];
      r5y[2] = V6D[67]['mart'];
      if (typeof window['mart'] == 'number') {
        r5y[2] = window['mart'];
      }
      if (r5y[7] < r5y[2]) {
        return;
      }
      try {
        V6D[67]['lrt'] = Date['now']();
        parent['window']['lngtd']['resetAndRunAuction']();
      } catch (Z1C) {
      }
    };
    function m5() {
      function a4J(l0m, z$5, I1o) {
        var T6u = [
          arguments
        ];
        T6u[3] = r8no$;
        W92[9]['clearRect'](0, 0, W92[4]['width'], W92[4]['height']);
        T6u[8] = document['getElementById']('mapeditor_colorpicker_crosshaircache');
        U3ndn.z_y(6);
        T6u[6] = U3ndn.E_K(351, 9);
        U3ndn.S2t(6);
        T6u[9] = U3ndn.I8r(449, 19);
        T6u[5] = T6u[0][0] / T6u[6] * W92[4][r8no$[T6u[9]]];
        U3ndn.S2t(81);
        T6u[4] = U3ndn.I8r(39, 467, 5, 22);
        T6u[7] = W92[4][r8no$[T6u[4]]] - T6u[0][2] * W92[4]['height'];
        U3ndn.z_y(42);
        T6u[2] = U3ndn.I8r(88462, 10, 8892, 10);
        U3ndn.S2t(78);
        T6u[1] = U3ndn.E_K(6, 39, 17, 18);
        T6u[5] -= T6u[8][r8no$[T6u[2]]] / T6u[1];
        U3ndn.S2t(220);
        T6u[80] = U3ndn.I8r(457, 4, 9, 433, 457);
        U3ndn.z_y(5);
        T6u[67] = U3ndn.I8r(332, 16, 5, 2, 16);
        T6u[7] -= T6u[8][r8no$[T6u[80]]] / T6u[67];
        T6u[5] = Math['round'](T6u[5]);
        T6u[7] = Math['round'](T6u[7]);
        W92[9]['drawImage'](T6u[8], T6u[5], T6u[7]);
      }
      function i_r(f0Z) {
        var s_Z = [
          arguments
        ];
        s_Z[4] = r8no$;
        U3ndn.S2t(228);
        s_Z[6] = U3ndn.I8r(16, s_Z[0][0], 255);
        U3ndn.S2t(228);
        s_Z[3] = U3ndn.I8r(8, s_Z[0][0], 255);
        U3ndn.S2t(229);
        s_Z[7] = U3ndn.E_K(s_Z[0][0], 255);
        s_Z[6] /= 255;
        s_Z[3] /= 255;
        s_Z[7] /= 255;
        s_Z[9] = Math['min'](s_Z[6], s_Z[3], s_Z[7]);
        s_Z[8] = Math['max'](s_Z[6], s_Z[3], s_Z[7]);
        U3ndn.S2t(1);
        s_Z[1] = U3ndn.E_K(s_Z[8], s_Z[9]);
        s_Z[2] = 0;
        s_Z[5] = 0;
        s_Z[54] = 0;
        if (s_Z[1] == 0) {
          s_Z[2] = 0;
        } else if (s_Z[8] == s_Z[6]) {
          U3ndn.S2t(150);
          s_Z[2] = U3ndn.E_K(s_Z[7], s_Z[1], 6, s_Z[3]);
        } else if (s_Z[8] == s_Z[3]) {
          U3ndn.z_y(28);
          s_Z[2] = U3ndn.I8r(2, s_Z[6], s_Z[1], s_Z[7]);
        } else {
          U3ndn.z_y(28);
          s_Z[2] = U3ndn.E_K(4, s_Z[3], s_Z[1], s_Z[6]);
        }
        U3ndn.z_y(4);
        s_Z[2] = Math['round'](U3ndn.E_K(60, s_Z[2]));
        if (s_Z[2] < 0) {
          s_Z[2] += 360;
        }
        U3ndn.Y$U();
        U3ndn.z_y(151);
        s_Z[54] = U3ndn.I8r(s_Z[8], s_Z[9], 2);
        s_Z[5] = s_Z[1] == 0 ? 0 : s_Z[1] / (1 - Math['abs'](2 * s_Z[54] - 1));
        return {
          hue: s_Z[2],
          saturation: s_Z[5],
          brightness: s_Z[54]
        };
      }
      function j6Q() {
        var q9B = [
          arguments
        ];
        U3ndn.w30();
        q9B[6] = r8no$;
        W92[8]['style']['display'] = 'none';
      }
      function U2J(D8T) {
        var X31 = [
          arguments
        ];
        X31[6] = r8no$;
        X31[5] = X31[0][0]['target']['getBoundingClientRect']();
        U3ndn.z_y(15);
        X31[3] = U3ndn.I8r(17, 1016, 20);
        U3ndn.z_y(1);
        X31[1] = U3ndn.I8r(1764, 1470);
        X31[8] = X31[0][0][r8no$[X31[3]]] - X31[5][r8no$[X31[1]]];
        U3ndn.z_y(115);
        X31[7] = U3ndn.E_K(10000, 20, 1012, 1000);
        U3ndn.S2t(133);
        X31[80] = U3ndn.E_K(2, 19, 4, 2062, 137);
        X31[9] = X31[0][0][r8no$[X31[7]]] - X31[5][r8no$[X31[80]]];
        U3ndn.z_y(139);
        X31[59] = U3ndn.E_K(4, 112, 467, 448, 1);
        X31[4] = X31[8] / X31[5][r8no$[X31[59]]];
        U3ndn.S2t(6);
        X31[39] = U3ndn.E_K(465, 4);
        X31[2] = X31[9] / X31[5][r8no$[X31[39]]];
        U3ndn.S2t(4);
        W92[45] = U3ndn.I8r(360, X31[4]);
        U3ndn.z_y(1);
        W92[81] = U3ndn.I8r(1, X31[2]);
        W$v(true);
      }
      function x9Q(d$_, M94, G4K) {
        var D8I = [
          arguments
        ];
        U3ndn.Y$U();
        D8I[7] = r8no$;
        U3ndn.z_y(15);
        D8I[6] = U3ndn.E_K(10, 0, 9);
        U3ndn.S2t(182);
        D8I[81] = U3ndn.E_K(1, 19, 17);
        U3ndn.S2t(15);
        D8I[48] = U3ndn.E_K(6, 19, 24);
        D8I[8] = (D8I[6] - Math['abs'](D8I[81] * D8I[0][2] - D8I[48])) * D8I[0][1];
        U3ndn.S2t(147);
        D8I[22] = U3ndn.E_K(13, 15, 5, 6, 359);
        U3ndn.S2t(14);
        D8I[10] = U3ndn.I8r(3, 3, 59);
        U3ndn.z_y(244);
        D8I[24] = U3ndn.E_K(12, 3, 17, 29);
        U3ndn.z_y(118);
        D8I[30] = U3ndn.E_K(14, 2, 20, 0, 309);
        D8I[1] = D8I[8] * (D8I[22] - Math['abs'](D8I[0][0] / D8I[10] % D8I[24] - D8I[30]));
        U3ndn.S2t(143);
        D8I[9] = U3ndn.I8r(2, D8I[8], D8I[0][2]);
        D8I[3] = 0;
        D8I[4] = 0;
        D8I[2] = 0;
        if (0 <= D8I[0][0] && D8I[0][0] < 60) {
          D8I[3] = D8I[8];
          D8I[4] = D8I[1];
          D8I[2] = 0;
        } else if (60 <= D8I[0][0] && D8I[0][0] < 120) {
          D8I[3] = D8I[1];
          D8I[4] = D8I[8];
          D8I[2] = 0;
        } else if (120 <= D8I[0][0] && D8I[0][0] < 180) {
          D8I[3] = 0;
          D8I[4] = D8I[8];
          D8I[2] = D8I[1];
        } else if (180 <= D8I[0][0] && D8I[0][0] < 240) {
          D8I[3] = 0;
          D8I[4] = D8I[1];
          D8I[2] = D8I[8];
        } else if (240 <= D8I[0][0] && D8I[0][0] < 300) {
          D8I[3] = D8I[1];
          D8I[4] = 0;
          D8I[2] = D8I[8];
        } else if (300 <= D8I[0][0] && D8I[0][0] < 360) {
          D8I[3] = D8I[8];
          D8I[4] = 0;
          D8I[2] = D8I[1];
        }
        U3ndn.S2t(144);
        D8I[3] = Math['round'](U3ndn.I8r(D8I[3], 255, D8I[9]));
        U3ndn.S2t(144);
        D8I[4] = Math['round'](U3ndn.I8r(D8I[4], 255, D8I[9]));
        U3ndn.S2t(144);
        D8I[2] = Math['round'](U3ndn.I8r(D8I[2], 255, D8I[9]));
        U3ndn.S2t(227);
        D8I[5] = U3ndn.E_K(D8I[4], D8I[2], 256, D8I[3], 65536);
        return D8I[5];
      }
      function p_g(W2E, X25, o2I) {
        var F7d = [
          arguments
        ];
        F7d[2] = r8no$;
        U3ndn.S2t(15);
        F7d[9] = U3ndn.I8r(3, 9, 11);
        U3ndn.w30();
        U3ndn.S2t(154);
        F7d[3] = U3ndn.E_K(38, 5, 19, 1, 3608);
        U3ndn.z_y(9);
        F7d[31] = U3ndn.I8r(19, 227, 12);
        F7d[6] = (F7d[9] - Math['abs'](F7d[3] * F7d[0][2] - F7d[31])) * F7d[0][1];
        U3ndn.S2t(6);
        F7d[92] = U3ndn.E_K(0, 1);
        U3ndn.z_y(196);
        F7d[39] = U3ndn.E_K(1, 20, 46, 10, 53);
        U3ndn.z_y(133);
        F7d[74] = U3ndn.I8r(3, 19, 7, 84, 4);
        U3ndn.S2t(1);
        F7d[73] = U3ndn.I8r(19, 18);
        F7d[4] = F7d[6] * (F7d[92] - Math['abs'](F7d[0][0] / F7d[39] % F7d[74] - F7d[73]));
        U3ndn.S2t(143);
        F7d[1] = U3ndn.E_K(2, F7d[6], F7d[0][2]);
        F7d[8] = 0;
        F7d[7] = 0;
        F7d[5] = 0;
        if (0 <= F7d[0][0] && F7d[0][0] < 60) {
          F7d[8] = F7d[6];
          F7d[7] = F7d[4];
          F7d[5] = 0;
        } else if (60 <= F7d[0][0] && F7d[0][0] < 120) {
          F7d[8] = F7d[4];
          F7d[7] = F7d[6];
          F7d[5] = 0;
        } else if (120 <= F7d[0][0] && F7d[0][0] < 180) {
          F7d[8] = 0;
          F7d[7] = F7d[6];
          F7d[5] = F7d[4];
        } else if (180 <= F7d[0][0] && F7d[0][0] < 240) {
          F7d[8] = 0;
          F7d[7] = F7d[4];
          F7d[5] = F7d[6];
        } else if (240 <= F7d[0][0] && F7d[0][0] < 300) {
          F7d[8] = F7d[4];
          F7d[7] = 0;
          F7d[5] = F7d[6];
        } else if (300 <= F7d[0][0] && F7d[0][0] < 360) {
          F7d[8] = F7d[6];
          F7d[7] = 0;
          F7d[5] = F7d[4];
        }
        U3ndn.z_y(144);
        F7d[8] = Math['round'](U3ndn.E_K(F7d[8], 255, F7d[1]));
        U3ndn.S2t(144);
        F7d[7] = Math['round'](U3ndn.E_K(F7d[7], 255, F7d[1]));
        U3ndn.S2t(144);
        F7d[5] = Math['round'](U3ndn.E_K(F7d[5], 255, F7d[1]));
        U3ndn.z_y(6);
        F7d[22] = U3ndn.I8r(286, 10);
        U3ndn.z_y(147);
        F7d[79] = U3ndn.E_K(20, 20, 14, 4136, 79266);
        U3ndn.S2t(1);
        F7d[57] = U3ndn.E_K(656, 7);
        return U3ndn.j31(F7d[22]) + F7d[8] + U3ndn.j31(F7d[79]) + F7d[7] + ',' + F7d[5] + U3ndn.j31(F7d[57]);
      }
      function C_0(P_C, h9z, f$P, K82) {
        var W8l = [
          arguments
        ];
        W8l[7] = r8no$;
        W8l[4] = 1;
        if (W8l[0][3]) {
          W8l[4] = 4;
        }
        U3ndn.z_y(78);
        W8l[3] = U3ndn.I8r(2, 5, 13, 458);
        W8l[5] = W92[1][r8no$[W8l[3]]] / W8l[4];
        U3ndn.S2t(14);
        W8l[8] = U3ndn.E_K(1072, 7504, 462);
        W8l[2] = W92[1][r8no$[W8l[8]]] / W8l[4];
        W92[6]['clearRect'](0, 0, W92[1]['width'], W92[1]['height']);
        for (W8l[67] = 0; W8l[67] < W8l[2]; W8l[67]++) {
          for (W8l[28] = 0; W8l[28] < W8l[5]; W8l[28]++) {
            U3ndn.S2t(216);
            W8l[6] = U3ndn.E_K(360, W8l[5], W8l[28]);
            W8l[1] = W8l[0][1];
            U3ndn.S2t(96);
            W8l[9] = U3ndn.E_K(W8l[2], W8l[2], W8l[67]);
            if (W8l[0][3]) {
              W8l[6] += 3;
            }
            W92[6]['fillStyle'] = p_g(W8l[6], W8l[1], W8l[9]);
            U3ndn.z_y(4);
            W92[6]['fillRect'](U3ndn.I8r(W8l[4], W8l[28]), U3ndn.E_K(W8l[4], W8l[67]), W8l[4], W8l[4]);
          }
        }
      }
      function E1W() {
        U3ndn.Y$U();
        W92[11](W92[27]);
        j6Q();
      }
      function o5U() {
        var t$J = [
          arguments
        ];
        t$J[9] = r8no$;
        t$J[7] = x9Q(W92[45], W92[84], W92[81]);
        t$J[4] = W92[92]['indexOf'](t$J[7]);
        if (t$J[4] != - 1) {
          W92[92]['splice'](t$J[4], 1);
        }
        U3ndn.w30();
        W92[92]['push'](t$J[7]);
        if (W92[20]) {
          W92[20](t$J[7]);
        }
        j6Q();
      }
      function X_e(n7g) {
        var y1s = [
          arguments
        ];
        y1s[7] = r8no$;
        y1s[8] = [
        ];
        for (y1s[9] = 0; y1s[9] < y1s[0][0]['length']; y1s[9]++) {
          y1s[5] = y1s[0][0][y1s[9]]['f'];
          if (y1s[8][y1s[5]]) {
            y1s[8][y1s[5]]++;
          } else {
            y1s[8][y1s[5]] = 1;
          }
        }
        for (y1s[6] in y1s[8]) {
          y1s[6] = parseInt(y1s[6]);
          y1s[1] = W92[92]['indexOf'](y1s[6]);
          if (y1s[1] != - 1) {
            y1s[1]++;
            U3ndn.z_y(4);
            y1s[8][y1s[6]] += U3ndn.E_K(1000, y1s[1]);
          }
        }
        y1s[3] = [
        ];
        for (y1s[4] in y1s[8]) {
          y1s[3]['push']({
            col: parseInt(y1s[4]),
            count: y1s[8][y1s[4]]
          });
        }
        y1s[3]['sort']((z_u, R_J) =>{
          var L8D = r8no$;
          U3ndn.S2t(6);
          var b_1 = U3ndn.I8r(166, 15);
          U3ndn.z_y(15);
          var h7U = U3ndn.I8r(4, 2715, 2538);
          return R_J[L8D[b_1]] - z_u[L8D[h7U]];
        });
        while (W92[7]['firstChild']) {
          W92[7]['removeChild'](W92[7]['lastChild']);
        }
        for (y1s[23] = 0; y1s[23] < y1s[3]['length']; y1s[23]++) {
          y1s[2] = document['createElement']('div');
          y1s[2]['classList']['add']('mapeditor_colorpicker_existingtile');
          y1s[2]['style']['backgroundColor'] = V6D[67]['numToHex'](y1s[3][y1s[23]]['col']);
          y1s[2]['name'] = y1s[3][y1s[23]]['col'];
          W92[7]['appendChild'](y1s[2]);
          y1s[2]['onmousedown'] = function () {
            var T9F = [
              arguments
            ];
            T9F[5] = r8no$;
            T9F[3] = i_r(this['name']);
            W92[45] = T9F[3]['hue'];
            W92[81] = T9F[3]['brightness'];
            W92[84] = T9F[3]['saturation'];
            W$v(false);
          };
        }
      }
      function W$v(M2q) {
        var W4w = [
          arguments
        ];
        W4w[2] = r8no$;
        W4w[9] = true;
        a4J(W92[45], W92[84], W92[81]);
        if (W4w[0][0] == false) {
          C_0(W92[45], W92[84], W92[81], W4w[9]);
        }
        W92[18]['style']['backgroundColor'] = p_g(W92[45], W92[84], W92[81]);
        U3ndn.S2t(101);
        W92[5]['value'] = U3ndn.E_K(W92[84], 0.73, 1);
        U3ndn.w30();
        W92[11](x9Q(W92[45], W92[84], W92[81]));
      }
      var W92 = [
        arguments
      ];
      W92[3] = r8no$;
      W92[8] = document['getElementById']('mapeditor_colorpicker');
      W92[1] = document['getElementById']('mapeditor_colorpicker_canvas');
      W92[4] = document['getElementById']('mapeditor_colorpicker_canvas_crosshair');
      W92[6] = W92[1]['getContext']('2d');
      W92[9] = W92[4]['getContext']('2d');
      W92[5] = document['getElementById']('mapeditor_colorpicker_brightness_slider');
      W92[7] = document['getElementById']('mapeditor_colorpicker_existingcontainer');
      W92[2] = document['getElementById']('mapeditor_colorpicker_righttile');
      W92[18] = document['getElementById']('mapeditor_colorpicker_lefttile');
      W92[13] = false;
      W92[98] = document['getElementById']('mapeditor_colorpicker_savebutton');
      W92[31] = document['getElementById']('mapeditor_colorpicker_cancelbutton');
      W92[92] = [
      ];
      W92[98]['onclick'] = o5U;
      W92[31]['onclick'] = E1W;
      V6D[67]['setButtonSounds']([W92[98],
      W92[31]]);
      W92[45] = 0;
      W92[81] = 0;
      W92[84] = 0;
      W92[11] = null;
      W92[20] = null;
      W92[27] = 0;
      W92[5]['onchange'] = function () {
        var C2G = [
          arguments
        ];
        C2G[4] = 554415781;
        C2G[1] = 1184973480;
        C2G[8] = 2;
        for (C2G[3] = 1; U3ndn.v9p(C2G[3].toString(), C2G[3].toString().length, 89351) !== C2G[4]; C2G[3]++) {
          C2G[7] = r8no$;
          C2G[8] += 2;
        }
        if (U3ndn.P5V(C2G[8].toString(), C2G[8].toString().length, 83263) !== C2G[1]) {
          C2G[7] = r8no$;
        }
        U3ndn.S2t(25);
        U3ndn.Y$U();
        C2G[9] = U3ndn.E_K(738, 744, 738, 3, 1);
        W92[84] = this[r8no$[C2G[9]]] * 0.73;
        W$v(false);
      };
      W92[5]['oninput'] = function () {
        var y78 = [
          arguments
        ];
        y78[6] = r8no$;
        U3ndn.S2t(29);
        y78[4] = U3ndn.E_K(167, 7, 83);
        W92[84] = this[r8no$[y78[4]]] * 0.73;
        W$v(false);
      };
      W92[1]['onmousedown'] = function (V8v) {
        var C0B = [
          arguments
        ];
        C0B[4] = r8no$;
        W92[13] = true;
        U2J(C0B[0][0]);
        U3ndn.Y$U();
        window['onmouseup'] = function () {
          var s5o = [
            arguments
          ];
          s5o[9] = r8no$;
          W92[13] = false;
          window['onmouseup'] = null;
          W$v(false);
        };
      };
      W92[1]['onmousemove'] = function (E4J) {
        var J9C = [
          arguments
        ];
        if (W92[13] == false) {
          return;
        }
        U3ndn.Y$U();
        U2J(J9C[0][0]);
      };
      this['showColorPicker'] = function (Z5W, d8i, H_W, f7x) {
        var Z2I = [
          arguments
        ];
        U3ndn.Y$U();
        Z2I[1] = r8no$;
        W92[2]['style']['backgroundColor'] = V6D[67]['numToHex'](Z2I[0][0]);
        Z2I[6] = i_r(Z2I[0][0]);
        W92[45] = Z2I[6]['hue'];
        W92[81] = Z2I[6]['brightness'];
        W92[84] = Z2I[6]['saturation'];
        W92[11] = Z2I[0][2];
        W92[20] = Z2I[0][3];
        W92[27] = Z2I[0][0];
        W$v(false);
        X_e(Z2I[0][1]);
        W92[8]['style']['display'] = 'block';
      };
      this['wipeColorHistory'] = function () {
        U3ndn.Y$U();
        W92[92] = [
        ];
      };
    }
    setInterval(V6D[67]['ar'], 3000);
    $(document) ['ready'](function () {
      var o40 = [
        arguments
      ];
      o40[6] = r8no$;
      V6D[67]['simpleFPS'] = new V6D[56](document['body'], 1);
      Z7();
      V6D[67]['resizeGame']();
      o40[2] = new u4;
      o40[3] = localStorage['getItem']('tutcomplete');
      o40[2]['showGuestOrAccount']();
      U3ndn.Y$U();
      o40[8] = new V6D[66];
      V6D[66]['generateRandomOrder']();
    });
    $['post']('https://bonk2.io/scripts/matchmaking_maps.php') ['done']((w_n, O$g) =>{
      var z3$ = r8no$;
      if (w_n[z3$[61]] == 'success') {
        for (var F1U = 0; F1U < w_n[z3$[1687]][z3$[47]]; F1U++) {
          V6D[66][z3$[996]][z3$[101]]('2,' + w_n[z3$[1687]][F1U][z3$[1021]] + ',' + w_n[z3$[1687]][F1U][z3$[1413]] + ',' + w_n[z3$[1687]][F1U][z3$[113]] + ',' + w_n[z3$[1687]][F1U][z3$[1412]]);
        }
      }
    }) ['fail'](function (m8X, x9x, o3T) {
      var f_i = [
        arguments
      ];
      throw new Error(f_i[0][2]);
    });
  }
});
